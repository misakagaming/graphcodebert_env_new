
package gen.ort.yyy;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: CYYY9831_MV_SC1_TO_YY1           Date: 2023/07/05
//    Target OS:   JVM                       Time: 15:07:45
//    Target DBMS: JDBC                      User: HakanBal
//    Access Method: JDBC           
//
//    Generation options:
//    Debug trace option selected
//    Data modeling constraint enforcement not selected
//    Optimized import view initialization not selected
//    Enforce default values with DBMS not selected
//    Init unspecified optional fields to NULL not selected
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;

import com.ca.gen.abrt.*;
import com.ca.gen.abrt.functions.*;
import com.ca.gen.abrt.cascade.*;
import com.ca.gen.abrt.trace.*;
import com.ca.gen.exits.common.*;
import com.ca.gen.odc.*;

public class CYYY9831 extends ABBase
{
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // IMPORT VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  CYYY9831_IA w_ia;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // EXPORT VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  CYYY9831_OA w_oa;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // LOCAL VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  CYYY9831_LA w_la;
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // ACTION BLOCK IMPORT/EXPORT VIEWS CLASS VARIABLES
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  gen.ort.yyy.ISC19041_IA isc19041_ia;
  gen.ort.yyy.ISC19041_OA isc19041_oa;
  gen.ort.yyy.ISC19051_OA isc19051_oa;
  gen.ort.yyy.CYYY9991_OA cyyy9991_oa;
  gen.ort.yyy.CYYY9811_OA cyyy9811_oa;
  gen.ort.yyy.CYYY9801_OA cyyy9801_oa;
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // MISC DECLARATIONS AND PROTOTYPES 
  //    FOLLOW AS NEEDED:             
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  boolean func_0022020291_esc_flag;
  PadView padview[] = new PadView [48];
  int trace_ret_code;
  PadText padtext[] = initPadText();
  public PadText [] initPadText()
  {
    PadText [] result = new PadText [PADTEXT_SIZE];
    result[0] = PadText.getInstance(   0,"+->   CYYY9831_MV_SC1_TO_YY1            07/05/2023  15:07");
    result[1] = PadText.getInstance(   0,"!       IMPORTS:");
    result[2] = PadText.getInstance(   0,"!         Work View imp_error isc1_component (Transient, Optional, Import only)");
    result[3] = PadText.getInstance(   0,"!           severity_code");
    result[4] = PadText.getInstance(   0,"!           rollback_indicator");
    result[5] = PadText.getInstance(   0,"!           origin_servid");
    result[6] = PadText.getInstance(   0,"!           context_string");
    result[7] = PadText.getInstance(   0,"!           return_code");
    result[8] = PadText.getInstance(   0,"!           reason_code");
    result[9] = PadText.getInstance(   0,"!           dialect_cd");
    result[10] = PadText.getInstance(   0,"!           checksum");
    result[11] = PadText.getInstance(   0,"!       EXPORTS:");
    result[12] = PadText.getInstance(   0,"!         Work View exp_error iyy1_component (Transient, Export only)");
    result[13] = PadText.getInstance(   0,"!           severity_code");
    result[14] = PadText.getInstance(   0,"!           rollback_indicator");
    result[15] = PadText.getInstance(   0,"!           origin_servid");
    result[16] = PadText.getInstance(   0,"!           context_string");
    result[17] = PadText.getInstance(   0,"!           return_code");
    result[18] = PadText.getInstance(   0,"!           reason_code");
    result[19] = PadText.getInstance(   0,"!           checksum");
    result[20] = PadText.getInstance(   0,"!       LOCALS:");
    result[21] = PadText.getInstance(   0,"!         Work View loc_imp_error isc1_component");
    result[22] = PadText.getInstance(   0,"!           severity_code");
    result[23] = PadText.getInstance(   0,"!           rollback_indicator");
    result[24] = PadText.getInstance(   0,"!           origin_servid");
    result[25] = PadText.getInstance(   0,"!           context_string");
    result[26] = PadText.getInstance(   0,"!           return_code");
    result[27] = PadText.getInstance(   0,"!           reason_code");
    result[28] = PadText.getInstance(   0,"!           implementation_id");
    result[29] = PadText.getInstance(   0,"!           specification_id");
    result[30] = PadText.getInstance(   0,"!           dialect_cd");
    result[31] = PadText.getInstance(   0,"!           checksum");
    result[32] = PadText.getInstance(   0,"!         Work View loc_error_msg isc1_component");
    result[33] = PadText.getInstance(   0,"!           severity_code");
    result[34] = PadText.getInstance(   0,"!           message_tx");
    result[35] = PadText.getInstance(   0,"!         Work View loc_error isc1_component");
    result[36] = PadText.getInstance(   0,"!           severity_code");
    result[37] = PadText.getInstance(   0,"!           rollback_indicator");
    result[38] = PadText.getInstance(   0,"!           origin_servid");
    result[39] = PadText.getInstance(   0,"!           context_string");
    result[40] = PadText.getInstance(   0,"!           return_code");
    result[41] = PadText.getInstance(   0,"!           reason_code");
    result[42] = PadText.getInstance(   0,"!           checksum");
    result[43] = PadText.getInstance(   0,"!");
    result[44] = PadText.getInstance(   0,"!     PROCEDURE STATEMENTS");
    result[45] = PadText.getInstance(   0,"!");
    result[46] = PadText.getInstance(   1,"!  NOTE: ");
    result[47] = PadText.getInstance(   1,"!  Please review explanation for purpose.");
    result[48] = PadText.getInstance(   1,"!  ");
    result[49] = PadText.getInstance(   2,"!  NOTE: ");
    result[50] = PadText.getInstance(   2,"!  RELEASE HISTORY");
    result[51] = PadText.getInstance(   2,"!  01_00 23-02-1998 New release");
    result[52] = PadText.getInstance(   2,"!  ");
    result[53] = PadText.getInstance(   3,"!  NOTE: ");
    result[54] = PadText.getInstance(   3,"!  ****************************************************************");
    result[55] = PadText.getInstance(   3,"!  Please format the error message.");
    result[56] = PadText.getInstance(   3,"!  ");
    result[57] = PadText.getInstance(   4,"!  MOVE imp_error isc1_component TO loc_imp_error isc1_component");
    result[58] = PadText.getInstance(   5,"!   ");
    result[59] = PadText.getInstance(   6,"!  NOTE: ");
    result[60] = PadText.getInstance(   6,"!  ****************************************************************");
    result[61] = PadText.getInstance(   6,"!  This component is which spec + impl + serv ?");
    result[62] = PadText.getInstance(   6,"!  ");
    result[63] = PadText.getInstance(   7,"!  USE isc19051_cmpnt_identifiers_get_s");
    result[64] = PadText.getInstance(   7,
      "!     WHICH EXPORTS: Work View loc_error isc1_component FROM Work View exp_error isc1_component");
    result[65] = PadText.getInstance(   7,
      "!                    Work View loc_imp_error isc1_component FROM Work View exp_identifiers isc1_component");
    result[66] = PadText.getInstance(   8,"!  +->IF loc_error isc1_component return_code < 1");
    result[67] = PadText.getInstance(   9,"!  !  MOVE loc_error isc1_component TO loc_imp_error isc1_component");
    result[68] = PadText.getInstance(   8,"!  +--");
    result[69] = PadText.getInstance(  10,"!   ");
    result[70] = PadText.getInstance(  11,"!  NOTE: ");
    result[71] = PadText.getInstance(  11,"!  ****************************************************************");
    result[72] = PadText.getInstance(  11,"!  Convert the error data to message.");
    result[73] = PadText.getInstance(  11,"!  ");
    result[74] = PadText.getInstance(  12,"!  USE isc19041_excptn_msg_fmt_as_str_s");
    result[75] = PadText.getInstance(  12,
      "!     WHICH IMPORTS: Work View loc_imp_error isc1_component TO Work View imp_error isc1_component");
    result[76] = PadText.getInstance(  12,
      "!     WHICH EXPORTS: Work View loc_error isc1_component FROM Work View exp_error isc1_component");
    result[77] = PadText.getInstance(  12,
      "!                    Work View loc_error_msg isc1_component FROM Work View exp_error_msg isc1_component");
    result[78] = PadText.getInstance(  13,"!  +->IF loc_error isc1_component return_code < 1");
    result[79] = PadText.getInstance(  14,"!  !  MOVE loc_error isc1_component TO loc_imp_error isc1_component");
    result[80] = PadText.getInstance(  13,"!  +--");
    result[81] = PadText.getInstance(  15,"!   ");
    result[82] = PadText.getInstance(  16,"!  NOTE: ");
    result[83] = PadText.getInstance(  16,"!  ****************************************************************");
    result[84] = PadText.getInstance(  16,"!  If message is not formatted, use the available data.");
    result[85] = PadText.getInstance(  16,"!  ");
    result[86] = PadText.getInstance(  17,"!  +->IF loc_error_msg isc1_component message_tx <= SPACES");
    result[87] = PadText.getInstance(  18,
      "!  !  SET loc_error_msg isc1_component message_tx TO loc_imp_error isc1_component context_string ");
    result[88] = PadText.getInstance(  17,"!  +--");
    result[89] = PadText.getInstance(  19,"!  +->IF loc_error_msg isc1_component severity_code <= SPACES");
    result[90] = PadText.getInstance(  20,
      "!  !  SET loc_error_msg isc1_component severity_code TO loc_imp_error isc1_component severity_code ");
    result[91] = PadText.getInstance(  19,"!  +--");
    result[92] = PadText.getInstance(  21,"!  +->IF loc_error_msg isc1_component severity_code <= SPACES");
    result[93] = PadText.getInstance(  22,"!  !  SET loc_error_msg isc1_component severity_code TO \"E\" ");
    result[94] = PadText.getInstance(  21,"!  +--");
    result[95] = PadText.getInstance(  23,"!  NOTE: ");
    result[96] = PadText.getInstance(  23,"!  ****************************************************************");
    result[97] = PadText.getInstance(  23,
      "!  The error message obtained from the other component is transferred to the string and it is customized by this way.");
    result[98] = PadText.getInstance(  23,"!  ");
    result[99] = PadText.getInstance(  24,"!  USE cyyy9991_setservid");
    result[100] = PadText.getInstance(  24,
      "!     WHICH EXPORTS: Work View exp_error iyy1_component FROM Work View exp_servid iyy1_component");
    result[101] = PadText.getInstance(  25,"!  +->IF loc_imp_error isc1_component return_code < 1");
    result[102] = PadText.getInstance(  26,"!  !  USE cyyy9811_set_excptn_other_error");
    result[103] = PadText.getInstance(  26,
      "!  !     WHICH EXPORTS: Work View exp_error iyy1_component FROM Work View exp_other_error iyy1_component");
    result[104] = PadText.getInstance(  25, 1, "!  +> ELSE");
    result[105] = PadText.getInstance(  27,"!  !  USE cyyy9801_set_excptn_other_info");
    result[106] = PadText.getInstance(  27,
      "!  !     WHICH EXPORTS: Work View exp_error iyy1_component FROM Work View exp_other_error iyy1_component");
    result[107] = PadText.getInstance(  25,"!  +--");
    result[108] = PadText.getInstance(  28,
      "!  SET exp_error iyy1_component context_string TO loc_error_msg isc1_component message_tx ");
    result[109] = PadText.getInstance(  29,"!   ");
    result[110] = PadText.getInstance(  30,"!  NOTE: ");
    result[111] = PadText.getInstance(  30,"!  ****************************************************************");
    result[112] = PadText.getInstance(  30,"!  ");
    result[113] = PadText.getInstance(  31,
      "!  SET exp_error iyy1_component severity_code TO loc_error_msg isc1_component severity_code ");
    result[114] = PadText.getInstance(  32,
      "!  SET exp_error iyy1_component rollback_indicator TO loc_imp_error isc1_component rollback_indicator ");
    result[115] = PadText.getInstance(  33,"!  SET exp_error iyy1_component checksum TO loc_imp_error isc1_component checksum ");
    result[116] = PadText.getInstance(   0,"+---");
    result[117] = PadText.getInstance(PadText.LASTLINE,"************************* BOTTOM OF DATA *************************");
    return result;
  }
  final static int PADTEXT_SIZE = 118;
  //       +->   CYYY9831_MV_SC1_TO_YY1            07/05/2023  15:07
  //       !       IMPORTS:
  //       !         Work View imp_error isc1_component (Transient, Optional, Import only)
  //       !           severity_code
  //       !           rollback_indicator
  //       !           origin_servid
  //       !           context_string
  //       !           return_code
  //       !           reason_code
  //       !           dialect_cd
  //       !           checksum
  //       !       EXPORTS:
  //       !         Work View exp_error iyy1_component (Transient, Export only)
  //       !           severity_code
  //       !           rollback_indicator
  //       !           origin_servid
  //       !           context_string
  //       !           return_code
  //       !           reason_code
  //       !           checksum
  //       !       LOCALS:
  //       !         Work View loc_imp_error isc1_component
  //       !           severity_code
  //       !           rollback_indicator
  //       !           origin_servid
  //       !           context_string
  //       !           return_code
  //       !           reason_code
  //       !           implementation_id
  //       !           specification_id
  //       !           dialect_cd
  //       !           checksum
  //       !         Work View loc_error_msg isc1_component
  //       !           severity_code
  //       !           message_tx
  //       !         Work View loc_error isc1_component
  //       !           severity_code
  //       !           rollback_indicator
  //       !           origin_servid
  //       !           context_string
  //       !           return_code
  //       !           reason_code
  //       !           checksum
  //       !
  //       !     PROCEDURE STATEMENTS
  //       !
  //     1 !  NOTE: 
  //     1 !  Please review explanation for purpose.
  //     1 !  
  //     2 !  NOTE: 
  //     2 !  RELEASE HISTORY
  //     2 !  01_00 23-02-1998 New release
  //     2 !  
  //     3 !  NOTE: 
  //     3 !  ****************************************************************
  //     3 !  Please format the error message.
  //     3 !  
  //     4 !  MOVE imp_error isc1_component TO loc_imp_error isc1_component
  //     5 !   
  //     6 !  NOTE: 
  //     6 !  ****************************************************************
  //     6 !  This component is which spec + impl + serv ?
  //     6 !  
  //     7 !  USE isc19051_cmpnt_identifiers_get_s
  //     7 !     WHICH EXPORTS: Work View loc_error isc1_component FROM Work View exp_error isc1_component
  //     7 !                    Work View loc_imp_error isc1_component FROM Work View exp_identifiers isc1_component
  //     8 !  +->IF loc_error isc1_component return_code < 1
  //     9 !  !  MOVE loc_error isc1_component TO loc_imp_error isc1_component
  //     8 !  +--
  //    10 !   
  //    11 !  NOTE: 
  //    11 !  ****************************************************************
  //    11 !  Convert the error data to message.
  //    11 !  
  //    12 !  USE isc19041_excptn_msg_fmt_as_str_s
  //    12 !     WHICH IMPORTS: Work View loc_imp_error isc1_component TO Work View imp_error isc1_component
  //    12 !     WHICH EXPORTS: Work View loc_error isc1_component FROM Work View exp_error isc1_component
  //    12 !                    Work View loc_error_msg isc1_component FROM Work View exp_error_msg isc1_component
  //    13 !  +->IF loc_error isc1_component return_code < 1
  //    14 !  !  MOVE loc_error isc1_component TO loc_imp_error isc1_component
  //    13 !  +--
  //    15 !   
  //    16 !  NOTE: 
  //    16 !  ****************************************************************
  //    16 !  If message is not formatted, use the available data.
  //    16 !  
  //    17 !  +->IF loc_error_msg isc1_component message_tx <= SPACES
  //    18 !  !  SET loc_error_msg isc1_component message_tx TO loc_imp_error isc1_component context_string 
  //    17 !  +--
  //    19 !  +->IF loc_error_msg isc1_component severity_code <= SPACES
  //    20 !  !  SET loc_error_msg isc1_component severity_code TO loc_imp_error isc1_component severity_code 
  //    19 !  +--
  //    21 !  +->IF loc_error_msg isc1_component severity_code <= SPACES
  //    22 !  !  SET loc_error_msg isc1_component severity_code TO "E" 
  //    21 !  +--
  //    23 !  NOTE: 
  //    23 !  ****************************************************************
  //    23 !  The error message obtained from the other component is transferred to the string and it is customized by this way.
  //    23 !  
  //    24 !  USE cyyy9991_setservid
  //    24 !     WHICH EXPORTS: Work View exp_error iyy1_component FROM Work View exp_servid iyy1_component
  //    25 !  +->IF loc_imp_error isc1_component return_code < 1
  //    26 !  !  USE cyyy9811_set_excptn_other_error
  //    26 !  !     WHICH EXPORTS: Work View exp_error iyy1_component FROM Work View exp_other_error iyy1_component
  //    25 !  +> ELSE
  //    27 !  !  USE cyyy9801_set_excptn_other_info
  //    27 !  !     WHICH EXPORTS: Work View exp_error iyy1_component FROM Work View exp_other_error iyy1_component
  //    25 !  +--
  //    28 !  SET exp_error iyy1_component context_string TO loc_error_msg isc1_component message_tx 
  //    29 !   
  //    30 !  NOTE: 
  //    30 !  ****************************************************************
  //    30 !  
  //    31 !  SET exp_error iyy1_component severity_code TO loc_error_msg isc1_component severity_code 
  //    32 !  SET exp_error iyy1_component rollback_indicator TO loc_imp_error isc1_component rollback_indicator 
  //    33 !  SET exp_error iyy1_component checksum TO loc_imp_error isc1_component checksum 
  //       +---
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  //  CONSTRUCTOR FOR THE CLASS       
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  public CYYY9831()
  {
    iefCGenRlse = "CA Gen 8.6";
    ssCopyright = "Copyright (c) 2023 CA Technologies. All rights reserved.";
    iefCGenDate = "2023/07/05";
    iefCGenTime = "15:07:45";
    iefCGenEncy = "9.2.A6";
    iefCGenUserId = "HakanBal";
    iefCGenModel = "N8I_ORT_YYY_0112_TEMPLATE";
    iefCGenSubset = "ALL";
    iefCGenName = "CYYY9831_MV_SC1_TO_YY1";
    nestingLevel = 0;
    valChkDeadlockTimeout = false;
    valChkDBError = false;
  }
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // ACTION BLOCK FUNCTION DECLARATIONS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  public void CYYY9831( Object in_runtime_parm1, 
  	IRuntimePStepContext in_runtime_parm2, 
  	GlobData in_globdata, 
  	CYYY9831_IA import_view, 
  	CYYY9831_OA export_view )
  {
    iefRuntimeParm1 = in_runtime_parm1;
    iefRuntimeParm2 = in_runtime_parm2;
    globdata = in_globdata;
    w_ia = import_view;
    w_oa = export_view;
    _CYYY9831();
  }
  
  private void _CYYY9831()
  {
    
    f_22020291_localAlloc("CYYY9831_MV_SC1_TO_YY1");
    if ( globdata.getErrorData().getLastStatus() == ErrorData.IEF_ALLOCATION_ERROR_FL_LS )
    	return;
    
    ++(nestingLevel);
    try {
      f_22020291_init();
      f_22020291();
    } catch( ABException e ) {
    } finally {
      --(nestingLevel);
    }
    String last_stmt_num_saved = globdata.getStateData().getLastStatementNumber();
    globdata.getStateData().setLastStatementNumber( "9999999999" );
    try {
      f_0_trace();
    } catch( ABException e ) {
    }
    globdata.getStateData().setLastStatementNumber( last_stmt_num_saved );
  }
  public void f_22020291()
  	throws ABException
  {
    func_0022020291_esc_flag = false;
    globdata.getStateData().setCurrentABId( "0022020291" );
    globdata.getStateData().setCurrentABName( "CYYY9831_MV_SC1_TO_YY1" );
    padview_init();
    globdata.getStateData().setLastStatementNumber( "0000000000" );
    f_0_trace();
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    Please review explanation for purpose.                          
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    RELEASE HISTORY                                                 
    //    01_00 23-02-1998 New release                                    
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    **************************************************************  
    //    **                                                              
    //    Please format the error message.                                
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    globdata.getStateData().setLastStatementNumber( "0000000004" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpErrorIsc1ComponentSeverityCode = FixedStringAttr.valueOf(w_ia.ImpErrorIsc1ComponentSeverityCode, (short)1);
      w_la.LocImpErrorIsc1ComponentRollbackIndicator = FixedStringAttr.valueOf(w_ia.ImpErrorIsc1ComponentRollbackIndicator, (short)1)
        ;
      w_la.LocImpErrorIsc1ComponentOriginServid = DoubleAttr.valueOf(w_ia.ImpErrorIsc1ComponentOriginServid);
      w_la.LocImpErrorIsc1ComponentContextString = StringAttr.valueOf(w_ia.ImpErrorIsc1ComponentContextString, (short)512);
      w_la.LocImpErrorIsc1ComponentReturnCode = IntAttr.valueOf(w_ia.ImpErrorIsc1ComponentReturnCode);
      w_la.LocImpErrorIsc1ComponentReasonCode = IntAttr.valueOf(w_ia.ImpErrorIsc1ComponentReasonCode);
      w_la.LocImpErrorIsc1ComponentDialectCd = FixedStringAttr.valueOf(w_ia.ImpErrorIsc1ComponentDialectCd, (short)2);
      w_la.LocImpErrorIsc1ComponentChecksum = FixedStringAttr.valueOf(w_ia.ImpErrorIsc1ComponentChecksum, (short)15);
    }
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    **************************************************************  
    //    **                                                              
    //    This component is which spec + impl + serv ?                    
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    globdata.getStateData().setLastStatementNumber( "0000000007" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      
      isc19051_oa = (gen.ort.yyy.ISC19051_OA)(iefRuntimeParm2.getInstance("gen.ort.yyy.ISC19051_OA"));
      globdata.getErrorData().setErrorEncounteredSW( ErrorData.NO_ERROR_FOUND_SW );
      iefRuntimeParm2.useActionBlock("gen.ort.yyy.ISC19051", "ISC19051", null, isc19051_oa);
      if ( ((!(globdata.getErrorData().getStatus().equals( ErrorData.NONE_SF ))) || (globdata.getErrorData().getErrorEncounteredSW() 
        != ErrorData.NO_ERROR_FOUND_SW)) || (globdata.getErrorData().getViewOverflowSW() != ErrorData.NO_ERROR_FOUND_SW) )
      {
        throw new ABException();
      }
      globdata.getStateData().setCurrentABId( "0022020291" );
      globdata.getStateData().setCurrentABName( "CYYY9831_MV_SC1_TO_YY1" );
      globdata.getStateData().setLastStatementNumber( "0000000007" );
      w_la.LocImpErrorIsc1ComponentOriginServid = DoubleAttr.valueOf(isc19051_oa.ExpIdentifiersIsc1ComponentOriginServid);
      w_la.LocImpErrorIsc1ComponentImplementationId = DoubleAttr.valueOf(isc19051_oa.ExpIdentifiersIsc1ComponentImplementationId);
      w_la.LocImpErrorIsc1ComponentSpecificationId = DoubleAttr.valueOf(isc19051_oa.ExpIdentifiersIsc1ComponentSpecificationId);
      w_la.LocErrorIsc1ComponentSeverityCode = FixedStringAttr.valueOf(isc19051_oa.ExpErrorIsc1ComponentSeverityCode, (short)1);
      w_la.LocErrorIsc1ComponentRollbackIndicator = FixedStringAttr.valueOf(isc19051_oa.ExpErrorIsc1ComponentRollbackIndicator, (
        short)1);
      w_la.LocErrorIsc1ComponentOriginServid = DoubleAttr.valueOf(isc19051_oa.ExpErrorIsc1ComponentOriginServid);
      w_la.LocErrorIsc1ComponentContextString = StringAttr.valueOf(isc19051_oa.ExpErrorIsc1ComponentContextString, (short)512);
      w_la.LocErrorIsc1ComponentReturnCode = IntAttr.valueOf(isc19051_oa.ExpErrorIsc1ComponentReturnCode);
      w_la.LocErrorIsc1ComponentReasonCode = IntAttr.valueOf(isc19051_oa.ExpErrorIsc1ComponentReasonCode);
      w_la.LocErrorIsc1ComponentChecksum = FixedStringAttr.valueOf(isc19051_oa.ExpErrorIsc1ComponentChecksum, (short)15);
      isc19051_oa.freeInstance();
      isc19051_oa = null;
    }
    globdata.getStateData().setLastStatementNumber( "0000000008" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      if ( ((double) w_la.LocErrorIsc1ComponentReturnCode < 1) )
      {
        globdata.getStateData().setLastStatementNumber( "0000000009" );
        f_0_trace();
        if ( trace_ret_code != 8 )
        {
          w_la.LocImpErrorIsc1ComponentSeverityCode = FixedStringAttr.valueOf(w_la.LocErrorIsc1ComponentSeverityCode, (short)1);
          w_la.LocImpErrorIsc1ComponentRollbackIndicator = FixedStringAttr.valueOf(w_la.LocErrorIsc1ComponentRollbackIndicator, (
            short)1);
          w_la.LocImpErrorIsc1ComponentOriginServid = DoubleAttr.valueOf(w_la.LocErrorIsc1ComponentOriginServid);
          w_la.LocImpErrorIsc1ComponentContextString = StringAttr.valueOf(w_la.LocErrorIsc1ComponentContextString, (short)512);
          w_la.LocImpErrorIsc1ComponentReturnCode = IntAttr.valueOf(w_la.LocErrorIsc1ComponentReturnCode);
          w_la.LocImpErrorIsc1ComponentReasonCode = IntAttr.valueOf(w_la.LocErrorIsc1ComponentReasonCode);
          w_la.LocImpErrorIsc1ComponentChecksum = FixedStringAttr.valueOf(w_la.LocErrorIsc1ComponentChecksum, (short)15);
        }
      }
      
    }
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    **************************************************************  
    //    **                                                              
    //    Convert the error data to message.                              
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    globdata.getStateData().setLastStatementNumber( "0000000012" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      
      isc19041_ia = (gen.ort.yyy.ISC19041_IA)(iefRuntimeParm2.getInstance("gen.ort.yyy.ISC19041_IA"));
      isc19041_oa = (gen.ort.yyy.ISC19041_OA)(iefRuntimeParm2.getInstance("gen.ort.yyy.ISC19041_OA"));
      isc19041_ia.ImpErrorIsc1ComponentOriginServid = DoubleAttr.valueOf(w_la.LocImpErrorIsc1ComponentOriginServid);
      isc19041_ia.ImpErrorIsc1ComponentContextString = StringAttr.valueOf(w_la.LocImpErrorIsc1ComponentContextString, (short)512);
      isc19041_ia.ImpErrorIsc1ComponentReturnCode = IntAttr.valueOf(w_la.LocImpErrorIsc1ComponentReturnCode);
      isc19041_ia.ImpErrorIsc1ComponentReasonCode = IntAttr.valueOf(w_la.LocImpErrorIsc1ComponentReasonCode);
      isc19041_ia.ImpErrorIsc1ComponentImplementationId = DoubleAttr.valueOf(w_la.LocImpErrorIsc1ComponentImplementationId);
      isc19041_ia.ImpErrorIsc1ComponentSpecificationId = DoubleAttr.valueOf(w_la.LocImpErrorIsc1ComponentSpecificationId);
      isc19041_ia.ImpErrorIsc1ComponentDialectCd = FixedStringAttr.valueOf(w_la.LocImpErrorIsc1ComponentDialectCd, (short)2);
      globdata.getErrorData().setErrorEncounteredSW( ErrorData.NO_ERROR_FOUND_SW );
      iefRuntimeParm2.useActionBlock("gen.ort.yyy.ISC19041", "ISC19041", isc19041_ia, isc19041_oa);
      if ( ((!(globdata.getErrorData().getStatus().equals( ErrorData.NONE_SF ))) || (globdata.getErrorData().getErrorEncounteredSW() 
        != ErrorData.NO_ERROR_FOUND_SW)) || (globdata.getErrorData().getViewOverflowSW() != ErrorData.NO_ERROR_FOUND_SW) )
      {
        throw new ABException();
      }
      globdata.getStateData().setCurrentABId( "0022020291" );
      globdata.getStateData().setCurrentABName( "CYYY9831_MV_SC1_TO_YY1" );
      globdata.getStateData().setLastStatementNumber( "0000000012" );
      w_la.LocErrorMsgIsc1ComponentSeverityCode = FixedStringAttr.valueOf(isc19041_oa.ExpErrorMsgIsc1ComponentSeverityCode, (short)1)
        ;
      w_la.LocErrorMsgIsc1ComponentMessageTx = StringAttr.valueOf(isc19041_oa.ExpErrorMsgIsc1ComponentMessageTx, (short)512);
      w_la.LocErrorIsc1ComponentSeverityCode = FixedStringAttr.valueOf(isc19041_oa.ExpErrorIsc1ComponentSeverityCode, (short)1);
      w_la.LocErrorIsc1ComponentRollbackIndicator = FixedStringAttr.valueOf(isc19041_oa.ExpErrorIsc1ComponentRollbackIndicator, (
        short)1);
      w_la.LocErrorIsc1ComponentOriginServid = DoubleAttr.valueOf(isc19041_oa.ExpErrorIsc1ComponentOriginServid);
      w_la.LocErrorIsc1ComponentContextString = StringAttr.valueOf(isc19041_oa.ExpErrorIsc1ComponentContextString, (short)512);
      w_la.LocErrorIsc1ComponentReturnCode = IntAttr.valueOf(isc19041_oa.ExpErrorIsc1ComponentReturnCode);
      w_la.LocErrorIsc1ComponentReasonCode = IntAttr.valueOf(isc19041_oa.ExpErrorIsc1ComponentReasonCode);
      w_la.LocErrorIsc1ComponentChecksum = FixedStringAttr.valueOf(isc19041_oa.ExpErrorIsc1ComponentChecksum, (short)15);
      isc19041_ia.freeInstance();
      isc19041_ia = null;
      isc19041_oa.freeInstance();
      isc19041_oa = null;
    }
    globdata.getStateData().setLastStatementNumber( "0000000013" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      if ( ((double) w_la.LocErrorIsc1ComponentReturnCode < 1) )
      {
        globdata.getStateData().setLastStatementNumber( "0000000014" );
        f_0_trace();
        if ( trace_ret_code != 8 )
        {
          w_la.LocImpErrorIsc1ComponentSeverityCode = FixedStringAttr.valueOf(w_la.LocErrorIsc1ComponentSeverityCode, (short)1);
          w_la.LocImpErrorIsc1ComponentRollbackIndicator = FixedStringAttr.valueOf(w_la.LocErrorIsc1ComponentRollbackIndicator, (
            short)1);
          w_la.LocImpErrorIsc1ComponentOriginServid = DoubleAttr.valueOf(w_la.LocErrorIsc1ComponentOriginServid);
          w_la.LocImpErrorIsc1ComponentContextString = StringAttr.valueOf(w_la.LocErrorIsc1ComponentContextString, (short)512);
          w_la.LocImpErrorIsc1ComponentReturnCode = IntAttr.valueOf(w_la.LocErrorIsc1ComponentReturnCode);
          w_la.LocImpErrorIsc1ComponentReasonCode = IntAttr.valueOf(w_la.LocErrorIsc1ComponentReasonCode);
          w_la.LocImpErrorIsc1ComponentChecksum = FixedStringAttr.valueOf(w_la.LocErrorIsc1ComponentChecksum, (short)15);
        }
      }
      
    }
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    **************************************************************  
    //    **                                                              
    //    If message is not formatted, use the available data.            
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    globdata.getStateData().setLastStatementNumber( "0000000017" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      if ( CompareExit.compareTo(w_la.LocErrorMsgIsc1ComponentMessageTx, SPACES) <= 0 )
      {
        globdata.getStateData().setLastStatementNumber( "0000000018" );
        f_0_trace();
        if ( trace_ret_code != 8 )
        {
          w_la.LocErrorMsgIsc1ComponentMessageTx = StringAttr.valueOf(w_la.LocImpErrorIsc1ComponentContextString, (short)512);
        }
      }
      
    }
    globdata.getStateData().setLastStatementNumber( "0000000019" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      if ( CompareExit.compareTo(w_la.LocErrorMsgIsc1ComponentSeverityCode, SPACES) <= 0 )
      {
        globdata.getStateData().setLastStatementNumber( "0000000020" );
        f_0_trace();
        if ( trace_ret_code != 8 )
        {
          w_la.LocErrorMsgIsc1ComponentSeverityCode = FixedStringAttr.valueOf(w_la.LocImpErrorIsc1ComponentSeverityCode, (short)1);
        }
      }
      
    }
    globdata.getStateData().setLastStatementNumber( "0000000021" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      if ( CompareExit.compareTo(w_la.LocErrorMsgIsc1ComponentSeverityCode, SPACES) <= 0 )
      {
        globdata.getStateData().setLastStatementNumber( "0000000022" );
        f_0_trace();
        if ( trace_ret_code != 8 )
        {
          w_la.LocErrorMsgIsc1ComponentSeverityCode = FixedStringAttr.valueOf("E", (short)1);
        }
      }
      
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    **************************************************************  
    //    **                                                              
    //    The error message obtained from the other component is transfe  
    //    rred to the string and it is customized by this way.            
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    globdata.getStateData().setLastStatementNumber( "0000000024" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      
      cyyy9991_oa = (gen.ort.yyy.CYYY9991_OA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY9991_OA"));
      globdata.getErrorData().setErrorEncounteredSW( ErrorData.NO_ERROR_FOUND_SW );
      iefRuntimeParm2.useActionBlock("gen.ort.yyy.CYYY9991", "CYYY9991", null, cyyy9991_oa);
      if ( ((!(globdata.getErrorData().getStatus().equals( ErrorData.NONE_SF ))) || (globdata.getErrorData().getErrorEncounteredSW() 
        != ErrorData.NO_ERROR_FOUND_SW)) || (globdata.getErrorData().getViewOverflowSW() != ErrorData.NO_ERROR_FOUND_SW) )
      {
        throw new ABException();
      }
      globdata.getStateData().setCurrentABId( "0022020291" );
      globdata.getStateData().setCurrentABName( "CYYY9831_MV_SC1_TO_YY1" );
      globdata.getStateData().setLastStatementNumber( "0000000024" );
      w_oa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.valueOf(cyyy9991_oa.ExpServidIyy1ComponentOriginServid);
      cyyy9991_oa.freeInstance();
      cyyy9991_oa = null;
    }
    globdata.getStateData().setLastStatementNumber( "0000000025" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      if ( ((double) w_la.LocImpErrorIsc1ComponentReturnCode < 1) )
      {
        globdata.getStateData().setLastStatementNumber( "0000000026" );
        f_0_trace();
        if ( trace_ret_code != 8 )
        {
          
          cyyy9811_oa = (gen.ort.yyy.CYYY9811_OA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY9811_OA"));
          globdata.getErrorData().setErrorEncounteredSW( ErrorData.NO_ERROR_FOUND_SW );
          iefRuntimeParm2.useActionBlock("gen.ort.yyy.CYYY9811", "CYYY9811", null, cyyy9811_oa);
          if ( ((!(globdata.getErrorData().getStatus().equals( ErrorData.NONE_SF ))) || (globdata.getErrorData()
            .getErrorEncounteredSW() != ErrorData.NO_ERROR_FOUND_SW)) || (globdata.getErrorData().getViewOverflowSW() != 
            ErrorData.NO_ERROR_FOUND_SW) )
          {
            throw new ABException();
          }
          globdata.getStateData().setCurrentABId( "0022020291" );
          globdata.getStateData().setCurrentABName( "CYYY9831_MV_SC1_TO_YY1" );
          globdata.getStateData().setLastStatementNumber( "0000000026" );
          w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf(cyyy9811_oa.ExpOtherErrorIyy1ComponentReturnCode);
          w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf(cyyy9811_oa.ExpOtherErrorIyy1ComponentReasonCode);
          cyyy9811_oa.freeInstance();
          cyyy9811_oa = null;
        }
      }
      else 
      {
        globdata.getStateData().setLastSubStatementNumber( "1" );
        f_0_trace();
        {
          globdata.getStateData().setLastStatementNumber( "0000000027" );
          f_0_trace();
          if ( trace_ret_code != 8 )
          {
            
            cyyy9801_oa = (gen.ort.yyy.CYYY9801_OA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY9801_OA"));
            globdata.getErrorData().setErrorEncounteredSW( ErrorData.NO_ERROR_FOUND_SW );
            iefRuntimeParm2.useActionBlock("gen.ort.yyy.CYYY9801", "CYYY9801", null, cyyy9801_oa);
            if ( ((!(globdata.getErrorData().getStatus().equals( ErrorData.NONE_SF ))) || (globdata.getErrorData()
              .getErrorEncounteredSW() != ErrorData.NO_ERROR_FOUND_SW)) || (globdata.getErrorData().getViewOverflowSW() != 
              ErrorData.NO_ERROR_FOUND_SW) )
            {
              throw new ABException();
            }
            globdata.getStateData().setCurrentABId( "0022020291" );
            globdata.getStateData().setCurrentABName( "CYYY9831_MV_SC1_TO_YY1" );
            globdata.getStateData().setLastStatementNumber( "0000000027" );
            w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf(cyyy9801_oa.ExpOtherErrorIyy1ComponentReturnCode);
            w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf(cyyy9801_oa.ExpOtherErrorIyy1ComponentReasonCode);
            cyyy9801_oa.freeInstance();
            cyyy9801_oa = null;
          }
        }
      }
      
    }
    globdata.getStateData().setLastStatementNumber( "0000000028" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpErrorIyy1ComponentContextString = StringAttr.valueOf(w_la.LocErrorMsgIsc1ComponentMessageTx, (short)512);
    }
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    **************************************************************  
    //    **                                                              
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    globdata.getStateData().setLastStatementNumber( "0000000031" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.valueOf(w_la.LocErrorMsgIsc1ComponentSeverityCode, (short)1);
    }
    globdata.getStateData().setLastStatementNumber( "0000000032" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.valueOf(w_la.LocImpErrorIsc1ComponentRollbackIndicator, (short)1)
        ;
    }
    globdata.getStateData().setLastStatementNumber( "0000000033" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.valueOf(w_la.LocImpErrorIsc1ComponentChecksum, (short)15);
    }
  }
  
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // SUBORDINATE FUNCTIONS
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // INITIALIZATION UTILITY FUNCTIONS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  public void f_22020291_localAlloc(String abname)
  {
    // Request localview allocation 
    w_la = (gen.ort.yyy.CYYY9831_LA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY9831_LA"));
    if ( w_la == null )
    {
      globdata.getStateData().setCurrentABId( "0022020291" );
      globdata.getStateData().setCurrentABName( abname );
      globdata.getErrorData().setErrorEncounteredSW( ErrorData.ERROR_FOUND_SW );
      globdata.getErrorData().setLastStatus( ErrorData.IEF_ALLOCATION_ERROR_FL_LS );
    }
  }
  
  public void f_22020291_init()
  	throws ABException
  {
    if ( nestingLevel < 2 )
    {
      w_la.reset();
    }
    w_oa.ExpErrorIyy1ComponentSeverityCode = " ";
    w_oa.ExpErrorIyy1ComponentRollbackIndicator = " ";
    w_oa.ExpErrorIyy1ComponentOriginServid = 0.0;
    w_oa.ExpErrorIyy1ComponentContextString = "";
    w_oa.ExpErrorIyy1ComponentReturnCode = 0;
    w_oa.ExpErrorIyy1ComponentReasonCode = 0;
    w_oa.ExpErrorIyy1ComponentChecksum = "               ";
  }
  
  public void f_0_trace()
  	throws ABException
  {
    trace_ret_code = TIRTRCE.TIRTRCE(iefRuntimeParm1, iefRuntimeParm2, globdata, padtext, padview);
    if ( trace_ret_code == 20 )
    {
      throw new ABException();
    }
  }
  
  public void padview_init()
  {
padview[0] = PadView.getInstance("IMPORT                          ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_ia, 
      "w_ia");
    padview[1] = PadView.getInstance("IMP_ERROR                       ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ia, 
      null);
    padview[2] = PadView.getInstance("ISC1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, w_ia,
       null);
    padview[3] = PadView.getInstance("SEVERITY_CODE                   ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpErrorIsc1ComponentSeverityCode");
    padview[4] = PadView.getInstance("ROLLBACK_INDICATOR              ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpErrorIsc1ComponentRollbackIndicator");
    padview[5] = PadView.getInstance("ORIGIN_SERVID                   ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_ia, "ImpErrorIsc1ComponentOriginServid");
    padview[6] = PadView.getInstance("CONTEXT_STRING                  ", 512, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_ia, "ImpErrorIsc1ComponentContextString");
    padview[7] = PadView.getInstance("RETURN_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_NUMERIC,
       w_ia, "ImpErrorIsc1ComponentReturnCode");
    padview[8] = PadView.getInstance("REASON_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_NUMERIC,
       w_ia, "ImpErrorIsc1ComponentReasonCode");
    padview[9] = PadView.getInstance("DIALECT_CD                      ", 2, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpErrorIsc1ComponentDialectCd");
    padview[10] = PadView.getInstance("CHECKSUM                        ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpErrorIsc1ComponentChecksum");
    padview[11] = PadView.getInstance("EXPORT                          ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_oa, 
      "w_oa");
    padview[12] = PadView.getInstance("EXP_ERROR                       ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_oa, 
      null);
    padview[13] = PadView.getInstance("IYY1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_oa, null);
    padview[14] = PadView.getInstance("SEVERITY_CODE                   ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentSeverityCode");
    padview[15] = PadView.getInstance("ROLLBACK_INDICATOR              ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentRollbackIndicator");
    padview[16] = PadView.getInstance("ORIGIN_SERVID                   ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentOriginServid");
    padview[17] = PadView.getInstance("CONTEXT_STRING                  ", 512, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_oa, "ExpErrorIyy1ComponentContextString");
    padview[18] = PadView.getInstance("RETURN_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentReturnCode");
    padview[19] = PadView.getInstance("REASON_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentReasonCode");
    padview[20] = PadView.getInstance("CHECKSUM                        ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentChecksum");
    padview[21] = PadView.getInstance("LOCAL                           ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_la, 
      "w_la");
    padview[22] = PadView.getInstance("LOC_IMP_ERROR                   ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[23] = PadView.getInstance("ISC1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[24] = PadView.getInstance("SEVERITY_CODE                   ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpErrorIsc1ComponentSeverityCode");
    padview[25] = PadView.getInstance("ROLLBACK_INDICATOR              ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpErrorIsc1ComponentRollbackIndicator");
    padview[26] = PadView.getInstance("ORIGIN_SERVID                   ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocImpErrorIsc1ComponentOriginServid");
    padview[27] = PadView.getInstance("CONTEXT_STRING                  ", 512, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_la, "LocImpErrorIsc1ComponentContextString");
    padview[28] = PadView.getInstance("RETURN_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocImpErrorIsc1ComponentReturnCode");
    padview[29] = PadView.getInstance("REASON_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocImpErrorIsc1ComponentReasonCode");
    padview[30] = PadView.getInstance("IMPLEMENTATION_ID               ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocImpErrorIsc1ComponentImplementationId");
    padview[31] = PadView.getInstance("SPECIFICATION_ID                ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocImpErrorIsc1ComponentSpecificationId");
    padview[32] = PadView.getInstance("DIALECT_CD                      ", 2, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpErrorIsc1ComponentDialectCd");
    padview[33] = PadView.getInstance("CHECKSUM                        ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpErrorIsc1ComponentChecksum");
    padview[34] = PadView.getInstance("LOC_ERROR_MSG                   ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[35] = PadView.getInstance("ISC1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[36] = PadView.getInstance("SEVERITY_CODE                   ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocErrorMsgIsc1ComponentSeverityCode");
    padview[37] = PadView.getInstance("MESSAGE_TX                      ", 512, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_la, "LocErrorMsgIsc1ComponentMessageTx");
    padview[38] = PadView.getInstance("LOC_ERROR                       ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[39] = PadView.getInstance("ISC1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[40] = PadView.getInstance("SEVERITY_CODE                   ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocErrorIsc1ComponentSeverityCode");
    padview[41] = PadView.getInstance("ROLLBACK_INDICATOR              ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocErrorIsc1ComponentRollbackIndicator");
    padview[42] = PadView.getInstance("ORIGIN_SERVID                   ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocErrorIsc1ComponentOriginServid");
    padview[43] = PadView.getInstance("CONTEXT_STRING                  ", 512, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_la, "LocErrorIsc1ComponentContextString");
    padview[44] = PadView.getInstance("RETURN_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocErrorIsc1ComponentReturnCode");
    padview[45] = PadView.getInstance("REASON_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocErrorIsc1ComponentReasonCode");
    padview[46] = PadView.getInstance("CHECKSUM                        ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocErrorIsc1ComponentChecksum");
    padview[47] = PadView.getInstance("******** BOTTOM OF DATA ********", 0, 0, 0, (short)0, PadView.VT_END, PadView.DT_NONE, w_la, 
      null);
  }
}// end class


package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: CYYY9831_IA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:09:39
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF IMPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: CYYY9831_IA
 **/
public class CYYY9831_IA extends ViewBase implements IImportView, Serializable
{
  // Entity View: IMP_ERROR
  //        Type: ISC1_COMPONENT
  /**
   * Attribute missing flag for: ImpErrorIsc1ComponentSeverityCode
   **/
  public char ImpErrorIsc1ComponentSeverityCode_AS;
  /**
   * Attribute for: ImpErrorIsc1ComponentSeverityCode
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ImpErrorIsc1ComponentSeverityCode;
  /**
   * Attribute missing flag for: ImpErrorIsc1ComponentRollbackIndicator
   **/
  public char ImpErrorIsc1ComponentRollbackIndicator_AS;
  /**
   * Attribute for: ImpErrorIsc1ComponentRollbackIndicator
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ImpErrorIsc1ComponentRollbackIndicator;
  /**
   * Attribute missing flag for: ImpErrorIsc1ComponentOriginServid
   **/
  public char ImpErrorIsc1ComponentOriginServid_AS;
  /**
   * Attribute for: ImpErrorIsc1ComponentOriginServid
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double ImpErrorIsc1ComponentOriginServid;
  /**
   * Attribute missing flag for: ImpErrorIsc1ComponentContextString
   **/
  public char ImpErrorIsc1ComponentContextString_AS;
  /**
   * Attribute for: ImpErrorIsc1ComponentContextString
   * Domain: Text
   * Length: 512
   * Varying Length: Y
   **/
  public String ImpErrorIsc1ComponentContextString;
  /**
   * Attribute missing flag for: ImpErrorIsc1ComponentReturnCode
   **/
  public char ImpErrorIsc1ComponentReturnCode_AS;
  /**
   * Attribute for: ImpErrorIsc1ComponentReturnCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ImpErrorIsc1ComponentReturnCode;
  /**
   * Attribute missing flag for: ImpErrorIsc1ComponentReasonCode
   **/
  public char ImpErrorIsc1ComponentReasonCode_AS;
  /**
   * Attribute for: ImpErrorIsc1ComponentReasonCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ImpErrorIsc1ComponentReasonCode;
  /**
   * Attribute missing flag for: ImpErrorIsc1ComponentDialectCd
   **/
  public char ImpErrorIsc1ComponentDialectCd_AS;
  /**
   * Attribute for: ImpErrorIsc1ComponentDialectCd
   * Domain: Text
   * Length: 2
   * Varying Length: N
   **/
  public String ImpErrorIsc1ComponentDialectCd;
  /**
   * Attribute missing flag for: ImpErrorIsc1ComponentChecksum
   **/
  public char ImpErrorIsc1ComponentChecksum_AS;
  /**
   * Attribute for: ImpErrorIsc1ComponentChecksum
   * Domain: Text
   * Length: 15
   * Varying Length: N
   **/
  public String ImpErrorIsc1ComponentChecksum;
  /**
   * Default Constructor
   **/
  
  public CYYY9831_IA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public CYYY9831_IA(CYYY9831_IA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static CYYY9831_IA getInstance()
  {
    return new CYYY9831_IA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new CYYY9831_IA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    ImpErrorIsc1ComponentSeverityCode_AS = ' ';
    ImpErrorIsc1ComponentSeverityCode = " ";
    ImpErrorIsc1ComponentRollbackIndicator_AS = ' ';
    ImpErrorIsc1ComponentRollbackIndicator = " ";
    ImpErrorIsc1ComponentOriginServid_AS = ' ';
    ImpErrorIsc1ComponentOriginServid = 0.0;
    ImpErrorIsc1ComponentContextString_AS = ' ';
    ImpErrorIsc1ComponentContextString = "";
    ImpErrorIsc1ComponentReturnCode_AS = ' ';
    ImpErrorIsc1ComponentReturnCode = 0;
    ImpErrorIsc1ComponentReasonCode_AS = ' ';
    ImpErrorIsc1ComponentReasonCode = 0;
    ImpErrorIsc1ComponentDialectCd_AS = ' ';
    ImpErrorIsc1ComponentDialectCd = "  ";
    ImpErrorIsc1ComponentChecksum_AS = ' ';
    ImpErrorIsc1ComponentChecksum = "               ";
  }
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    throw new RuntimeException("can only execute getVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    throw new RuntimeException("can only execute setFromVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IImportView orig)
  {
    this.copyFrom((CYYY9831_IA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(CYYY9831_IA orig)
  {
    ImpErrorIsc1ComponentSeverityCode_AS = orig.ImpErrorIsc1ComponentSeverityCode_AS;
    ImpErrorIsc1ComponentSeverityCode = orig.ImpErrorIsc1ComponentSeverityCode;
    ImpErrorIsc1ComponentRollbackIndicator_AS = orig.ImpErrorIsc1ComponentRollbackIndicator_AS;
    ImpErrorIsc1ComponentRollbackIndicator = orig.ImpErrorIsc1ComponentRollbackIndicator;
    ImpErrorIsc1ComponentOriginServid_AS = orig.ImpErrorIsc1ComponentOriginServid_AS;
    ImpErrorIsc1ComponentOriginServid = orig.ImpErrorIsc1ComponentOriginServid;
    ImpErrorIsc1ComponentContextString_AS = orig.ImpErrorIsc1ComponentContextString_AS;
    ImpErrorIsc1ComponentContextString = orig.ImpErrorIsc1ComponentContextString;
    ImpErrorIsc1ComponentReturnCode_AS = orig.ImpErrorIsc1ComponentReturnCode_AS;
    ImpErrorIsc1ComponentReturnCode = orig.ImpErrorIsc1ComponentReturnCode;
    ImpErrorIsc1ComponentReasonCode_AS = orig.ImpErrorIsc1ComponentReasonCode_AS;
    ImpErrorIsc1ComponentReasonCode = orig.ImpErrorIsc1ComponentReasonCode;
    ImpErrorIsc1ComponentDialectCd_AS = orig.ImpErrorIsc1ComponentDialectCd_AS;
    ImpErrorIsc1ComponentDialectCd = orig.ImpErrorIsc1ComponentDialectCd;
    ImpErrorIsc1ComponentChecksum_AS = orig.ImpErrorIsc1ComponentChecksum_AS;
    ImpErrorIsc1ComponentChecksum = orig.ImpErrorIsc1ComponentChecksum;
  }
}

package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: CYYY9831_LA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:07:45
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF LOCAL VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: CYYY9831_LA
 **/
public class CYYY9831_LA extends ViewBase implements ILocalView, Serializable
{
  // Entity View: LOC_IMP_ERROR
  //        Type: ISC1_COMPONENT
  /**
   * Attribute missing flag for: LocImpErrorIsc1ComponentSeverityCode
   **/
  public char LocImpErrorIsc1ComponentSeverityCode_AS;
  /**
   * Attribute for: LocImpErrorIsc1ComponentSeverityCode
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String LocImpErrorIsc1ComponentSeverityCode;
  /**
   * Attribute missing flag for: LocImpErrorIsc1ComponentRollbackIndicator
   **/
  public char LocImpErrorIsc1ComponentRollbackIndicator_AS;
  /**
   * Attribute for: LocImpErrorIsc1ComponentRollbackIndicator
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String LocImpErrorIsc1ComponentRollbackIndicator;
  /**
   * Attribute missing flag for: LocImpErrorIsc1ComponentOriginServid
   **/
  public char LocImpErrorIsc1ComponentOriginServid_AS;
  /**
   * Attribute for: LocImpErrorIsc1ComponentOriginServid
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double LocImpErrorIsc1ComponentOriginServid;
  /**
   * Attribute missing flag for: LocImpErrorIsc1ComponentContextString
   **/
  public char LocImpErrorIsc1ComponentContextString_AS;
  /**
   * Attribute for: LocImpErrorIsc1ComponentContextString
   * Domain: Text
   * Length: 512
   * Varying Length: Y
   **/
  public String LocImpErrorIsc1ComponentContextString;
  /**
   * Attribute missing flag for: LocImpErrorIsc1ComponentReturnCode
   **/
  public char LocImpErrorIsc1ComponentReturnCode_AS;
  /**
   * Attribute for: LocImpErrorIsc1ComponentReturnCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocImpErrorIsc1ComponentReturnCode;
  /**
   * Attribute missing flag for: LocImpErrorIsc1ComponentReasonCode
   **/
  public char LocImpErrorIsc1ComponentReasonCode_AS;
  /**
   * Attribute for: LocImpErrorIsc1ComponentReasonCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocImpErrorIsc1ComponentReasonCode;
  /**
   * Attribute missing flag for: LocImpErrorIsc1ComponentImplementationId
   **/
  public char LocImpErrorIsc1ComponentImplementationId_AS;
  /**
   * Attribute for: LocImpErrorIsc1ComponentImplementationId
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double LocImpErrorIsc1ComponentImplementationId;
  /**
   * Attribute missing flag for: LocImpErrorIsc1ComponentSpecificationId
   **/
  public char LocImpErrorIsc1ComponentSpecificationId_AS;
  /**
   * Attribute for: LocImpErrorIsc1ComponentSpecificationId
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double LocImpErrorIsc1ComponentSpecificationId;
  /**
   * Attribute missing flag for: LocImpErrorIsc1ComponentDialectCd
   **/
  public char LocImpErrorIsc1ComponentDialectCd_AS;
  /**
   * Attribute for: LocImpErrorIsc1ComponentDialectCd
   * Domain: Text
   * Length: 2
   * Varying Length: N
   **/
  public String LocImpErrorIsc1ComponentDialectCd;
  /**
   * Attribute missing flag for: LocImpErrorIsc1ComponentChecksum
   **/
  public char LocImpErrorIsc1ComponentChecksum_AS;
  /**
   * Attribute for: LocImpErrorIsc1ComponentChecksum
   * Domain: Text
   * Length: 15
   * Varying Length: N
   **/
  public String LocImpErrorIsc1ComponentChecksum;
  // Entity View: LOC_ERROR_MSG
  //        Type: ISC1_COMPONENT
  /**
   * Attribute missing flag for: LocErrorMsgIsc1ComponentSeverityCode
   **/
  public char LocErrorMsgIsc1ComponentSeverityCode_AS;
  /**
   * Attribute for: LocErrorMsgIsc1ComponentSeverityCode
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String LocErrorMsgIsc1ComponentSeverityCode;
  /**
   * Attribute missing flag for: LocErrorMsgIsc1ComponentMessageTx
   **/
  public char LocErrorMsgIsc1ComponentMessageTx_AS;
  /**
   * Attribute for: LocErrorMsgIsc1ComponentMessageTx
   * Domain: Text
   * Length: 512
   * Varying Length: Y
   **/
  public String LocErrorMsgIsc1ComponentMessageTx;
  // Entity View: LOC_ERROR
  //        Type: ISC1_COMPONENT
  /**
   * Attribute missing flag for: LocErrorIsc1ComponentSeverityCode
   **/
  public char LocErrorIsc1ComponentSeverityCode_AS;
  /**
   * Attribute for: LocErrorIsc1ComponentSeverityCode
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String LocErrorIsc1ComponentSeverityCode;
  /**
   * Attribute missing flag for: LocErrorIsc1ComponentRollbackIndicator
   **/
  public char LocErrorIsc1ComponentRollbackIndicator_AS;
  /**
   * Attribute for: LocErrorIsc1ComponentRollbackIndicator
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String LocErrorIsc1ComponentRollbackIndicator;
  /**
   * Attribute missing flag for: LocErrorIsc1ComponentOriginServid
   **/
  public char LocErrorIsc1ComponentOriginServid_AS;
  /**
   * Attribute for: LocErrorIsc1ComponentOriginServid
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double LocErrorIsc1ComponentOriginServid;
  /**
   * Attribute missing flag for: LocErrorIsc1ComponentContextString
   **/
  public char LocErrorIsc1ComponentContextString_AS;
  /**
   * Attribute for: LocErrorIsc1ComponentContextString
   * Domain: Text
   * Length: 512
   * Varying Length: Y
   **/
  public String LocErrorIsc1ComponentContextString;
  /**
   * Attribute missing flag for: LocErrorIsc1ComponentReturnCode
   **/
  public char LocErrorIsc1ComponentReturnCode_AS;
  /**
   * Attribute for: LocErrorIsc1ComponentReturnCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocErrorIsc1ComponentReturnCode;
  /**
   * Attribute missing flag for: LocErrorIsc1ComponentReasonCode
   **/
  public char LocErrorIsc1ComponentReasonCode_AS;
  /**
   * Attribute for: LocErrorIsc1ComponentReasonCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocErrorIsc1ComponentReasonCode;
  /**
   * Attribute missing flag for: LocErrorIsc1ComponentChecksum
   **/
  public char LocErrorIsc1ComponentChecksum_AS;
  /**
   * Attribute for: LocErrorIsc1ComponentChecksum
   * Domain: Text
   * Length: 15
   * Varying Length: N
   **/
  public String LocErrorIsc1ComponentChecksum;
  /**
   * Default Constructor
   **/
  
  public CYYY9831_LA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public CYYY9831_LA(CYYY9831_LA orig)
  {
    LocImpErrorIsc1ComponentSeverityCode_AS = orig.LocImpErrorIsc1ComponentSeverityCode_AS;
    LocImpErrorIsc1ComponentSeverityCode = orig.LocImpErrorIsc1ComponentSeverityCode;
    LocImpErrorIsc1ComponentRollbackIndicator_AS = orig.LocImpErrorIsc1ComponentRollbackIndicator_AS;
    LocImpErrorIsc1ComponentRollbackIndicator = orig.LocImpErrorIsc1ComponentRollbackIndicator;
    LocImpErrorIsc1ComponentOriginServid_AS = orig.LocImpErrorIsc1ComponentOriginServid_AS;
    LocImpErrorIsc1ComponentOriginServid = orig.LocImpErrorIsc1ComponentOriginServid;
    LocImpErrorIsc1ComponentContextString_AS = orig.LocImpErrorIsc1ComponentContextString_AS;
    LocImpErrorIsc1ComponentContextString = orig.LocImpErrorIsc1ComponentContextString;
    LocImpErrorIsc1ComponentReturnCode_AS = orig.LocImpErrorIsc1ComponentReturnCode_AS;
    LocImpErrorIsc1ComponentReturnCode = orig.LocImpErrorIsc1ComponentReturnCode;
    LocImpErrorIsc1ComponentReasonCode_AS = orig.LocImpErrorIsc1ComponentReasonCode_AS;
    LocImpErrorIsc1ComponentReasonCode = orig.LocImpErrorIsc1ComponentReasonCode;
    LocImpErrorIsc1ComponentImplementationId_AS = orig.LocImpErrorIsc1ComponentImplementationId_AS;
    LocImpErrorIsc1ComponentImplementationId = orig.LocImpErrorIsc1ComponentImplementationId;
    LocImpErrorIsc1ComponentSpecificationId_AS = orig.LocImpErrorIsc1ComponentSpecificationId_AS;
    LocImpErrorIsc1ComponentSpecificationId = orig.LocImpErrorIsc1ComponentSpecificationId;
    LocImpErrorIsc1ComponentDialectCd_AS = orig.LocImpErrorIsc1ComponentDialectCd_AS;
    LocImpErrorIsc1ComponentDialectCd = orig.LocImpErrorIsc1ComponentDialectCd;
    LocImpErrorIsc1ComponentChecksum_AS = orig.LocImpErrorIsc1ComponentChecksum_AS;
    LocImpErrorIsc1ComponentChecksum = orig.LocImpErrorIsc1ComponentChecksum;
    LocErrorMsgIsc1ComponentSeverityCode_AS = orig.LocErrorMsgIsc1ComponentSeverityCode_AS;
    LocErrorMsgIsc1ComponentSeverityCode = orig.LocErrorMsgIsc1ComponentSeverityCode;
    LocErrorMsgIsc1ComponentMessageTx_AS = orig.LocErrorMsgIsc1ComponentMessageTx_AS;
    LocErrorMsgIsc1ComponentMessageTx = orig.LocErrorMsgIsc1ComponentMessageTx;
    LocErrorIsc1ComponentSeverityCode_AS = orig.LocErrorIsc1ComponentSeverityCode_AS;
    LocErrorIsc1ComponentSeverityCode = orig.LocErrorIsc1ComponentSeverityCode;
    LocErrorIsc1ComponentRollbackIndicator_AS = orig.LocErrorIsc1ComponentRollbackIndicator_AS;
    LocErrorIsc1ComponentRollbackIndicator = orig.LocErrorIsc1ComponentRollbackIndicator;
    LocErrorIsc1ComponentOriginServid_AS = orig.LocErrorIsc1ComponentOriginServid_AS;
    LocErrorIsc1ComponentOriginServid = orig.LocErrorIsc1ComponentOriginServid;
    LocErrorIsc1ComponentContextString_AS = orig.LocErrorIsc1ComponentContextString_AS;
    LocErrorIsc1ComponentContextString = orig.LocErrorIsc1ComponentContextString;
    LocErrorIsc1ComponentReturnCode_AS = orig.LocErrorIsc1ComponentReturnCode_AS;
    LocErrorIsc1ComponentReturnCode = orig.LocErrorIsc1ComponentReturnCode;
    LocErrorIsc1ComponentReasonCode_AS = orig.LocErrorIsc1ComponentReasonCode_AS;
    LocErrorIsc1ComponentReasonCode = orig.LocErrorIsc1ComponentReasonCode;
    LocErrorIsc1ComponentChecksum_AS = orig.LocErrorIsc1ComponentChecksum_AS;
    LocErrorIsc1ComponentChecksum = orig.LocErrorIsc1ComponentChecksum;
  }
  /**
   * Static instance creator function
   **/
  
  public static CYYY9831_LA getInstance()
  {
    return new CYYY9831_LA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new CYYY9831_LA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    LocImpErrorIsc1ComponentSeverityCode_AS = ' ';
    LocImpErrorIsc1ComponentSeverityCode = " ";
    LocImpErrorIsc1ComponentRollbackIndicator_AS = ' ';
    LocImpErrorIsc1ComponentRollbackIndicator = " ";
    LocImpErrorIsc1ComponentOriginServid_AS = ' ';
    LocImpErrorIsc1ComponentOriginServid = 0.0;
    LocImpErrorIsc1ComponentContextString_AS = ' ';
    LocImpErrorIsc1ComponentContextString = "";
    LocImpErrorIsc1ComponentReturnCode_AS = ' ';
    LocImpErrorIsc1ComponentReturnCode = 0;
    LocImpErrorIsc1ComponentReasonCode_AS = ' ';
    LocImpErrorIsc1ComponentReasonCode = 0;
    LocImpErrorIsc1ComponentImplementationId_AS = ' ';
    LocImpErrorIsc1ComponentImplementationId = 0.0;
    LocImpErrorIsc1ComponentSpecificationId_AS = ' ';
    LocImpErrorIsc1ComponentSpecificationId = 0.0;
    LocImpErrorIsc1ComponentDialectCd_AS = ' ';
    LocImpErrorIsc1ComponentDialectCd = "  ";
    LocImpErrorIsc1ComponentChecksum_AS = ' ';
    LocImpErrorIsc1ComponentChecksum = "               ";
    LocErrorMsgIsc1ComponentSeverityCode_AS = ' ';
    LocErrorMsgIsc1ComponentSeverityCode = " ";
    LocErrorMsgIsc1ComponentMessageTx_AS = ' ';
    LocErrorMsgIsc1ComponentMessageTx = "";
    LocErrorIsc1ComponentSeverityCode_AS = ' ';
    LocErrorIsc1ComponentSeverityCode = " ";
    LocErrorIsc1ComponentRollbackIndicator_AS = ' ';
    LocErrorIsc1ComponentRollbackIndicator = " ";
    LocErrorIsc1ComponentOriginServid_AS = ' ';
    LocErrorIsc1ComponentOriginServid = 0.0;
    LocErrorIsc1ComponentContextString_AS = ' ';
    LocErrorIsc1ComponentContextString = "";
    LocErrorIsc1ComponentReturnCode_AS = ' ';
    LocErrorIsc1ComponentReturnCode = 0;
    LocErrorIsc1ComponentReasonCode_AS = ' ';
    LocErrorIsc1ComponentReasonCode = 0;
    LocErrorIsc1ComponentChecksum_AS = ' ';
    LocErrorIsc1ComponentChecksum = "               ";
  }
}

package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: CYYY9831_OA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:09:39
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF EXPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: CYYY9831_OA
 **/
public class CYYY9831_OA extends ViewBase implements IExportView, Serializable
{
  // Entity View: EXP_ERROR
  //        Type: IYY1_COMPONENT
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentSeverityCode
   **/
  public char ExpErrorIyy1ComponentSeverityCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentSeverityCode
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentSeverityCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentRollbackIndicator
   **/
  public char ExpErrorIyy1ComponentRollbackIndicator_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentRollbackIndicator
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentRollbackIndicator;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentOriginServid
   **/
  public char ExpErrorIyy1ComponentOriginServid_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentOriginServid
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double ExpErrorIyy1ComponentOriginServid;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentContextString
   **/
  public char ExpErrorIyy1ComponentContextString_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentContextString
   * Domain: Text
   * Length: 512
   * Varying Length: Y
   **/
  public String ExpErrorIyy1ComponentContextString;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentReturnCode
   **/
  public char ExpErrorIyy1ComponentReturnCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentReturnCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ExpErrorIyy1ComponentReturnCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentReasonCode
   **/
  public char ExpErrorIyy1ComponentReasonCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentReasonCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ExpErrorIyy1ComponentReasonCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentChecksum
   **/
  public char ExpErrorIyy1ComponentChecksum_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentChecksum
   * Domain: Text
   * Length: 15
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentChecksum;
  /**
   * Default Constructor
   **/
  
  public CYYY9831_OA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public CYYY9831_OA(CYYY9831_OA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static CYYY9831_OA getInstance()
  {
    return new CYYY9831_OA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new CYYY9831_OA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    ExpErrorIyy1ComponentSeverityCode_AS = ' ';
    ExpErrorIyy1ComponentSeverityCode = " ";
    ExpErrorIyy1ComponentRollbackIndicator_AS = ' ';
    ExpErrorIyy1ComponentRollbackIndicator = " ";
    ExpErrorIyy1ComponentOriginServid_AS = ' ';
    ExpErrorIyy1ComponentOriginServid = 0.0;
    ExpErrorIyy1ComponentContextString_AS = ' ';
    ExpErrorIyy1ComponentContextString = "";
    ExpErrorIyy1ComponentReturnCode_AS = ' ';
    ExpErrorIyy1ComponentReturnCode = 0;
    ExpErrorIyy1ComponentReasonCode_AS = ' ';
    ExpErrorIyy1ComponentReasonCode = 0;
    ExpErrorIyy1ComponentChecksum_AS = ' ';
    ExpErrorIyy1ComponentChecksum = "               ";
  }
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    throw new RuntimeException("can only execute setFromVDF for a Procedure Step.");
  }
  
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    throw new RuntimeException("can only execute getVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IExportView orig)
  {
    this.copyFrom((CYYY9831_OA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(CYYY9831_OA orig)
  {
    ExpErrorIyy1ComponentSeverityCode_AS = orig.ExpErrorIyy1ComponentSeverityCode_AS;
    ExpErrorIyy1ComponentSeverityCode = orig.ExpErrorIyy1ComponentSeverityCode;
    ExpErrorIyy1ComponentRollbackIndicator_AS = orig.ExpErrorIyy1ComponentRollbackIndicator_AS;
    ExpErrorIyy1ComponentRollbackIndicator = orig.ExpErrorIyy1ComponentRollbackIndicator;
    ExpErrorIyy1ComponentOriginServid_AS = orig.ExpErrorIyy1ComponentOriginServid_AS;
    ExpErrorIyy1ComponentOriginServid = orig.ExpErrorIyy1ComponentOriginServid;
    ExpErrorIyy1ComponentContextString_AS = orig.ExpErrorIyy1ComponentContextString_AS;
    ExpErrorIyy1ComponentContextString = orig.ExpErrorIyy1ComponentContextString;
    ExpErrorIyy1ComponentReturnCode_AS = orig.ExpErrorIyy1ComponentReturnCode_AS;
    ExpErrorIyy1ComponentReturnCode = orig.ExpErrorIyy1ComponentReturnCode;
    ExpErrorIyy1ComponentReasonCode_AS = orig.ExpErrorIyy1ComponentReasonCode_AS;
    ExpErrorIyy1ComponentReasonCode = orig.ExpErrorIyy1ComponentReasonCode;
    ExpErrorIyy1ComponentChecksum_AS = orig.ExpErrorIyy1ComponentChecksum_AS;
    ExpErrorIyy1ComponentChecksum = orig.ExpErrorIyy1ComponentChecksum;
  }
}
