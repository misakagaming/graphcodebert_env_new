
package gen.ort.yyy;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: CYY1A131_SERVER_INIT             Date: 2023/07/05
//    Target OS:   JVM                       Time: 15:07:37
//    Target DBMS: JDBC                      User: HakanBal
//    Access Method: JDBC           
//
//    Generation options:
//    Debug trace option selected
//    Data modeling constraint enforcement not selected
//    Optimized import view initialization not selected
//    Enforce default values with DBMS not selected
//    Init unspecified optional fields to NULL not selected
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;

import com.ca.gen.abrt.*;
import com.ca.gen.abrt.functions.*;
import com.ca.gen.abrt.cascade.*;
import com.ca.gen.abrt.trace.*;
import com.ca.gen.exits.common.*;
import com.ca.gen.odc.*;

public class CYY1A131 extends ABBase
{
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // EXPORT VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  CYY1A131_OA w_oa;
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // ACTION BLOCK IMPORT/EXPORT VIEWS CLASS VARIABLES
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // Data View Group: DATETIMESTAMP_OA
  // Entity View: EXPORT
  //        Type: DATETIMESTAMP
  DateAttr datetimestamp_oa_ExportDatetimestampDateValue_FP_006 = DateAttr.getInstance();
  // Data View Group: DATETIMESTAMP_IA
  // Entity View: IMPORT
  //        Type: DATETIMESTAMP
  TimestampAttr datetimestamp_ia_ImportDatetimestampTimestampValue_FP_007 = TimestampAttr.getInstance();
  // Data View Group: TIMETIMESTAMP_OA
  // Entity View: EXPORT
  //        Type: TIMETIMESTAMP
  TimeAttr timetimestamp_oa_ExportTimetimestampTimeValue_FP_008 = TimeAttr.getInstance();
  // Data View Group: TIMETIMESTAMP_IA
  // Entity View: IMPORT
  //        Type: TIMETIMESTAMP
  TimestampAttr timetimestamp_ia_ImportTimetimestampTimestampValue_FP_009 = TimestampAttr.getInstance();
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // MISC DECLARATIONS AND PROTOTYPES 
  //    FOLLOW AS NEEDED:             
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  boolean func_0022020240_esc_flag;
  PadView padview[] = new PadView [8];
  int trace_ret_code;
  PadText padtext[] = initPadText();
  public PadText [] initPadText()
  {
    PadText [] result = new PadText [PADTEXT_SIZE];
    result[0] = PadText.getInstance(   0,"+->   CYY1A131_SERVER_INIT              07/05/2023  15:07");
    result[1] = PadText.getInstance(   0,"!       EXPORTS:");
    result[2] = PadText.getInstance(   0,"!         Work View exp_reference iyy1_server_data (Transient, Export only)");
    result[3] = PadText.getInstance(   0,"!           server_date");
    result[4] = PadText.getInstance(   0,"!           server_time");
    result[5] = PadText.getInstance(   0,"!           reference_id");
    result[6] = PadText.getInstance(   0,"!           server_timestamp");
    result[7] = PadText.getInstance(   0,"!");
    result[8] = PadText.getInstance(   0,"!     PROCEDURE STATEMENTS");
    result[9] = PadText.getInstance(   0,"!");
    result[10] = PadText.getInstance(   1,"!  NOTE: ");
    result[11] = PadText.getInstance(   1,"!  Please review explanation for purpose.");
    result[12] = PadText.getInstance(   1,"!  ");
    result[13] = PadText.getInstance(   2,"!  NOTE: ");
    result[14] = PadText.getInstance(   2,"!  RELEASE HISTORY");
    result[15] = PadText.getInstance(   2,"!  01_00 23-02-1998 New release");
    result[16] = PadText.getInstance(   3,"!   ");
    result[17] = PadText.getInstance(   4,"!  SET exp_reference iyy1_server_data server_timestamp TO CURRENT_TIMESTAMP ");
    result[18] = PadText.getInstance(   5,
      "!  SET exp_reference iyy1_server_data server_date TO datetimestamp(exp_reference iyy1_server_data server_timestamp) ");
    result[19] = PadText.getInstance(   6,
      "!  SET exp_reference iyy1_server_data server_time TO timetimestamp(exp_reference iyy1_server_data server_timestamp) ");
    result[20] = PadText.getInstance(   7,
      "!  SET exp_reference iyy1_server_data reference_id TO exp_reference iyy1_server_data server_timestamp ");
    result[21] = PadText.getInstance(   0,"+---");
    result[22] = PadText.getInstance(PadText.LASTLINE,"************************* BOTTOM OF DATA *************************");
    return result;
  }
  final static int PADTEXT_SIZE = 23;
  //       +->   CYY1A131_SERVER_INIT              07/05/2023  15:07
  //       !       EXPORTS:
  //       !         Work View exp_reference iyy1_server_data (Transient, Export only)
  //       !           server_date
  //       !           server_time
  //       !           reference_id
  //       !           server_timestamp
  //       !
  //       !     PROCEDURE STATEMENTS
  //       !
  //     1 !  NOTE: 
  //     1 !  Please review explanation for purpose.
  //     1 !  
  //     2 !  NOTE: 
  //     2 !  RELEASE HISTORY
  //     2 !  01_00 23-02-1998 New release
  //     3 !   
  //     4 !  SET exp_reference iyy1_server_data server_timestamp TO CURRENT_TIMESTAMP 
  //     5 !  SET exp_reference iyy1_server_data server_date TO datetimestamp(exp_reference iyy1_server_data server_timestamp) 
  //     6 !  SET exp_reference iyy1_server_data server_time TO timetimestamp(exp_reference iyy1_server_data server_timestamp) 
  //     7 !  SET exp_reference iyy1_server_data reference_id TO exp_reference iyy1_server_data server_timestamp 
  //       +---
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  //  CONSTRUCTOR FOR THE CLASS       
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  public CYY1A131()
  {
    iefCGenRlse = "CA Gen 8.6";
    ssCopyright = "Copyright (c) 2023 CA Technologies. All rights reserved.";
    iefCGenDate = "2023/07/05";
    iefCGenTime = "15:07:37";
    iefCGenEncy = "9.2.A6";
    iefCGenUserId = "HakanBal";
    iefCGenModel = "N8I_ORT_YYY_0112_TEMPLATE";
    iefCGenSubset = "ALL";
    iefCGenName = "CYY1A131_SERVER_INIT";
    nestingLevel = 0;
    valChkDeadlockTimeout = false;
    valChkDBError = false;
  }
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // ACTION BLOCK FUNCTION DECLARATIONS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  public void CYY1A131( Object in_runtime_parm1, 
  	IRuntimePStepContext in_runtime_parm2, 
  	GlobData in_globdata, 
  	CYY1A131_OA export_view )
  {
    iefRuntimeParm1 = in_runtime_parm1;
    iefRuntimeParm2 = in_runtime_parm2;
    globdata = in_globdata;
    w_oa = export_view;
    _CYY1A131();
  }
  
  private void _CYY1A131()
  {
    
    ++(nestingLevel);
    try {
      f_22020240_init();
      f_22020240();
    } catch( ABException e ) {
    } finally {
      --(nestingLevel);
    }
    String last_stmt_num_saved = globdata.getStateData().getLastStatementNumber();
    globdata.getStateData().setLastStatementNumber( "9999999999" );
    try {
      f_0_trace();
    } catch( ABException e ) {
    }
    globdata.getStateData().setLastStatementNumber( last_stmt_num_saved );
  }
  public void f_22020240()
  	throws ABException
  {
    func_0022020240_esc_flag = false;
    globdata.getStateData().setCurrentABId( "0022020240" );
    globdata.getStateData().setCurrentABName( "CYY1A131_SERVER_INIT" );
    padview_init();
    globdata.getStateData().setLastStatementNumber( "0000000000" );
    f_0_trace();
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    Please review explanation for purpose.                          
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    RELEASE HISTORY                                                 
    //    01_00 23-02-1998 New release                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    globdata.getStateData().setLastStatementNumber( "0000000004" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      if ( todaysTimestamp == null )
      {
        todaysTimestamp = StringAttr.getInstance();
      }
      if ( todaysTime == null )
      {
        todaysTime = IntAttr.getInstance();
      }
      if ( todaysDate == null )
      {
        todaysDate = IntAttr.getInstance();
      }
      TIRDAT2.getSystemTimestamp(todaysTimestamp);
      TIRDAT2.getSystemDate(todaysDate, TIRDAT2.DF_YYYYMMDD);
      TIRDAT2.getSystemTime(todaysTime, TIRDAT2.TF_HHMMSS);
      w_oa.ExpReferenceIyy1ServerDataServerTimestamp = TimestampAttr.valueOf(todaysTimestamp.get());
    }
    globdata.getStateData().setLastStatementNumber( "0000000005" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      BaseAttr.reset(datetimestamp_oa_ExportDatetimestampDateValue_FP_006);
      globdata.getErrorData().setErrorEncounteredSW( ErrorData.NO_ERROR_FOUND_SW );
      TIRFDTTS.TIRFDTTS(iefRuntimeParm1, iefRuntimeParm2, globdata, w_oa.ExpReferenceIyy1ServerDataServerTimestamp, 
        datetimestamp_oa_ExportDatetimestampDateValue_FP_006);
      if ( ((!(globdata.getErrorData().getStatus().equals( ErrorData.NONE_SF ))) || (globdata.getErrorData().getErrorEncounteredSW() 
        != ErrorData.NO_ERROR_FOUND_SW)) || (globdata.getErrorData().getViewOverflowSW() != ErrorData.NO_ERROR_FOUND_SW) )
      {
        throw new ABException();
      }
      w_oa.ExpReferenceIyy1ServerDataServerDate = DateAttr.valueOf(datetimestamp_oa_ExportDatetimestampDateValue_FP_006.get());
    }
    globdata.getStateData().setLastStatementNumber( "0000000006" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      BaseAttr.reset(timetimestamp_oa_ExportTimetimestampTimeValue_FP_008);
      globdata.getErrorData().setErrorEncounteredSW( ErrorData.NO_ERROR_FOUND_SW );
      TIRFTMTS.TIRFTMTS(iefRuntimeParm1, iefRuntimeParm2, globdata, w_oa.ExpReferenceIyy1ServerDataServerTimestamp, 
        timetimestamp_oa_ExportTimetimestampTimeValue_FP_008);
      if ( ((!(globdata.getErrorData().getStatus().equals( ErrorData.NONE_SF ))) || (globdata.getErrorData().getErrorEncounteredSW() 
        != ErrorData.NO_ERROR_FOUND_SW)) || (globdata.getErrorData().getViewOverflowSW() != ErrorData.NO_ERROR_FOUND_SW) )
      {
        throw new ABException();
      }
      w_oa.ExpReferenceIyy1ServerDataServerTime = TimeAttr.valueOf(timetimestamp_oa_ExportTimetimestampTimeValue_FP_008.get());
    }
    globdata.getStateData().setLastStatementNumber( "0000000007" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpReferenceIyy1ServerDataReferenceId = TimestampAttr.valueOf(w_oa.ExpReferenceIyy1ServerDataServerTimestamp);
    }
  }
  
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // SUBORDINATE FUNCTIONS
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // INITIALIZATION UTILITY FUNCTIONS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  public void f_22020240_init()
  	throws ABException
  {
    if ( nestingLevel < 2 )
    {
    }
    w_oa.ExpReferenceIyy1ServerDataServerDate = 00000000;
    w_oa.ExpReferenceIyy1ServerDataServerTime = 00000000;
    w_oa.ExpReferenceIyy1ServerDataReferenceId = "00000000000000000000";
    w_oa.ExpReferenceIyy1ServerDataServerTimestamp = "00000000000000000000";
  }
  
  public void f_0_trace()
  	throws ABException
  {
    trace_ret_code = TIRTRCE.TIRTRCE(iefRuntimeParm1, iefRuntimeParm2, globdata, padtext, padview);
    if ( trace_ret_code == 20 )
    {
      throw new ABException();
    }
  }
  
  public void padview_init()
  {
padview[0] = PadView.getInstance("EXPORT                          ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_oa, 
      "w_oa");
    padview[1] = PadView.getInstance("EXP_REFERENCE                   ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_oa, 
      null);
    padview[2] = PadView.getInstance("IYY1_SERVER_DATA                ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, w_oa,
       null);
    padview[3] = PadView.getInstance("SERVER_DATE                     ", 8, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_DATE, 
      w_oa, "ExpReferenceIyy1ServerDataServerDate");
    padview[4] = PadView.getInstance("SERVER_TIME                     ", 6, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TIME, 
      w_oa, "ExpReferenceIyy1ServerDataServerTime");
    padview[5] = PadView.getInstance("REFERENCE_ID                    ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_oa, "ExpReferenceIyy1ServerDataReferenceId");
    padview[6] = PadView.getInstance("SERVER_TIMESTAMP                ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_oa, "ExpReferenceIyy1ServerDataServerTimestamp");
    padview[7] = PadView.getInstance("******** BOTTOM OF DATA ********", 0, 0, 0, (short)0, PadView.VT_END, PadView.DT_NONE, w_oa, 
      null);
  }
}// end class


package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: CYY1A131_OA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:09:46
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF EXPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: CYY1A131_OA
 **/
public class CYY1A131_OA extends ViewBase implements IExportView, Serializable
{
  // Entity View: EXP_REFERENCE
  //        Type: IYY1_SERVER_DATA
  /**
   * Attribute missing flag for: ExpReferenceIyy1ServerDataServerDate
   **/
  public char ExpReferenceIyy1ServerDataServerDate_AS;
  /**
   * Attribute for: ExpReferenceIyy1ServerDataServerDate
   * Domain: Date
   * Length: 8
   **/
  public int ExpReferenceIyy1ServerDataServerDate;
  /**
   * Attribute missing flag for: ExpReferenceIyy1ServerDataServerTime
   **/
  public char ExpReferenceIyy1ServerDataServerTime_AS;
  /**
   * Attribute for: ExpReferenceIyy1ServerDataServerTime
   * Domain: Time
   * Length: 6
   **/
  public int ExpReferenceIyy1ServerDataServerTime;
  /**
   * Attribute missing flag for: ExpReferenceIyy1ServerDataReferenceId
   **/
  public char ExpReferenceIyy1ServerDataReferenceId_AS;
  /**
   * Attribute for: ExpReferenceIyy1ServerDataReferenceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String ExpReferenceIyy1ServerDataReferenceId;
  /**
   * Attribute missing flag for: ExpReferenceIyy1ServerDataServerTimestamp
   **/
  public char ExpReferenceIyy1ServerDataServerTimestamp_AS;
  /**
   * Attribute for: ExpReferenceIyy1ServerDataServerTimestamp
   * Domain: Timestamp
   * Length: 20
   **/
  public String ExpReferenceIyy1ServerDataServerTimestamp;
  /**
   * Default Constructor
   **/
  
  public CYY1A131_OA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public CYY1A131_OA(CYY1A131_OA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static CYY1A131_OA getInstance()
  {
    return new CYY1A131_OA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new CYY1A131_OA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    ExpReferenceIyy1ServerDataServerDate_AS = ' ';
    ExpReferenceIyy1ServerDataServerDate = 00000000;
    ExpReferenceIyy1ServerDataServerTime_AS = ' ';
    ExpReferenceIyy1ServerDataServerTime = 00000000;
    ExpReferenceIyy1ServerDataReferenceId_AS = ' ';
    ExpReferenceIyy1ServerDataReferenceId = "00000000000000000000";
    ExpReferenceIyy1ServerDataServerTimestamp_AS = ' ';
    ExpReferenceIyy1ServerDataServerTimestamp = "00000000000000000000";
  }
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    throw new RuntimeException("can only execute setFromVDF for a Procedure Step.");
  }
  
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    throw new RuntimeException("can only execute getVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IExportView orig)
  {
    this.copyFrom((CYY1A131_OA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(CYY1A131_OA orig)
  {
    ExpReferenceIyy1ServerDataServerDate_AS = orig.ExpReferenceIyy1ServerDataServerDate_AS;
    ExpReferenceIyy1ServerDataServerDate = orig.ExpReferenceIyy1ServerDataServerDate;
    ExpReferenceIyy1ServerDataServerTime_AS = orig.ExpReferenceIyy1ServerDataServerTime_AS;
    ExpReferenceIyy1ServerDataServerTime = orig.ExpReferenceIyy1ServerDataServerTime;
    ExpReferenceIyy1ServerDataReferenceId_AS = orig.ExpReferenceIyy1ServerDataReferenceId_AS;
    ExpReferenceIyy1ServerDataReferenceId = orig.ExpReferenceIyy1ServerDataReferenceId;
    ExpReferenceIyy1ServerDataServerTimestamp_AS = orig.ExpReferenceIyy1ServerDataServerTimestamp_AS;
    ExpReferenceIyy1ServerDataServerTimestamp = orig.ExpReferenceIyy1ServerDataServerTimestamp;
  }
}
