
package gen.ort.yyy;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: MYY10411_XML_CREATE              Date: 2023/07/05
//    Target OS:   JVM                       Time: 15:10:03
//    Target DBMS: JDBC                      User: HakanBal
//    Access Method: JDBC           
//
//    Generation options:
//    Debug trace option selected
//    Data modeling constraint enforcement not selected
//    Optimized import view initialization not selected
//    Enforce default values with DBMS not selected
//    Init unspecified optional fields to NULL not selected
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;

import com.ca.gen.abrt.*;
import com.ca.gen.abrt.functions.*;
import com.ca.gen.abrt.cascade.*;
import com.ca.gen.abrt.trace.*;
import com.ca.gen.exits.common.*;
import com.ca.gen.odc.*;

public class MYY10411 extends ABBase
{
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // IMPORT VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  MYY10411_IA w_ia;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // EXPORT VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  MYY10411_OA w_oa;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // LOCAL VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  MYY10411_LA w_la;
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // ACTION BLOCK IMPORT/EXPORT VIEWS CLASS VARIABLES
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  gen.ort.yyy.CYYY0411_IA cyyy0411_ia;
  gen.ort.yyy.CYYY0411_OA cyyy0411_oa;
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // MISC DECLARATIONS AND PROTOTYPES 
  //    FOLLOW AS NEEDED:             
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  boolean func_0022020157_esc_flag;
  PadView padview[] = new PadView [46];
  int trace_ret_code;
  PadText padtext[] = initPadText();
  public PadText [] initPadText()
  {
    PadText [] result = new PadText [PADTEXT_SIZE];
    result[0] = PadText.getInstance(   0,"+->   MYY10411_XML_CREATE               07/05/2023  15:10");
    result[1] = PadText.getInstance(   0,"!       IMPORTS:");
    result[2] = PadText.getInstance(   0,"!         Entity View imp iyy1_type (Transient, Mandatory, Import only)");
    result[3] = PadText.getInstance(   0,"!           tkey_attr_text");
    result[4] = PadText.getInstance(   0,"!           tsearch_attr_text");
    result[5] = PadText.getInstance(   0,"!           tother_attr_text");
    result[6] = PadText.getInstance(   0,"!           tother_attr_date");
    result[7] = PadText.getInstance(   0,"!           tother_attr_time");
    result[8] = PadText.getInstance(   0,"!           tother_attr_amount");
    result[9] = PadText.getInstance(   0,"!           tinstance_id");
    result[10] = PadText.getInstance(   0,"!           treference_id");
    result[11] = PadText.getInstance(   0,"!           tcreate_user_id");
    result[12] = PadText.getInstance(   0,"!           tupdate_user_id");
    result[13] = PadText.getInstance(   0,"!       EXPORTS:");
    result[14] = PadText.getInstance(   0,"!         Work View exp canam_xml (Transient, Export only)");
    result[15] = PadText.getInstance(   0,"!           xml_buffer");
    result[16] = PadText.getInstance(   0,"!         Work View exp_error canam_xml (Transient, Export only)");
    result[17] = PadText.getInstance(   0,"!           xml_return_code");
    result[18] = PadText.getInstance(   0,"!           xml_message");
    result[19] = PadText.getInstance(   0,"!           xml_position");
    result[20] = PadText.getInstance(   0,"!           xml_source");
    result[21] = PadText.getInstance(   0,"!         Work View exp_error iyy1_component (Transient, Export only)");
    result[22] = PadText.getInstance(   0,"!           severity_code");
    result[23] = PadText.getInstance(   0,"!           rollback_indicator");
    result[24] = PadText.getInstance(   0,"!           origin_servid");
    result[25] = PadText.getInstance(   0,"!           context_string");
    result[26] = PadText.getInstance(   0,"!           return_code");
    result[27] = PadText.getInstance(   0,"!           reason_code");
    result[28] = PadText.getInstance(   0,"!           checksum");
    result[29] = PadText.getInstance(   0,"!       LOCALS:");
    result[30] = PadText.getInstance(   0,"!         Entity View loc_imp type");
    result[31] = PadText.getInstance(   0,"!           tkey_attr_text");
    result[32] = PadText.getInstance(   0,"!           tsearch_attr_text");
    result[33] = PadText.getInstance(   0,"!           tother_attr_text");
    result[34] = PadText.getInstance(   0,"!           tother_attr_date");
    result[35] = PadText.getInstance(   0,"!           tother_attr_time");
    result[36] = PadText.getInstance(   0,"!           tother_attr_amount");
    result[37] = PadText.getInstance(   0,"!           tinstance_id");
    result[38] = PadText.getInstance(   0,"!           treference_id");
    result[39] = PadText.getInstance(   0,"!           tcreate_user_id");
    result[40] = PadText.getInstance(   0,"!           tupdate_user_id");
    result[41] = PadText.getInstance(   0,"!");
    result[42] = PadText.getInstance(   0,"!     PROCEDURE STATEMENTS");
    result[43] = PadText.getInstance(   0,"!");
    result[44] = PadText.getInstance(   1,"!  NOTE: ");
    result[45] = PadText.getInstance(   1,"!  Check description for porpose");
    result[46] = PadText.getInstance(   1,"!  ");
    result[47] = PadText.getInstance(   2,"!  NOTE: ");
    result[48] = PadText.getInstance(   2,"!  RELEASE HISTORY");
    result[49] = PadText.getInstance(   2,"!  01_00 01-10-2009 New Release");
    result[50] = PadText.getInstance(   2,"!  ");
    result[51] = PadText.getInstance(   3,"!  NOTE: ");
    result[52] = PadText.getInstance(   3,"!  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    result[53] = PadText.getInstance(   3,"!  SET <loc imp*> TO <imp*>");
    result[54] = PadText.getInstance(   3,"!  ");
    result[55] = PadText.getInstance(   4,"!  SET loc_imp type tkey_attr_text TO imp iyy1_type tkey_attr_text ");
    result[56] = PadText.getInstance(   5,"!  SET loc_imp type tsearch_attr_text TO imp iyy1_type tsearch_attr_text ");
    result[57] = PadText.getInstance(   6,"!  SET loc_imp type tother_attr_text TO imp iyy1_type tother_attr_text ");
    result[58] = PadText.getInstance(   7,"!  SET loc_imp type tother_attr_date TO imp iyy1_type tother_attr_date ");
    result[59] = PadText.getInstance(   8,"!  SET loc_imp type tother_attr_time TO imp iyy1_type tother_attr_time ");
    result[60] = PadText.getInstance(   9,"!  SET loc_imp type tother_attr_amount TO imp iyy1_type tother_attr_amount ");
    result[61] = PadText.getInstance(  10,"!  SET loc_imp type tcreate_user_id TO imp iyy1_type tcreate_user_id ");
    result[62] = PadText.getInstance(  11,"!  SET loc_imp type tupdate_user_id TO imp iyy1_type tupdate_user_id ");
    result[63] = PadText.getInstance(  12,"!  SET loc_imp type tinstance_id TO imp iyy1_type tinstance_id ");
    result[64] = PadText.getInstance(  13,"!  SET loc_imp type treference_id TO imp iyy1_type treference_id ");
    result[65] = PadText.getInstance(  14,"!   ");
    result[66] = PadText.getInstance(  15,"!  NOTE: ");
    result[67] = PadText.getInstance(  15,"!  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    result[68] = PadText.getInstance(  15,"!  USE <implementation ab>");
    result[69] = PadText.getInstance(  15,"!  ");
    result[70] = PadText.getInstance(  16,"!  USE cyyy0411_xml_create");
    result[71] = PadText.getInstance(  16,"!     WHICH IMPORTS: Entity View loc_imp type TO Entity View imp type");
    result[72] = PadText.getInstance(  16,
      "!     WHICH EXPORTS: Work View exp_error iyy1_component FROM Work View exp_error iyy1_component");
    result[73] = PadText.getInstance(  16,"!                    Work View exp canam_xml FROM Work View exp canam_xml");
    result[74] = PadText.getInstance(  16,"!                    Work View exp_error canam_xml FROM Work View exp_error canam_xml");
    result[75] = PadText.getInstance(   0,"+---");
    result[76] = PadText.getInstance(PadText.LASTLINE,"************************* BOTTOM OF DATA *************************");
    return result;
  }
  final static int PADTEXT_SIZE = 77;
  //       +->   MYY10411_XML_CREATE               07/05/2023  15:10
  //       !       IMPORTS:
  //       !         Entity View imp iyy1_type (Transient, Mandatory, Import only)
  //       !           tkey_attr_text
  //       !           tsearch_attr_text
  //       !           tother_attr_text
  //       !           tother_attr_date
  //       !           tother_attr_time
  //       !           tother_attr_amount
  //       !           tinstance_id
  //       !           treference_id
  //       !           tcreate_user_id
  //       !           tupdate_user_id
  //       !       EXPORTS:
  //       !         Work View exp canam_xml (Transient, Export only)
  //       !           xml_buffer
  //       !         Work View exp_error canam_xml (Transient, Export only)
  //       !           xml_return_code
  //       !           xml_message
  //       !           xml_position
  //       !           xml_source
  //       !         Work View exp_error iyy1_component (Transient, Export only)
  //       !           severity_code
  //       !           rollback_indicator
  //       !           origin_servid
  //       !           context_string
  //       !           return_code
  //       !           reason_code
  //       !           checksum
  //       !       LOCALS:
  //       !         Entity View loc_imp type
  //       !           tkey_attr_text
  //       !           tsearch_attr_text
  //       !           tother_attr_text
  //       !           tother_attr_date
  //       !           tother_attr_time
  //       !           tother_attr_amount
  //       !           tinstance_id
  //       !           treference_id
  //       !           tcreate_user_id
  //       !           tupdate_user_id
  //       !
  //       !     PROCEDURE STATEMENTS
  //       !
  //     1 !  NOTE: 
  //     1 !  Check description for porpose
  //     1 !  
  //     2 !  NOTE: 
  //     2 !  RELEASE HISTORY
  //     2 !  01_00 01-10-2009 New Release
  //     2 !  
  //     3 !  NOTE: 
  //     3 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  //     3 !  SET <loc imp*> TO <imp*>
  //     3 !  
  //     4 !  SET loc_imp type tkey_attr_text TO imp iyy1_type tkey_attr_text 
  //     5 !  SET loc_imp type tsearch_attr_text TO imp iyy1_type tsearch_attr_text 
  //     6 !  SET loc_imp type tother_attr_text TO imp iyy1_type tother_attr_text 
  //     7 !  SET loc_imp type tother_attr_date TO imp iyy1_type tother_attr_date 
  //     8 !  SET loc_imp type tother_attr_time TO imp iyy1_type tother_attr_time 
  //     9 !  SET loc_imp type tother_attr_amount TO imp iyy1_type tother_attr_amount 
  //    10 !  SET loc_imp type tcreate_user_id TO imp iyy1_type tcreate_user_id 
  //    11 !  SET loc_imp type tupdate_user_id TO imp iyy1_type tupdate_user_id 
  //    12 !  SET loc_imp type tinstance_id TO imp iyy1_type tinstance_id 
  //    13 !  SET loc_imp type treference_id TO imp iyy1_type treference_id 
  //    14 !   
  //    15 !  NOTE: 
  //    15 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  //    15 !  USE <implementation ab>
  //    15 !  
  //    16 !  USE cyyy0411_xml_create
  //    16 !     WHICH IMPORTS: Entity View loc_imp type TO Entity View imp type
  //    16 !     WHICH EXPORTS: Work View exp_error iyy1_component FROM Work View exp_error iyy1_component
  //    16 !                    Work View exp canam_xml FROM Work View exp canam_xml
  //    16 !                    Work View exp_error canam_xml FROM Work View exp_error canam_xml
  //       +---
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  //  CONSTRUCTOR FOR THE CLASS       
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  public MYY10411()
  {
    iefCGenRlse = "CA Gen 8.6";
    ssCopyright = "Copyright (c) 2023 CA Technologies. All rights reserved.";
    iefCGenDate = "2023/07/05";
    iefCGenTime = "15:10:03";
    iefCGenEncy = "9.2.A6";
    iefCGenUserId = "HakanBal";
    iefCGenModel = "N8I_ORT_YYY_0112_TEMPLATE";
    iefCGenSubset = "ALL";
    iefCGenName = "MYY10411_XML_CREATE";
    nestingLevel = 0;
    valChkDeadlockTimeout = false;
    valChkDBError = false;
  }
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // ACTION BLOCK FUNCTION DECLARATIONS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  public void MYY10411( Object in_runtime_parm1, 
  	IRuntimePStepContext in_runtime_parm2, 
  	GlobData in_globdata, 
  	MYY10411_IA import_view, 
  	MYY10411_OA export_view )
  {
    iefRuntimeParm1 = in_runtime_parm1;
    iefRuntimeParm2 = in_runtime_parm2;
    globdata = in_globdata;
    w_ia = import_view;
    w_oa = export_view;
    _MYY10411();
  }
  
  private void _MYY10411()
  {
    
    f_22020157_localAlloc("MYY10411_XML_CREATE");
    if ( globdata.getErrorData().getLastStatus() == ErrorData.IEF_ALLOCATION_ERROR_FL_LS )
    	return;
    
    ++(nestingLevel);
    try {
      f_22020157_init();
      f_22020157();
    } catch( ABException e ) {
    } finally {
      --(nestingLevel);
    }
    String last_stmt_num_saved = globdata.getStateData().getLastStatementNumber();
    globdata.getStateData().setLastStatementNumber( "9999999999" );
    try {
      f_0_trace();
    } catch( ABException e ) {
    }
    globdata.getStateData().setLastStatementNumber( last_stmt_num_saved );
  }
  public void f_22020157()
  	throws ABException
  {
    func_0022020157_esc_flag = false;
    globdata.getStateData().setCurrentABId( "0022020157" );
    globdata.getStateData().setCurrentABName( "MYY10411_XML_CREATE" );
    padview_init();
    globdata.getStateData().setLastStatementNumber( "0000000000" );
    f_0_trace();
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    Check description for porpose                                   
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    RELEASE HISTORY                                                 
    //    01_00 01-10-2009 New Release                                    
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
    //    !!!!!!!!!!!!                                                    
    //    SET <loc imp*> TO <imp*>                                        
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    globdata.getStateData().setLastStatementNumber( "0000000004" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpTypeTkeyAttrText = FixedStringAttr.valueOf(w_ia.ImpIyy1TypeTkeyAttrText, (short)4);
    }
    globdata.getStateData().setLastStatementNumber( "0000000005" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpTypeTsearchAttrText = FixedStringAttr.valueOf(w_ia.ImpIyy1TypeTsearchAttrText, (short)20);
    }
    globdata.getStateData().setLastStatementNumber( "0000000006" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpTypeTotherAttrText = FixedStringAttr.valueOf(w_ia.ImpIyy1TypeTotherAttrText, (short)2);
    }
    globdata.getStateData().setLastStatementNumber( "0000000007" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpTypeTotherAttrDate = DateAttr.valueOf(w_ia.ImpIyy1TypeTotherAttrDate);
    }
    globdata.getStateData().setLastStatementNumber( "0000000008" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpTypeTotherAttrTime = TimeAttr.valueOf(w_ia.ImpIyy1TypeTotherAttrTime);
    }
    globdata.getStateData().setLastStatementNumber( "0000000009" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpTypeTotherAttrAmount = BigDecimalAttr.valueOf(TIRBDTRU.truncateToBigDecimal( w_ia.ImpIyy1TypeTotherAttrAmount, 2));
    }
    globdata.getStateData().setLastStatementNumber( "0000000010" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpTypeTcreateUserId = FixedStringAttr.valueOf(w_ia.ImpIyy1TypeTcreateUserId, (short)8);
    }
    globdata.getStateData().setLastStatementNumber( "0000000011" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpTypeTupdateUserId = FixedStringAttr.valueOf(w_ia.ImpIyy1TypeTupdateUserId, (short)8);
    }
    globdata.getStateData().setLastStatementNumber( "0000000012" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpTypeTinstanceId = TimestampAttr.valueOf(w_ia.ImpIyy1TypeTinstanceId);
    }
    globdata.getStateData().setLastStatementNumber( "0000000013" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpTypeTreferenceId = TimestampAttr.valueOf(w_ia.ImpIyy1TypeTreferenceId);
    }
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
    //    !!!!!!!!!!!!                                                    
    //    USE <implementation ab>                                         
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    globdata.getStateData().setLastStatementNumber( "0000000016" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      
      cyyy0411_ia = (gen.ort.yyy.CYYY0411_IA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY0411_IA"));
      cyyy0411_oa = (gen.ort.yyy.CYYY0411_OA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY0411_OA"));
      cyyy0411_ia.ImpTypeTkeyAttrText = FixedStringAttr.valueOf(w_la.LocImpTypeTkeyAttrText, (short)4);
      cyyy0411_ia.ImpTypeTsearchAttrText = FixedStringAttr.valueOf(w_la.LocImpTypeTsearchAttrText, (short)20);
      cyyy0411_ia.ImpTypeTotherAttrText = FixedStringAttr.valueOf(w_la.LocImpTypeTotherAttrText, (short)2);
      cyyy0411_ia.ImpTypeTotherAttrDate = DateAttr.valueOf(w_la.LocImpTypeTotherAttrDate);
      cyyy0411_ia.ImpTypeTotherAttrTime = TimeAttr.valueOf(w_la.LocImpTypeTotherAttrTime);
      cyyy0411_ia.ImpTypeTotherAttrAmount = BigDecimalAttr.valueOf(w_la.LocImpTypeTotherAttrAmount);
      cyyy0411_ia.ImpTypeTinstanceId = TimestampAttr.valueOf(w_la.LocImpTypeTinstanceId);
      cyyy0411_ia.ImpTypeTreferenceId = TimestampAttr.valueOf(w_la.LocImpTypeTreferenceId);
      cyyy0411_ia.ImpTypeTcreateUserId = FixedStringAttr.valueOf(w_la.LocImpTypeTcreateUserId, (short)8);
      cyyy0411_ia.ImpTypeTupdateUserId = FixedStringAttr.valueOf(w_la.LocImpTypeTupdateUserId, (short)8);
      globdata.getErrorData().setErrorEncounteredSW( ErrorData.NO_ERROR_FOUND_SW );
      iefRuntimeParm2.useActionBlock("gen.ort.yyy.CYYY0411", "CYYY0411", cyyy0411_ia, cyyy0411_oa);
      if ( ((!(globdata.getErrorData().getStatus().equals( ErrorData.NONE_SF ))) || (globdata.getErrorData().getErrorEncounteredSW() 
        != ErrorData.NO_ERROR_FOUND_SW)) || (globdata.getErrorData().getViewOverflowSW() != ErrorData.NO_ERROR_FOUND_SW) )
      {
        throw new ABException();
      }
      globdata.getStateData().setCurrentABId( "0022020157" );
      globdata.getStateData().setCurrentABName( "MYY10411_XML_CREATE" );
      globdata.getStateData().setLastStatementNumber( "0000000016" );
      w_oa.ExpErrorCanamXmlXmlReturnCode = FixedStringAttr.valueOf(cyyy0411_oa.ExpErrorCanamXmlXmlReturnCode, (short)2);
      w_oa.ExpErrorCanamXmlXmlMessage = FixedStringAttr.valueOf(cyyy0411_oa.ExpErrorCanamXmlXmlMessage, (short)80);
      w_oa.ExpErrorCanamXmlXmlPosition = DoubleAttr.valueOf(cyyy0411_oa.ExpErrorCanamXmlXmlPosition);
      w_oa.ExpErrorCanamXmlXmlSource = FixedStringAttr.valueOf(cyyy0411_oa.ExpErrorCanamXmlXmlSource, (short)120);
      w_oa.ExpCanamXmlXmlBuffer = StringAttr.valueOf(cyyy0411_oa.ExpCanamXmlXmlBuffer, (short)4094);
      w_oa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.valueOf(cyyy0411_oa.ExpErrorIyy1ComponentSeverityCode, (short)1);
      w_oa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.valueOf(cyyy0411_oa.ExpErrorIyy1ComponentRollbackIndicator, (
        short)1);
      w_oa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.valueOf(cyyy0411_oa.ExpErrorIyy1ComponentOriginServid);
      w_oa.ExpErrorIyy1ComponentContextString = StringAttr.valueOf(cyyy0411_oa.ExpErrorIyy1ComponentContextString, (short)512);
      w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf(cyyy0411_oa.ExpErrorIyy1ComponentReturnCode);
      w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf(cyyy0411_oa.ExpErrorIyy1ComponentReasonCode);
      w_oa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.valueOf(cyyy0411_oa.ExpErrorIyy1ComponentChecksum, (short)15);
      cyyy0411_ia.freeInstance();
      cyyy0411_ia = null;
      cyyy0411_oa.freeInstance();
      cyyy0411_oa = null;
    }
  }
  
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // SUBORDINATE FUNCTIONS
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // INITIALIZATION UTILITY FUNCTIONS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  public void f_22020157_localAlloc(String abname)
  {
    // Request localview allocation 
    w_la = (gen.ort.yyy.MYY10411_LA)(iefRuntimeParm2.getInstance("gen.ort.yyy.MYY10411_LA"));
    if ( w_la == null )
    {
      globdata.getStateData().setCurrentABId( "0022020157" );
      globdata.getStateData().setCurrentABName( abname );
      globdata.getErrorData().setErrorEncounteredSW( ErrorData.ERROR_FOUND_SW );
      globdata.getErrorData().setLastStatus( ErrorData.IEF_ALLOCATION_ERROR_FL_LS );
    }
  }
  
  public void f_22020157_init()
  	throws ABException
  {
    if ( nestingLevel < 2 )
    {
      w_la.reset();
    }
    w_oa.ExpCanamXmlXmlBuffer = "";
    w_oa.ExpErrorCanamXmlXmlReturnCode = "  ";
    w_oa.ExpErrorCanamXmlXmlMessage = "                                                                                ";
    w_oa.ExpErrorCanamXmlXmlPosition = 0.0;
    w_oa.ExpErrorCanamXmlXmlSource = 
      "                                                                                                                        ";
    w_oa.ExpErrorIyy1ComponentSeverityCode = " ";
    w_oa.ExpErrorIyy1ComponentRollbackIndicator = " ";
    w_oa.ExpErrorIyy1ComponentOriginServid = 0.0;
    w_oa.ExpErrorIyy1ComponentContextString = "";
    w_oa.ExpErrorIyy1ComponentReturnCode = 0;
    w_oa.ExpErrorIyy1ComponentReasonCode = 0;
    w_oa.ExpErrorIyy1ComponentChecksum = "               ";
  }
  
  public void f_0_trace()
  	throws ABException
  {
    trace_ret_code = TIRTRCE.TIRTRCE(iefRuntimeParm1, iefRuntimeParm2, globdata, padtext, padview);
    if ( trace_ret_code == 20 )
    {
      throw new ABException();
    }
  }
  
  public void padview_init()
  {
padview[0] = PadView.getInstance("IMPORT                          ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_ia, 
      "w_ia");
    padview[1] = PadView.getInstance("IMP                             ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ia, 
      null);
    padview[2] = PadView.getInstance("IYY1_TYPE                       ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, w_ia,
       null);
    padview[3] = PadView.getInstance("TKEY_ATTR_TEXT                  ", 4, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpIyy1TypeTkeyAttrText");
    padview[4] = PadView.getInstance("TSEARCH_ATTR_TEXT               ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpIyy1TypeTsearchAttrText");
    padview[5] = PadView.getInstance("TOTHER_ATTR_TEXT                ", 2, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpIyy1TypeTotherAttrText");
    padview[6] = PadView.getInstance("TOTHER_ATTR_DATE                ", 8, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_DATE, 
      w_ia, "ImpIyy1TypeTotherAttrDate");
    padview[7] = PadView.getInstance("TOTHER_ATTR_TIME                ", 6, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TIME, 
      w_ia, "ImpIyy1TypeTotherAttrTime");
    padview[8] = PadView.getInstance("TOTHER_ATTR_AMOUNT              ", 17, 2, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_FIXED, 
      w_ia, "ImpIyy1TypeTotherAttrAmount");
    padview[9] = PadView.getInstance("TINSTANCE_ID                    ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_ia, "ImpIyy1TypeTinstanceId");
    padview[10] = PadView.getInstance("TREFERENCE_ID                   ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_ia, "ImpIyy1TypeTreferenceId");
    padview[11] = PadView.getInstance("TCREATE_USER_ID                 ", 8, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpIyy1TypeTcreateUserId");
    padview[12] = PadView.getInstance("TUPDATE_USER_ID                 ", 8, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpIyy1TypeTupdateUserId");
    padview[13] = PadView.getInstance("EXPORT                          ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_oa, 
      "w_oa");
    padview[14] = PadView.getInstance("EXP                             ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_oa, 
      null);
    padview[15] = PadView.getInstance("CANAM_XML                       ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_oa, null);
    padview[16] = PadView.getInstance("XML_BUFFER                      ", 4094, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_oa, "ExpCanamXmlXmlBuffer");
    padview[17] = PadView.getInstance("EXP_ERROR                       ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_oa, 
      null);
    padview[18] = PadView.getInstance("CANAM_XML                       ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_oa, null);
    padview[19] = PadView.getInstance("XML_RETURN_CODE                 ", 2, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorCanamXmlXmlReturnCode");
    padview[20] = PadView.getInstance("XML_MESSAGE                     ", 80, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorCanamXmlXmlMessage");
    padview[21] = PadView.getInstance("XML_POSITION                    ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorCanamXmlXmlPosition");
    padview[22] = PadView.getInstance("XML_SOURCE                      ", 120, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT,
       w_oa, "ExpErrorCanamXmlXmlSource");
    padview[23] = PadView.getInstance("EXP_ERROR                       ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_oa, 
      null);
    padview[24] = PadView.getInstance("IYY1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_oa, null);
    padview[25] = PadView.getInstance("SEVERITY_CODE                   ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentSeverityCode");
    padview[26] = PadView.getInstance("ROLLBACK_INDICATOR              ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentRollbackIndicator");
    padview[27] = PadView.getInstance("ORIGIN_SERVID                   ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentOriginServid");
    padview[28] = PadView.getInstance("CONTEXT_STRING                  ", 512, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_oa, "ExpErrorIyy1ComponentContextString");
    padview[29] = PadView.getInstance("RETURN_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentReturnCode");
    padview[30] = PadView.getInstance("REASON_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentReasonCode");
    padview[31] = PadView.getInstance("CHECKSUM                        ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentChecksum");
    padview[32] = PadView.getInstance("LOCAL                           ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_la, 
      "w_la");
    padview[33] = PadView.getInstance("LOC_IMP                         ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[34] = PadView.getInstance("TYPE                            ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[35] = PadView.getInstance("TKEY_ATTR_TEXT                  ", 4, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpTypeTkeyAttrText");
    padview[36] = PadView.getInstance("TSEARCH_ATTR_TEXT               ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpTypeTsearchAttrText");
    padview[37] = PadView.getInstance("TOTHER_ATTR_TEXT                ", 2, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpTypeTotherAttrText");
    padview[38] = PadView.getInstance("TOTHER_ATTR_DATE                ", 8, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_DATE, 
      w_la, "LocImpTypeTotherAttrDate");
    padview[39] = PadView.getInstance("TOTHER_ATTR_TIME                ", 6, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TIME, 
      w_la, "LocImpTypeTotherAttrTime");
    padview[40] = PadView.getInstance("TOTHER_ATTR_AMOUNT              ", 17, 2, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_FIXED,
       w_la, "LocImpTypeTotherAttrAmount");
    padview[41] = PadView.getInstance("TINSTANCE_ID                    ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_la, "LocImpTypeTinstanceId");
    padview[42] = PadView.getInstance("TREFERENCE_ID                   ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_la, "LocImpTypeTreferenceId");
    padview[43] = PadView.getInstance("TCREATE_USER_ID                 ", 8, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpTypeTcreateUserId");
    padview[44] = PadView.getInstance("TUPDATE_USER_ID                 ", 8, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpTypeTupdateUserId");
    padview[45] = PadView.getInstance("******** BOTTOM OF DATA ********", 0, 0, 0, (short)0, PadView.VT_END, PadView.DT_NONE, w_la, 
      null);
  }
}// end class


package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: MYY10411_IA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:10:03
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF IMPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: MYY10411_IA
 **/
public class MYY10411_IA extends ViewBase implements IImportView, Serializable
{
  // Entity View: IMP
  //        Type: IYY1_TYPE
  /**
   * Attribute missing flag for: ImpIyy1TypeTkeyAttrText
   **/
  public char ImpIyy1TypeTkeyAttrText_AS;
  /**
   * Attribute for: ImpIyy1TypeTkeyAttrText
   * Domain: Text
   * Length: 4
   * Varying Length: N
   **/
  public String ImpIyy1TypeTkeyAttrText;
  /**
   * Attribute missing flag for: ImpIyy1TypeTsearchAttrText
   **/
  public char ImpIyy1TypeTsearchAttrText_AS;
  /**
   * Attribute for: ImpIyy1TypeTsearchAttrText
   * Domain: Text
   * Length: 20
   * Varying Length: N
   **/
  public String ImpIyy1TypeTsearchAttrText;
  /**
   * Attribute missing flag for: ImpIyy1TypeTotherAttrText
   **/
  public char ImpIyy1TypeTotherAttrText_AS;
  /**
   * Attribute for: ImpIyy1TypeTotherAttrText
   * Domain: Text
   * Length: 2
   * Varying Length: N
   **/
  public String ImpIyy1TypeTotherAttrText;
  /**
   * Attribute missing flag for: ImpIyy1TypeTotherAttrDate
   **/
  public char ImpIyy1TypeTotherAttrDate_AS;
  /**
   * Attribute for: ImpIyy1TypeTotherAttrDate
   * Domain: Date
   * Length: 8
   **/
  public int ImpIyy1TypeTotherAttrDate;
  /**
   * Attribute missing flag for: ImpIyy1TypeTotherAttrTime
   **/
  public char ImpIyy1TypeTotherAttrTime_AS;
  /**
   * Attribute for: ImpIyy1TypeTotherAttrTime
   * Domain: Time
   * Length: 6
   **/
  public int ImpIyy1TypeTotherAttrTime;
  /**
   * Attribute missing flag for: ImpIyy1TypeTotherAttrAmount
   **/
  public char ImpIyy1TypeTotherAttrAmount_AS;
  /**
   * Attribute for: ImpIyy1TypeTotherAttrAmount
   * Domain: Number
   * Length: 17
   * Decimal Places: 2
   * Decimal Precision: Y
   **/
  public BigDecimal ImpIyy1TypeTotherAttrAmount;
  /**
   * Attribute missing flag for: ImpIyy1TypeTinstanceId
   **/
  public char ImpIyy1TypeTinstanceId_AS;
  /**
   * Attribute for: ImpIyy1TypeTinstanceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String ImpIyy1TypeTinstanceId;
  /**
   * Attribute missing flag for: ImpIyy1TypeTreferenceId
   **/
  public char ImpIyy1TypeTreferenceId_AS;
  /**
   * Attribute for: ImpIyy1TypeTreferenceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String ImpIyy1TypeTreferenceId;
  /**
   * Attribute missing flag for: ImpIyy1TypeTcreateUserId
   **/
  public char ImpIyy1TypeTcreateUserId_AS;
  /**
   * Attribute for: ImpIyy1TypeTcreateUserId
   * Domain: Text
   * Length: 8
   * Varying Length: N
   **/
  public String ImpIyy1TypeTcreateUserId;
  /**
   * Attribute missing flag for: ImpIyy1TypeTupdateUserId
   **/
  public char ImpIyy1TypeTupdateUserId_AS;
  /**
   * Attribute for: ImpIyy1TypeTupdateUserId
   * Domain: Text
   * Length: 8
   * Varying Length: N
   **/
  public String ImpIyy1TypeTupdateUserId;
  /**
   * Default Constructor
   **/
  
  public MYY10411_IA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public MYY10411_IA(MYY10411_IA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static MYY10411_IA getInstance()
  {
    return new MYY10411_IA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new MYY10411_IA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    ImpIyy1TypeTkeyAttrText_AS = ' ';
    ImpIyy1TypeTkeyAttrText = "    ";
    ImpIyy1TypeTsearchAttrText_AS = ' ';
    ImpIyy1TypeTsearchAttrText = "                    ";
    ImpIyy1TypeTotherAttrText_AS = ' ';
    ImpIyy1TypeTotherAttrText = "  ";
    ImpIyy1TypeTotherAttrDate_AS = ' ';
    ImpIyy1TypeTotherAttrDate = 00000000;
    ImpIyy1TypeTotherAttrTime_AS = ' ';
    ImpIyy1TypeTotherAttrTime = 00000000;
    ImpIyy1TypeTotherAttrAmount_AS = ' ';
    ImpIyy1TypeTotherAttrAmount = BigDecimalAttr.getDefaultValue();
    ImpIyy1TypeTinstanceId_AS = ' ';
    ImpIyy1TypeTinstanceId = "00000000000000000000";
    ImpIyy1TypeTreferenceId_AS = ' ';
    ImpIyy1TypeTreferenceId = "00000000000000000000";
    ImpIyy1TypeTcreateUserId_AS = ' ';
    ImpIyy1TypeTcreateUserId = "        ";
    ImpIyy1TypeTupdateUserId_AS = ' ';
    ImpIyy1TypeTupdateUserId = "        ";
  }
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    throw new RuntimeException("can only execute getVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    throw new RuntimeException("can only execute setFromVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IImportView orig)
  {
    this.copyFrom((MYY10411_IA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(MYY10411_IA orig)
  {
    ImpIyy1TypeTkeyAttrText_AS = orig.ImpIyy1TypeTkeyAttrText_AS;
    ImpIyy1TypeTkeyAttrText = orig.ImpIyy1TypeTkeyAttrText;
    ImpIyy1TypeTsearchAttrText_AS = orig.ImpIyy1TypeTsearchAttrText_AS;
    ImpIyy1TypeTsearchAttrText = orig.ImpIyy1TypeTsearchAttrText;
    ImpIyy1TypeTotherAttrText_AS = orig.ImpIyy1TypeTotherAttrText_AS;
    ImpIyy1TypeTotherAttrText = orig.ImpIyy1TypeTotherAttrText;
    ImpIyy1TypeTotherAttrDate_AS = orig.ImpIyy1TypeTotherAttrDate_AS;
    ImpIyy1TypeTotherAttrDate = orig.ImpIyy1TypeTotherAttrDate;
    ImpIyy1TypeTotherAttrTime_AS = orig.ImpIyy1TypeTotherAttrTime_AS;
    ImpIyy1TypeTotherAttrTime = orig.ImpIyy1TypeTotherAttrTime;
    ImpIyy1TypeTotherAttrAmount_AS = orig.ImpIyy1TypeTotherAttrAmount_AS;
    ImpIyy1TypeTotherAttrAmount = orig.ImpIyy1TypeTotherAttrAmount;
    ImpIyy1TypeTinstanceId_AS = orig.ImpIyy1TypeTinstanceId_AS;
    ImpIyy1TypeTinstanceId = orig.ImpIyy1TypeTinstanceId;
    ImpIyy1TypeTreferenceId_AS = orig.ImpIyy1TypeTreferenceId_AS;
    ImpIyy1TypeTreferenceId = orig.ImpIyy1TypeTreferenceId;
    ImpIyy1TypeTcreateUserId_AS = orig.ImpIyy1TypeTcreateUserId_AS;
    ImpIyy1TypeTcreateUserId = orig.ImpIyy1TypeTcreateUserId;
    ImpIyy1TypeTupdateUserId_AS = orig.ImpIyy1TypeTupdateUserId_AS;
    ImpIyy1TypeTupdateUserId = orig.ImpIyy1TypeTupdateUserId;
  }
}

package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: MYY10411_LA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:10:03
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF LOCAL VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: MYY10411_LA
 **/
public class MYY10411_LA extends ViewBase implements ILocalView, Serializable
{
  // Entity View: LOC_IMP
  //        Type: TYPE
  /**
   * Attribute missing flag for: LocImpTypeTkeyAttrText
   **/
  public char LocImpTypeTkeyAttrText_AS;
  /**
   * Attribute for: LocImpTypeTkeyAttrText
   * Domain: Text
   * Length: 4
   * Varying Length: N
   **/
  public String LocImpTypeTkeyAttrText;
  /**
   * Attribute missing flag for: LocImpTypeTsearchAttrText
   **/
  public char LocImpTypeTsearchAttrText_AS;
  /**
   * Attribute for: LocImpTypeTsearchAttrText
   * Domain: Text
   * Length: 20
   * Varying Length: N
   **/
  public String LocImpTypeTsearchAttrText;
  /**
   * Attribute missing flag for: LocImpTypeTotherAttrText
   **/
  public char LocImpTypeTotherAttrText_AS;
  /**
   * Attribute for: LocImpTypeTotherAttrText
   * Domain: Text
   * Length: 2
   * Varying Length: N
   **/
  public String LocImpTypeTotherAttrText;
  /**
   * Attribute missing flag for: LocImpTypeTotherAttrDate
   **/
  public char LocImpTypeTotherAttrDate_AS;
  /**
   * Attribute for: LocImpTypeTotherAttrDate
   * Domain: Date
   * Length: 8
   **/
  public int LocImpTypeTotherAttrDate;
  /**
   * Attribute missing flag for: LocImpTypeTotherAttrTime
   **/
  public char LocImpTypeTotherAttrTime_AS;
  /**
   * Attribute for: LocImpTypeTotherAttrTime
   * Domain: Time
   * Length: 6
   **/
  public int LocImpTypeTotherAttrTime;
  /**
   * Attribute missing flag for: LocImpTypeTotherAttrAmount
   **/
  public char LocImpTypeTotherAttrAmount_AS;
  /**
   * Attribute for: LocImpTypeTotherAttrAmount
   * Domain: Number
   * Length: 17
   * Decimal Places: 2
   * Decimal Precision: Y
   **/
  public BigDecimal LocImpTypeTotherAttrAmount;
  /**
   * Attribute missing flag for: LocImpTypeTinstanceId
   **/
  public char LocImpTypeTinstanceId_AS;
  /**
   * Attribute for: LocImpTypeTinstanceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String LocImpTypeTinstanceId;
  /**
   * Attribute missing flag for: LocImpTypeTreferenceId
   **/
  public char LocImpTypeTreferenceId_AS;
  /**
   * Attribute for: LocImpTypeTreferenceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String LocImpTypeTreferenceId;
  /**
   * Attribute missing flag for: LocImpTypeTcreateUserId
   **/
  public char LocImpTypeTcreateUserId_AS;
  /**
   * Attribute for: LocImpTypeTcreateUserId
   * Domain: Text
   * Length: 8
   * Varying Length: N
   **/
  public String LocImpTypeTcreateUserId;
  /**
   * Attribute missing flag for: LocImpTypeTupdateUserId
   **/
  public char LocImpTypeTupdateUserId_AS;
  /**
   * Attribute for: LocImpTypeTupdateUserId
   * Domain: Text
   * Length: 8
   * Varying Length: N
   **/
  public String LocImpTypeTupdateUserId;
  /**
   * Default Constructor
   **/
  
  public MYY10411_LA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public MYY10411_LA(MYY10411_LA orig)
  {
    LocImpTypeTkeyAttrText_AS = orig.LocImpTypeTkeyAttrText_AS;
    LocImpTypeTkeyAttrText = orig.LocImpTypeTkeyAttrText;
    LocImpTypeTsearchAttrText_AS = orig.LocImpTypeTsearchAttrText_AS;
    LocImpTypeTsearchAttrText = orig.LocImpTypeTsearchAttrText;
    LocImpTypeTotherAttrText_AS = orig.LocImpTypeTotherAttrText_AS;
    LocImpTypeTotherAttrText = orig.LocImpTypeTotherAttrText;
    LocImpTypeTotherAttrDate_AS = orig.LocImpTypeTotherAttrDate_AS;
    LocImpTypeTotherAttrDate = orig.LocImpTypeTotherAttrDate;
    LocImpTypeTotherAttrTime_AS = orig.LocImpTypeTotherAttrTime_AS;
    LocImpTypeTotherAttrTime = orig.LocImpTypeTotherAttrTime;
    LocImpTypeTotherAttrAmount_AS = orig.LocImpTypeTotherAttrAmount_AS;
    LocImpTypeTotherAttrAmount = orig.LocImpTypeTotherAttrAmount;
    LocImpTypeTinstanceId_AS = orig.LocImpTypeTinstanceId_AS;
    LocImpTypeTinstanceId = orig.LocImpTypeTinstanceId;
    LocImpTypeTreferenceId_AS = orig.LocImpTypeTreferenceId_AS;
    LocImpTypeTreferenceId = orig.LocImpTypeTreferenceId;
    LocImpTypeTcreateUserId_AS = orig.LocImpTypeTcreateUserId_AS;
    LocImpTypeTcreateUserId = orig.LocImpTypeTcreateUserId;
    LocImpTypeTupdateUserId_AS = orig.LocImpTypeTupdateUserId_AS;
    LocImpTypeTupdateUserId = orig.LocImpTypeTupdateUserId;
  }
  /**
   * Static instance creator function
   **/
  
  public static MYY10411_LA getInstance()
  {
    return new MYY10411_LA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new MYY10411_LA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    LocImpTypeTkeyAttrText_AS = ' ';
    LocImpTypeTkeyAttrText = "    ";
    LocImpTypeTsearchAttrText_AS = ' ';
    LocImpTypeTsearchAttrText = "                    ";
    LocImpTypeTotherAttrText_AS = ' ';
    LocImpTypeTotherAttrText = "  ";
    LocImpTypeTotherAttrDate_AS = ' ';
    LocImpTypeTotherAttrDate = 00000000;
    LocImpTypeTotherAttrTime_AS = ' ';
    LocImpTypeTotherAttrTime = 00000000;
    LocImpTypeTotherAttrAmount_AS = ' ';
    LocImpTypeTotherAttrAmount = BigDecimalAttr.getDefaultValue();
    LocImpTypeTinstanceId_AS = ' ';
    LocImpTypeTinstanceId = "00000000000000000000";
    LocImpTypeTreferenceId_AS = ' ';
    LocImpTypeTreferenceId = "00000000000000000000";
    LocImpTypeTcreateUserId_AS = ' ';
    LocImpTypeTcreateUserId = "        ";
    LocImpTypeTupdateUserId_AS = ' ';
    LocImpTypeTupdateUserId = "        ";
  }
}

package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: MYY10411_OA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:10:03
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF EXPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: MYY10411_OA
 **/
public class MYY10411_OA extends ViewBase implements IExportView, Serializable
{
  // Entity View: EXP
  //        Type: CANAM_XML
  /**
   * Attribute missing flag for: ExpCanamXmlXmlBuffer
   **/
  public char ExpCanamXmlXmlBuffer_AS;
  /**
   * Attribute for: ExpCanamXmlXmlBuffer
   * Domain: Text
   * Length: 4094
   * Varying Length: Y
   **/
  public String ExpCanamXmlXmlBuffer;
  // Entity View: EXP_ERROR
  //        Type: CANAM_XML
  /**
   * Attribute missing flag for: ExpErrorCanamXmlXmlReturnCode
   **/
  public char ExpErrorCanamXmlXmlReturnCode_AS;
  /**
   * Attribute for: ExpErrorCanamXmlXmlReturnCode
   * Domain: Text
   * Length: 2
   * Varying Length: N
   **/
  public String ExpErrorCanamXmlXmlReturnCode;
  /**
   * Attribute missing flag for: ExpErrorCanamXmlXmlMessage
   **/
  public char ExpErrorCanamXmlXmlMessage_AS;
  /**
   * Attribute for: ExpErrorCanamXmlXmlMessage
   * Domain: Text
   * Length: 80
   * Varying Length: N
   **/
  public String ExpErrorCanamXmlXmlMessage;
  /**
   * Attribute missing flag for: ExpErrorCanamXmlXmlPosition
   **/
  public char ExpErrorCanamXmlXmlPosition_AS;
  /**
   * Attribute for: ExpErrorCanamXmlXmlPosition
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double ExpErrorCanamXmlXmlPosition;
  /**
   * Attribute missing flag for: ExpErrorCanamXmlXmlSource
   **/
  public char ExpErrorCanamXmlXmlSource_AS;
  /**
   * Attribute for: ExpErrorCanamXmlXmlSource
   * Domain: Text
   * Length: 120
   * Varying Length: N
   **/
  public String ExpErrorCanamXmlXmlSource;
  // Entity View: EXP_ERROR
  //        Type: IYY1_COMPONENT
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentSeverityCode
   **/
  public char ExpErrorIyy1ComponentSeverityCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentSeverityCode
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentSeverityCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentRollbackIndicator
   **/
  public char ExpErrorIyy1ComponentRollbackIndicator_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentRollbackIndicator
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentRollbackIndicator;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentOriginServid
   **/
  public char ExpErrorIyy1ComponentOriginServid_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentOriginServid
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double ExpErrorIyy1ComponentOriginServid;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentContextString
   **/
  public char ExpErrorIyy1ComponentContextString_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentContextString
   * Domain: Text
   * Length: 512
   * Varying Length: Y
   **/
  public String ExpErrorIyy1ComponentContextString;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentReturnCode
   **/
  public char ExpErrorIyy1ComponentReturnCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentReturnCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ExpErrorIyy1ComponentReturnCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentReasonCode
   **/
  public char ExpErrorIyy1ComponentReasonCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentReasonCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ExpErrorIyy1ComponentReasonCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentChecksum
   **/
  public char ExpErrorIyy1ComponentChecksum_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentChecksum
   * Domain: Text
   * Length: 15
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentChecksum;
  /**
   * Default Constructor
   **/
  
  public MYY10411_OA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public MYY10411_OA(MYY10411_OA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static MYY10411_OA getInstance()
  {
    return new MYY10411_OA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new MYY10411_OA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    ExpCanamXmlXmlBuffer_AS = ' ';
    ExpCanamXmlXmlBuffer = "";
    ExpErrorCanamXmlXmlReturnCode_AS = ' ';
    ExpErrorCanamXmlXmlReturnCode = "  ";
    ExpErrorCanamXmlXmlMessage_AS = ' ';
    ExpErrorCanamXmlXmlMessage = "                                                                                ";
    ExpErrorCanamXmlXmlPosition_AS = ' ';
    ExpErrorCanamXmlXmlPosition = 0.0;
    ExpErrorCanamXmlXmlSource_AS = ' ';
    ExpErrorCanamXmlXmlSource = 
      "                                                                                                                        ";
    ExpErrorIyy1ComponentSeverityCode_AS = ' ';
    ExpErrorIyy1ComponentSeverityCode = " ";
    ExpErrorIyy1ComponentRollbackIndicator_AS = ' ';
    ExpErrorIyy1ComponentRollbackIndicator = " ";
    ExpErrorIyy1ComponentOriginServid_AS = ' ';
    ExpErrorIyy1ComponentOriginServid = 0.0;
    ExpErrorIyy1ComponentContextString_AS = ' ';
    ExpErrorIyy1ComponentContextString = "";
    ExpErrorIyy1ComponentReturnCode_AS = ' ';
    ExpErrorIyy1ComponentReturnCode = 0;
    ExpErrorIyy1ComponentReasonCode_AS = ' ';
    ExpErrorIyy1ComponentReasonCode = 0;
    ExpErrorIyy1ComponentChecksum_AS = ' ';
    ExpErrorIyy1ComponentChecksum = "               ";
  }
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    throw new RuntimeException("can only execute setFromVDF for a Procedure Step.");
  }
  
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    throw new RuntimeException("can only execute getVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IExportView orig)
  {
    this.copyFrom((MYY10411_OA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(MYY10411_OA orig)
  {
    ExpCanamXmlXmlBuffer_AS = orig.ExpCanamXmlXmlBuffer_AS;
    ExpCanamXmlXmlBuffer = orig.ExpCanamXmlXmlBuffer;
    ExpErrorCanamXmlXmlReturnCode_AS = orig.ExpErrorCanamXmlXmlReturnCode_AS;
    ExpErrorCanamXmlXmlReturnCode = orig.ExpErrorCanamXmlXmlReturnCode;
    ExpErrorCanamXmlXmlMessage_AS = orig.ExpErrorCanamXmlXmlMessage_AS;
    ExpErrorCanamXmlXmlMessage = orig.ExpErrorCanamXmlXmlMessage;
    ExpErrorCanamXmlXmlPosition_AS = orig.ExpErrorCanamXmlXmlPosition_AS;
    ExpErrorCanamXmlXmlPosition = orig.ExpErrorCanamXmlXmlPosition;
    ExpErrorCanamXmlXmlSource_AS = orig.ExpErrorCanamXmlXmlSource_AS;
    ExpErrorCanamXmlXmlSource = orig.ExpErrorCanamXmlXmlSource;
    ExpErrorIyy1ComponentSeverityCode_AS = orig.ExpErrorIyy1ComponentSeverityCode_AS;
    ExpErrorIyy1ComponentSeverityCode = orig.ExpErrorIyy1ComponentSeverityCode;
    ExpErrorIyy1ComponentRollbackIndicator_AS = orig.ExpErrorIyy1ComponentRollbackIndicator_AS;
    ExpErrorIyy1ComponentRollbackIndicator = orig.ExpErrorIyy1ComponentRollbackIndicator;
    ExpErrorIyy1ComponentOriginServid_AS = orig.ExpErrorIyy1ComponentOriginServid_AS;
    ExpErrorIyy1ComponentOriginServid = orig.ExpErrorIyy1ComponentOriginServid;
    ExpErrorIyy1ComponentContextString_AS = orig.ExpErrorIyy1ComponentContextString_AS;
    ExpErrorIyy1ComponentContextString = orig.ExpErrorIyy1ComponentContextString;
    ExpErrorIyy1ComponentReturnCode_AS = orig.ExpErrorIyy1ComponentReturnCode_AS;
    ExpErrorIyy1ComponentReturnCode = orig.ExpErrorIyy1ComponentReturnCode;
    ExpErrorIyy1ComponentReasonCode_AS = orig.ExpErrorIyy1ComponentReasonCode_AS;
    ExpErrorIyy1ComponentReasonCode = orig.ExpErrorIyy1ComponentReasonCode;
    ExpErrorIyy1ComponentChecksum_AS = orig.ExpErrorIyy1ComponentChecksum_AS;
    ExpErrorIyy1ComponentChecksum = orig.ExpErrorIyy1ComponentChecksum;
  }
}
