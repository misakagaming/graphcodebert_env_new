
package gen.ort.yyy;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: MYY10351_TYPE_LIST               Date: 2023/07/05
//    Target OS:   JVM                       Time: 15:10:15
//    Target DBMS: JDBC                      User: HakanBal
//    Access Method: JDBC           
//
//    Generation options:
//    Debug trace option selected
//    Data modeling constraint enforcement not selected
//    Optimized import view initialization not selected
//    Enforce default values with DBMS not selected
//    Init unspecified optional fields to NULL not selected
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;

import com.ca.gen.abrt.*;
import com.ca.gen.abrt.functions.*;
import com.ca.gen.abrt.cascade.*;
import com.ca.gen.abrt.trace.*;
import com.ca.gen.exits.common.*;
import com.ca.gen.odc.*;

public class MYY10351 extends ABBase
{
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // IMPORT VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  MYY10351_IA w_ia;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // EXPORT VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  MYY10351_OA w_oa;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // LOCAL VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  MYY10351_LA w_la;
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // ACTION BLOCK IMPORT/EXPORT VIEWS CLASS VARIABLES
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  gen.ort.yyy.CYYY0351_IA cyyy0351_ia;
  gen.ort.yyy.CYYY0351_OA cyyy0351_oa;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // REPEATING GROUP VIEW STATUS FIELDS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  boolean ExpGroupList_FL_001;
  int ExpGroupList_PS_001;
  boolean ExpGroupList_RF_001;
  public final static int ExpGroupList_MM_001 = 48;
  boolean LocExpGroupList_FL_002;
  int LocExpGroupList_PS_002;
  boolean LocExpGroupList_RF_002;
  public final static int LocExpGroupList_MM_002 = 48;
  boolean ExpGroupList_FL_003;
  int ExpGroupList_PS_003;
  boolean ExpGroupList_RF_003;
  public final static int ExpGroupList_MM_003 = 48;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // FOR-LOOP CONTROL TEMPORARY VARIABLES 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  int by___0070254835;
  int limit___0070254835;
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // MISC DECLARATIONS AND PROTOTYPES 
  //    FOLLOW AS NEEDED:             
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  boolean func_0022020161_esc_flag;
  boolean while_0070254835_esc_flag;
  boolean func_0020971894_esc_flag;
  PadView padview[] = new PadView [83];
  int trace_ret_code;
  PadText padtext[] = initPadText();
  public PadText [] initPadText()
  {
    PadText [] result = new PadText [PADTEXT_SIZE];
    result[0] = PadText.getInstance(   0,"+->   MYY10351_TYPE_LIST                07/05/2023  15:10");
    result[1] = PadText.getInstance(   0,"!       IMPORTS:");
    result[2] = PadText.getInstance(   0,"!         Work View imp_filter iyy1_list (Transient, Mandatory, Import only)");
    result[3] = PadText.getInstance(   0,"!           sort_option");
    result[4] = PadText.getInstance(   0,"!           scroll_type");
    result[5] = PadText.getInstance(   0,"!           list_direction");
    result[6] = PadText.getInstance(   0,"!           scroll_amount");
    result[7] = PadText.getInstance(   0,"!           order_by_field_num");
    result[8] = PadText.getInstance(   0,"!         Entity View imp_from iyy1_type (Transient, Mandatory, Import only)");
    result[9] = PadText.getInstance(   0,"!           tinstance_id");
    result[10] = PadText.getInstance(   0,"!           tkey_attr_text");
    result[11] = PadText.getInstance(   0,"!           tsearch_attr_text");
    result[12] = PadText.getInstance(   0,"!         Entity View imp_filter_start iyy1_type (Transient, Mandatory, Import only)");
    result[13] = PadText.getInstance(   0,"!           tkey_attr_text");
    result[14] = PadText.getInstance(   0,"!         Entity View imp_filter_stop iyy1_type (Transient, Mandatory, Import only)");
    result[15] = PadText.getInstance(   0,"!           tkey_attr_text");
    result[16] = PadText.getInstance(   0,"!         Entity View imp_filter iyy1_type (Transient, Mandatory, Import only)");
    result[17] = PadText.getInstance(   0,"!           tsearch_attr_text");
    result[18] = PadText.getInstance(   0,"!           tother_attr_text");
    result[19] = PadText.getInstance(   0,"!       EXPORTS:");
    result[20] = PadText.getInstance(   0,"!         Group View (48) exp_group_list");
    result[21] = PadText.getInstance(   0,"!           Entity View exp_g_list iyy1_type (Transient, Export only)");
    result[22] = PadText.getInstance(   0,"!             tinstance_id");
    result[23] = PadText.getInstance(   0,"!             treference_id");
    result[24] = PadText.getInstance(   0,"!             tcreate_user_id");
    result[25] = PadText.getInstance(   0,"!             tupdate_user_id");
    result[26] = PadText.getInstance(   0,"!             tkey_attr_text");
    result[27] = PadText.getInstance(   0,"!             tsearch_attr_text");
    result[28] = PadText.getInstance(   0,"!             tother_attr_text");
    result[29] = PadText.getInstance(   0,"!             tother_attr_date");
    result[30] = PadText.getInstance(   0,"!             tother_attr_time");
    result[31] = PadText.getInstance(   0,"!             tother_attr_amount");
    result[32] = PadText.getInstance(   0,"!         Work View exp_error iyy1_component (Transient, Export only)");
    result[33] = PadText.getInstance(   0,"!           severity_code");
    result[34] = PadText.getInstance(   0,"!           rollback_indicator");
    result[35] = PadText.getInstance(   0,"!           origin_servid");
    result[36] = PadText.getInstance(   0,"!           context_string");
    result[37] = PadText.getInstance(   0,"!           return_code");
    result[38] = PadText.getInstance(   0,"!           reason_code");
    result[39] = PadText.getInstance(   0,"!           checksum");
    result[40] = PadText.getInstance(   0,"!       LOCALS:");
    result[41] = PadText.getInstance(   0,"!         Work View loc_imp_filter iyy1_list");
    result[42] = PadText.getInstance(   0,"!           sort_option");
    result[43] = PadText.getInstance(   0,"!           scroll_type");
    result[44] = PadText.getInstance(   0,"!           list_direction");
    result[45] = PadText.getInstance(   0,"!           scroll_amount");
    result[46] = PadText.getInstance(   0,"!           order_by_field_num");
    result[47] = PadText.getInstance(   0,"!         Entity View loc_imp_from type");
    result[48] = PadText.getInstance(   0,"!           tinstance_id");
    result[49] = PadText.getInstance(   0,"!           tkey_attr_text");
    result[50] = PadText.getInstance(   0,"!           tsearch_attr_text");
    result[51] = PadText.getInstance(   0,"!         Entity View loc_imp_filter_start type");
    result[52] = PadText.getInstance(   0,"!           tkey_attr_text");
    result[53] = PadText.getInstance(   0,"!         Entity View loc_imp_filter_stop type");
    result[54] = PadText.getInstance(   0,"!           tkey_attr_text");
    result[55] = PadText.getInstance(   0,"!         Entity View loc_imp_filter type");
    result[56] = PadText.getInstance(   0,"!           tsearch_attr_text");
    result[57] = PadText.getInstance(   0,"!           tother_attr_text");
    result[58] = PadText.getInstance(   0,"!         Group View (48) loc_exp_group_list");
    result[59] = PadText.getInstance(   0,"!           Entity View loc_exp_g_list type");
    result[60] = PadText.getInstance(   0,"!             tinstance_id");
    result[61] = PadText.getInstance(   0,"!             treference_id");
    result[62] = PadText.getInstance(   0,"!             tcreate_user_id");
    result[63] = PadText.getInstance(   0,"!             tupdate_user_id");
    result[64] = PadText.getInstance(   0,"!             tkey_attr_text");
    result[65] = PadText.getInstance(   0,"!             tsearch_attr_text");
    result[66] = PadText.getInstance(   0,"!             tother_attr_text");
    result[67] = PadText.getInstance(   0,"!             tother_attr_date");
    result[68] = PadText.getInstance(   0,"!             tother_attr_time");
    result[69] = PadText.getInstance(   0,"!             tother_attr_amount");
    result[70] = PadText.getInstance(   0,"!");
    result[71] = PadText.getInstance(   0,"!     PROCEDURE STATEMENTS");
    result[72] = PadText.getInstance(   0,"!");
    result[73] = PadText.getInstance(   1,"!  NOTE: ");
    result[74] = PadText.getInstance(   1,"!  See the description for the purpose");
    result[75] = PadText.getInstance(   1,"!  ");
    result[76] = PadText.getInstance(   2,"!  NOTE: ");
    result[77] = PadText.getInstance(   2,"!  RELEASE HISTORY");
    result[78] = PadText.getInstance(   2,"!  01_00 23-02-1998 New release");
    result[79] = PadText.getInstance(   2,"!  ");
    result[80] = PadText.getInstance(   3,"!  NOTE: ");
    result[81] = PadText.getInstance(   3,"!  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    result[82] = PadText.getInstance(   3,"!  SET <loc imp*> TO <imp*>");
    result[83] = PadText.getInstance(   3,"!  ");
    result[84] = PadText.getInstance(   4,"!  SET loc_imp_filter iyy1_list list_direction TO imp_filter iyy1_list list_direction ");
    result[85] = PadText.getInstance(   5,"!  SET loc_imp_filter iyy1_list scroll_type TO imp_filter iyy1_list scroll_type ");
    result[86] = PadText.getInstance(   6,"!  SET loc_imp_filter iyy1_list sort_option TO imp_filter iyy1_list sort_option ");
    result[87] = PadText.getInstance(   7,"!  SET loc_imp_filter iyy1_list scroll_amount TO imp_filter iyy1_list scroll_amount ");
    result[88] = PadText.getInstance(   8,
      "!  SET loc_imp_filter iyy1_list order_by_field_num TO imp_filter iyy1_list order_by_field_num ");
    result[89] = PadText.getInstance(   9,"!   ");
    result[90] = PadText.getInstance(  10,"!  SET loc_imp_from type tinstance_id TO imp_from iyy1_type tinstance_id ");
    result[91] = PadText.getInstance(  11,"!  SET loc_imp_from type tkey_attr_text TO imp_from iyy1_type tkey_attr_text ");
    result[92] = PadText.getInstance(  12,"!  SET loc_imp_from type tsearch_attr_text TO imp_from iyy1_type tsearch_attr_text ");
    result[93] = PadText.getInstance(  13,"!   ");
    result[94] = PadText.getInstance(  14,
      "!  SET loc_imp_filter_start type tkey_attr_text TO imp_filter_start iyy1_type tkey_attr_text ");
    result[95] = PadText.getInstance(  15,
      "!  SET loc_imp_filter_stop type tkey_attr_text TO imp_filter_stop iyy1_type tkey_attr_text ");
    result[96] = PadText.getInstance(  16,"!   ");
    result[97] = PadText.getInstance(  17,"!  SET loc_imp_filter type tsearch_attr_text TO imp_filter iyy1_type tsearch_attr_text ")
      ;
    result[98] = PadText.getInstance(  18,"!  SET loc_imp_filter type tother_attr_text TO imp_filter iyy1_type tother_attr_text ");
    result[99] = PadText.getInstance(  19,"!   ");
    result[100] = PadText.getInstance(  20,"!  NOTE: ");
    result[101] = PadText.getInstance(  20,"!  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    result[102] = PadText.getInstance(  20,"!  USE <implementation ab>");
    result[103] = PadText.getInstance(  20,"!  ");
    result[104] = PadText.getInstance(  21,"!  USE cyyy0351_type_list");
    result[105] = PadText.getInstance(  21,
      "!     WHICH IMPORTS: Work View loc_imp_filter iyy1_list TO Work View imp_filter iyy1_list");
    result[106] = PadText.getInstance(  21,"!                    Entity View loc_imp_from type TO Entity View imp_from type");
    result[107] = PadText.getInstance(  21,
      "!                    Entity View loc_imp_filter_start type TO Entity View imp_filter_start type");
    result[108] = PadText.getInstance(  21,
      "!                    Entity View loc_imp_filter_stop type TO Entity View imp_filter_stop type");
    result[109] = PadText.getInstance(  21,"!                    Entity View loc_imp_filter type TO Entity View imp_filter type");
    result[110] = PadText.getInstance(  21,"!     WHICH EXPORTS: Group View  loc_exp_group_list FROM Group View exp_group_list");
    result[111] = PadText.getInstance(  21,
      "!                    Work View exp_error iyy1_component FROM Work View exp_error iyy1_component");
    result[112] = PadText.getInstance(  22,"!   ");
    result[113] = PadText.getInstance(  23,"!  NOTE: ");
    result[114] = PadText.getInstance(  23,"!  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    result[115] = PadText.getInstance(  23,"!  SET <exp*> TO <loc exp*>");
    result[116] = PadText.getInstance(  23,"!  ");
    result[117] = PadText.getInstance(  24,"!  +=>FOR SUBSCRIPT OF loc_exp_group_list FROM 1 TO LAST OF loc_exp_group_list BY 1");
    result[118] = PadText.getInstance(  25,"!  !  SET SUBSCRIPT OF exp_group_list TO SUBSCRIPT OF loc_exp_group_list ");
    result[119] = PadText.getInstance(  26,"!  !  SET exp_g_list iyy1_type tinstance_id TO loc_exp_g_list type tinstance_id ");
    result[120] = PadText.getInstance(  27,"!  !  SET exp_g_list iyy1_type treference_id TO loc_exp_g_list type treference_id ");
    result[121] = PadText.getInstance(  28,"!  !  SET exp_g_list iyy1_type tcreate_user_id TO loc_exp_g_list type tcreate_user_id ")
      ;
    result[122] = PadText.getInstance(  29,"!  !  SET exp_g_list iyy1_type tupdate_user_id TO loc_exp_g_list type tupdate_user_id ")
      ;
    result[123] = PadText.getInstance(  30,"!  !  SET exp_g_list iyy1_type tkey_attr_text TO loc_exp_g_list type tkey_attr_text ");
    result[124] = PadText.getInstance(  31,
      "!  !  SET exp_g_list iyy1_type tsearch_attr_text TO loc_exp_g_list type tsearch_attr_text ");
    result[125] = PadText.getInstance(  32,"!  !  SET exp_g_list iyy1_type tother_attr_text TO loc_exp_g_list type tother_attr_text "
      );
    result[126] = PadText.getInstance(  33,"!  !  SET exp_g_list iyy1_type tother_attr_date TO loc_exp_g_list type tother_attr_date "
      );
    result[127] = PadText.getInstance(  34,"!  !  SET exp_g_list iyy1_type tother_attr_time TO loc_exp_g_list type tother_attr_time "
      );
    result[128] = PadText.getInstance(  35,
      "!  !  SET exp_g_list iyy1_type tother_attr_amount TO loc_exp_g_list type tother_attr_amount ");
    result[129] = PadText.getInstance(  24,"!  +--");
    result[130] = PadText.getInstance(   0,"+---");
    result[131] = PadText.getInstance(PadText.LASTLINE,"************************* BOTTOM OF DATA *************************");
    return result;
  }
  final static int PADTEXT_SIZE = 132;
  //       +->   MYY10351_TYPE_LIST                07/05/2023  15:10
  //       !       IMPORTS:
  //       !         Work View imp_filter iyy1_list (Transient, Mandatory, Import only)
  //       !           sort_option
  //       !           scroll_type
  //       !           list_direction
  //       !           scroll_amount
  //       !           order_by_field_num
  //       !         Entity View imp_from iyy1_type (Transient, Mandatory, Import only)
  //       !           tinstance_id
  //       !           tkey_attr_text
  //       !           tsearch_attr_text
  //       !         Entity View imp_filter_start iyy1_type (Transient, Mandatory, Import only)
  //       !           tkey_attr_text
  //       !         Entity View imp_filter_stop iyy1_type (Transient, Mandatory, Import only)
  //       !           tkey_attr_text
  //       !         Entity View imp_filter iyy1_type (Transient, Mandatory, Import only)
  //       !           tsearch_attr_text
  //       !           tother_attr_text
  //       !       EXPORTS:
  //       !         Group View (48) exp_group_list
  //       !           Entity View exp_g_list iyy1_type (Transient, Export only)
  //       !             tinstance_id
  //       !             treference_id
  //       !             tcreate_user_id
  //       !             tupdate_user_id
  //       !             tkey_attr_text
  //       !             tsearch_attr_text
  //       !             tother_attr_text
  //       !             tother_attr_date
  //       !             tother_attr_time
  //       !             tother_attr_amount
  //       !         Work View exp_error iyy1_component (Transient, Export only)
  //       !           severity_code
  //       !           rollback_indicator
  //       !           origin_servid
  //       !           context_string
  //       !           return_code
  //       !           reason_code
  //       !           checksum
  //       !       LOCALS:
  //       !         Work View loc_imp_filter iyy1_list
  //       !           sort_option
  //       !           scroll_type
  //       !           list_direction
  //       !           scroll_amount
  //       !           order_by_field_num
  //       !         Entity View loc_imp_from type
  //       !           tinstance_id
  //       !           tkey_attr_text
  //       !           tsearch_attr_text
  //       !         Entity View loc_imp_filter_start type
  //       !           tkey_attr_text
  //       !         Entity View loc_imp_filter_stop type
  //       !           tkey_attr_text
  //       !         Entity View loc_imp_filter type
  //       !           tsearch_attr_text
  //       !           tother_attr_text
  //       !         Group View (48) loc_exp_group_list
  //       !           Entity View loc_exp_g_list type
  //       !             tinstance_id
  //       !             treference_id
  //       !             tcreate_user_id
  //       !             tupdate_user_id
  //       !             tkey_attr_text
  //       !             tsearch_attr_text
  //       !             tother_attr_text
  //       !             tother_attr_date
  //       !             tother_attr_time
  //       !             tother_attr_amount
  //       !
  //       !     PROCEDURE STATEMENTS
  //       !
  //     1 !  NOTE: 
  //     1 !  See the description for the purpose
  //     1 !  
  //     2 !  NOTE: 
  //     2 !  RELEASE HISTORY
  //     2 !  01_00 23-02-1998 New release
  //     2 !  
  //     3 !  NOTE: 
  //     3 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  //     3 !  SET <loc imp*> TO <imp*>
  //     3 !  
  //     4 !  SET loc_imp_filter iyy1_list list_direction TO imp_filter iyy1_list list_direction 
  //     5 !  SET loc_imp_filter iyy1_list scroll_type TO imp_filter iyy1_list scroll_type 
  //     6 !  SET loc_imp_filter iyy1_list sort_option TO imp_filter iyy1_list sort_option 
  //     7 !  SET loc_imp_filter iyy1_list scroll_amount TO imp_filter iyy1_list scroll_amount 
  //     8 !  SET loc_imp_filter iyy1_list order_by_field_num TO imp_filter iyy1_list order_by_field_num 
  //     9 !   
  //    10 !  SET loc_imp_from type tinstance_id TO imp_from iyy1_type tinstance_id 
  //    11 !  SET loc_imp_from type tkey_attr_text TO imp_from iyy1_type tkey_attr_text 
  //    12 !  SET loc_imp_from type tsearch_attr_text TO imp_from iyy1_type tsearch_attr_text 
  //    13 !   
  //    14 !  SET loc_imp_filter_start type tkey_attr_text TO imp_filter_start iyy1_type tkey_attr_text 
  //    15 !  SET loc_imp_filter_stop type tkey_attr_text TO imp_filter_stop iyy1_type tkey_attr_text 
  //    16 !   
  //    17 !  SET loc_imp_filter type tsearch_attr_text TO imp_filter iyy1_type tsearch_attr_text 
  //    18 !  SET loc_imp_filter type tother_attr_text TO imp_filter iyy1_type tother_attr_text 
  //    19 !   
  //    20 !  NOTE: 
  //    20 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  //    20 !  USE <implementation ab>
  //    20 !  
  //    21 !  USE cyyy0351_type_list
  //    21 !     WHICH IMPORTS: Work View loc_imp_filter iyy1_list TO Work View imp_filter iyy1_list
  //    21 !                    Entity View loc_imp_from type TO Entity View imp_from type
  //    21 !                    Entity View loc_imp_filter_start type TO Entity View imp_filter_start type
  //    21 !                    Entity View loc_imp_filter_stop type TO Entity View imp_filter_stop type
  //    21 !                    Entity View loc_imp_filter type TO Entity View imp_filter type
  //    21 !     WHICH EXPORTS: Group View  loc_exp_group_list FROM Group View exp_group_list
  //    21 !                    Work View exp_error iyy1_component FROM Work View exp_error iyy1_component
  //    22 !   
  //    23 !  NOTE: 
  //    23 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  //    23 !  SET <exp*> TO <loc exp*>
  //    23 !  
  //    24 !  +=>FOR SUBSCRIPT OF loc_exp_group_list FROM 1 TO LAST OF loc_exp_group_list BY 1
  //    25 !  !  SET SUBSCRIPT OF exp_group_list TO SUBSCRIPT OF loc_exp_group_list 
  //    26 !  !  SET exp_g_list iyy1_type tinstance_id TO loc_exp_g_list type tinstance_id 
  //    27 !  !  SET exp_g_list iyy1_type treference_id TO loc_exp_g_list type treference_id 
  //    28 !  !  SET exp_g_list iyy1_type tcreate_user_id TO loc_exp_g_list type tcreate_user_id 
  //    29 !  !  SET exp_g_list iyy1_type tupdate_user_id TO loc_exp_g_list type tupdate_user_id 
  //    30 !  !  SET exp_g_list iyy1_type tkey_attr_text TO loc_exp_g_list type tkey_attr_text 
  //    31 !  !  SET exp_g_list iyy1_type tsearch_attr_text TO loc_exp_g_list type tsearch_attr_text 
  //    32 !  !  SET exp_g_list iyy1_type tother_attr_text TO loc_exp_g_list type tother_attr_text 
  //    33 !  !  SET exp_g_list iyy1_type tother_attr_date TO loc_exp_g_list type tother_attr_date 
  //    34 !  !  SET exp_g_list iyy1_type tother_attr_time TO loc_exp_g_list type tother_attr_time 
  //    35 !  !  SET exp_g_list iyy1_type tother_attr_amount TO loc_exp_g_list type tother_attr_amount 
  //    24 !  +--
  //       +---
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  //  CONSTRUCTOR FOR THE CLASS       
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  public MYY10351()
  {
    iefCGenRlse = "CA Gen 8.6";
    ssCopyright = "Copyright (c) 2023 CA Technologies. All rights reserved.";
    iefCGenDate = "2023/07/05";
    iefCGenTime = "15:10:15";
    iefCGenEncy = "9.2.A6";
    iefCGenUserId = "HakanBal";
    iefCGenModel = "N8I_ORT_YYY_0112_TEMPLATE";
    iefCGenSubset = "ALL";
    iefCGenName = "MYY10351_TYPE_LIST";
    nestingLevel = 0;
    valChkDeadlockTimeout = false;
    valChkDBError = false;
  }
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // ACTION BLOCK FUNCTION DECLARATIONS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  public void MYY10351( Object in_runtime_parm1, 
  	IRuntimePStepContext in_runtime_parm2, 
  	GlobData in_globdata, 
  	MYY10351_IA import_view, 
  	MYY10351_OA export_view )
  {
    iefRuntimeParm1 = in_runtime_parm1;
    iefRuntimeParm2 = in_runtime_parm2;
    globdata = in_globdata;
    w_ia = import_view;
    w_oa = export_view;
    _MYY10351();
  }
  
  private void _MYY10351()
  {
    
    f_22020161_localAlloc("MYY10351_TYPE_LIST");
    if ( globdata.getErrorData().getLastStatus() == ErrorData.IEF_ALLOCATION_ERROR_FL_LS )
    	return;
    
    ++(nestingLevel);
    try {
      f_22020161_init();
      f_22020161();
    } catch( ABException e ) {
    } finally {
      --(nestingLevel);
    }
    String last_stmt_num_saved = globdata.getStateData().getLastStatementNumber();
    globdata.getStateData().setLastStatementNumber( "9999999999" );
    try {
      f_0_trace();
    } catch( ABException e ) {
    }
    globdata.getStateData().setLastStatementNumber( last_stmt_num_saved );
  }
  public void f_22020161()
  	throws ABException
  {
    func_0022020161_esc_flag = false;
    globdata.getStateData().setCurrentABId( "0022020161" );
    globdata.getStateData().setCurrentABName( "MYY10351_TYPE_LIST" );
    padview_init();
    globdata.getStateData().setLastStatementNumber( "0000000000" );
    f_0_trace();
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    See the description for the purpose                             
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    RELEASE HISTORY                                                 
    //    01_00 23-02-1998 New release                                    
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
    //    !!!!!!!!!!!!                                                    
    //    SET <loc imp*> TO <imp*>                                        
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    globdata.getStateData().setLastStatementNumber( "0000000004" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpFilterIyy1ListListDirection = FixedStringAttr.valueOf(w_ia.ImpFilterIyy1ListListDirection, (short)1);
    }
    globdata.getStateData().setLastStatementNumber( "0000000005" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpFilterIyy1ListScrollType = FixedStringAttr.valueOf(w_ia.ImpFilterIyy1ListScrollType, (short)1);
    }
    globdata.getStateData().setLastStatementNumber( "0000000006" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpFilterIyy1ListSortOption = FixedStringAttr.valueOf(w_ia.ImpFilterIyy1ListSortOption, (short)3);
    }
    globdata.getStateData().setLastStatementNumber( "0000000007" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpFilterIyy1ListScrollAmount = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) w_ia.ImpFilterIyy1ListScrollAmount, 0, 
        TIRD2DEC.ROUND_NONE, 5));
    }
    globdata.getStateData().setLastStatementNumber( "0000000008" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpFilterIyy1ListOrderByFieldNum = ShortAttr.valueOf((short)TIRD2DEC.TIRD2DC1((double) 
        w_ia.ImpFilterIyy1ListOrderByFieldNum, 0, TIRD2DEC.ROUND_NONE, 1));
    }
    
    globdata.getStateData().setLastStatementNumber( "0000000010" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpFromTypeTinstanceId = TimestampAttr.valueOf(w_ia.ImpFromIyy1TypeTinstanceId);
    }
    globdata.getStateData().setLastStatementNumber( "0000000011" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpFromTypeTkeyAttrText = FixedStringAttr.valueOf(w_ia.ImpFromIyy1TypeTkeyAttrText, (short)4);
    }
    globdata.getStateData().setLastStatementNumber( "0000000012" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpFromTypeTsearchAttrText = FixedStringAttr.valueOf(w_ia.ImpFromIyy1TypeTsearchAttrText, (short)20);
    }
    
    globdata.getStateData().setLastStatementNumber( "0000000014" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpFilterStartTypeTkeyAttrText = FixedStringAttr.valueOf(w_ia.ImpFilterStartIyy1TypeTkeyAttrText, (short)4);
    }
    globdata.getStateData().setLastStatementNumber( "0000000015" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpFilterStopTypeTkeyAttrText = FixedStringAttr.valueOf(w_ia.ImpFilterStopIyy1TypeTkeyAttrText, (short)4);
    }
    
    globdata.getStateData().setLastStatementNumber( "0000000017" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpFilterTypeTsearchAttrText = FixedStringAttr.valueOf(w_ia.ImpFilterIyy1TypeTsearchAttrText, (short)20);
    }
    globdata.getStateData().setLastStatementNumber( "0000000018" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpFilterTypeTotherAttrText = FixedStringAttr.valueOf(w_ia.ImpFilterIyy1TypeTotherAttrText, (short)2);
    }
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
    //    !!!!!!!!!!!!                                                    
    //    USE <implementation ab>                                         
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    globdata.getStateData().setLastStatementNumber( "0000000021" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      
      cyyy0351_ia = (gen.ort.yyy.CYYY0351_IA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY0351_IA"));
      cyyy0351_oa = (gen.ort.yyy.CYYY0351_OA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY0351_OA"));
      cyyy0351_ia.ImpFilterTypeTsearchAttrText = FixedStringAttr.valueOf(w_la.LocImpFilterTypeTsearchAttrText, (short)20);
      cyyy0351_ia.ImpFilterTypeTotherAttrText = FixedStringAttr.valueOf(w_la.LocImpFilterTypeTotherAttrText, (short)2);
      cyyy0351_ia.ImpFilterStopTypeTkeyAttrText = FixedStringAttr.valueOf(w_la.LocImpFilterStopTypeTkeyAttrText, (short)4);
      cyyy0351_ia.ImpFilterStartTypeTkeyAttrText = FixedStringAttr.valueOf(w_la.LocImpFilterStartTypeTkeyAttrText, (short)4);
      cyyy0351_ia.ImpFromTypeTinstanceId = TimestampAttr.valueOf(w_la.LocImpFromTypeTinstanceId);
      cyyy0351_ia.ImpFromTypeTkeyAttrText = FixedStringAttr.valueOf(w_la.LocImpFromTypeTkeyAttrText, (short)4);
      cyyy0351_ia.ImpFromTypeTsearchAttrText = FixedStringAttr.valueOf(w_la.LocImpFromTypeTsearchAttrText, (short)20);
      cyyy0351_ia.ImpFilterIyy1ListSortOption = FixedStringAttr.valueOf(w_la.LocImpFilterIyy1ListSortOption, (short)3);
      cyyy0351_ia.ImpFilterIyy1ListScrollType = FixedStringAttr.valueOf(w_la.LocImpFilterIyy1ListScrollType, (short)1);
      cyyy0351_ia.ImpFilterIyy1ListListDirection = FixedStringAttr.valueOf(w_la.LocImpFilterIyy1ListListDirection, (short)1);
      cyyy0351_ia.ImpFilterIyy1ListScrollAmount = IntAttr.valueOf(w_la.LocImpFilterIyy1ListScrollAmount);
      cyyy0351_ia.ImpFilterIyy1ListOrderByFieldNum = ShortAttr.valueOf(w_la.LocImpFilterIyy1ListOrderByFieldNum);
      globdata.getErrorData().setErrorEncounteredSW( ErrorData.NO_ERROR_FOUND_SW );
      iefRuntimeParm2.useActionBlock("gen.ort.yyy.CYYY0351", "CYYY0351", cyyy0351_ia, cyyy0351_oa);
      if ( ((!(globdata.getErrorData().getStatus().equals( ErrorData.NONE_SF ))) || (globdata.getErrorData().getErrorEncounteredSW() 
        != ErrorData.NO_ERROR_FOUND_SW)) || (globdata.getErrorData().getViewOverflowSW() != ErrorData.NO_ERROR_FOUND_SW) )
      {
        throw new ABException();
      }
      globdata.getStateData().setCurrentABId( "0022020161" );
      globdata.getStateData().setCurrentABName( "MYY10351_TYPE_LIST" );
      globdata.getStateData().setLastStatementNumber( "0000000021" );
      w_oa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.valueOf(cyyy0351_oa.ExpErrorIyy1ComponentSeverityCode, (short)1);
      w_oa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.valueOf(cyyy0351_oa.ExpErrorIyy1ComponentRollbackIndicator, (
        short)1);
      w_oa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.valueOf(cyyy0351_oa.ExpErrorIyy1ComponentOriginServid);
      w_oa.ExpErrorIyy1ComponentContextString = StringAttr.valueOf(cyyy0351_oa.ExpErrorIyy1ComponentContextString, (short)512);
      w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf(cyyy0351_oa.ExpErrorIyy1ComponentReturnCode);
      w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf(cyyy0351_oa.ExpErrorIyy1ComponentReasonCode);
      w_oa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.valueOf(cyyy0351_oa.ExpErrorIyy1ComponentChecksum, (short)15);
      w_la.LocExpGroupList_MA = IntAttr.valueOf(cyyy0351_oa.ExpGroupList_MA);
      for(adim1 = 1; adim1 <= w_la.LocExpGroupList_MA; ++(adim1))
      {
        w_la.LocExpGListTypeTinstanceId[adim1-1] = TimestampAttr.valueOf(cyyy0351_oa.ExpGListTypeTinstanceId[adim1-1]);
        w_la.LocExpGListTypeTreferenceId[adim1-1] = TimestampAttr.valueOf(cyyy0351_oa.ExpGListTypeTreferenceId[adim1-1]);
        w_la.LocExpGListTypeTcreateUserId[adim1-1] = FixedStringAttr.valueOf(cyyy0351_oa.ExpGListTypeTcreateUserId[adim1-1], (short)
          8);
        w_la.LocExpGListTypeTupdateUserId[adim1-1] = FixedStringAttr.valueOf(cyyy0351_oa.ExpGListTypeTupdateUserId[adim1-1], (short)
          8);
        w_la.LocExpGListTypeTkeyAttrText[adim1-1] = FixedStringAttr.valueOf(cyyy0351_oa.ExpGListTypeTkeyAttrText[adim1-1], (short)4)
          ;
        w_la.LocExpGListTypeTsearchAttrText[adim1-1] = FixedStringAttr.valueOf(cyyy0351_oa.ExpGListTypeTsearchAttrText[adim1-1], (
          short)20);
        w_la.LocExpGListTypeTotherAttrText[adim1-1] = FixedStringAttr.valueOf(cyyy0351_oa.ExpGListTypeTotherAttrText[adim1-1], (
          short)2);
        w_la.LocExpGListTypeTotherAttrDate[adim1-1] = DateAttr.valueOf(cyyy0351_oa.ExpGListTypeTotherAttrDate[adim1-1]);
        w_la.LocExpGListTypeTotherAttrTime[adim1-1] = TimeAttr.valueOf(cyyy0351_oa.ExpGListTypeTotherAttrTime[adim1-1]);
        w_la.LocExpGListTypeTotherAttrAmount[adim1-1] = BigDecimalAttr.valueOf(cyyy0351_oa.ExpGListTypeTotherAttrAmount[adim1-1]);
      }
      cyyy0351_ia.freeInstance();
      cyyy0351_ia = null;
      cyyy0351_oa.freeInstance();
      cyyy0351_oa = null;
    }
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
    //    !!!!!!!!!!!!                                                    
    //    SET <exp*> TO <loc exp*>                                        
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    globdata.getStateData().setLastStatementNumber( "0000000024" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      while_0070254835_esc_flag = false;
      LocExpGroupList_PS_002 = (int)1;
      limit___0070254835 = w_la.LocExpGroupList_MA;
      by___0070254835 = 1;
      while ((LocExpGroupList_PS_002 <= limit___0070254835) && (while_0070254835_esc_flag != true))
      {
        if ( (LocExpGroupList_PS_002 > 48) || (LocExpGroupList_PS_002 < 1) )
        break;
        if ( (LocExpGroupList_PS_002 > w_la.LocExpGroupList_MA) && (LocExpGroupList_PS_002 <= 48) )
        w_la.LocExpGroupList_MA = IntAttr.valueOf(LocExpGroupList_PS_002);
        {
          f_20971894();
        }
        globdata.getStateData().setLastStatementNumber( "0000000024" );
        LocExpGroupList_PS_002 = (int)(LocExpGroupList_PS_002 + by___0070254835);
        globdata.getStateData().setLastStatementNumber( "0000000024" );
        f_0_trace();
        if ( trace_ret_code != 8 )
        {
        }
        else {
          break;
        }
      }
      if ( LocExpGroupList_PS_002 > 48 )
      LocExpGroupList_PS_002 = 48;
    }
  }
  
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // SUBORDINATE FUNCTIONS
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  
  public void f_20971894()
  	throws ABException
  {
    func_0020971894_esc_flag = false;
    globdata.getStateData().setLastStatementNumber( "0000000025" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      ExpGroupList_PS_001 = (int)TIRD2DEC.TIRD2DC1(LocExpGroupList_PS_002, 0, TIRD2DEC.ROUND_NONE, 0);
      if ( (ExpGroupList_PS_001 > w_oa.ExpGroupList_MA) && (ExpGroupList_PS_001 <= 48) )
      w_oa.ExpGroupList_MA = IntAttr.valueOf(ExpGroupList_PS_001);
    }
    globdata.getStateData().setLastStatementNumber( "0000000026" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpGListIyy1TypeTinstanceId[ExpGroupList_PS_001-1] = TimestampAttr.valueOf(w_la.LocExpGListTypeTinstanceId[
        LocExpGroupList_PS_002-1]);
      f_173015127_rgvc();
    }
    globdata.getStateData().setLastStatementNumber( "0000000027" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpGListIyy1TypeTreferenceId[ExpGroupList_PS_001-1] = TimestampAttr.valueOf(w_la.LocExpGListTypeTreferenceId[
        LocExpGroupList_PS_002-1]);
      f_173015127_rgvc();
    }
    globdata.getStateData().setLastStatementNumber( "0000000028" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpGListIyy1TypeTcreateUserId[ExpGroupList_PS_001-1] = FixedStringAttr.valueOf(w_la.LocExpGListTypeTcreateUserId[
        LocExpGroupList_PS_002-1], (short)8);
      f_173015127_rgvc();
    }
    globdata.getStateData().setLastStatementNumber( "0000000029" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpGListIyy1TypeTupdateUserId[ExpGroupList_PS_001-1] = FixedStringAttr.valueOf(w_la.LocExpGListTypeTupdateUserId[
        LocExpGroupList_PS_002-1], (short)8);
      f_173015127_rgvc();
    }
    globdata.getStateData().setLastStatementNumber( "0000000030" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpGListIyy1TypeTkeyAttrText[ExpGroupList_PS_001-1] = FixedStringAttr.valueOf(w_la.LocExpGListTypeTkeyAttrText[
        LocExpGroupList_PS_002-1], (short)4);
      f_173015127_rgvc();
    }
    globdata.getStateData().setLastStatementNumber( "0000000031" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpGListIyy1TypeTsearchAttrText[ExpGroupList_PS_001-1] = FixedStringAttr.valueOf(w_la.LocExpGListTypeTsearchAttrText[
        LocExpGroupList_PS_002-1], (short)20);
      f_173015127_rgvc();
    }
    globdata.getStateData().setLastStatementNumber( "0000000032" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpGListIyy1TypeTotherAttrText[ExpGroupList_PS_001-1] = FixedStringAttr.valueOf(w_la.LocExpGListTypeTotherAttrText[
        LocExpGroupList_PS_002-1], (short)2);
      f_173015127_rgvc();
    }
    globdata.getStateData().setLastStatementNumber( "0000000033" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpGListIyy1TypeTotherAttrDate[ExpGroupList_PS_001-1] = DateAttr.valueOf(w_la.LocExpGListTypeTotherAttrDate[
        LocExpGroupList_PS_002-1]);
      f_173015127_rgvc();
    }
    globdata.getStateData().setLastStatementNumber( "0000000034" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpGListIyy1TypeTotherAttrTime[ExpGroupList_PS_001-1] = TimeAttr.valueOf(w_la.LocExpGListTypeTotherAttrTime[
        LocExpGroupList_PS_002-1]);
      f_173015127_rgvc();
    }
    globdata.getStateData().setLastStatementNumber( "0000000035" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpGListIyy1TypeTotherAttrAmount[ExpGroupList_PS_001-1] = BigDecimalAttr.valueOf(TIRBDTRU.truncateToBigDecimal( 
        w_la.LocExpGListTypeTotherAttrAmount[LocExpGroupList_PS_002-1], 2));
      f_173015127_rgvc();
    }
  }
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // INITIALIZATION UTILITY FUNCTIONS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  public void f_22020161_localAlloc(String abname)
  {
    // Request localview allocation 
    w_la = (gen.ort.yyy.MYY10351_LA)(iefRuntimeParm2.getInstance("gen.ort.yyy.MYY10351_LA"));
    if ( w_la == null )
    {
      globdata.getStateData().setCurrentABId( "0022020161" );
      globdata.getStateData().setCurrentABName( abname );
      globdata.getErrorData().setErrorEncounteredSW( ErrorData.ERROR_FOUND_SW );
      globdata.getErrorData().setLastStatus( ErrorData.IEF_ALLOCATION_ERROR_FL_LS );
    }
  }
  
  public void f_22020161_init()
  	throws ABException
  {
    if ( nestingLevel < 2 )
    {
      w_la.reset();
    }
    w_la.LocExpGroupList_MA = 0;
    for(LocExpGroupList_PS_002 = 1; LocExpGroupList_PS_002 <= 48; ++(LocExpGroupList_PS_002))
    {
    }
    w_oa.ExpGroupList_MA = 0;
    for(ExpGroupList_PS_001 = 1; ExpGroupList_PS_001 <= 48; ++(ExpGroupList_PS_001))
    {
      w_oa.ExpGListIyy1TypeTinstanceId[ExpGroupList_PS_001-1] = "00000000000000000000";
      w_oa.ExpGListIyy1TypeTreferenceId[ExpGroupList_PS_001-1] = "00000000000000000000";
      w_oa.ExpGListIyy1TypeTcreateUserId[ExpGroupList_PS_001-1] = "        ";
      w_oa.ExpGListIyy1TypeTupdateUserId[ExpGroupList_PS_001-1] = "        ";
      w_oa.ExpGListIyy1TypeTkeyAttrText[ExpGroupList_PS_001-1] = "    ";
      w_oa.ExpGListIyy1TypeTsearchAttrText[ExpGroupList_PS_001-1] = "                    ";
      w_oa.ExpGListIyy1TypeTotherAttrText[ExpGroupList_PS_001-1] = "  ";
      w_oa.ExpGListIyy1TypeTotherAttrDate[ExpGroupList_PS_001-1] = 00000000;
      w_oa.ExpGListIyy1TypeTotherAttrTime[ExpGroupList_PS_001-1] = 00000000;
      w_oa.ExpGListIyy1TypeTotherAttrAmount[ExpGroupList_PS_001-1] = BigDecimalAttr.getDefaultValue();
    }
    w_oa.ExpErrorIyy1ComponentSeverityCode = " ";
    w_oa.ExpErrorIyy1ComponentRollbackIndicator = " ";
    w_oa.ExpErrorIyy1ComponentOriginServid = 0.0;
    w_oa.ExpErrorIyy1ComponentContextString = "";
    w_oa.ExpErrorIyy1ComponentReturnCode = 0;
    w_oa.ExpErrorIyy1ComponentReasonCode = 0;
    w_oa.ExpErrorIyy1ComponentChecksum = "               ";
    ExpGroupList_PS_001 = 1;
    LocExpGroupList_PS_002 = 1;
  }
  
  public void f_0_trace()
  	throws ABException
  {
    trace_ret_code = TIRTRCE.TIRTRCE(iefRuntimeParm1, iefRuntimeParm2, globdata, padtext, padview);
    if ( trace_ret_code == 20 )
    {
      throw new ABException();
    }
  }
  
  public void padview_init()
  {
padview[0] = PadView.getInstance("IMPORT                          ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_ia, 
      "w_ia");
    padview[1] = PadView.getInstance("IMP_FILTER                      ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ia, 
      null);
    padview[2] = PadView.getInstance("IYY1_LIST                       ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, w_ia,
       null);
    padview[3] = PadView.getInstance("SORT_OPTION                     ", 3, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpFilterIyy1ListSortOption");
    padview[4] = PadView.getInstance("SCROLL_TYPE                     ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpFilterIyy1ListScrollType");
    padview[5] = PadView.getInstance("LIST_DIRECTION                  ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpFilterIyy1ListListDirection");
    padview[6] = PadView.getInstance("SCROLL_AMOUNT                   ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_NUMERIC,
       w_ia, "ImpFilterIyy1ListScrollAmount");
    padview[7] = PadView.getInstance("ORDER_BY_FIELD_NUM              ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_NUMERIC,
       w_ia, "ImpFilterIyy1ListOrderByFieldNum");
    padview[8] = PadView.getInstance("IMP_FROM                        ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ia, 
      null);
    padview[9] = PadView.getInstance("IYY1_TYPE                       ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, w_ia,
       null);
    padview[10] = PadView.getInstance("TINSTANCE_ID                    ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_ia, "ImpFromIyy1TypeTinstanceId");
    padview[11] = PadView.getInstance("TKEY_ATTR_TEXT                  ", 4, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpFromIyy1TypeTkeyAttrText");
    padview[12] = PadView.getInstance("TSEARCH_ATTR_TEXT               ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpFromIyy1TypeTsearchAttrText");
    padview[13] = PadView.getInstance("IMP_FILTER_START                ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ia, 
      null);
    padview[14] = PadView.getInstance("IYY1_TYPE                       ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_ia, null);
    padview[15] = PadView.getInstance("TKEY_ATTR_TEXT                  ", 4, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpFilterStartIyy1TypeTkeyAttrText");
    padview[16] = PadView.getInstance("IMP_FILTER_STOP                 ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ia, 
      null);
    padview[17] = PadView.getInstance("IYY1_TYPE                       ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_ia, null);
    padview[18] = PadView.getInstance("TKEY_ATTR_TEXT                  ", 4, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpFilterStopIyy1TypeTkeyAttrText");
    padview[19] = PadView.getInstance("IMP_FILTER                      ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ia, 
      null);
    padview[20] = PadView.getInstance("IYY1_TYPE                       ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_ia, null);
    padview[21] = PadView.getInstance("TSEARCH_ATTR_TEXT               ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpFilterIyy1TypeTsearchAttrText");
    padview[22] = PadView.getInstance("TOTHER_ATTR_TEXT                ", 2, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpFilterIyy1TypeTotherAttrText");
    padview[23] = PadView.getInstance("EXPORT                          ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_oa, 
      "w_oa");
    padview[24] = PadView.getInstance("EXP_GROUP_LIST                  ", 0, 0, 48, (short)2, PadView.VT_GROUP, PadView.DT_NONE, 
      w_oa, "ExpGroupList_MA");
    padview[25] = PadView.getInstance("EXP_G_LIST                      ", 0, 0, 0, (short)3, PadView.VT_VIEW, PadView.DT_NONE, w_oa, 
      null);
    padview[26] = PadView.getInstance("IYY1_TYPE                       ", 0, 0, 0, (short)4, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_oa, null);
    padview[27] = PadView.getInstance("TINSTANCE_ID                    ", 20, 0, 0, (short)4, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_oa, "ExpGListIyy1TypeTinstanceId");
    padview[28] = PadView.getInstance("TREFERENCE_ID                   ", 20, 0, 0, (short)4, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_oa, "ExpGListIyy1TypeTreferenceId");
    padview[29] = PadView.getInstance("TCREATE_USER_ID                 ", 8, 0, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpGListIyy1TypeTcreateUserId");
    padview[30] = PadView.getInstance("TUPDATE_USER_ID                 ", 8, 0, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpGListIyy1TypeTupdateUserId");
    padview[31] = PadView.getInstance("TKEY_ATTR_TEXT                  ", 4, 0, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpGListIyy1TypeTkeyAttrText");
    padview[32] = PadView.getInstance("TSEARCH_ATTR_TEXT               ", 20, 0, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpGListIyy1TypeTsearchAttrText");
    padview[33] = PadView.getInstance("TOTHER_ATTR_TEXT                ", 2, 0, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpGListIyy1TypeTotherAttrText");
    padview[34] = PadView.getInstance("TOTHER_ATTR_DATE                ", 8, 0, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_DATE, 
      w_oa, "ExpGListIyy1TypeTotherAttrDate");
    padview[35] = PadView.getInstance("TOTHER_ATTR_TIME                ", 6, 0, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_TIME, 
      w_oa, "ExpGListIyy1TypeTotherAttrTime");
    padview[36] = PadView.getInstance("TOTHER_ATTR_AMOUNT              ", 17, 2, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_FIXED,
       w_oa, "ExpGListIyy1TypeTotherAttrAmount");
    padview[37] = PadView.getInstance("EXP_ERROR                       ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_oa, 
      null);
    padview[38] = PadView.getInstance("IYY1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_oa, null);
    padview[39] = PadView.getInstance("SEVERITY_CODE                   ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentSeverityCode");
    padview[40] = PadView.getInstance("ROLLBACK_INDICATOR              ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentRollbackIndicator");
    padview[41] = PadView.getInstance("ORIGIN_SERVID                   ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentOriginServid");
    padview[42] = PadView.getInstance("CONTEXT_STRING                  ", 512, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_oa, "ExpErrorIyy1ComponentContextString");
    padview[43] = PadView.getInstance("RETURN_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentReturnCode");
    padview[44] = PadView.getInstance("REASON_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentReasonCode");
    padview[45] = PadView.getInstance("CHECKSUM                        ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentChecksum");
    padview[46] = PadView.getInstance("LOCAL                           ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_la, 
      "w_la");
    padview[47] = PadView.getInstance("LOC_IMP_FILTER                  ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[48] = PadView.getInstance("IYY1_LIST                       ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[49] = PadView.getInstance("SORT_OPTION                     ", 3, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpFilterIyy1ListSortOption");
    padview[50] = PadView.getInstance("SCROLL_TYPE                     ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpFilterIyy1ListScrollType");
    padview[51] = PadView.getInstance("LIST_DIRECTION                  ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpFilterIyy1ListListDirection");
    padview[52] = PadView.getInstance("SCROLL_AMOUNT                   ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocImpFilterIyy1ListScrollAmount");
    padview[53] = PadView.getInstance("ORDER_BY_FIELD_NUM              ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocImpFilterIyy1ListOrderByFieldNum");
    padview[54] = PadView.getInstance("LOC_IMP_FROM                    ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[55] = PadView.getInstance("TYPE                            ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[56] = PadView.getInstance("TINSTANCE_ID                    ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_la, "LocImpFromTypeTinstanceId");
    padview[57] = PadView.getInstance("TKEY_ATTR_TEXT                  ", 4, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpFromTypeTkeyAttrText");
    padview[58] = PadView.getInstance("TSEARCH_ATTR_TEXT               ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpFromTypeTsearchAttrText");
    padview[59] = PadView.getInstance("LOC_IMP_FILTER_START            ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[60] = PadView.getInstance("TYPE                            ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[61] = PadView.getInstance("TKEY_ATTR_TEXT                  ", 4, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpFilterStartTypeTkeyAttrText");
    padview[62] = PadView.getInstance("LOC_IMP_FILTER_STOP             ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[63] = PadView.getInstance("TYPE                            ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[64] = PadView.getInstance("TKEY_ATTR_TEXT                  ", 4, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpFilterStopTypeTkeyAttrText");
    padview[65] = PadView.getInstance("LOC_IMP_FILTER                  ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[66] = PadView.getInstance("TYPE                            ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[67] = PadView.getInstance("TSEARCH_ATTR_TEXT               ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpFilterTypeTsearchAttrText");
    padview[68] = PadView.getInstance("TOTHER_ATTR_TEXT                ", 2, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpFilterTypeTotherAttrText");
    padview[69] = PadView.getInstance("LOC_EXP_GROUP_LIST              ", 0, 0, 48, (short)2, PadView.VT_GROUP, PadView.DT_NONE, 
      w_la, "LocExpGroupList_MA");
    padview[70] = PadView.getInstance("LOC_EXP_G_LIST                  ", 0, 0, 0, (short)3, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[71] = PadView.getInstance("TYPE                            ", 0, 0, 0, (short)4, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[72] = PadView.getInstance("TINSTANCE_ID                    ", 20, 0, 0, (short)4, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_la, "LocExpGListTypeTinstanceId");
    padview[73] = PadView.getInstance("TREFERENCE_ID                   ", 20, 0, 0, (short)4, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_la, "LocExpGListTypeTreferenceId");
    padview[74] = PadView.getInstance("TCREATE_USER_ID                 ", 8, 0, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocExpGListTypeTcreateUserId");
    padview[75] = PadView.getInstance("TUPDATE_USER_ID                 ", 8, 0, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocExpGListTypeTupdateUserId");
    padview[76] = PadView.getInstance("TKEY_ATTR_TEXT                  ", 4, 0, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocExpGListTypeTkeyAttrText");
    padview[77] = PadView.getInstance("TSEARCH_ATTR_TEXT               ", 20, 0, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocExpGListTypeTsearchAttrText");
    padview[78] = PadView.getInstance("TOTHER_ATTR_TEXT                ", 2, 0, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocExpGListTypeTotherAttrText");
    padview[79] = PadView.getInstance("TOTHER_ATTR_DATE                ", 8, 0, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_DATE, 
      w_la, "LocExpGListTypeTotherAttrDate");
    padview[80] = PadView.getInstance("TOTHER_ATTR_TIME                ", 6, 0, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_TIME, 
      w_la, "LocExpGListTypeTotherAttrTime");
    padview[81] = PadView.getInstance("TOTHER_ATTR_AMOUNT              ", 17, 2, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_FIXED,
       w_la, "LocExpGListTypeTotherAttrAmount");
    padview[82] = PadView.getInstance("******** BOTTOM OF DATA ********", 0, 0, 0, (short)0, PadView.VT_END, PadView.DT_NONE, w_la, 
      null);
  }
  public void f_173015127_rgvc()
  	throws ABException
  {
    if ( (ExpGroupList_PS_001 > 48) || (ExpGroupList_PS_001 < 1) )
    {
      globdata.getErrorData().setViewOverflowSW( ErrorData.ERROR_FOUND_SW );
      {
        throw new ABException();
      }
    }
  }
}// end class


package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: MYY10351_IA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:10:15
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF IMPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: MYY10351_IA
 **/
public class MYY10351_IA extends ViewBase implements IImportView, Serializable
{
  // Entity View: IMP_FILTER
  //        Type: IYY1_LIST
  /**
   * Attribute missing flag for: ImpFilterIyy1ListSortOption
   **/
  public char ImpFilterIyy1ListSortOption_AS;
  /**
   * Attribute for: ImpFilterIyy1ListSortOption
   * Domain: Text
   * Length: 3
   * Varying Length: N
   **/
  public String ImpFilterIyy1ListSortOption;
  /**
   * Attribute missing flag for: ImpFilterIyy1ListScrollType
   **/
  public char ImpFilterIyy1ListScrollType_AS;
  /**
   * Attribute for: ImpFilterIyy1ListScrollType
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ImpFilterIyy1ListScrollType;
  /**
   * Attribute missing flag for: ImpFilterIyy1ListListDirection
   **/
  public char ImpFilterIyy1ListListDirection_AS;
  /**
   * Attribute for: ImpFilterIyy1ListListDirection
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ImpFilterIyy1ListListDirection;
  /**
   * Attribute missing flag for: ImpFilterIyy1ListScrollAmount
   **/
  public char ImpFilterIyy1ListScrollAmount_AS;
  /**
   * Attribute for: ImpFilterIyy1ListScrollAmount
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ImpFilterIyy1ListScrollAmount;
  /**
   * Attribute missing flag for: ImpFilterIyy1ListOrderByFieldNum
   **/
  public char ImpFilterIyy1ListOrderByFieldNum_AS;
  /**
   * Attribute for: ImpFilterIyy1ListOrderByFieldNum
   * Domain: Number
   * Length: 1
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public short ImpFilterIyy1ListOrderByFieldNum;
  // Entity View: IMP_FROM
  //        Type: IYY1_TYPE
  /**
   * Attribute missing flag for: ImpFromIyy1TypeTinstanceId
   **/
  public char ImpFromIyy1TypeTinstanceId_AS;
  /**
   * Attribute for: ImpFromIyy1TypeTinstanceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String ImpFromIyy1TypeTinstanceId;
  /**
   * Attribute missing flag for: ImpFromIyy1TypeTkeyAttrText
   **/
  public char ImpFromIyy1TypeTkeyAttrText_AS;
  /**
   * Attribute for: ImpFromIyy1TypeTkeyAttrText
   * Domain: Text
   * Length: 4
   * Varying Length: N
   **/
  public String ImpFromIyy1TypeTkeyAttrText;
  /**
   * Attribute missing flag for: ImpFromIyy1TypeTsearchAttrText
   **/
  public char ImpFromIyy1TypeTsearchAttrText_AS;
  /**
   * Attribute for: ImpFromIyy1TypeTsearchAttrText
   * Domain: Text
   * Length: 20
   * Varying Length: N
   **/
  public String ImpFromIyy1TypeTsearchAttrText;
  // Entity View: IMP_FILTER_START
  //        Type: IYY1_TYPE
  /**
   * Attribute missing flag for: ImpFilterStartIyy1TypeTkeyAttrText
   **/
  public char ImpFilterStartIyy1TypeTkeyAttrText_AS;
  /**
   * Attribute for: ImpFilterStartIyy1TypeTkeyAttrText
   * Domain: Text
   * Length: 4
   * Varying Length: N
   **/
  public String ImpFilterStartIyy1TypeTkeyAttrText;
  // Entity View: IMP_FILTER_STOP
  //        Type: IYY1_TYPE
  /**
   * Attribute missing flag for: ImpFilterStopIyy1TypeTkeyAttrText
   **/
  public char ImpFilterStopIyy1TypeTkeyAttrText_AS;
  /**
   * Attribute for: ImpFilterStopIyy1TypeTkeyAttrText
   * Domain: Text
   * Length: 4
   * Varying Length: N
   **/
  public String ImpFilterStopIyy1TypeTkeyAttrText;
  // Entity View: IMP_FILTER
  //        Type: IYY1_TYPE
  /**
   * Attribute missing flag for: ImpFilterIyy1TypeTsearchAttrText
   **/
  public char ImpFilterIyy1TypeTsearchAttrText_AS;
  /**
   * Attribute for: ImpFilterIyy1TypeTsearchAttrText
   * Domain: Text
   * Length: 20
   * Varying Length: N
   **/
  public String ImpFilterIyy1TypeTsearchAttrText;
  /**
   * Attribute missing flag for: ImpFilterIyy1TypeTotherAttrText
   **/
  public char ImpFilterIyy1TypeTotherAttrText_AS;
  /**
   * Attribute for: ImpFilterIyy1TypeTotherAttrText
   * Domain: Text
   * Length: 2
   * Varying Length: N
   **/
  public String ImpFilterIyy1TypeTotherAttrText;
  /**
   * Default Constructor
   **/
  
  public MYY10351_IA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public MYY10351_IA(MYY10351_IA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static MYY10351_IA getInstance()
  {
    return new MYY10351_IA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new MYY10351_IA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    ImpFilterIyy1ListSortOption_AS = ' ';
    ImpFilterIyy1ListSortOption = "   ";
    ImpFilterIyy1ListScrollType_AS = ' ';
    ImpFilterIyy1ListScrollType = " ";
    ImpFilterIyy1ListListDirection_AS = ' ';
    ImpFilterIyy1ListListDirection = " ";
    ImpFilterIyy1ListScrollAmount_AS = ' ';
    ImpFilterIyy1ListScrollAmount = 0;
    ImpFilterIyy1ListOrderByFieldNum_AS = ' ';
    ImpFilterIyy1ListOrderByFieldNum = 0;
    ImpFromIyy1TypeTinstanceId_AS = ' ';
    ImpFromIyy1TypeTinstanceId = "00000000000000000000";
    ImpFromIyy1TypeTkeyAttrText_AS = ' ';
    ImpFromIyy1TypeTkeyAttrText = "    ";
    ImpFromIyy1TypeTsearchAttrText_AS = ' ';
    ImpFromIyy1TypeTsearchAttrText = "                    ";
    ImpFilterStartIyy1TypeTkeyAttrText_AS = ' ';
    ImpFilterStartIyy1TypeTkeyAttrText = "    ";
    ImpFilterStopIyy1TypeTkeyAttrText_AS = ' ';
    ImpFilterStopIyy1TypeTkeyAttrText = "    ";
    ImpFilterIyy1TypeTsearchAttrText_AS = ' ';
    ImpFilterIyy1TypeTsearchAttrText = "                    ";
    ImpFilterIyy1TypeTotherAttrText_AS = ' ';
    ImpFilterIyy1TypeTotherAttrText = "  ";
  }
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    throw new RuntimeException("can only execute getVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    throw new RuntimeException("can only execute setFromVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IImportView orig)
  {
    this.copyFrom((MYY10351_IA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(MYY10351_IA orig)
  {
    ImpFilterIyy1ListSortOption_AS = orig.ImpFilterIyy1ListSortOption_AS;
    ImpFilterIyy1ListSortOption = orig.ImpFilterIyy1ListSortOption;
    ImpFilterIyy1ListScrollType_AS = orig.ImpFilterIyy1ListScrollType_AS;
    ImpFilterIyy1ListScrollType = orig.ImpFilterIyy1ListScrollType;
    ImpFilterIyy1ListListDirection_AS = orig.ImpFilterIyy1ListListDirection_AS;
    ImpFilterIyy1ListListDirection = orig.ImpFilterIyy1ListListDirection;
    ImpFilterIyy1ListScrollAmount_AS = orig.ImpFilterIyy1ListScrollAmount_AS;
    ImpFilterIyy1ListScrollAmount = orig.ImpFilterIyy1ListScrollAmount;
    ImpFilterIyy1ListOrderByFieldNum_AS = orig.ImpFilterIyy1ListOrderByFieldNum_AS;
    ImpFilterIyy1ListOrderByFieldNum = orig.ImpFilterIyy1ListOrderByFieldNum;
    ImpFromIyy1TypeTinstanceId_AS = orig.ImpFromIyy1TypeTinstanceId_AS;
    ImpFromIyy1TypeTinstanceId = orig.ImpFromIyy1TypeTinstanceId;
    ImpFromIyy1TypeTkeyAttrText_AS = orig.ImpFromIyy1TypeTkeyAttrText_AS;
    ImpFromIyy1TypeTkeyAttrText = orig.ImpFromIyy1TypeTkeyAttrText;
    ImpFromIyy1TypeTsearchAttrText_AS = orig.ImpFromIyy1TypeTsearchAttrText_AS;
    ImpFromIyy1TypeTsearchAttrText = orig.ImpFromIyy1TypeTsearchAttrText;
    ImpFilterStartIyy1TypeTkeyAttrText_AS = orig.ImpFilterStartIyy1TypeTkeyAttrText_AS;
    ImpFilterStartIyy1TypeTkeyAttrText = orig.ImpFilterStartIyy1TypeTkeyAttrText;
    ImpFilterStopIyy1TypeTkeyAttrText_AS = orig.ImpFilterStopIyy1TypeTkeyAttrText_AS;
    ImpFilterStopIyy1TypeTkeyAttrText = orig.ImpFilterStopIyy1TypeTkeyAttrText;
    ImpFilterIyy1TypeTsearchAttrText_AS = orig.ImpFilterIyy1TypeTsearchAttrText_AS;
    ImpFilterIyy1TypeTsearchAttrText = orig.ImpFilterIyy1TypeTsearchAttrText;
    ImpFilterIyy1TypeTotherAttrText_AS = orig.ImpFilterIyy1TypeTotherAttrText_AS;
    ImpFilterIyy1TypeTotherAttrText = orig.ImpFilterIyy1TypeTotherAttrText;
  }
}

package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: MYY10351_LA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:10:15
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF LOCAL VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: MYY10351_LA
 **/
public class MYY10351_LA extends ViewBase implements ILocalView, Serializable
{
  // Entity View: LOC_IMP_FILTER
  //        Type: IYY1_LIST
  /**
   * Attribute missing flag for: LocImpFilterIyy1ListSortOption
   **/
  public char LocImpFilterIyy1ListSortOption_AS;
  /**
   * Attribute for: LocImpFilterIyy1ListSortOption
   * Domain: Text
   * Length: 3
   * Varying Length: N
   **/
  public String LocImpFilterIyy1ListSortOption;
  /**
   * Attribute missing flag for: LocImpFilterIyy1ListScrollType
   **/
  public char LocImpFilterIyy1ListScrollType_AS;
  /**
   * Attribute for: LocImpFilterIyy1ListScrollType
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String LocImpFilterIyy1ListScrollType;
  /**
   * Attribute missing flag for: LocImpFilterIyy1ListListDirection
   **/
  public char LocImpFilterIyy1ListListDirection_AS;
  /**
   * Attribute for: LocImpFilterIyy1ListListDirection
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String LocImpFilterIyy1ListListDirection;
  /**
   * Attribute missing flag for: LocImpFilterIyy1ListScrollAmount
   **/
  public char LocImpFilterIyy1ListScrollAmount_AS;
  /**
   * Attribute for: LocImpFilterIyy1ListScrollAmount
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocImpFilterIyy1ListScrollAmount;
  /**
   * Attribute missing flag for: LocImpFilterIyy1ListOrderByFieldNum
   **/
  public char LocImpFilterIyy1ListOrderByFieldNum_AS;
  /**
   * Attribute for: LocImpFilterIyy1ListOrderByFieldNum
   * Domain: Number
   * Length: 1
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public short LocImpFilterIyy1ListOrderByFieldNum;
  // Entity View: LOC_IMP_FROM
  //        Type: TYPE
  /**
   * Attribute missing flag for: LocImpFromTypeTinstanceId
   **/
  public char LocImpFromTypeTinstanceId_AS;
  /**
   * Attribute for: LocImpFromTypeTinstanceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String LocImpFromTypeTinstanceId;
  /**
   * Attribute missing flag for: LocImpFromTypeTkeyAttrText
   **/
  public char LocImpFromTypeTkeyAttrText_AS;
  /**
   * Attribute for: LocImpFromTypeTkeyAttrText
   * Domain: Text
   * Length: 4
   * Varying Length: N
   **/
  public String LocImpFromTypeTkeyAttrText;
  /**
   * Attribute missing flag for: LocImpFromTypeTsearchAttrText
   **/
  public char LocImpFromTypeTsearchAttrText_AS;
  /**
   * Attribute for: LocImpFromTypeTsearchAttrText
   * Domain: Text
   * Length: 20
   * Varying Length: N
   **/
  public String LocImpFromTypeTsearchAttrText;
  // Entity View: LOC_IMP_FILTER_START
  //        Type: TYPE
  /**
   * Attribute missing flag for: LocImpFilterStartTypeTkeyAttrText
   **/
  public char LocImpFilterStartTypeTkeyAttrText_AS;
  /**
   * Attribute for: LocImpFilterStartTypeTkeyAttrText
   * Domain: Text
   * Length: 4
   * Varying Length: N
   **/
  public String LocImpFilterStartTypeTkeyAttrText;
  // Entity View: LOC_IMP_FILTER_STOP
  //        Type: TYPE
  /**
   * Attribute missing flag for: LocImpFilterStopTypeTkeyAttrText
   **/
  public char LocImpFilterStopTypeTkeyAttrText_AS;
  /**
   * Attribute for: LocImpFilterStopTypeTkeyAttrText
   * Domain: Text
   * Length: 4
   * Varying Length: N
   **/
  public String LocImpFilterStopTypeTkeyAttrText;
  // Entity View: LOC_IMP_FILTER
  //        Type: TYPE
  /**
   * Attribute missing flag for: LocImpFilterTypeTsearchAttrText
   **/
  public char LocImpFilterTypeTsearchAttrText_AS;
  /**
   * Attribute for: LocImpFilterTypeTsearchAttrText
   * Domain: Text
   * Length: 20
   * Varying Length: N
   **/
  public String LocImpFilterTypeTsearchAttrText;
  /**
   * Attribute missing flag for: LocImpFilterTypeTotherAttrText
   **/
  public char LocImpFilterTypeTotherAttrText_AS;
  /**
   * Attribute for: LocImpFilterTypeTotherAttrText
   * Domain: Text
   * Length: 2
   * Varying Length: N
   **/
  public String LocImpFilterTypeTotherAttrText;
  // Repeating GV:  LOC_EXP_GROUP_LIST
  //     Repeats: 48 times
  /**
   * Repeating group view count
   **/
  public int LocExpGroupList_MA;
  /**
   * Repeating group view occurrance array
   **/
  public char LocExpGroupList_AC[] = new char[48];
  // Entity View: LOC_EXP_G_LIST
  //        Type: TYPE
  /**
   * Attribute missing flag for: LocExpGListTypeTinstanceId
   **/
  public char LocExpGListTypeTinstanceId_AS[] = new char[48];
  /**
   * Attribute for: LocExpGListTypeTinstanceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String LocExpGListTypeTinstanceId[] = new String[48];
  /**
   * Attribute missing flag for: LocExpGListTypeTreferenceId
   **/
  public char LocExpGListTypeTreferenceId_AS[] = new char[48];
  /**
   * Attribute for: LocExpGListTypeTreferenceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String LocExpGListTypeTreferenceId[] = new String[48];
  /**
   * Attribute missing flag for: LocExpGListTypeTcreateUserId
   **/
  public char LocExpGListTypeTcreateUserId_AS[] = new char[48];
  /**
   * Attribute for: LocExpGListTypeTcreateUserId
   * Domain: Text
   * Length: 8
   * Varying Length: N
   **/
  public String LocExpGListTypeTcreateUserId[] = new String[48];
  /**
   * Attribute missing flag for: LocExpGListTypeTupdateUserId
   **/
  public char LocExpGListTypeTupdateUserId_AS[] = new char[48];
  /**
   * Attribute for: LocExpGListTypeTupdateUserId
   * Domain: Text
   * Length: 8
   * Varying Length: N
   **/
  public String LocExpGListTypeTupdateUserId[] = new String[48];
  /**
   * Attribute missing flag for: LocExpGListTypeTkeyAttrText
   **/
  public char LocExpGListTypeTkeyAttrText_AS[] = new char[48];
  /**
   * Attribute for: LocExpGListTypeTkeyAttrText
   * Domain: Text
   * Length: 4
   * Varying Length: N
   **/
  public String LocExpGListTypeTkeyAttrText[] = new String[48];
  /**
   * Attribute missing flag for: LocExpGListTypeTsearchAttrText
   **/
  public char LocExpGListTypeTsearchAttrText_AS[] = new char[48];
  /**
   * Attribute for: LocExpGListTypeTsearchAttrText
   * Domain: Text
   * Length: 20
   * Varying Length: N
   **/
  public String LocExpGListTypeTsearchAttrText[] = new String[48];
  /**
   * Attribute missing flag for: LocExpGListTypeTotherAttrText
   **/
  public char LocExpGListTypeTotherAttrText_AS[] = new char[48];
  /**
   * Attribute for: LocExpGListTypeTotherAttrText
   * Domain: Text
   * Length: 2
   * Varying Length: N
   **/
  public String LocExpGListTypeTotherAttrText[] = new String[48];
  /**
   * Attribute missing flag for: LocExpGListTypeTotherAttrDate
   **/
  public char LocExpGListTypeTotherAttrDate_AS[] = new char[48];
  /**
   * Attribute for: LocExpGListTypeTotherAttrDate
   * Domain: Date
   * Length: 8
   **/
  public int LocExpGListTypeTotherAttrDate[] = new int[48];
  /**
   * Attribute missing flag for: LocExpGListTypeTotherAttrTime
   **/
  public char LocExpGListTypeTotherAttrTime_AS[] = new char[48];
  /**
   * Attribute for: LocExpGListTypeTotherAttrTime
   * Domain: Time
   * Length: 6
   **/
  public int LocExpGListTypeTotherAttrTime[] = new int[48];
  /**
   * Attribute missing flag for: LocExpGListTypeTotherAttrAmount
   **/
  public char LocExpGListTypeTotherAttrAmount_AS[] = new char[48];
  /**
   * Attribute for: LocExpGListTypeTotherAttrAmount
   * Domain: Number
   * Length: 17
   * Decimal Places: 2
   * Decimal Precision: Y
   **/
  public BigDecimal LocExpGListTypeTotherAttrAmount[] = new BigDecimal[48];
  /**
   * Default Constructor
   **/
  
  public MYY10351_LA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public MYY10351_LA(MYY10351_LA orig)
  {
    LocImpFilterIyy1ListSortOption_AS = orig.LocImpFilterIyy1ListSortOption_AS;
    LocImpFilterIyy1ListSortOption = orig.LocImpFilterIyy1ListSortOption;
    LocImpFilterIyy1ListScrollType_AS = orig.LocImpFilterIyy1ListScrollType_AS;
    LocImpFilterIyy1ListScrollType = orig.LocImpFilterIyy1ListScrollType;
    LocImpFilterIyy1ListListDirection_AS = orig.LocImpFilterIyy1ListListDirection_AS;
    LocImpFilterIyy1ListListDirection = orig.LocImpFilterIyy1ListListDirection;
    LocImpFilterIyy1ListScrollAmount_AS = orig.LocImpFilterIyy1ListScrollAmount_AS;
    LocImpFilterIyy1ListScrollAmount = orig.LocImpFilterIyy1ListScrollAmount;
    LocImpFilterIyy1ListOrderByFieldNum_AS = orig.LocImpFilterIyy1ListOrderByFieldNum_AS;
    LocImpFilterIyy1ListOrderByFieldNum = orig.LocImpFilterIyy1ListOrderByFieldNum;
    LocImpFromTypeTinstanceId_AS = orig.LocImpFromTypeTinstanceId_AS;
    LocImpFromTypeTinstanceId = orig.LocImpFromTypeTinstanceId;
    LocImpFromTypeTkeyAttrText_AS = orig.LocImpFromTypeTkeyAttrText_AS;
    LocImpFromTypeTkeyAttrText = orig.LocImpFromTypeTkeyAttrText;
    LocImpFromTypeTsearchAttrText_AS = orig.LocImpFromTypeTsearchAttrText_AS;
    LocImpFromTypeTsearchAttrText = orig.LocImpFromTypeTsearchAttrText;
    LocImpFilterStartTypeTkeyAttrText_AS = orig.LocImpFilterStartTypeTkeyAttrText_AS;
    LocImpFilterStartTypeTkeyAttrText = orig.LocImpFilterStartTypeTkeyAttrText;
    LocImpFilterStopTypeTkeyAttrText_AS = orig.LocImpFilterStopTypeTkeyAttrText_AS;
    LocImpFilterStopTypeTkeyAttrText = orig.LocImpFilterStopTypeTkeyAttrText;
    LocImpFilterTypeTsearchAttrText_AS = orig.LocImpFilterTypeTsearchAttrText_AS;
    LocImpFilterTypeTsearchAttrText = orig.LocImpFilterTypeTsearchAttrText;
    LocImpFilterTypeTotherAttrText_AS = orig.LocImpFilterTypeTotherAttrText_AS;
    LocImpFilterTypeTotherAttrText = orig.LocImpFilterTypeTotherAttrText;
    LocExpGroupList_MA = orig.LocExpGroupList_MA;
    System.arraycopy(orig.LocExpGroupList_AC, 0, LocExpGroupList_AC, 0, LocExpGroupList_AC.length);
    System.arraycopy(orig.LocExpGListTypeTinstanceId_AS, 0, LocExpGListTypeTinstanceId_AS, 0, LocExpGListTypeTinstanceId_AS.length);
    System.arraycopy(orig.LocExpGListTypeTinstanceId, 0, LocExpGListTypeTinstanceId, 0, LocExpGListTypeTinstanceId.length);
    System.arraycopy(orig.LocExpGListTypeTreferenceId_AS, 0, LocExpGListTypeTreferenceId_AS, 0, 
      LocExpGListTypeTreferenceId_AS.length);
    System.arraycopy(orig.LocExpGListTypeTreferenceId, 0, LocExpGListTypeTreferenceId, 0, LocExpGListTypeTreferenceId.length);
    System.arraycopy(orig.LocExpGListTypeTcreateUserId_AS, 0, LocExpGListTypeTcreateUserId_AS, 0, 
      LocExpGListTypeTcreateUserId_AS.length);
    System.arraycopy(orig.LocExpGListTypeTcreateUserId, 0, LocExpGListTypeTcreateUserId, 0, LocExpGListTypeTcreateUserId.length);
    System.arraycopy(orig.LocExpGListTypeTupdateUserId_AS, 0, LocExpGListTypeTupdateUserId_AS, 0, 
      LocExpGListTypeTupdateUserId_AS.length);
    System.arraycopy(orig.LocExpGListTypeTupdateUserId, 0, LocExpGListTypeTupdateUserId, 0, LocExpGListTypeTupdateUserId.length);
    System.arraycopy(orig.LocExpGListTypeTkeyAttrText_AS, 0, LocExpGListTypeTkeyAttrText_AS, 0, 
      LocExpGListTypeTkeyAttrText_AS.length);
    System.arraycopy(orig.LocExpGListTypeTkeyAttrText, 0, LocExpGListTypeTkeyAttrText, 0, LocExpGListTypeTkeyAttrText.length);
    System.arraycopy(orig.LocExpGListTypeTsearchAttrText_AS, 0, LocExpGListTypeTsearchAttrText_AS, 0, 
      LocExpGListTypeTsearchAttrText_AS.length);
    System.arraycopy(orig.LocExpGListTypeTsearchAttrText, 0, LocExpGListTypeTsearchAttrText, 0, 
      LocExpGListTypeTsearchAttrText.length);
    System.arraycopy(orig.LocExpGListTypeTotherAttrText_AS, 0, LocExpGListTypeTotherAttrText_AS, 0, 
      LocExpGListTypeTotherAttrText_AS.length);
    System.arraycopy(orig.LocExpGListTypeTotherAttrText, 0, LocExpGListTypeTotherAttrText, 0, LocExpGListTypeTotherAttrText.length);
    System.arraycopy(orig.LocExpGListTypeTotherAttrDate_AS, 0, LocExpGListTypeTotherAttrDate_AS, 0, 
      LocExpGListTypeTotherAttrDate_AS.length);
    System.arraycopy(orig.LocExpGListTypeTotherAttrDate, 0, LocExpGListTypeTotherAttrDate, 0, LocExpGListTypeTotherAttrDate.length);
    System.arraycopy(orig.LocExpGListTypeTotherAttrTime_AS, 0, LocExpGListTypeTotherAttrTime_AS, 0, 
      LocExpGListTypeTotherAttrTime_AS.length);
    System.arraycopy(orig.LocExpGListTypeTotherAttrTime, 0, LocExpGListTypeTotherAttrTime, 0, LocExpGListTypeTotherAttrTime.length);
    System.arraycopy(orig.LocExpGListTypeTotherAttrAmount_AS, 0, LocExpGListTypeTotherAttrAmount_AS, 0, 
      LocExpGListTypeTotherAttrAmount_AS.length);
    System.arraycopy(orig.LocExpGListTypeTotherAttrAmount, 0, LocExpGListTypeTotherAttrAmount, 0, 
      LocExpGListTypeTotherAttrAmount.length);
  }
  /**
   * Static instance creator function
   **/
  
  public static MYY10351_LA getInstance()
  {
    return new MYY10351_LA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new MYY10351_LA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    LocImpFilterIyy1ListSortOption_AS = ' ';
    LocImpFilterIyy1ListSortOption = "   ";
    LocImpFilterIyy1ListScrollType_AS = ' ';
    LocImpFilterIyy1ListScrollType = " ";
    LocImpFilterIyy1ListListDirection_AS = ' ';
    LocImpFilterIyy1ListListDirection = " ";
    LocImpFilterIyy1ListScrollAmount_AS = ' ';
    LocImpFilterIyy1ListScrollAmount = 0;
    LocImpFilterIyy1ListOrderByFieldNum_AS = ' ';
    LocImpFilterIyy1ListOrderByFieldNum = 0;
    LocImpFromTypeTinstanceId_AS = ' ';
    LocImpFromTypeTinstanceId = "00000000000000000000";
    LocImpFromTypeTkeyAttrText_AS = ' ';
    LocImpFromTypeTkeyAttrText = "    ";
    LocImpFromTypeTsearchAttrText_AS = ' ';
    LocImpFromTypeTsearchAttrText = "                    ";
    LocImpFilterStartTypeTkeyAttrText_AS = ' ';
    LocImpFilterStartTypeTkeyAttrText = "    ";
    LocImpFilterStopTypeTkeyAttrText_AS = ' ';
    LocImpFilterStopTypeTkeyAttrText = "    ";
    LocImpFilterTypeTsearchAttrText_AS = ' ';
    LocImpFilterTypeTsearchAttrText = "                    ";
    LocImpFilterTypeTotherAttrText_AS = ' ';
    LocImpFilterTypeTotherAttrText = "  ";
    LocExpGroupList_MA = 0;
    for(int a = 0; a < 48; a++)
    {
      LocExpGroupList_AC[a] = ' ';
      LocExpGListTypeTinstanceId_AS[a] = ' ';
      LocExpGListTypeTinstanceId[a] = "00000000000000000000";
      LocExpGListTypeTreferenceId_AS[a] = ' ';
      LocExpGListTypeTreferenceId[a] = "00000000000000000000";
      LocExpGListTypeTcreateUserId_AS[a] = ' ';
      LocExpGListTypeTcreateUserId[a] = "        ";
      LocExpGListTypeTupdateUserId_AS[a] = ' ';
      LocExpGListTypeTupdateUserId[a] = "        ";
      LocExpGListTypeTkeyAttrText_AS[a] = ' ';
      LocExpGListTypeTkeyAttrText[a] = "    ";
      LocExpGListTypeTsearchAttrText_AS[a] = ' ';
      LocExpGListTypeTsearchAttrText[a] = "                    ";
      LocExpGListTypeTotherAttrText_AS[a] = ' ';
      LocExpGListTypeTotherAttrText[a] = "  ";
      LocExpGListTypeTotherAttrDate_AS[a] = ' ';
      LocExpGListTypeTotherAttrDate[a] = 00000000;
      LocExpGListTypeTotherAttrTime_AS[a] = ' ';
      LocExpGListTypeTotherAttrTime[a] = 00000000;
      LocExpGListTypeTotherAttrAmount_AS[a] = ' ';
      LocExpGListTypeTotherAttrAmount[a] = BigDecimalAttr.getDefaultValue();
    }
  }
}

package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: MYY10351_OA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:10:15
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF EXPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: MYY10351_OA
 **/
public class MYY10351_OA extends ViewBase implements IExportView, Serializable
{
  // Repeating GV:  EXP_GROUP_LIST
  //     Repeats: 48 times
  /**
   * Repeating group view count
   **/
  public int ExpGroupList_MA;
  /**
   * Repeating group view occurrance array
   **/
  public char ExpGroupList_AC[] = new char[48];
  // Entity View: EXP_G_LIST
  //        Type: IYY1_TYPE
  /**
   * Attribute missing flag for: ExpGListIyy1TypeTinstanceId
   **/
  public char ExpGListIyy1TypeTinstanceId_AS[] = new char[48];
  /**
   * Attribute for: ExpGListIyy1TypeTinstanceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String ExpGListIyy1TypeTinstanceId[] = new String[48];
  /**
   * Attribute missing flag for: ExpGListIyy1TypeTreferenceId
   **/
  public char ExpGListIyy1TypeTreferenceId_AS[] = new char[48];
  /**
   * Attribute for: ExpGListIyy1TypeTreferenceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String ExpGListIyy1TypeTreferenceId[] = new String[48];
  /**
   * Attribute missing flag for: ExpGListIyy1TypeTcreateUserId
   **/
  public char ExpGListIyy1TypeTcreateUserId_AS[] = new char[48];
  /**
   * Attribute for: ExpGListIyy1TypeTcreateUserId
   * Domain: Text
   * Length: 8
   * Varying Length: N
   **/
  public String ExpGListIyy1TypeTcreateUserId[] = new String[48];
  /**
   * Attribute missing flag for: ExpGListIyy1TypeTupdateUserId
   **/
  public char ExpGListIyy1TypeTupdateUserId_AS[] = new char[48];
  /**
   * Attribute for: ExpGListIyy1TypeTupdateUserId
   * Domain: Text
   * Length: 8
   * Varying Length: N
   **/
  public String ExpGListIyy1TypeTupdateUserId[] = new String[48];
  /**
   * Attribute missing flag for: ExpGListIyy1TypeTkeyAttrText
   **/
  public char ExpGListIyy1TypeTkeyAttrText_AS[] = new char[48];
  /**
   * Attribute for: ExpGListIyy1TypeTkeyAttrText
   * Domain: Text
   * Length: 4
   * Varying Length: N
   **/
  public String ExpGListIyy1TypeTkeyAttrText[] = new String[48];
  /**
   * Attribute missing flag for: ExpGListIyy1TypeTsearchAttrText
   **/
  public char ExpGListIyy1TypeTsearchAttrText_AS[] = new char[48];
  /**
   * Attribute for: ExpGListIyy1TypeTsearchAttrText
   * Domain: Text
   * Length: 20
   * Varying Length: N
   **/
  public String ExpGListIyy1TypeTsearchAttrText[] = new String[48];
  /**
   * Attribute missing flag for: ExpGListIyy1TypeTotherAttrText
   **/
  public char ExpGListIyy1TypeTotherAttrText_AS[] = new char[48];
  /**
   * Attribute for: ExpGListIyy1TypeTotherAttrText
   * Domain: Text
   * Length: 2
   * Varying Length: N
   **/
  public String ExpGListIyy1TypeTotherAttrText[] = new String[48];
  /**
   * Attribute missing flag for: ExpGListIyy1TypeTotherAttrDate
   **/
  public char ExpGListIyy1TypeTotherAttrDate_AS[] = new char[48];
  /**
   * Attribute for: ExpGListIyy1TypeTotherAttrDate
   * Domain: Date
   * Length: 8
   **/
  public int ExpGListIyy1TypeTotherAttrDate[] = new int[48];
  /**
   * Attribute missing flag for: ExpGListIyy1TypeTotherAttrTime
   **/
  public char ExpGListIyy1TypeTotherAttrTime_AS[] = new char[48];
  /**
   * Attribute for: ExpGListIyy1TypeTotherAttrTime
   * Domain: Time
   * Length: 6
   **/
  public int ExpGListIyy1TypeTotherAttrTime[] = new int[48];
  /**
   * Attribute missing flag for: ExpGListIyy1TypeTotherAttrAmount
   **/
  public char ExpGListIyy1TypeTotherAttrAmount_AS[] = new char[48];
  /**
   * Attribute for: ExpGListIyy1TypeTotherAttrAmount
   * Domain: Number
   * Length: 17
   * Decimal Places: 2
   * Decimal Precision: Y
   **/
  public BigDecimal ExpGListIyy1TypeTotherAttrAmount[] = new BigDecimal[48];
  // Entity View: EXP_ERROR
  //        Type: IYY1_COMPONENT
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentSeverityCode
   **/
  public char ExpErrorIyy1ComponentSeverityCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentSeverityCode
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentSeverityCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentRollbackIndicator
   **/
  public char ExpErrorIyy1ComponentRollbackIndicator_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentRollbackIndicator
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentRollbackIndicator;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentOriginServid
   **/
  public char ExpErrorIyy1ComponentOriginServid_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentOriginServid
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double ExpErrorIyy1ComponentOriginServid;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentContextString
   **/
  public char ExpErrorIyy1ComponentContextString_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentContextString
   * Domain: Text
   * Length: 512
   * Varying Length: Y
   **/
  public String ExpErrorIyy1ComponentContextString;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentReturnCode
   **/
  public char ExpErrorIyy1ComponentReturnCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentReturnCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ExpErrorIyy1ComponentReturnCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentReasonCode
   **/
  public char ExpErrorIyy1ComponentReasonCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentReasonCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ExpErrorIyy1ComponentReasonCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentChecksum
   **/
  public char ExpErrorIyy1ComponentChecksum_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentChecksum
   * Domain: Text
   * Length: 15
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentChecksum;
  /**
   * Default Constructor
   **/
  
  public MYY10351_OA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public MYY10351_OA(MYY10351_OA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static MYY10351_OA getInstance()
  {
    return new MYY10351_OA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new MYY10351_OA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    ExpGroupList_MA = 0;
    for(int a = 0; a < 48; a++)
    {
      ExpGroupList_AC[a] = ' ';
      ExpGListIyy1TypeTinstanceId_AS[a] = ' ';
      ExpGListIyy1TypeTinstanceId[a] = "00000000000000000000";
      ExpGListIyy1TypeTreferenceId_AS[a] = ' ';
      ExpGListIyy1TypeTreferenceId[a] = "00000000000000000000";
      ExpGListIyy1TypeTcreateUserId_AS[a] = ' ';
      ExpGListIyy1TypeTcreateUserId[a] = "        ";
      ExpGListIyy1TypeTupdateUserId_AS[a] = ' ';
      ExpGListIyy1TypeTupdateUserId[a] = "        ";
      ExpGListIyy1TypeTkeyAttrText_AS[a] = ' ';
      ExpGListIyy1TypeTkeyAttrText[a] = "    ";
      ExpGListIyy1TypeTsearchAttrText_AS[a] = ' ';
      ExpGListIyy1TypeTsearchAttrText[a] = "                    ";
      ExpGListIyy1TypeTotherAttrText_AS[a] = ' ';
      ExpGListIyy1TypeTotherAttrText[a] = "  ";
      ExpGListIyy1TypeTotherAttrDate_AS[a] = ' ';
      ExpGListIyy1TypeTotherAttrDate[a] = 00000000;
      ExpGListIyy1TypeTotherAttrTime_AS[a] = ' ';
      ExpGListIyy1TypeTotherAttrTime[a] = 00000000;
      ExpGListIyy1TypeTotherAttrAmount_AS[a] = ' ';
      ExpGListIyy1TypeTotherAttrAmount[a] = BigDecimalAttr.getDefaultValue();
    }
    ExpErrorIyy1ComponentSeverityCode_AS = ' ';
    ExpErrorIyy1ComponentSeverityCode = " ";
    ExpErrorIyy1ComponentRollbackIndicator_AS = ' ';
    ExpErrorIyy1ComponentRollbackIndicator = " ";
    ExpErrorIyy1ComponentOriginServid_AS = ' ';
    ExpErrorIyy1ComponentOriginServid = 0.0;
    ExpErrorIyy1ComponentContextString_AS = ' ';
    ExpErrorIyy1ComponentContextString = "";
    ExpErrorIyy1ComponentReturnCode_AS = ' ';
    ExpErrorIyy1ComponentReturnCode = 0;
    ExpErrorIyy1ComponentReasonCode_AS = ' ';
    ExpErrorIyy1ComponentReasonCode = 0;
    ExpErrorIyy1ComponentChecksum_AS = ' ';
    ExpErrorIyy1ComponentChecksum = "               ";
  }
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    throw new RuntimeException("can only execute setFromVDF for a Procedure Step.");
  }
  
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    throw new RuntimeException("can only execute getVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IExportView orig)
  {
    this.copyFrom((MYY10351_OA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(MYY10351_OA orig)
  {
    ExpGroupList_MA = orig.ExpGroupList_MA;
    for(int a = 0; a < 48; a++)
    {
      ExpGroupList_AC[a] = orig.ExpGroupList_AC[a];
      ExpGListIyy1TypeTinstanceId_AS[a] = orig.ExpGListIyy1TypeTinstanceId_AS[a];
      ExpGListIyy1TypeTinstanceId[a] = orig.ExpGListIyy1TypeTinstanceId[a];
      ExpGListIyy1TypeTreferenceId_AS[a] = orig.ExpGListIyy1TypeTreferenceId_AS[a];
      ExpGListIyy1TypeTreferenceId[a] = orig.ExpGListIyy1TypeTreferenceId[a];
      ExpGListIyy1TypeTcreateUserId_AS[a] = orig.ExpGListIyy1TypeTcreateUserId_AS[a];
      ExpGListIyy1TypeTcreateUserId[a] = orig.ExpGListIyy1TypeTcreateUserId[a];
      ExpGListIyy1TypeTupdateUserId_AS[a] = orig.ExpGListIyy1TypeTupdateUserId_AS[a];
      ExpGListIyy1TypeTupdateUserId[a] = orig.ExpGListIyy1TypeTupdateUserId[a];
      ExpGListIyy1TypeTkeyAttrText_AS[a] = orig.ExpGListIyy1TypeTkeyAttrText_AS[a];
      ExpGListIyy1TypeTkeyAttrText[a] = orig.ExpGListIyy1TypeTkeyAttrText[a];
      ExpGListIyy1TypeTsearchAttrText_AS[a] = orig.ExpGListIyy1TypeTsearchAttrText_AS[a];
      ExpGListIyy1TypeTsearchAttrText[a] = orig.ExpGListIyy1TypeTsearchAttrText[a];
      ExpGListIyy1TypeTotherAttrText_AS[a] = orig.ExpGListIyy1TypeTotherAttrText_AS[a];
      ExpGListIyy1TypeTotherAttrText[a] = orig.ExpGListIyy1TypeTotherAttrText[a];
      ExpGListIyy1TypeTotherAttrDate_AS[a] = orig.ExpGListIyy1TypeTotherAttrDate_AS[a];
      ExpGListIyy1TypeTotherAttrDate[a] = orig.ExpGListIyy1TypeTotherAttrDate[a];
      ExpGListIyy1TypeTotherAttrTime_AS[a] = orig.ExpGListIyy1TypeTotherAttrTime_AS[a];
      ExpGListIyy1TypeTotherAttrTime[a] = orig.ExpGListIyy1TypeTotherAttrTime[a];
      ExpGListIyy1TypeTotherAttrAmount_AS[a] = orig.ExpGListIyy1TypeTotherAttrAmount_AS[a];
      ExpGListIyy1TypeTotherAttrAmount[a] = orig.ExpGListIyy1TypeTotherAttrAmount[a];
    }
    ExpErrorIyy1ComponentSeverityCode_AS = orig.ExpErrorIyy1ComponentSeverityCode_AS;
    ExpErrorIyy1ComponentSeverityCode = orig.ExpErrorIyy1ComponentSeverityCode;
    ExpErrorIyy1ComponentRollbackIndicator_AS = orig.ExpErrorIyy1ComponentRollbackIndicator_AS;
    ExpErrorIyy1ComponentRollbackIndicator = orig.ExpErrorIyy1ComponentRollbackIndicator;
    ExpErrorIyy1ComponentOriginServid_AS = orig.ExpErrorIyy1ComponentOriginServid_AS;
    ExpErrorIyy1ComponentOriginServid = orig.ExpErrorIyy1ComponentOriginServid;
    ExpErrorIyy1ComponentContextString_AS = orig.ExpErrorIyy1ComponentContextString_AS;
    ExpErrorIyy1ComponentContextString = orig.ExpErrorIyy1ComponentContextString;
    ExpErrorIyy1ComponentReturnCode_AS = orig.ExpErrorIyy1ComponentReturnCode_AS;
    ExpErrorIyy1ComponentReturnCode = orig.ExpErrorIyy1ComponentReturnCode;
    ExpErrorIyy1ComponentReasonCode_AS = orig.ExpErrorIyy1ComponentReasonCode_AS;
    ExpErrorIyy1ComponentReasonCode = orig.ExpErrorIyy1ComponentReasonCode;
    ExpErrorIyy1ComponentChecksum_AS = orig.ExpErrorIyy1ComponentChecksum_AS;
    ExpErrorIyy1ComponentChecksum = orig.ExpErrorIyy1ComponentChecksum;
  }
}
