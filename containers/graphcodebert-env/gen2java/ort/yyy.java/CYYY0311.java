
package gen.ort.yyy;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: CYYY0311_TYPE_CREATE             Date: 2023/07/05
//    Target OS:   JVM                       Time: 15:09:14
//    Target DBMS: JDBC                      User: HakanBal
//    Access Method: JDBC           
//
//    Generation options:
//    Debug trace option selected
//    Data modeling constraint enforcement not selected
//    Optimized import view initialization not selected
//    Enforce default values with DBMS not selected
//    Init unspecified optional fields to NULL not selected
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;

import com.ca.gen.abrt.*;
import com.ca.gen.abrt.functions.*;
import com.ca.gen.abrt.cascade.*;
import com.ca.gen.abrt.trace.*;
import com.ca.gen.exits.common.*;
import com.ca.gen.odc.*;

public class CYYY0311 extends ABBase
{
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // IMPORT VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  CYYY0311_IA w_ia;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // EXPORT VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  CYYY0311_OA w_oa;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // LOCAL VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  CYYY0311_LA w_la;
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // ACTION BLOCK IMPORT/EXPORT VIEWS CLASS VARIABLES
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  gen.ort.yyy.DYYY0311_IA dyyy0311_ia;
  gen.ort.yyy.DYYY0311_OA dyyy0311_oa;
  gen.ort.yyy.CYYY9001_OA cyyy9001_oa;
  gen.ort.yyy.CYYY9141_IA cyyy9141_ia;
  gen.ort.yyy.CYYY9141_OA cyyy9141_oa;
  gen.ort.yyy.CYYY0361_OA cyyy0361_oa;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // REPEATING GROUP VIEW STATUS FIELDS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  boolean LocGroupContext_FL_001;
  int LocGroupContext_PS_001;
  boolean LocGroupContext_RF_001;
  public final static int LocGroupContext_MM_001 = 9;
  boolean ImpGroupContext_FL_002;
  int ImpGroupContext_PS_002;
  boolean ImpGroupContext_RF_002;
  public final static int ImpGroupContext_MM_002 = 9;
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // MISC DECLARATIONS AND PROTOTYPES 
  //    FOLLOW AS NEEDED:             
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  boolean func_0022020151_esc_flag;
  boolean func_0020972846_esc_flag;
  boolean func_0020972621_esc_flag;
  boolean func_0020973068_esc_flag;
  boolean func_0020972943_esc_flag;
  boolean func_0020973008_esc_flag;
  boolean func_0020972730_esc_flag;
  PadView padview[] = new PadView [69];
  int trace_ret_code;
  PadText padtext[] = initPadText();
  public PadText [] initPadText()
  {
    PadText [] result = new PadText [PADTEXT_SIZE];
    result[0] = PadText.getInstance(   0,"+->   CYYY0311_TYPE_CREATE              07/05/2023  15:09");
    result[1] = PadText.getInstance(   0,"!       IMPORTS:");
    result[2] = PadText.getInstance(   0,"!         Work View imp_reference iyy1_server_data (Transient, Mandatory, Import only)");
    result[3] = PadText.getInstance(   0,"!           userid");
    result[4] = PadText.getInstance(   0,"!           reference_id");
    result[5] = PadText.getInstance(   0,"!         Entity View imp type (Transient, Mandatory, Import only)");
    result[6] = PadText.getInstance(   0,"!           tkey_attr_text");
    result[7] = PadText.getInstance(   0,"!           tsearch_attr_text");
    result[8] = PadText.getInstance(   0,"!           tother_attr_text");
    result[9] = PadText.getInstance(   0,"!           tother_attr_date");
    result[10] = PadText.getInstance(   0,"!           tother_attr_time");
    result[11] = PadText.getInstance(   0,"!           tother_attr_amount");
    result[12] = PadText.getInstance(   0,"!       EXPORTS:");
    result[13] = PadText.getInstance(   0,"!         Entity View exp type (Transient, Export only)");
    result[14] = PadText.getInstance(   0,"!           tinstance_id");
    result[15] = PadText.getInstance(   0,"!           treference_id");
    result[16] = PadText.getInstance(   0,"!         Work View exp_error iyy1_component (Transient, Export only)");
    result[17] = PadText.getInstance(   0,"!           severity_code");
    result[18] = PadText.getInstance(   0,"!           rollback_indicator");
    result[19] = PadText.getInstance(   0,"!           origin_servid");
    result[20] = PadText.getInstance(   0,"!           context_string");
    result[21] = PadText.getInstance(   0,"!           return_code");
    result[22] = PadText.getInstance(   0,"!           reason_code");
    result[23] = PadText.getInstance(   0,"!           checksum");
    result[24] = PadText.getInstance(   0,"!       LOCALS:");
    result[25] = PadText.getInstance(   0,"!         Entity View loc_imp type");
    result[26] = PadText.getInstance(   0,"!           tinstance_id");
    result[27] = PadText.getInstance(   0,"!           tkey_attr_text");
    result[28] = PadText.getInstance(   0,"!           tsearch_attr_text");
    result[29] = PadText.getInstance(   0,"!           tother_attr_text");
    result[30] = PadText.getInstance(   0,"!           tother_attr_date");
    result[31] = PadText.getInstance(   0,"!           tother_attr_time");
    result[32] = PadText.getInstance(   0,"!           tother_attr_amount");
    result[33] = PadText.getInstance(   0,"!         Entity View loc_empty type");
    result[34] = PadText.getInstance(   0,"!           tinstance_id");
    result[35] = PadText.getInstance(   0,"!           tkey_attr_text");
    result[36] = PadText.getInstance(   0,"!           tsearch_attr_text");
    result[37] = PadText.getInstance(   0,"!           tother_attr_text");
    result[38] = PadText.getInstance(   0,"!           tother_attr_date");
    result[39] = PadText.getInstance(   0,"!           tother_attr_time");
    result[40] = PadText.getInstance(   0,"!           tother_attr_amount");
    result[41] = PadText.getInstance(   0,"!         Work View loc_error iyy1_component");
    result[42] = PadText.getInstance(   0,"!           severity_code");
    result[43] = PadText.getInstance(   0,"!           rollback_indicator");
    result[44] = PadText.getInstance(   0,"!           origin_servid");
    result[45] = PadText.getInstance(   0,"!           context_string");
    result[46] = PadText.getInstance(   0,"!           return_code");
    result[47] = PadText.getInstance(   0,"!           reason_code");
    result[48] = PadText.getInstance(   0,"!           checksum");
    result[49] = PadText.getInstance(   0,"!         Group View (9) loc_group_context");
    result[50] = PadText.getInstance(   0,"!           Work View loc_g_context dont_change_text");
    result[51] = PadText.getInstance(   0,"!             text_150");
    result[52] = PadText.getInstance(   0,"!         Work View loc dont_change_return_codes");
    result[53] = PadText.getInstance(   0,"!           1_ok");
    result[54] = PadText.getInstance(   0,"!           n20_mandatory_import_missing");
    result[55] = PadText.getInstance(   0,"!         Work View loc dont_change_reason_codes");
    result[56] = PadText.getInstance(   0,"!           1_default");
    result[57] = PadText.getInstance(   0,"!           145_type_key_attr_mand");
    result[58] = PadText.getInstance(   0,"!           146_type_search_attr_mand");
    result[59] = PadText.getInstance(   0,"!");
    result[60] = PadText.getInstance(   0,"!     PROCEDURE STATEMENTS");
    result[61] = PadText.getInstance(   0,"!");
    result[62] = PadText.getInstance(   1,"!  NOTE: ");
    result[63] = PadText.getInstance(   1,"!  Please review explanation for purpose.");
    result[64] = PadText.getInstance(   1,"!  ");
    result[65] = PadText.getInstance(   2,"!  NOTE: ");
    result[66] = PadText.getInstance(   2,"!  RELEASE HISTORY");
    result[67] = PadText.getInstance(   2,"!  01_00 23-02-1998 New release");
    result[68] = PadText.getInstance(   2,"!  ");
    result[69] = PadText.getInstance(   3,"!  USE cyyy9001_exception_hndlng_dflt");
    result[70] = PadText.getInstance(   3,
      "!     WHICH EXPORTS: Work View exp_error iyy1_component FROM Work View exp_error iyy1_component");
    result[71] = PadText.getInstance(   4,"!   ");
    result[72] = PadText.getInstance(   5,"!  NOTE: ");
    result[73] = PadText.getInstance(   5,"!  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    result[74] = PadText.getInstance(   5,"!  Please rename the procedure name below.");
    result[75] = PadText.getInstance(   5,"!  ");
    result[76] = PadText.getInstance(   6,"!  SET SUBSCRIPT OF loc_group_context TO 1 ");
    result[77] = PadText.getInstance(   7,"!  SET loc_g_context dont_change_text text_150 TO \"CYYY0311\" ");
    result[78] = PadText.getInstance(   8,"!  SET SUBSCRIPT OF loc_group_context TO 2 ");
    result[79] = PadText.getInstance(   9,"!  SET loc_g_context dont_change_text text_150 TO \"CREATE\" ");
    result[80] = PadText.getInstance(  10,"!   ");
    result[81] = PadText.getInstance(  11,"!  NOTE: ");
    result[82] = PadText.getInstance(  11,"!  ****************************************************************");
    result[83] = PadText.getInstance(  11,"!  Values of the ReturnCode/ReasonCode used.");
    result[84] = PadText.getInstance(  11,"!  ");
    result[85] = PadText.getInstance(  12,"!  NOTE: ");
    result[86] = PadText.getInstance(  12,"!  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    result[87] = PadText.getInstance(  12,"!  Please set the return ve reason code values below.");
    result[88] = PadText.getInstance(  12,"!  ");
    result[89] = PadText.getInstance(  13,"!  SET loc dont_change_return_codes 1_ok TO 1 ");
    result[90] = PadText.getInstance(  14,"!  SET loc dont_change_return_codes n20_mandatory_import_missing TO -20 ");
    result[91] = PadText.getInstance(  15,"!   ");
    result[92] = PadText.getInstance(  16,"!  SET loc dont_change_reason_codes 1_default TO 1 ");
    result[93] = PadText.getInstance(  17,"!  SET loc dont_change_reason_codes 145_type_key_attr_mand TO 145 ");
    result[94] = PadText.getInstance(  18,"!  SET loc dont_change_reason_codes 146_type_search_attr_mand TO 146 ");
    result[95] = PadText.getInstance(  19,"!   ");
    result[96] = PadText.getInstance(  20,"!  NOTE: ");
    result[97] = PadText.getInstance(  20,"!  ****************************************************************");
    result[98] = PadText.getInstance(  20,"!  Instance id generate");
    result[99] = PadText.getInstance(  20,"!  ");
    result[100] = PadText.getInstance(  21,"!  MOVE imp type TO loc_imp type");
    result[101] = PadText.getInstance(  22,"!   ");
    result[102] = PadText.getInstance(  23,"!  USE cyyy0361_type_instance_id_gen");
    result[103] = PadText.getInstance(  23,"!     WHICH EXPORTS: Entity View loc_imp type FROM Entity View exp type");
    result[104] = PadText.getInstance(  24,"!   ");
    result[105] = PadText.getInstance(  25,"!  NOTE: ");
    result[106] = PadText.getInstance(  25,"!  ****************************************************************");
    result[107] = PadText.getInstance(  25,"!  Necessary or optional but the required fields for the operation is checked.");
    result[108] = PadText.getInstance(  25,"!  ");
    result[109] = PadText.getInstance(  26,"!  +->IF exp_error iyy1_component return_code >= loc dont_change_return_codes 1_ok");
    result[110] = PadText.getInstance(  27,"!  !  +->IF loc_imp type tkey_attr_text <= loc_empty type tkey_attr_text");
    result[111] = PadText.getInstance(  28,
      "!  !  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n20_mandatory_import_missing ");
    result[112] = PadText.getInstance(  29,
      "!  !  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 145_type_key_attr_mand ");
    result[113] = PadText.getInstance(  30,"! <------ESCAPE");
    result[114] = PadText.getInstance(  27,"!  !  +--");
    result[115] = PadText.getInstance(  31,"!  !  +->IF loc_imp type tsearch_attr_text <= loc_empty type tsearch_attr_text");
    result[116] = PadText.getInstance(  32,
      "!  !  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n20_mandatory_import_missing ");
    result[117] = PadText.getInstance(  33,
      "!  !  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 146_type_search_attr_mand ");
    result[118] = PadText.getInstance(  34,"! <------ESCAPE");
    result[119] = PadText.getInstance(  31,"!  !  +--");
    result[120] = PadText.getInstance(  26,"!  +--");
    result[121] = PadText.getInstance(  35,"!   ");
    result[122] = PadText.getInstance(  36,"!  +->IF exp_error iyy1_component return_code >= loc dont_change_return_codes 1_ok");
    result[123] = PadText.getInstance(  37,"!  !  USE dyyy0311_type_create");
    result[124] = PadText.getInstance(  37,
      "!  !     WHICH IMPORTS: Work View exp_error iyy1_component TO Work View imp_error iyy1_component");
    result[125] = PadText.getInstance(  37,"!  !                    Entity View loc_imp type TO Entity View imp type");
    result[126] = PadText.getInstance(  37,
      "!  !                    Work View imp_reference iyy1_server_data TO Work View imp_reference iyy1_server_data");
    result[127] = PadText.getInstance(  37,"!  !     WHICH EXPORTS: Entity View exp type FROM Entity View exp type");
    result[128] = PadText.getInstance(  37,
      "!  !                    Work View loc_error iyy1_component FROM Work View exp_error iyy1_component");
    result[129] = PadText.getInstance(  38,"!  !   ");
    result[130] = PadText.getInstance(  39,"!  !  NOTE: ");
    result[131] = PadText.getInstance(  39,"!  !  ****************************************************************");
    result[132] = PadText.getInstance(  39,"!  !  If External will be USEd the code sample replacement for above code:");
    result[133] = PadText.getInstance(  39,"!  !  ");
    result[134] = PadText.getInstance(  39,"!  !  | USE eyyy0311_type_create");
    result[135] = PadText.getInstance(  39,
      "!  !  |   WHICH IMPORTS: Work View   imp_reference iyy1_server_data TO Work View imp_reference iyy1_s.");
    result[136] = PadText.getInstance(  39,"!  !  |                  Entity View loc_imp type TO Entity View imp type ");
    result[137] = PadText.getInstance(  39,"!  !  |   WHICH EXPORTS: Entity View exp type FROM Entity View exp type ");
    result[138] = PadText.getInstance(  39,
      "!  !  |                  Work View   loc_error d._c._text  FROM Work View   exp_error d._c._text ");
    result[139] = PadText.getInstance(  39,"!  !  |");
    result[140] = PadText.getInstance(  39,"!  !  | +- CASE OF loc_error dont_change_text text_2 ");
    result[141] = PadText.getInstance(  39,"!  !  | +- CASE \"OK\" ");
    result[142] = PadText.getInstance(  39,"!  !  | +- CASE \"AE\" ");
    result[143] = PadText.getInstance(  39,
      "!  !  | |  SET exp_error iyy1_com.. return_code TO loc d._c._return_codes n40_obj_create_failed ");
    result[144] = PadText.getInstance(  39,
      "!  !  | |  SET exp_error iyy1_com.. reason_code TO loc d._c._reason_codes 142_type_already_exist");
    result[145] = PadText.getInstance(  39,"!  !  | +- CASE \"PV\" ");
    result[146] = PadText.getInstance(  39,
      "!  !  | |  SET exp_error iyy1_com.. return_code TO loc d._c._return_codes n40_obj_create_failed ");
    result[147] = PadText.getInstance(  39,
      "!  !  | |  SET exp_error iyy1_com.. reason_code TO loc d._c._reason_codes 143_type_attr_value_invalid");
    result[148] = PadText.getInstance(  39,"!  !  | +- OTHERWISE ");
    result[149] = PadText.getInstance(  39,
      "!  !  | |  SET exp_error iyy1_com.. return_code TO loc d._c._return_codes n999_unexpected_exception ");
    result[150] = PadText.getInstance(  39,"!  !  | |  SET exp_error iyy1_com.. reason_code TO loc d._c._reason_codes 1_default ");
    result[151] = PadText.getInstance(  39,"!  !  | +--");
    result[152] = PadText.getInstance(  39,"!  !  ");
    result[153] = PadText.getInstance(  40,"!  !  +->IF loc_error iyy1_component return_code < loc dont_change_return_codes 1_ok");
    result[154] = PadText.getInstance(  41,"!  !  !  MOVE loc_error iyy1_component TO exp_error iyy1_component");
    result[155] = PadText.getInstance(  42,"!  !  !  NOTE: ");
    result[156] = PadText.getInstance(  42,"!  !  !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    result[157] = PadText.getInstance(  42,
      "!  !  !  !! ATTENTION : In D AB, if context string must be formed ESCAPE AB must be exited.");
    result[158] = PadText.getInstance(  42,"!  !  !  ");
    result[159] = PadText.getInstance(  43,"! <------ESCAPE");
    result[160] = PadText.getInstance(  40,"!  !  +--");
    result[161] = PadText.getInstance(  44,"!  !  SET exp type tinstance_id TO loc_imp type tinstance_id ");
    result[162] = PadText.getInstance(  36,"!  +--");
    result[163] = PadText.getInstance(  45,"!   ");
    result[164] = PadText.getInstance(  46,"!  +->IF exp_error iyy1_component return_code < loc dont_change_return_codes 1_ok");
    result[165] = PadText.getInstance(  47,"!  !  USE cyyy9141_context_string_set");
    result[166] = PadText.getInstance(  47,"!  !     WHICH IMPORTS: Group View  loc_group_context TO Group View imp_group_context");
    result[167] = PadText.getInstance(  47,
      "!  !     WHICH EXPORTS: Work View loc_error iyy1_component FROM Work View exp_error iyy1_component");
    result[168] = PadText.getInstance(  47,
      "!  !                    Work View exp_error iyy1_component FROM Work View exp_context iyy1_component");
    result[169] = PadText.getInstance(  48,"!  !   ");
    result[170] = PadText.getInstance(  49,"!  !  +->IF loc_error iyy1_component return_code < loc dont_change_return_codes 1_ok");
    result[171] = PadText.getInstance(  50,"!  !  !  MOVE loc_error iyy1_component TO exp_error iyy1_component");
    result[172] = PadText.getInstance(  49,"!  !  +--");
    result[173] = PadText.getInstance(  51,"!  !  SET exp_error iyy1_component severity_code TO \"E\" ");
    result[174] = PadText.getInstance(  46,"!  +--");
    result[175] = PadText.getInstance(   0,"+---");
    result[176] = PadText.getInstance(PadText.LASTLINE,"************************* BOTTOM OF DATA *************************");
    return result;
  }
  final static int PADTEXT_SIZE = 177;
  //       +->   CYYY0311_TYPE_CREATE              07/05/2023  15:09
  //       !       IMPORTS:
  //       !         Work View imp_reference iyy1_server_data (Transient, Mandatory, Import only)
  //       !           userid
  //       !           reference_id
  //       !         Entity View imp type (Transient, Mandatory, Import only)
  //       !           tkey_attr_text
  //       !           tsearch_attr_text
  //       !           tother_attr_text
  //       !           tother_attr_date
  //       !           tother_attr_time
  //       !           tother_attr_amount
  //       !       EXPORTS:
  //       !         Entity View exp type (Transient, Export only)
  //       !           tinstance_id
  //       !           treference_id
  //       !         Work View exp_error iyy1_component (Transient, Export only)
  //       !           severity_code
  //       !           rollback_indicator
  //       !           origin_servid
  //       !           context_string
  //       !           return_code
  //       !           reason_code
  //       !           checksum
  //       !       LOCALS:
  //       !         Entity View loc_imp type
  //       !           tinstance_id
  //       !           tkey_attr_text
  //       !           tsearch_attr_text
  //       !           tother_attr_text
  //       !           tother_attr_date
  //       !           tother_attr_time
  //       !           tother_attr_amount
  //       !         Entity View loc_empty type
  //       !           tinstance_id
  //       !           tkey_attr_text
  //       !           tsearch_attr_text
  //       !           tother_attr_text
  //       !           tother_attr_date
  //       !           tother_attr_time
  //       !           tother_attr_amount
  //       !         Work View loc_error iyy1_component
  //       !           severity_code
  //       !           rollback_indicator
  //       !           origin_servid
  //       !           context_string
  //       !           return_code
  //       !           reason_code
  //       !           checksum
  //       !         Group View (9) loc_group_context
  //       !           Work View loc_g_context dont_change_text
  //       !             text_150
  //       !         Work View loc dont_change_return_codes
  //       !           1_ok
  //       !           n20_mandatory_import_missing
  //       !         Work View loc dont_change_reason_codes
  //       !           1_default
  //       !           145_type_key_attr_mand
  //       !           146_type_search_attr_mand
  //       !
  //       !     PROCEDURE STATEMENTS
  //       !
  //     1 !  NOTE: 
  //     1 !  Please review explanation for purpose.
  //     1 !  
  //     2 !  NOTE: 
  //     2 !  RELEASE HISTORY
  //     2 !  01_00 23-02-1998 New release
  //     2 !  
  //     3 !  USE cyyy9001_exception_hndlng_dflt
  //     3 !     WHICH EXPORTS: Work View exp_error iyy1_component FROM Work View exp_error iyy1_component
  //     4 !   
  //     5 !  NOTE: 
  //     5 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  //     5 !  Please rename the procedure name below.
  //     5 !  
  //     6 !  SET SUBSCRIPT OF loc_group_context TO 1 
  //     7 !  SET loc_g_context dont_change_text text_150 TO "CYYY0311" 
  //     8 !  SET SUBSCRIPT OF loc_group_context TO 2 
  //     9 !  SET loc_g_context dont_change_text text_150 TO "CREATE" 
  //    10 !   
  //    11 !  NOTE: 
  //    11 !  ****************************************************************
  //    11 !  Values of the ReturnCode/ReasonCode used.
  //    11 !  
  //    12 !  NOTE: 
  //    12 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  //    12 !  Please set the return ve reason code values below.
  //    12 !  
  //    13 !  SET loc dont_change_return_codes 1_ok TO 1 
  //    14 !  SET loc dont_change_return_codes n20_mandatory_import_missing TO -20 
  //    15 !   
  //    16 !  SET loc dont_change_reason_codes 1_default TO 1 
  //    17 !  SET loc dont_change_reason_codes 145_type_key_attr_mand TO 145 
  //    18 !  SET loc dont_change_reason_codes 146_type_search_attr_mand TO 146 
  //    19 !   
  //    20 !  NOTE: 
  //    20 !  ****************************************************************
  //    20 !  Instance id generate
  //    20 !  
  //    21 !  MOVE imp type TO loc_imp type
  //    22 !   
  //    23 !  USE cyyy0361_type_instance_id_gen
  //    23 !     WHICH EXPORTS: Entity View loc_imp type FROM Entity View exp type
  //    24 !   
  //    25 !  NOTE: 
  //    25 !  ****************************************************************
  //    25 !  Necessary or optional but the required fields for the operation is checked.
  //    25 !  
  //    26 !  +->IF exp_error iyy1_component return_code >= loc dont_change_return_codes 1_ok
  //    27 !  !  +->IF loc_imp type tkey_attr_text <= loc_empty type tkey_attr_text
  //    28 !  !  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n20_mandatory_import_missing 
  //    29 !  !  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 145_type_key_attr_mand 
  //    30 ! <------ESCAPE
  //    27 !  !  +--
  //    31 !  !  +->IF loc_imp type tsearch_attr_text <= loc_empty type tsearch_attr_text
  //    32 !  !  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n20_mandatory_import_missing 
  //    33 !  !  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 146_type_search_attr_mand 
  //    34 ! <------ESCAPE
  //    31 !  !  +--
  //    26 !  +--
  //    35 !   
  //    36 !  +->IF exp_error iyy1_component return_code >= loc dont_change_return_codes 1_ok
  //    37 !  !  USE dyyy0311_type_create
  //    37 !  !     WHICH IMPORTS: Work View exp_error iyy1_component TO Work View imp_error iyy1_component
  //    37 !  !                    Entity View loc_imp type TO Entity View imp type
  //    37 !  !                    Work View imp_reference iyy1_server_data TO Work View imp_reference iyy1_server_data
  //    37 !  !     WHICH EXPORTS: Entity View exp type FROM Entity View exp type
  //    37 !  !                    Work View loc_error iyy1_component FROM Work View exp_error iyy1_component
  //    38 !  !   
  //    39 !  !  NOTE: 
  //    39 !  !  ****************************************************************
  //    39 !  !  If External will be USEd the code sample replacement for above code:
  //    39 !  !  
  //    39 !  !  | USE eyyy0311_type_create
  //    39 !  !  |   WHICH IMPORTS: Work View   imp_reference iyy1_server_data TO Work View imp_reference iyy1_s.
  //    39 !  !  |                  Entity View loc_imp type TO Entity View imp type 
  //    39 !  !  |   WHICH EXPORTS: Entity View exp type FROM Entity View exp type 
  //    39 !  !  |                  Work View   loc_error d._c._text  FROM Work View   exp_error d._c._text 
  //    39 !  !  |
  //    39 !  !  | +- CASE OF loc_error dont_change_text text_2 
  //    39 !  !  | +- CASE "OK" 
  //    39 !  !  | +- CASE "AE" 
  //    39 !  !  | |  SET exp_error iyy1_com.. return_code TO loc d._c._return_codes n40_obj_create_failed 
  //    39 !  !  | |  SET exp_error iyy1_com.. reason_code TO loc d._c._reason_codes 142_type_already_exist
  //    39 !  !  | +- CASE "PV" 
  //    39 !  !  | |  SET exp_error iyy1_com.. return_code TO loc d._c._return_codes n40_obj_create_failed 
  //    39 !  !  | |  SET exp_error iyy1_com.. reason_code TO loc d._c._reason_codes 143_type_attr_value_invalid
  //    39 !  !  | +- OTHERWISE 
  //    39 !  !  | |  SET exp_error iyy1_com.. return_code TO loc d._c._return_codes n999_unexpected_exception 
  //    39 !  !  | |  SET exp_error iyy1_com.. reason_code TO loc d._c._reason_codes 1_default 
  //    39 !  !  | +--
  //    39 !  !  
  //    40 !  !  +->IF loc_error iyy1_component return_code < loc dont_change_return_codes 1_ok
  //    41 !  !  !  MOVE loc_error iyy1_component TO exp_error iyy1_component
  //    42 !  !  !  NOTE: 
  //    42 !  !  !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  //    42 !  !  !  !! ATTENTION : In D AB, if context string must be formed ESCAPE AB must be exited.
  //    42 !  !  !  
  //    43 ! <------ESCAPE
  //    40 !  !  +--
  //    44 !  !  SET exp type tinstance_id TO loc_imp type tinstance_id 
  //    36 !  +--
  //    45 !   
  //    46 !  +->IF exp_error iyy1_component return_code < loc dont_change_return_codes 1_ok
  //    47 !  !  USE cyyy9141_context_string_set
  //    47 !  !     WHICH IMPORTS: Group View  loc_group_context TO Group View imp_group_context
  //    47 !  !     WHICH EXPORTS: Work View loc_error iyy1_component FROM Work View exp_error iyy1_component
  //    47 !  !                    Work View exp_error iyy1_component FROM Work View exp_context iyy1_component
  //    48 !  !   
  //    49 !  !  +->IF loc_error iyy1_component return_code < loc dont_change_return_codes 1_ok
  //    50 !  !  !  MOVE loc_error iyy1_component TO exp_error iyy1_component
  //    49 !  !  +--
  //    51 !  !  SET exp_error iyy1_component severity_code TO "E" 
  //    46 !  +--
  //       +---
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  //  CONSTRUCTOR FOR THE CLASS       
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  public CYYY0311()
  {
    iefCGenRlse = "CA Gen 8.6";
    ssCopyright = "Copyright (c) 2023 CA Technologies. All rights reserved.";
    iefCGenDate = "2023/07/05";
    iefCGenTime = "15:09:14";
    iefCGenEncy = "9.2.A6";
    iefCGenUserId = "HakanBal";
    iefCGenModel = "N8I_ORT_YYY_0112_TEMPLATE";
    iefCGenSubset = "ALL";
    iefCGenName = "CYYY0311_TYPE_CREATE";
    nestingLevel = 0;
    valChkDeadlockTimeout = false;
    valChkDBError = false;
  }
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // ACTION BLOCK FUNCTION DECLARATIONS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  public void CYYY0311( Object in_runtime_parm1, 
  	IRuntimePStepContext in_runtime_parm2, 
  	GlobData in_globdata, 
  	CYYY0311_IA import_view, 
  	CYYY0311_OA export_view )
  {
    iefRuntimeParm1 = in_runtime_parm1;
    iefRuntimeParm2 = in_runtime_parm2;
    globdata = in_globdata;
    w_ia = import_view;
    w_oa = export_view;
    _CYYY0311();
  }
  
  private void _CYYY0311()
  {
    
    f_22020151_localAlloc("CYYY0311_TYPE_CREATE");
    if ( globdata.getErrorData().getLastStatus() == ErrorData.IEF_ALLOCATION_ERROR_FL_LS )
    	return;
    
    ++(nestingLevel);
    try {
      f_22020151_init();
      f_22020151();
    } catch( ABException e ) {
    } finally {
      --(nestingLevel);
    }
    String last_stmt_num_saved = globdata.getStateData().getLastStatementNumber();
    globdata.getStateData().setLastStatementNumber( "9999999999" );
    try {
      f_0_trace();
    } catch( ABException e ) {
    }
    globdata.getStateData().setLastStatementNumber( last_stmt_num_saved );
  }
  public void f_22020151()
  	throws ABException
  {
    func_0022020151_esc_flag = false;
    globdata.getStateData().setCurrentABId( "0022020151" );
    globdata.getStateData().setCurrentABName( "CYYY0311_TYPE_CREATE" );
    padview_init();
    globdata.getStateData().setLastStatementNumber( "0000000000" );
    f_0_trace();
    f_0022020151_esctag: 
    {
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    Please review explanation for purpose.                          
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    RELEASE HISTORY                                                 
      //    01_00 23-02-1998 New release                                    
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      globdata.getStateData().setLastStatementNumber( "0000000003" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        
        cyyy9001_oa = (gen.ort.yyy.CYYY9001_OA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY9001_OA"));
        globdata.getErrorData().setErrorEncounteredSW( ErrorData.NO_ERROR_FOUND_SW );
        iefRuntimeParm2.useActionBlock("gen.ort.yyy.CYYY9001", "CYYY9001", null, cyyy9001_oa);
        if ( ((!(globdata.getErrorData().getStatus().equals( ErrorData.NONE_SF ))) || (globdata.getErrorData().getErrorEncounteredSW(
          ) != ErrorData.NO_ERROR_FOUND_SW)) || (globdata.getErrorData().getViewOverflowSW() != ErrorData.NO_ERROR_FOUND_SW) )
        {
          throw new ABException();
        }
        globdata.getStateData().setCurrentABId( "0022020151" );
        globdata.getStateData().setCurrentABName( "CYYY0311_TYPE_CREATE" );
        globdata.getStateData().setLastStatementNumber( "0000000003" );
        w_oa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.valueOf(cyyy9001_oa.ExpErrorIyy1ComponentSeverityCode, (short)1);
        w_oa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.valueOf(cyyy9001_oa.ExpErrorIyy1ComponentRollbackIndicator, (
          short)1);
        w_oa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.valueOf(cyyy9001_oa.ExpErrorIyy1ComponentOriginServid);
        w_oa.ExpErrorIyy1ComponentContextString = StringAttr.valueOf(cyyy9001_oa.ExpErrorIyy1ComponentContextString, (short)512);
        w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf(cyyy9001_oa.ExpErrorIyy1ComponentReturnCode);
        w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf(cyyy9001_oa.ExpErrorIyy1ComponentReasonCode);
        w_oa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.valueOf(cyyy9001_oa.ExpErrorIyy1ComponentChecksum, (short)15);
        cyyy9001_oa.freeInstance();
        cyyy9001_oa = null;
      }
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!                      
      //    Please rename the procedure name below.                         
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      globdata.getStateData().setLastStatementNumber( "0000000006" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        LocGroupContext_PS_001 = (int)TIRD2DEC.TIRD2DC1(1, 0, TIRD2DEC.ROUND_NONE, 0);
        if ( (LocGroupContext_PS_001 > w_la.LocGroupContext_MA) && (LocGroupContext_PS_001 <= 9) )
        w_la.LocGroupContext_MA = IntAttr.valueOf(LocGroupContext_PS_001);
      }
      globdata.getStateData().setLastStatementNumber( "0000000007" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_la.LocGContextDontChangeTextText150[LocGroupContext_PS_001-1] = FixedStringAttr.valueOf("CYYY0311", (short)150);
        f_173015175_rgvc();
      }
      globdata.getStateData().setLastStatementNumber( "0000000008" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        LocGroupContext_PS_001 = (int)TIRD2DEC.TIRD2DC1(2, 0, TIRD2DEC.ROUND_NONE, 0);
        if ( (LocGroupContext_PS_001 > w_la.LocGroupContext_MA) && (LocGroupContext_PS_001 <= 9) )
        w_la.LocGroupContext_MA = IntAttr.valueOf(LocGroupContext_PS_001);
      }
      globdata.getStateData().setLastStatementNumber( "0000000009" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_la.LocGContextDontChangeTextText150[LocGroupContext_PS_001-1] = FixedStringAttr.valueOf("CREATE", (short)150);
        f_173015175_rgvc();
      }
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    Values of the ReturnCode/ReasonCode used.                       
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
      //    !!                                                              
      //    Please set the return ve reason code values below.              
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      globdata.getStateData().setLastStatementNumber( "0000000013" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_la.LocDontChangeReturnCodesQ1Ok = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(1, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000014" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_la.LocDontChangeReturnCodesN20MandatoryImportMissing = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(-20, 0, TIRD2DEC.ROUND_NONE, 
          5));
      }
      
      globdata.getStateData().setLastStatementNumber( "0000000016" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_la.LocDontChangeReasonCodesQ1Default = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(1, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000017" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_la.LocDontChangeReasonCodesQ145TypeKeyAttrMand = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(145, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000018" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_la.LocDontChangeReasonCodesQ146TypeSearchAttrMand = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(146, 0, TIRD2DEC.ROUND_NONE, 5))
          ;
      }
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    Instance id generate                                            
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      globdata.getStateData().setLastStatementNumber( "0000000021" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_la.LocImpTypeTkeyAttrText = FixedStringAttr.valueOf(w_ia.ImpTypeTkeyAttrText, (short)4);
        w_la.LocImpTypeTsearchAttrText = FixedStringAttr.valueOf(w_ia.ImpTypeTsearchAttrText, (short)20);
        w_la.LocImpTypeTotherAttrText = FixedStringAttr.valueOf(w_ia.ImpTypeTotherAttrText, (short)2);
        w_la.LocImpTypeTotherAttrDate = DateAttr.valueOf(w_ia.ImpTypeTotherAttrDate);
        w_la.LocImpTypeTotherAttrTime = TimeAttr.valueOf(w_ia.ImpTypeTotherAttrTime);
        w_la.LocImpTypeTotherAttrAmount = BigDecimalAttr.valueOf(TIRBDTRU.truncateToBigDecimal(w_ia.ImpTypeTotherAttrAmount, 2));
      }
      
      globdata.getStateData().setLastStatementNumber( "0000000023" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        
        cyyy0361_oa = (gen.ort.yyy.CYYY0361_OA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY0361_OA"));
        globdata.getErrorData().setErrorEncounteredSW( ErrorData.NO_ERROR_FOUND_SW );
        iefRuntimeParm2.useActionBlock("gen.ort.yyy.CYYY0361", "CYYY0361", null, cyyy0361_oa);
        if ( ((!(globdata.getErrorData().getStatus().equals( ErrorData.NONE_SF ))) || (globdata.getErrorData().getErrorEncounteredSW(
          ) != ErrorData.NO_ERROR_FOUND_SW)) || (globdata.getErrorData().getViewOverflowSW() != ErrorData.NO_ERROR_FOUND_SW) )
        {
          throw new ABException();
        }
        globdata.getStateData().setCurrentABId( "0022020151" );
        globdata.getStateData().setCurrentABName( "CYYY0311_TYPE_CREATE" );
        globdata.getStateData().setLastStatementNumber( "0000000023" );
        w_la.LocImpTypeTinstanceId = TimestampAttr.valueOf(cyyy0361_oa.ExpTypeTinstanceId);
        cyyy0361_oa.freeInstance();
        cyyy0361_oa = null;
      }
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    Necessary or optional but the required fields for the operatio  
      //    n is checked.                                                   
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      globdata.getStateData().setLastStatementNumber( "0000000026" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        if ( ((double) w_oa.ExpErrorIyy1ComponentReturnCode >= (double) w_la.LocDontChangeReturnCodesQ1Ok) )
        {
          f_20972846();
        }
        
      }
      if ( func_0022020151_esc_flag )
      {
        break f_0022020151_esctag;
      }
      
      globdata.getStateData().setLastStatementNumber( "0000000036" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        if ( ((double) w_oa.ExpErrorIyy1ComponentReturnCode >= (double) w_la.LocDontChangeReturnCodesQ1Ok) )
        {
          f_20972621();
        }
        
      }
      if ( func_0022020151_esc_flag )
      {
        break f_0022020151_esctag;
      }
      
      globdata.getStateData().setLastStatementNumber( "0000000046" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        if ( ((double) w_oa.ExpErrorIyy1ComponentReturnCode < (double) w_la.LocDontChangeReturnCodesQ1Ok) )
        {
          f_20973068();
        }
        
      }
    }
  }
  
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // SUBORDINATE FUNCTIONS
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  
  public void f_20972846()
  	throws ABException
  {
    func_0020972846_esc_flag = false;
    f_0020972846_esctag: 
    {
      globdata.getStateData().setLastStatementNumber( "0000000027" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        if ( CompareExit.compareTo(w_la.LocImpTypeTkeyAttrText, w_la.LocEmptyTypeTkeyAttrText) <= 0 )
        {
          f_20972943();
        }
        
      }
      if ( func_0020972846_esc_flag )
      {
        break f_0020972846_esctag;
      }
      globdata.getStateData().setLastStatementNumber( "0000000031" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        if ( CompareExit.compareTo(w_la.LocImpTypeTsearchAttrText, w_la.LocEmptyTypeTsearchAttrText) <= 0 )
        {
          f_20973008();
        }
        
      }
    }
  }
  
  public void f_20972621()
  	throws ABException
  {
    func_0020972621_esc_flag = false;
    f_0020972621_esctag: 
    {
      globdata.getStateData().setLastStatementNumber( "0000000037" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        
        dyyy0311_ia = (gen.ort.yyy.DYYY0311_IA)(iefRuntimeParm2.getInstance("gen.ort.yyy.DYYY0311_IA"));
        dyyy0311_oa = (gen.ort.yyy.DYYY0311_OA)(iefRuntimeParm2.getInstance("gen.ort.yyy.DYYY0311_OA"));
        dyyy0311_ia.ImpReferenceIyy1ServerDataUserid = FixedStringAttr.valueOf(w_ia.ImpReferenceIyy1ServerDataUserid, (short)8);
        dyyy0311_ia.ImpReferenceIyy1ServerDataReferenceId = TimestampAttr.valueOf(w_ia.ImpReferenceIyy1ServerDataReferenceId);
        dyyy0311_ia.ImpTypeTinstanceId = TimestampAttr.valueOf(w_la.LocImpTypeTinstanceId);
        dyyy0311_ia.ImpTypeTkeyAttrText = FixedStringAttr.valueOf(w_la.LocImpTypeTkeyAttrText, (short)4);
        dyyy0311_ia.ImpTypeTsearchAttrText = FixedStringAttr.valueOf(w_la.LocImpTypeTsearchAttrText, (short)20);
        dyyy0311_ia.ImpTypeTotherAttrText = FixedStringAttr.valueOf(w_la.LocImpTypeTotherAttrText, (short)2);
        dyyy0311_ia.ImpTypeTotherAttrDate = DateAttr.valueOf(w_la.LocImpTypeTotherAttrDate);
        dyyy0311_ia.ImpTypeTotherAttrTime = TimeAttr.valueOf(w_la.LocImpTypeTotherAttrTime);
        dyyy0311_ia.ImpTypeTotherAttrAmount = BigDecimalAttr.valueOf(w_la.LocImpTypeTotherAttrAmount);
        dyyy0311_ia.ImpErrorIyy1ComponentSeverityCode = FixedStringAttr.valueOf(w_oa.ExpErrorIyy1ComponentSeverityCode, (short)1);
        dyyy0311_ia.ImpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.valueOf(w_oa.ExpErrorIyy1ComponentRollbackIndicator, (
          short)1);
        dyyy0311_ia.ImpErrorIyy1ComponentOriginServid = DoubleAttr.valueOf(w_oa.ExpErrorIyy1ComponentOriginServid);
        dyyy0311_ia.ImpErrorIyy1ComponentContextString = StringAttr.valueOf(w_oa.ExpErrorIyy1ComponentContextString, (short)512);
        dyyy0311_ia.ImpErrorIyy1ComponentReturnCode = IntAttr.valueOf(w_oa.ExpErrorIyy1ComponentReturnCode);
        dyyy0311_ia.ImpErrorIyy1ComponentReasonCode = IntAttr.valueOf(w_oa.ExpErrorIyy1ComponentReasonCode);
        dyyy0311_ia.ImpErrorIyy1ComponentChecksum = FixedStringAttr.valueOf(w_oa.ExpErrorIyy1ComponentChecksum, (short)15);
        globdata.getErrorData().setErrorEncounteredSW( ErrorData.NO_ERROR_FOUND_SW );
        iefRuntimeParm2.useActionBlock("gen.ort.yyy.DYYY0311", "DYYY0311", dyyy0311_ia, dyyy0311_oa);
        if ( ((!(globdata.getErrorData().getStatus().equals( ErrorData.NONE_SF ))) || (globdata.getErrorData().getErrorEncounteredSW(
          ) != ErrorData.NO_ERROR_FOUND_SW)) || (globdata.getErrorData().getViewOverflowSW() != ErrorData.NO_ERROR_FOUND_SW) )
        {
          throw new ABException();
        }
        globdata.getStateData().setCurrentABId( "0022020151" );
        globdata.getStateData().setCurrentABName( "CYYY0311_TYPE_CREATE" );
        globdata.getStateData().setLastStatementNumber( "0000000037" );
        w_la.LocErrorIyy1ComponentSeverityCode = FixedStringAttr.valueOf(dyyy0311_oa.ExpErrorIyy1ComponentSeverityCode, (short)1);
        w_la.LocErrorIyy1ComponentRollbackIndicator = FixedStringAttr.valueOf(dyyy0311_oa.ExpErrorIyy1ComponentRollbackIndicator, (
          short)1);
        w_la.LocErrorIyy1ComponentOriginServid = DoubleAttr.valueOf(dyyy0311_oa.ExpErrorIyy1ComponentOriginServid);
        w_la.LocErrorIyy1ComponentContextString = StringAttr.valueOf(dyyy0311_oa.ExpErrorIyy1ComponentContextString, (short)512);
        w_la.LocErrorIyy1ComponentReturnCode = IntAttr.valueOf(dyyy0311_oa.ExpErrorIyy1ComponentReturnCode);
        w_la.LocErrorIyy1ComponentReasonCode = IntAttr.valueOf(dyyy0311_oa.ExpErrorIyy1ComponentReasonCode);
        w_la.LocErrorIyy1ComponentChecksum = FixedStringAttr.valueOf(dyyy0311_oa.ExpErrorIyy1ComponentChecksum, (short)15);
        w_oa.ExpTypeTreferenceId = TimestampAttr.valueOf(dyyy0311_oa.ExpTypeTreferenceId);
        dyyy0311_ia.freeInstance();
        dyyy0311_ia = null;
        dyyy0311_oa.freeInstance();
        dyyy0311_oa = null;
      }
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    If External will be                                             
      //    USEd the code sample replacement for above code:                
      //                                                                    
      //    | USE eyyy0311_type_create                                      
      //    |   WHICH IMPORTS: Work View   imp_reference iyy1_server_data   
      //    TO Work View imp_reference iyy1_s.                              
      //    |                  Entity View loc_imp type TO Entity           
      //    View imp type                                                   
      //    |   WHICH EXPORTS: Entity View exp type FROM Entity             
      //    View exp type                                                   
      //    |                  Work View   loc_error d._c._text  FROM       
      //    Work View   exp_error d._c._text                                
      //    |                                                               
      //    | +- CASE OF loc_error dont_change_text text_2                  
      //    | +- CASE "OK"                                                  
      //    | +- CASE "AE"                                                  
      //    | |  SET exp_error iyy1_com.. return_code TO                    
      //    loc d._c._return_codes n40_obj_create_failed                    
      //    | |  SET exp_error iyy1_com.. reason_code TO                    
      //    loc d._c._reason_codes 142_type_already_exist                   
      //    | +- CASE "PV"                                                  
      //    | |  SET exp_error iyy1_com.. return_code TO                    
      //    loc d._c._return_codes n40_obj_create_failed                    
      //    | |  SET exp_error iyy1_com.. reason_code TO                    
      //    loc d._c._reason_codes 143_type_attr_value_invalid              
      //    | +- OTHERWISE                                                  
      //    | |  SET exp_error iyy1_com.. return_code TO                    
      //    loc d._c._return_codes n999_unexpected_exception                
      //    | |  SET exp_error iyy1_com.. reason_code TO                    
      //    loc d._c._reason_codes 1_default                                
      //    | +--                                                           
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      globdata.getStateData().setLastStatementNumber( "0000000040" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        if ( ((double) w_la.LocErrorIyy1ComponentReturnCode < (double) w_la.LocDontChangeReturnCodesQ1Ok) )
        {
          f_20972730();
        }
        
      }
      if ( func_0020972621_esc_flag )
      {
        break f_0020972621_esctag;
      }
      globdata.getStateData().setLastStatementNumber( "0000000044" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_oa.ExpTypeTinstanceId = TimestampAttr.valueOf(w_la.LocImpTypeTinstanceId);
      }
    }
  }
  
  public void f_20973068()
  	throws ABException
  {
    func_0020973068_esc_flag = false;
    globdata.getStateData().setLastStatementNumber( "0000000047" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      
      cyyy9141_ia = (gen.ort.yyy.CYYY9141_IA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY9141_IA"));
      cyyy9141_oa = (gen.ort.yyy.CYYY9141_OA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY9141_OA"));
      cyyy9141_ia.ImpGroupContext_MA = IntAttr.valueOf(w_la.LocGroupContext_MA);
      for(adim1 = 1; adim1 <= w_la.LocGroupContext_MA; ++(adim1))
      {
        cyyy9141_ia.ImpGContextDontChangeTextText150[adim1-1] = FixedStringAttr.valueOf(w_la.LocGContextDontChangeTextText150[
          adim1-1], (short)150);
      }
      for(adim1 = w_la.LocGroupContext_MA + 1; adim1 <= 9; ++(adim1))
      {
        cyyy9141_ia.ImpGContextDontChangeTextText150[adim1-1] = 
"                                                                                                                                                      "
          ;
      }
      globdata.getErrorData().setErrorEncounteredSW( ErrorData.NO_ERROR_FOUND_SW );
      iefRuntimeParm2.useActionBlock("gen.ort.yyy.CYYY9141", "CYYY9141", cyyy9141_ia, cyyy9141_oa);
      if ( ((!(globdata.getErrorData().getStatus().equals( ErrorData.NONE_SF ))) || (globdata.getErrorData().getErrorEncounteredSW() 
        != ErrorData.NO_ERROR_FOUND_SW)) || (globdata.getErrorData().getViewOverflowSW() != ErrorData.NO_ERROR_FOUND_SW) )
      {
        throw new ABException();
      }
      globdata.getStateData().setCurrentABId( "0022020151" );
      globdata.getStateData().setCurrentABName( "CYYY0311_TYPE_CREATE" );
      globdata.getStateData().setLastStatementNumber( "0000000047" );
      w_oa.ExpErrorIyy1ComponentContextString = StringAttr.valueOf(cyyy9141_oa.ExpContextIyy1ComponentContextString, (short)512);
      w_la.LocErrorIyy1ComponentSeverityCode = FixedStringAttr.valueOf(cyyy9141_oa.ExpErrorIyy1ComponentSeverityCode, (short)1);
      w_la.LocErrorIyy1ComponentRollbackIndicator = FixedStringAttr.valueOf(cyyy9141_oa.ExpErrorIyy1ComponentRollbackIndicator, (
        short)1);
      w_la.LocErrorIyy1ComponentOriginServid = DoubleAttr.valueOf(cyyy9141_oa.ExpErrorIyy1ComponentOriginServid);
      w_la.LocErrorIyy1ComponentContextString = StringAttr.valueOf(cyyy9141_oa.ExpErrorIyy1ComponentContextString, (short)512);
      w_la.LocErrorIyy1ComponentReturnCode = IntAttr.valueOf(cyyy9141_oa.ExpErrorIyy1ComponentReturnCode);
      w_la.LocErrorIyy1ComponentReasonCode = IntAttr.valueOf(cyyy9141_oa.ExpErrorIyy1ComponentReasonCode);
      w_la.LocErrorIyy1ComponentChecksum = FixedStringAttr.valueOf(cyyy9141_oa.ExpErrorIyy1ComponentChecksum, (short)15);
      cyyy9141_ia.freeInstance();
      cyyy9141_ia = null;
      cyyy9141_oa.freeInstance();
      cyyy9141_oa = null;
    }
    
    globdata.getStateData().setLastStatementNumber( "0000000049" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      if ( ((double) w_la.LocErrorIyy1ComponentReturnCode < (double) w_la.LocDontChangeReturnCodesQ1Ok) )
      {
        globdata.getStateData().setLastStatementNumber( "0000000050" );
        f_0_trace();
        if ( trace_ret_code != 8 )
        {
          w_oa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.valueOf(w_la.LocErrorIyy1ComponentSeverityCode, (short)1);
          w_oa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.valueOf(w_la.LocErrorIyy1ComponentRollbackIndicator, (short)
            1);
          w_oa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.valueOf(w_la.LocErrorIyy1ComponentOriginServid);
          w_oa.ExpErrorIyy1ComponentContextString = StringAttr.valueOf(w_la.LocErrorIyy1ComponentContextString, (short)512);
          w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf(w_la.LocErrorIyy1ComponentReturnCode);
          w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf(w_la.LocErrorIyy1ComponentReasonCode);
          w_oa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.valueOf(w_la.LocErrorIyy1ComponentChecksum, (short)15);
        }
      }
      
    }
    globdata.getStateData().setLastStatementNumber( "0000000051" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.valueOf("E", (short)1);
    }
  }
  
  public void f_20972943()
  	throws ABException
  {
    func_0020972943_esc_flag = false;
    f_0020972943_esctag: 
    {
      globdata.getStateData().setLastStatementNumber( "0000000028" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
          w_la.LocDontChangeReturnCodesN20MandatoryImportMissing, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000029" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
          w_la.LocDontChangeReasonCodesQ145TypeKeyAttrMand, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000030" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        func_0020972943_esc_flag = true;
        func_0020972846_esc_flag = true;
      }
    }
  }
  
  public void f_20973008()
  	throws ABException
  {
    func_0020973008_esc_flag = false;
    f_0020973008_esctag: 
    {
      globdata.getStateData().setLastStatementNumber( "0000000032" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
          w_la.LocDontChangeReturnCodesN20MandatoryImportMissing, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000033" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
          w_la.LocDontChangeReasonCodesQ146TypeSearchAttrMand, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000034" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        func_0020973008_esc_flag = true;
        func_0020972846_esc_flag = true;
      }
    }
  }
  
  public void f_20972730()
  	throws ABException
  {
    func_0020972730_esc_flag = false;
    f_0020972730_esctag: 
    {
      globdata.getStateData().setLastStatementNumber( "0000000041" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_oa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.valueOf(w_la.LocErrorIyy1ComponentSeverityCode, (short)1);
        w_oa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.valueOf(w_la.LocErrorIyy1ComponentRollbackIndicator, (short)1)
          ;
        w_oa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.valueOf(w_la.LocErrorIyy1ComponentOriginServid);
        w_oa.ExpErrorIyy1ComponentContextString = StringAttr.valueOf(w_la.LocErrorIyy1ComponentContextString, (short)512);
        w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf(w_la.LocErrorIyy1ComponentReturnCode);
        w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf(w_la.LocErrorIyy1ComponentReasonCode);
        w_oa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.valueOf(w_la.LocErrorIyy1ComponentChecksum, (short)15);
      }
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
      //    !!!!!!!!!!!                                                     
      //    !! ATTENTION : In D AB, if context string must be formed        
      //    ESCAPE AB must be exited.                                       
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      globdata.getStateData().setLastStatementNumber( "0000000043" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        func_0020972730_esc_flag = true;
        func_0020972621_esc_flag = true;
      }
    }
  }
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // INITIALIZATION UTILITY FUNCTIONS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  public void f_22020151_localAlloc(String abname)
  {
    // Request localview allocation 
    w_la = (gen.ort.yyy.CYYY0311_LA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY0311_LA"));
    if ( w_la == null )
    {
      globdata.getStateData().setCurrentABId( "0022020151" );
      globdata.getStateData().setCurrentABName( abname );
      globdata.getErrorData().setErrorEncounteredSW( ErrorData.ERROR_FOUND_SW );
      globdata.getErrorData().setLastStatus( ErrorData.IEF_ALLOCATION_ERROR_FL_LS );
    }
  }
  
  public void f_22020151_init()
  	throws ABException
  {
    if ( nestingLevel < 2 )
    {
      w_la.reset();
    }
    w_la.LocGroupContext_MA = 0;
    for(LocGroupContext_PS_001 = 1; LocGroupContext_PS_001 <= 9; ++(LocGroupContext_PS_001))
    {
    }
    w_oa.ExpTypeTinstanceId = "00000000000000000000";
    w_oa.ExpTypeTreferenceId = "00000000000000000000";
    w_oa.ExpErrorIyy1ComponentSeverityCode = " ";
    w_oa.ExpErrorIyy1ComponentRollbackIndicator = " ";
    w_oa.ExpErrorIyy1ComponentOriginServid = 0.0;
    w_oa.ExpErrorIyy1ComponentContextString = "";
    w_oa.ExpErrorIyy1ComponentReturnCode = 0;
    w_oa.ExpErrorIyy1ComponentReasonCode = 0;
    w_oa.ExpErrorIyy1ComponentChecksum = "               ";
    LocGroupContext_PS_001 = 1;
  }
  
  public void f_0_trace()
  	throws ABException
  {
    trace_ret_code = TIRTRCE.TIRTRCE(iefRuntimeParm1, iefRuntimeParm2, globdata, padtext, padview);
    if ( trace_ret_code == 20 )
    {
      throw new ABException();
    }
  }
  
  public void padview_init()
  {
padview[0] = PadView.getInstance("IMPORT                          ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_ia, 
      "w_ia");
    padview[1] = PadView.getInstance("IMP_REFERENCE                   ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ia, 
      null);
    padview[2] = PadView.getInstance("IYY1_SERVER_DATA                ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, w_ia,
       null);
    padview[3] = PadView.getInstance("USERID                          ", 8, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpReferenceIyy1ServerDataUserid");
    padview[4] = PadView.getInstance("REFERENCE_ID                    ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_ia, "ImpReferenceIyy1ServerDataReferenceId");
    padview[5] = PadView.getInstance("IMP                             ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ia, 
      null);
    padview[6] = PadView.getInstance("TYPE                            ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, w_ia,
       null);
    padview[7] = PadView.getInstance("TKEY_ATTR_TEXT                  ", 4, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpTypeTkeyAttrText");
    padview[8] = PadView.getInstance("TSEARCH_ATTR_TEXT               ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpTypeTsearchAttrText");
    padview[9] = PadView.getInstance("TOTHER_ATTR_TEXT                ", 2, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpTypeTotherAttrText");
    padview[10] = PadView.getInstance("TOTHER_ATTR_DATE                ", 8, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_DATE, 
      w_ia, "ImpTypeTotherAttrDate");
    padview[11] = PadView.getInstance("TOTHER_ATTR_TIME                ", 6, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TIME, 
      w_ia, "ImpTypeTotherAttrTime");
    padview[12] = PadView.getInstance("TOTHER_ATTR_AMOUNT              ", 17, 2, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_FIXED,
       w_ia, "ImpTypeTotherAttrAmount");
    padview[13] = PadView.getInstance("EXPORT                          ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_oa, 
      "w_oa");
    padview[14] = PadView.getInstance("EXP                             ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_oa, 
      null);
    padview[15] = PadView.getInstance("TYPE                            ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_oa, null);
    padview[16] = PadView.getInstance("TINSTANCE_ID                    ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_oa, "ExpTypeTinstanceId");
    padview[17] = PadView.getInstance("TREFERENCE_ID                   ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_oa, "ExpTypeTreferenceId");
    padview[18] = PadView.getInstance("EXP_ERROR                       ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_oa, 
      null);
    padview[19] = PadView.getInstance("IYY1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_oa, null);
    padview[20] = PadView.getInstance("SEVERITY_CODE                   ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentSeverityCode");
    padview[21] = PadView.getInstance("ROLLBACK_INDICATOR              ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentRollbackIndicator");
    padview[22] = PadView.getInstance("ORIGIN_SERVID                   ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentOriginServid");
    padview[23] = PadView.getInstance("CONTEXT_STRING                  ", 512, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_oa, "ExpErrorIyy1ComponentContextString");
    padview[24] = PadView.getInstance("RETURN_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentReturnCode");
    padview[25] = PadView.getInstance("REASON_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentReasonCode");
    padview[26] = PadView.getInstance("CHECKSUM                        ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentChecksum");
    padview[27] = PadView.getInstance("LOCAL                           ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_la, 
      "w_la");
    padview[28] = PadView.getInstance("LOC_IMP                         ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[29] = PadView.getInstance("TYPE                            ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[30] = PadView.getInstance("TINSTANCE_ID                    ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_la, "LocImpTypeTinstanceId");
    padview[31] = PadView.getInstance("TKEY_ATTR_TEXT                  ", 4, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpTypeTkeyAttrText");
    padview[32] = PadView.getInstance("TSEARCH_ATTR_TEXT               ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpTypeTsearchAttrText");
    padview[33] = PadView.getInstance("TOTHER_ATTR_TEXT                ", 2, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpTypeTotherAttrText");
    padview[34] = PadView.getInstance("TOTHER_ATTR_DATE                ", 8, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_DATE, 
      w_la, "LocImpTypeTotherAttrDate");
    padview[35] = PadView.getInstance("TOTHER_ATTR_TIME                ", 6, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TIME, 
      w_la, "LocImpTypeTotherAttrTime");
    padview[36] = PadView.getInstance("TOTHER_ATTR_AMOUNT              ", 17, 2, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_FIXED,
       w_la, "LocImpTypeTotherAttrAmount");
    padview[37] = PadView.getInstance("LOC_EMPTY                       ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[38] = PadView.getInstance("TYPE                            ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[39] = PadView.getInstance("TINSTANCE_ID                    ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_la, "LocEmptyTypeTinstanceId");
    padview[40] = PadView.getInstance("TKEY_ATTR_TEXT                  ", 4, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocEmptyTypeTkeyAttrText");
    padview[41] = PadView.getInstance("TSEARCH_ATTR_TEXT               ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocEmptyTypeTsearchAttrText");
    padview[42] = PadView.getInstance("TOTHER_ATTR_TEXT                ", 2, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocEmptyTypeTotherAttrText");
    padview[43] = PadView.getInstance("TOTHER_ATTR_DATE                ", 8, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_DATE, 
      w_la, "LocEmptyTypeTotherAttrDate");
    padview[44] = PadView.getInstance("TOTHER_ATTR_TIME                ", 6, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TIME, 
      w_la, "LocEmptyTypeTotherAttrTime");
    padview[45] = PadView.getInstance("TOTHER_ATTR_AMOUNT              ", 17, 2, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_FIXED,
       w_la, "LocEmptyTypeTotherAttrAmount");
    padview[46] = PadView.getInstance("LOC_ERROR                       ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[47] = PadView.getInstance("IYY1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[48] = PadView.getInstance("SEVERITY_CODE                   ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocErrorIyy1ComponentSeverityCode");
    padview[49] = PadView.getInstance("ROLLBACK_INDICATOR              ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocErrorIyy1ComponentRollbackIndicator");
    padview[50] = PadView.getInstance("ORIGIN_SERVID                   ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocErrorIyy1ComponentOriginServid");
    padview[51] = PadView.getInstance("CONTEXT_STRING                  ", 512, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_la, "LocErrorIyy1ComponentContextString");
    padview[52] = PadView.getInstance("RETURN_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocErrorIyy1ComponentReturnCode");
    padview[53] = PadView.getInstance("REASON_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocErrorIyy1ComponentReasonCode");
    padview[54] = PadView.getInstance("CHECKSUM                        ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocErrorIyy1ComponentChecksum");
    padview[55] = PadView.getInstance("LOC_GROUP_CONTEXT               ", 0, 0, 9, (short)2, PadView.VT_GROUP, PadView.DT_NONE, w_la,
       "LocGroupContext_MA");
    padview[56] = PadView.getInstance("LOC_G_CONTEXT                   ", 0, 0, 0, (short)3, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[57] = PadView.getInstance("DONT_CHANGE_TEXT                ", 0, 0, 0, (short)4, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[58] = PadView.getInstance("TEXT_150                        ", 150, 0, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_TEXT,
       w_la, "LocGContextDontChangeTextText150");
    padview[59] = PadView.getInstance("LOC                             ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[60] = PadView.getInstance("DONT_CHANGE_RETURN_CODES        ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[61] = PadView.getInstance("1_OK                            ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReturnCodesQ1Ok");
    padview[62] = PadView.getInstance("N20_MANDATORY_IMPORT_MISSING    ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReturnCodesN20MandatoryImportMissing");
    padview[63] = PadView.getInstance("LOC                             ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[64] = PadView.getInstance("DONT_CHANGE_REASON_CODES        ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[65] = PadView.getInstance("1_DEFAULT                       ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReasonCodesQ1Default");
    padview[66] = PadView.getInstance("145_TYPE_KEY_ATTR_MAND          ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReasonCodesQ145TypeKeyAttrMand");
    padview[67] = PadView.getInstance("146_TYPE_SEARCH_ATTR_MAND       ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReasonCodesQ146TypeSearchAttrMand");
    padview[68] = PadView.getInstance("******** BOTTOM OF DATA ********", 0, 0, 0, (short)0, PadView.VT_END, PadView.DT_NONE, w_la, 
      null);
  }
  public void f_173015175_rgvc()
  	throws ABException
  {
    if ( (LocGroupContext_PS_001 > 9) || (LocGroupContext_PS_001 < 1) )
    {
      globdata.getErrorData().setViewOverflowSW( ErrorData.ERROR_FOUND_SW );
      {
        throw new ABException();
      }
    }
  }
}// end class


package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: CYYY0311_IA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:09:14
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF IMPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: CYYY0311_IA
 **/
public class CYYY0311_IA extends ViewBase implements IImportView, Serializable
{
  // Entity View: IMP_REFERENCE
  //        Type: IYY1_SERVER_DATA
  /**
   * Attribute missing flag for: ImpReferenceIyy1ServerDataUserid
   **/
  public char ImpReferenceIyy1ServerDataUserid_AS;
  /**
   * Attribute for: ImpReferenceIyy1ServerDataUserid
   * Domain: Text
   * Length: 8
   * Varying Length: N
   **/
  public String ImpReferenceIyy1ServerDataUserid;
  /**
   * Attribute missing flag for: ImpReferenceIyy1ServerDataReferenceId
   **/
  public char ImpReferenceIyy1ServerDataReferenceId_AS;
  /**
   * Attribute for: ImpReferenceIyy1ServerDataReferenceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String ImpReferenceIyy1ServerDataReferenceId;
  // Entity View: IMP
  //        Type: TYPE
  /**
   * Attribute missing flag for: ImpTypeTkeyAttrText
   **/
  public char ImpTypeTkeyAttrText_AS;
  /**
   * Attribute for: ImpTypeTkeyAttrText
   * Domain: Text
   * Length: 4
   * Varying Length: N
   **/
  public String ImpTypeTkeyAttrText;
  /**
   * Attribute missing flag for: ImpTypeTsearchAttrText
   **/
  public char ImpTypeTsearchAttrText_AS;
  /**
   * Attribute for: ImpTypeTsearchAttrText
   * Domain: Text
   * Length: 20
   * Varying Length: N
   **/
  public String ImpTypeTsearchAttrText;
  /**
   * Attribute missing flag for: ImpTypeTotherAttrText
   **/
  public char ImpTypeTotherAttrText_AS;
  /**
   * Attribute for: ImpTypeTotherAttrText
   * Domain: Text
   * Length: 2
   * Varying Length: N
   **/
  public String ImpTypeTotherAttrText;
  /**
   * Attribute missing flag for: ImpTypeTotherAttrDate
   **/
  public char ImpTypeTotherAttrDate_AS;
  /**
   * Attribute for: ImpTypeTotherAttrDate
   * Domain: Date
   * Length: 8
   **/
  public int ImpTypeTotherAttrDate;
  /**
   * Attribute missing flag for: ImpTypeTotherAttrTime
   **/
  public char ImpTypeTotherAttrTime_AS;
  /**
   * Attribute for: ImpTypeTotherAttrTime
   * Domain: Time
   * Length: 6
   **/
  public int ImpTypeTotherAttrTime;
  /**
   * Attribute missing flag for: ImpTypeTotherAttrAmount
   **/
  public char ImpTypeTotherAttrAmount_AS;
  /**
   * Attribute for: ImpTypeTotherAttrAmount
   * Domain: Number
   * Length: 17
   * Decimal Places: 2
   * Decimal Precision: Y
   **/
  public BigDecimal ImpTypeTotherAttrAmount;
  /**
   * Default Constructor
   **/
  
  public CYYY0311_IA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public CYYY0311_IA(CYYY0311_IA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static CYYY0311_IA getInstance()
  {
    return new CYYY0311_IA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new CYYY0311_IA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    ImpReferenceIyy1ServerDataUserid_AS = ' ';
    ImpReferenceIyy1ServerDataUserid = "        ";
    ImpReferenceIyy1ServerDataReferenceId_AS = ' ';
    ImpReferenceIyy1ServerDataReferenceId = "00000000000000000000";
    ImpTypeTkeyAttrText_AS = ' ';
    ImpTypeTkeyAttrText = "    ";
    ImpTypeTsearchAttrText_AS = ' ';
    ImpTypeTsearchAttrText = "                    ";
    ImpTypeTotherAttrText_AS = ' ';
    ImpTypeTotherAttrText = "  ";
    ImpTypeTotherAttrDate_AS = ' ';
    ImpTypeTotherAttrDate = 00000000;
    ImpTypeTotherAttrTime_AS = ' ';
    ImpTypeTotherAttrTime = 00000000;
    ImpTypeTotherAttrAmount_AS = ' ';
    ImpTypeTotherAttrAmount = BigDecimalAttr.getDefaultValue();
  }
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    throw new RuntimeException("can only execute getVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    throw new RuntimeException("can only execute setFromVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IImportView orig)
  {
    this.copyFrom((CYYY0311_IA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(CYYY0311_IA orig)
  {
    ImpReferenceIyy1ServerDataUserid_AS = orig.ImpReferenceIyy1ServerDataUserid_AS;
    ImpReferenceIyy1ServerDataUserid = orig.ImpReferenceIyy1ServerDataUserid;
    ImpReferenceIyy1ServerDataReferenceId_AS = orig.ImpReferenceIyy1ServerDataReferenceId_AS;
    ImpReferenceIyy1ServerDataReferenceId = orig.ImpReferenceIyy1ServerDataReferenceId;
    ImpTypeTkeyAttrText_AS = orig.ImpTypeTkeyAttrText_AS;
    ImpTypeTkeyAttrText = orig.ImpTypeTkeyAttrText;
    ImpTypeTsearchAttrText_AS = orig.ImpTypeTsearchAttrText_AS;
    ImpTypeTsearchAttrText = orig.ImpTypeTsearchAttrText;
    ImpTypeTotherAttrText_AS = orig.ImpTypeTotherAttrText_AS;
    ImpTypeTotherAttrText = orig.ImpTypeTotherAttrText;
    ImpTypeTotherAttrDate_AS = orig.ImpTypeTotherAttrDate_AS;
    ImpTypeTotherAttrDate = orig.ImpTypeTotherAttrDate;
    ImpTypeTotherAttrTime_AS = orig.ImpTypeTotherAttrTime_AS;
    ImpTypeTotherAttrTime = orig.ImpTypeTotherAttrTime;
    ImpTypeTotherAttrAmount_AS = orig.ImpTypeTotherAttrAmount_AS;
    ImpTypeTotherAttrAmount = orig.ImpTypeTotherAttrAmount;
  }
}

package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: CYYY0311_LA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:09:14
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF LOCAL VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: CYYY0311_LA
 **/
public class CYYY0311_LA extends ViewBase implements ILocalView, Serializable
{
  // Entity View: LOC_IMP
  //        Type: TYPE
  /**
   * Attribute missing flag for: LocImpTypeTinstanceId
   **/
  public char LocImpTypeTinstanceId_AS;
  /**
   * Attribute for: LocImpTypeTinstanceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String LocImpTypeTinstanceId;
  /**
   * Attribute missing flag for: LocImpTypeTkeyAttrText
   **/
  public char LocImpTypeTkeyAttrText_AS;
  /**
   * Attribute for: LocImpTypeTkeyAttrText
   * Domain: Text
   * Length: 4
   * Varying Length: N
   **/
  public String LocImpTypeTkeyAttrText;
  /**
   * Attribute missing flag for: LocImpTypeTsearchAttrText
   **/
  public char LocImpTypeTsearchAttrText_AS;
  /**
   * Attribute for: LocImpTypeTsearchAttrText
   * Domain: Text
   * Length: 20
   * Varying Length: N
   **/
  public String LocImpTypeTsearchAttrText;
  /**
   * Attribute missing flag for: LocImpTypeTotherAttrText
   **/
  public char LocImpTypeTotherAttrText_AS;
  /**
   * Attribute for: LocImpTypeTotherAttrText
   * Domain: Text
   * Length: 2
   * Varying Length: N
   **/
  public String LocImpTypeTotherAttrText;
  /**
   * Attribute missing flag for: LocImpTypeTotherAttrDate
   **/
  public char LocImpTypeTotherAttrDate_AS;
  /**
   * Attribute for: LocImpTypeTotherAttrDate
   * Domain: Date
   * Length: 8
   **/
  public int LocImpTypeTotherAttrDate;
  /**
   * Attribute missing flag for: LocImpTypeTotherAttrTime
   **/
  public char LocImpTypeTotherAttrTime_AS;
  /**
   * Attribute for: LocImpTypeTotherAttrTime
   * Domain: Time
   * Length: 6
   **/
  public int LocImpTypeTotherAttrTime;
  /**
   * Attribute missing flag for: LocImpTypeTotherAttrAmount
   **/
  public char LocImpTypeTotherAttrAmount_AS;
  /**
   * Attribute for: LocImpTypeTotherAttrAmount
   * Domain: Number
   * Length: 17
   * Decimal Places: 2
   * Decimal Precision: Y
   **/
  public BigDecimal LocImpTypeTotherAttrAmount;
  // Entity View: LOC_EMPTY
  //        Type: TYPE
  /**
   * Attribute missing flag for: LocEmptyTypeTinstanceId
   **/
  public char LocEmptyTypeTinstanceId_AS;
  /**
   * Attribute for: LocEmptyTypeTinstanceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String LocEmptyTypeTinstanceId;
  /**
   * Attribute missing flag for: LocEmptyTypeTkeyAttrText
   **/
  public char LocEmptyTypeTkeyAttrText_AS;
  /**
   * Attribute for: LocEmptyTypeTkeyAttrText
   * Domain: Text
   * Length: 4
   * Varying Length: N
   **/
  public String LocEmptyTypeTkeyAttrText;
  /**
   * Attribute missing flag for: LocEmptyTypeTsearchAttrText
   **/
  public char LocEmptyTypeTsearchAttrText_AS;
  /**
   * Attribute for: LocEmptyTypeTsearchAttrText
   * Domain: Text
   * Length: 20
   * Varying Length: N
   **/
  public String LocEmptyTypeTsearchAttrText;
  /**
   * Attribute missing flag for: LocEmptyTypeTotherAttrText
   **/
  public char LocEmptyTypeTotherAttrText_AS;
  /**
   * Attribute for: LocEmptyTypeTotherAttrText
   * Domain: Text
   * Length: 2
   * Varying Length: N
   **/
  public String LocEmptyTypeTotherAttrText;
  /**
   * Attribute missing flag for: LocEmptyTypeTotherAttrDate
   **/
  public char LocEmptyTypeTotherAttrDate_AS;
  /**
   * Attribute for: LocEmptyTypeTotherAttrDate
   * Domain: Date
   * Length: 8
   **/
  public int LocEmptyTypeTotherAttrDate;
  /**
   * Attribute missing flag for: LocEmptyTypeTotherAttrTime
   **/
  public char LocEmptyTypeTotherAttrTime_AS;
  /**
   * Attribute for: LocEmptyTypeTotherAttrTime
   * Domain: Time
   * Length: 6
   **/
  public int LocEmptyTypeTotherAttrTime;
  /**
   * Attribute missing flag for: LocEmptyTypeTotherAttrAmount
   **/
  public char LocEmptyTypeTotherAttrAmount_AS;
  /**
   * Attribute for: LocEmptyTypeTotherAttrAmount
   * Domain: Number
   * Length: 17
   * Decimal Places: 2
   * Decimal Precision: Y
   **/
  public BigDecimal LocEmptyTypeTotherAttrAmount;
  // Entity View: LOC_ERROR
  //        Type: IYY1_COMPONENT
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentSeverityCode
   **/
  public char LocErrorIyy1ComponentSeverityCode_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentSeverityCode
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String LocErrorIyy1ComponentSeverityCode;
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentRollbackIndicator
   **/
  public char LocErrorIyy1ComponentRollbackIndicator_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentRollbackIndicator
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String LocErrorIyy1ComponentRollbackIndicator;
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentOriginServid
   **/
  public char LocErrorIyy1ComponentOriginServid_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentOriginServid
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double LocErrorIyy1ComponentOriginServid;
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentContextString
   **/
  public char LocErrorIyy1ComponentContextString_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentContextString
   * Domain: Text
   * Length: 512
   * Varying Length: Y
   **/
  public String LocErrorIyy1ComponentContextString;
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentReturnCode
   **/
  public char LocErrorIyy1ComponentReturnCode_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentReturnCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocErrorIyy1ComponentReturnCode;
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentReasonCode
   **/
  public char LocErrorIyy1ComponentReasonCode_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentReasonCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocErrorIyy1ComponentReasonCode;
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentChecksum
   **/
  public char LocErrorIyy1ComponentChecksum_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentChecksum
   * Domain: Text
   * Length: 15
   * Varying Length: N
   **/
  public String LocErrorIyy1ComponentChecksum;
  // Repeating GV:  LOC_GROUP_CONTEXT
  //     Repeats: 9 times
  /**
   * Repeating group view count
   **/
  public int LocGroupContext_MA;
  /**
   * Repeating group view occurrance array
   **/
  public char LocGroupContext_AC[] = new char[9];
  // Entity View: LOC_G_CONTEXT
  //        Type: DONT_CHANGE_TEXT
  /**
   * Attribute missing flag for: LocGContextDontChangeTextText150
   **/
  public char LocGContextDontChangeTextText150_AS[] = new char[9];
  /**
   * Attribute for: LocGContextDontChangeTextText150
   * Domain: Text
   * Length: 150
   * Varying Length: N
   **/
  public String LocGContextDontChangeTextText150[] = new String[9];
  // Entity View: LOC
  //        Type: DONT_CHANGE_RETURN_CODES
  /**
   * Attribute missing flag for: LocDontChangeReturnCodesQ1Ok
   **/
  public char LocDontChangeReturnCodesQ1Ok_AS;
  /**
   * Attribute for: LocDontChangeReturnCodesQ1Ok
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReturnCodesQ1Ok;
  /**
   * Attribute missing flag for: LocDontChangeReturnCodesN20MandatoryImportMissing
   **/
  public char LocDontChangeReturnCodesN20MandatoryImportMissing_AS;
  /**
   * Attribute for: LocDontChangeReturnCodesN20MandatoryImportMissing
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReturnCodesN20MandatoryImportMissing;
  // Entity View: LOC
  //        Type: DONT_CHANGE_REASON_CODES
  /**
   * Attribute missing flag for: LocDontChangeReasonCodesQ1Default
   **/
  public char LocDontChangeReasonCodesQ1Default_AS;
  /**
   * Attribute for: LocDontChangeReasonCodesQ1Default
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReasonCodesQ1Default;
  /**
   * Attribute missing flag for: LocDontChangeReasonCodesQ145TypeKeyAttrMand
   **/
  public char LocDontChangeReasonCodesQ145TypeKeyAttrMand_AS;
  /**
   * Attribute for: LocDontChangeReasonCodesQ145TypeKeyAttrMand
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReasonCodesQ145TypeKeyAttrMand;
  /**
   * Attribute missing flag for: LocDontChangeReasonCodesQ146TypeSearchAttrMand
   **/
  public char LocDontChangeReasonCodesQ146TypeSearchAttrMand_AS;
  /**
   * Attribute for: LocDontChangeReasonCodesQ146TypeSearchAttrMand
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReasonCodesQ146TypeSearchAttrMand;
  /**
   * Default Constructor
   **/
  
  public CYYY0311_LA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public CYYY0311_LA(CYYY0311_LA orig)
  {
    LocImpTypeTinstanceId_AS = orig.LocImpTypeTinstanceId_AS;
    LocImpTypeTinstanceId = orig.LocImpTypeTinstanceId;
    LocImpTypeTkeyAttrText_AS = orig.LocImpTypeTkeyAttrText_AS;
    LocImpTypeTkeyAttrText = orig.LocImpTypeTkeyAttrText;
    LocImpTypeTsearchAttrText_AS = orig.LocImpTypeTsearchAttrText_AS;
    LocImpTypeTsearchAttrText = orig.LocImpTypeTsearchAttrText;
    LocImpTypeTotherAttrText_AS = orig.LocImpTypeTotherAttrText_AS;
    LocImpTypeTotherAttrText = orig.LocImpTypeTotherAttrText;
    LocImpTypeTotherAttrDate_AS = orig.LocImpTypeTotherAttrDate_AS;
    LocImpTypeTotherAttrDate = orig.LocImpTypeTotherAttrDate;
    LocImpTypeTotherAttrTime_AS = orig.LocImpTypeTotherAttrTime_AS;
    LocImpTypeTotherAttrTime = orig.LocImpTypeTotherAttrTime;
    LocImpTypeTotherAttrAmount_AS = orig.LocImpTypeTotherAttrAmount_AS;
    LocImpTypeTotherAttrAmount = orig.LocImpTypeTotherAttrAmount;
    LocEmptyTypeTinstanceId_AS = orig.LocEmptyTypeTinstanceId_AS;
    LocEmptyTypeTinstanceId = orig.LocEmptyTypeTinstanceId;
    LocEmptyTypeTkeyAttrText_AS = orig.LocEmptyTypeTkeyAttrText_AS;
    LocEmptyTypeTkeyAttrText = orig.LocEmptyTypeTkeyAttrText;
    LocEmptyTypeTsearchAttrText_AS = orig.LocEmptyTypeTsearchAttrText_AS;
    LocEmptyTypeTsearchAttrText = orig.LocEmptyTypeTsearchAttrText;
    LocEmptyTypeTotherAttrText_AS = orig.LocEmptyTypeTotherAttrText_AS;
    LocEmptyTypeTotherAttrText = orig.LocEmptyTypeTotherAttrText;
    LocEmptyTypeTotherAttrDate_AS = orig.LocEmptyTypeTotherAttrDate_AS;
    LocEmptyTypeTotherAttrDate = orig.LocEmptyTypeTotherAttrDate;
    LocEmptyTypeTotherAttrTime_AS = orig.LocEmptyTypeTotherAttrTime_AS;
    LocEmptyTypeTotherAttrTime = orig.LocEmptyTypeTotherAttrTime;
    LocEmptyTypeTotherAttrAmount_AS = orig.LocEmptyTypeTotherAttrAmount_AS;
    LocEmptyTypeTotherAttrAmount = orig.LocEmptyTypeTotherAttrAmount;
    LocErrorIyy1ComponentSeverityCode_AS = orig.LocErrorIyy1ComponentSeverityCode_AS;
    LocErrorIyy1ComponentSeverityCode = orig.LocErrorIyy1ComponentSeverityCode;
    LocErrorIyy1ComponentRollbackIndicator_AS = orig.LocErrorIyy1ComponentRollbackIndicator_AS;
    LocErrorIyy1ComponentRollbackIndicator = orig.LocErrorIyy1ComponentRollbackIndicator;
    LocErrorIyy1ComponentOriginServid_AS = orig.LocErrorIyy1ComponentOriginServid_AS;
    LocErrorIyy1ComponentOriginServid = orig.LocErrorIyy1ComponentOriginServid;
    LocErrorIyy1ComponentContextString_AS = orig.LocErrorIyy1ComponentContextString_AS;
    LocErrorIyy1ComponentContextString = orig.LocErrorIyy1ComponentContextString;
    LocErrorIyy1ComponentReturnCode_AS = orig.LocErrorIyy1ComponentReturnCode_AS;
    LocErrorIyy1ComponentReturnCode = orig.LocErrorIyy1ComponentReturnCode;
    LocErrorIyy1ComponentReasonCode_AS = orig.LocErrorIyy1ComponentReasonCode_AS;
    LocErrorIyy1ComponentReasonCode = orig.LocErrorIyy1ComponentReasonCode;
    LocErrorIyy1ComponentChecksum_AS = orig.LocErrorIyy1ComponentChecksum_AS;
    LocErrorIyy1ComponentChecksum = orig.LocErrorIyy1ComponentChecksum;
    LocGroupContext_MA = orig.LocGroupContext_MA;
    System.arraycopy(orig.LocGroupContext_AC, 0, LocGroupContext_AC, 0, LocGroupContext_AC.length);
    System.arraycopy(orig.LocGContextDontChangeTextText150_AS, 0, LocGContextDontChangeTextText150_AS, 0, 
      LocGContextDontChangeTextText150_AS.length);
    System.arraycopy(orig.LocGContextDontChangeTextText150, 0, LocGContextDontChangeTextText150, 0, 
      LocGContextDontChangeTextText150.length);
    LocDontChangeReturnCodesQ1Ok_AS = orig.LocDontChangeReturnCodesQ1Ok_AS;
    LocDontChangeReturnCodesQ1Ok = orig.LocDontChangeReturnCodesQ1Ok;
    LocDontChangeReturnCodesN20MandatoryImportMissing_AS = orig.LocDontChangeReturnCodesN20MandatoryImportMissing_AS;
    LocDontChangeReturnCodesN20MandatoryImportMissing = orig.LocDontChangeReturnCodesN20MandatoryImportMissing;
    LocDontChangeReasonCodesQ1Default_AS = orig.LocDontChangeReasonCodesQ1Default_AS;
    LocDontChangeReasonCodesQ1Default = orig.LocDontChangeReasonCodesQ1Default;
    LocDontChangeReasonCodesQ145TypeKeyAttrMand_AS = orig.LocDontChangeReasonCodesQ145TypeKeyAttrMand_AS;
    LocDontChangeReasonCodesQ145TypeKeyAttrMand = orig.LocDontChangeReasonCodesQ145TypeKeyAttrMand;
    LocDontChangeReasonCodesQ146TypeSearchAttrMand_AS = orig.LocDontChangeReasonCodesQ146TypeSearchAttrMand_AS;
    LocDontChangeReasonCodesQ146TypeSearchAttrMand = orig.LocDontChangeReasonCodesQ146TypeSearchAttrMand;
  }
  /**
   * Static instance creator function
   **/
  
  public static CYYY0311_LA getInstance()
  {
    return new CYYY0311_LA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new CYYY0311_LA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    LocImpTypeTinstanceId_AS = ' ';
    LocImpTypeTinstanceId = "00000000000000000000";
    LocImpTypeTkeyAttrText_AS = ' ';
    LocImpTypeTkeyAttrText = "    ";
    LocImpTypeTsearchAttrText_AS = ' ';
    LocImpTypeTsearchAttrText = "                    ";
    LocImpTypeTotherAttrText_AS = ' ';
    LocImpTypeTotherAttrText = "  ";
    LocImpTypeTotherAttrDate_AS = ' ';
    LocImpTypeTotherAttrDate = 00000000;
    LocImpTypeTotherAttrTime_AS = ' ';
    LocImpTypeTotherAttrTime = 00000000;
    LocImpTypeTotherAttrAmount_AS = ' ';
    LocImpTypeTotherAttrAmount = BigDecimalAttr.getDefaultValue();
    LocEmptyTypeTinstanceId_AS = ' ';
    LocEmptyTypeTinstanceId = "00000000000000000000";
    LocEmptyTypeTkeyAttrText_AS = ' ';
    LocEmptyTypeTkeyAttrText = "    ";
    LocEmptyTypeTsearchAttrText_AS = ' ';
    LocEmptyTypeTsearchAttrText = "                    ";
    LocEmptyTypeTotherAttrText_AS = ' ';
    LocEmptyTypeTotherAttrText = "  ";
    LocEmptyTypeTotherAttrDate_AS = ' ';
    LocEmptyTypeTotherAttrDate = 00000000;
    LocEmptyTypeTotherAttrTime_AS = ' ';
    LocEmptyTypeTotherAttrTime = 00000000;
    LocEmptyTypeTotherAttrAmount_AS = ' ';
    LocEmptyTypeTotherAttrAmount = BigDecimalAttr.getDefaultValue();
    LocErrorIyy1ComponentSeverityCode_AS = ' ';
    LocErrorIyy1ComponentSeverityCode = " ";
    LocErrorIyy1ComponentRollbackIndicator_AS = ' ';
    LocErrorIyy1ComponentRollbackIndicator = " ";
    LocErrorIyy1ComponentOriginServid_AS = ' ';
    LocErrorIyy1ComponentOriginServid = 0.0;
    LocErrorIyy1ComponentContextString_AS = ' ';
    LocErrorIyy1ComponentContextString = "";
    LocErrorIyy1ComponentReturnCode_AS = ' ';
    LocErrorIyy1ComponentReturnCode = 0;
    LocErrorIyy1ComponentReasonCode_AS = ' ';
    LocErrorIyy1ComponentReasonCode = 0;
    LocErrorIyy1ComponentChecksum_AS = ' ';
    LocErrorIyy1ComponentChecksum = "               ";
    LocGroupContext_MA = 0;
    for(int a = 0; a < 9; a++)
    {
      LocGroupContext_AC[a] = ' ';
      LocGContextDontChangeTextText150_AS[a] = ' ';
      LocGContextDontChangeTextText150[a] = 
"                                                                                                                                                      "
        ;
    }
    LocDontChangeReturnCodesQ1Ok_AS = ' ';
    LocDontChangeReturnCodesQ1Ok = 0;
    LocDontChangeReturnCodesN20MandatoryImportMissing_AS = ' ';
    LocDontChangeReturnCodesN20MandatoryImportMissing = 0;
    LocDontChangeReasonCodesQ1Default_AS = ' ';
    LocDontChangeReasonCodesQ1Default = 0;
    LocDontChangeReasonCodesQ145TypeKeyAttrMand_AS = ' ';
    LocDontChangeReasonCodesQ145TypeKeyAttrMand = 0;
    LocDontChangeReasonCodesQ146TypeSearchAttrMand_AS = ' ';
    LocDontChangeReasonCodesQ146TypeSearchAttrMand = 0;
  }
}

package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: CYYY0311_OA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:09:14
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF EXPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: CYYY0311_OA
 **/
public class CYYY0311_OA extends ViewBase implements IExportView, Serializable
{
  // Entity View: EXP
  //        Type: TYPE
  /**
   * Attribute missing flag for: ExpTypeTinstanceId
   **/
  public char ExpTypeTinstanceId_AS;
  /**
   * Attribute for: ExpTypeTinstanceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String ExpTypeTinstanceId;
  /**
   * Attribute missing flag for: ExpTypeTreferenceId
   **/
  public char ExpTypeTreferenceId_AS;
  /**
   * Attribute for: ExpTypeTreferenceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String ExpTypeTreferenceId;
  // Entity View: EXP_ERROR
  //        Type: IYY1_COMPONENT
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentSeverityCode
   **/
  public char ExpErrorIyy1ComponentSeverityCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentSeverityCode
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentSeverityCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentRollbackIndicator
   **/
  public char ExpErrorIyy1ComponentRollbackIndicator_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentRollbackIndicator
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentRollbackIndicator;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentOriginServid
   **/
  public char ExpErrorIyy1ComponentOriginServid_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentOriginServid
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double ExpErrorIyy1ComponentOriginServid;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentContextString
   **/
  public char ExpErrorIyy1ComponentContextString_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentContextString
   * Domain: Text
   * Length: 512
   * Varying Length: Y
   **/
  public String ExpErrorIyy1ComponentContextString;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentReturnCode
   **/
  public char ExpErrorIyy1ComponentReturnCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentReturnCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ExpErrorIyy1ComponentReturnCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentReasonCode
   **/
  public char ExpErrorIyy1ComponentReasonCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentReasonCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ExpErrorIyy1ComponentReasonCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentChecksum
   **/
  public char ExpErrorIyy1ComponentChecksum_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentChecksum
   * Domain: Text
   * Length: 15
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentChecksum;
  /**
   * Default Constructor
   **/
  
  public CYYY0311_OA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public CYYY0311_OA(CYYY0311_OA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static CYYY0311_OA getInstance()
  {
    return new CYYY0311_OA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new CYYY0311_OA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    ExpTypeTinstanceId_AS = ' ';
    ExpTypeTinstanceId = "00000000000000000000";
    ExpTypeTreferenceId_AS = ' ';
    ExpTypeTreferenceId = "00000000000000000000";
    ExpErrorIyy1ComponentSeverityCode_AS = ' ';
    ExpErrorIyy1ComponentSeverityCode = " ";
    ExpErrorIyy1ComponentRollbackIndicator_AS = ' ';
    ExpErrorIyy1ComponentRollbackIndicator = " ";
    ExpErrorIyy1ComponentOriginServid_AS = ' ';
    ExpErrorIyy1ComponentOriginServid = 0.0;
    ExpErrorIyy1ComponentContextString_AS = ' ';
    ExpErrorIyy1ComponentContextString = "";
    ExpErrorIyy1ComponentReturnCode_AS = ' ';
    ExpErrorIyy1ComponentReturnCode = 0;
    ExpErrorIyy1ComponentReasonCode_AS = ' ';
    ExpErrorIyy1ComponentReasonCode = 0;
    ExpErrorIyy1ComponentChecksum_AS = ' ';
    ExpErrorIyy1ComponentChecksum = "               ";
  }
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    throw new RuntimeException("can only execute setFromVDF for a Procedure Step.");
  }
  
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    throw new RuntimeException("can only execute getVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IExportView orig)
  {
    this.copyFrom((CYYY0311_OA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(CYYY0311_OA orig)
  {
    ExpTypeTinstanceId_AS = orig.ExpTypeTinstanceId_AS;
    ExpTypeTinstanceId = orig.ExpTypeTinstanceId;
    ExpTypeTreferenceId_AS = orig.ExpTypeTreferenceId_AS;
    ExpTypeTreferenceId = orig.ExpTypeTreferenceId;
    ExpErrorIyy1ComponentSeverityCode_AS = orig.ExpErrorIyy1ComponentSeverityCode_AS;
    ExpErrorIyy1ComponentSeverityCode = orig.ExpErrorIyy1ComponentSeverityCode;
    ExpErrorIyy1ComponentRollbackIndicator_AS = orig.ExpErrorIyy1ComponentRollbackIndicator_AS;
    ExpErrorIyy1ComponentRollbackIndicator = orig.ExpErrorIyy1ComponentRollbackIndicator;
    ExpErrorIyy1ComponentOriginServid_AS = orig.ExpErrorIyy1ComponentOriginServid_AS;
    ExpErrorIyy1ComponentOriginServid = orig.ExpErrorIyy1ComponentOriginServid;
    ExpErrorIyy1ComponentContextString_AS = orig.ExpErrorIyy1ComponentContextString_AS;
    ExpErrorIyy1ComponentContextString = orig.ExpErrorIyy1ComponentContextString;
    ExpErrorIyy1ComponentReturnCode_AS = orig.ExpErrorIyy1ComponentReturnCode_AS;
    ExpErrorIyy1ComponentReturnCode = orig.ExpErrorIyy1ComponentReturnCode;
    ExpErrorIyy1ComponentReasonCode_AS = orig.ExpErrorIyy1ComponentReasonCode_AS;
    ExpErrorIyy1ComponentReasonCode = orig.ExpErrorIyy1ComponentReasonCode;
    ExpErrorIyy1ComponentChecksum_AS = orig.ExpErrorIyy1ComponentChecksum_AS;
    ExpErrorIyy1ComponentChecksum = orig.ExpErrorIyy1ComponentChecksum;
  }
}
