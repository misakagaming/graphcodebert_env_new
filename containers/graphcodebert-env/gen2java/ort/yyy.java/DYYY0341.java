
package gen.ort.yyy;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: DYYY0341_TYPE_DELETE             Date: 2023/07/05
//    Target OS:   JVM                       Time: 15:09:23
//    Target DBMS: JDBC                      User: HakanBal
//    Access Method: JDBC           
//
//    Generation options:
//    Debug trace option selected
//    Data modeling constraint enforcement not selected
//    Optimized import view initialization not selected
//    Enforce default values with DBMS not selected
//    Init unspecified optional fields to NULL not selected
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;

import com.ca.gen.abrt.*;
import com.ca.gen.abrt.functions.*;
import com.ca.gen.abrt.cascade.*;
import com.ca.gen.abrt.trace.*;
import com.ca.gen.exits.common.*;
import com.ca.gen.odc.*;

public class DYYY0341 extends ABBase
{
  // * * * * * * * * * * * * * * * * * * *
  // ENTITY ACTION STATEMENT STATUS FLAGS 
  // ENTITY VIEW STATUS FLAGS AND         
  // LAST COMMAND FOR EACH ENTITY VIEW    
  // * * * * * * * * * * * * * * * * * * *
  String sl_29360138 = ErrorData.NONE_FL_LS;
  String sl_29360185 = ErrorData.NONE_FL_LS;
  String dl_28311569 = ErrorData.NONE_FL_LS;
  String Parent_es;
  String Parent_001cd;
  String Parent_lk;
  String Type_es;
  String Type_003cd;
  String Type_lk;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // IMPORT VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  DYYY0341_IA w_ia;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // EXPORT VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  DYYY0341_OA w_oa;
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // START OF ENTITY ACTION VIEW
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  /**
   * Internal data view storage for: DYYY0341_EA
   **/
  public class DYYY0341_EA extends ViewBase implements IEntityActionView, Serializable
  {
    // Entity View: 
    //        Type: PARENT
    /**
     * Attribute missing flag for: ParentPkeyAttrText
     **/
    public char ParentPkeyAttrText_AS;
    /**
     * Attribute for: ParentPkeyAttrText
     * Domain: Text
     * Length: 5
     * Varying Length: N
     **/
    public String ParentPkeyAttrText;
    /**
     * Attribute missing flag for: ParentPtypeTkeyAttrText
     **/
    public char ParentPtypeTkeyAttrText_AS;
    /**
     * Attribute for: ParentPtypeTkeyAttrText
     * Domain: Text
     * Length: 4
     * Varying Length: N
     **/
    public String ParentPtypeTkeyAttrText;
    // Entity View: 
    //        Type: TYPE
    /**
     * Attribute missing flag for: TypeTinstanceId
     **/
    public char TypeTinstanceId_AS;
    /**
     * Attribute for: TypeTinstanceId
     * Domain: Timestamp
     * Length: 20
     **/
    public String TypeTinstanceId;
    /**
     * Attribute missing flag for: TypeTreferenceId
     **/
    public char TypeTreferenceId_AS;
    /**
     * Attribute for: TypeTreferenceId
     * Domain: Timestamp
     * Length: 20
     **/
    public String TypeTreferenceId;
    /**
     * Attribute missing flag for: TypeTupdateUserId
     **/
    public char TypeTupdateUserId_AS;
    /**
     * Attribute for: TypeTupdateUserId
     * Domain: Text
     * Length: 8
     * Varying Length: N
     **/
    public String TypeTupdateUserId;
    /**
     * Attribute missing flag for: TypeTkeyAttrText
     **/
    public char TypeTkeyAttrText_AS;
    /**
     * Attribute for: TypeTkeyAttrText
     * Domain: Text
     * Length: 4
     * Varying Length: N
     **/
    public String TypeTkeyAttrText;
    /**
     * Default Constructor
     **/
    
    public DYYY0341_EA()
    {
      reset();
    }
    /**
     * Copy Constructor
     **/
    
    public DYYY0341_EA(DYYY0341_EA orig)
    {
      ParentPkeyAttrText_AS = orig.ParentPkeyAttrText_AS;
      ParentPkeyAttrText = orig.ParentPkeyAttrText;
      ParentPtypeTkeyAttrText_AS = orig.ParentPtypeTkeyAttrText_AS;
      ParentPtypeTkeyAttrText = orig.ParentPtypeTkeyAttrText;
      TypeTinstanceId_AS = orig.TypeTinstanceId_AS;
      TypeTinstanceId = orig.TypeTinstanceId;
      TypeTreferenceId_AS = orig.TypeTreferenceId_AS;
      TypeTreferenceId = orig.TypeTreferenceId;
      TypeTupdateUserId_AS = orig.TypeTupdateUserId_AS;
      TypeTupdateUserId = orig.TypeTupdateUserId;
      TypeTkeyAttrText_AS = orig.TypeTkeyAttrText_AS;
      TypeTkeyAttrText = orig.TypeTkeyAttrText;
    }
    /**
     * clone constructor
     **/
    
    @Override public Object clone()
    	throws CloneNotSupportedException
    {
      return(new DYYY0341_EA(this));
    }
    /**
     * Resets all properties to the defaults.
     **/
    
    public void reset()
    {
      ParentPkeyAttrText_AS = ' ';
      ParentPkeyAttrText = "     ";
      ParentPtypeTkeyAttrText_AS = ' ';
      ParentPtypeTkeyAttrText = "    ";
      TypeTinstanceId_AS = ' ';
      TypeTinstanceId = "00000000000000000000";
      TypeTreferenceId_AS = ' ';
      TypeTreferenceId = "00000000000000000000";
      TypeTupdateUserId_AS = ' ';
      TypeTupdateUserId = "        ";
      TypeTkeyAttrText_AS = ' ';
      TypeTkeyAttrText = "    ";
    }
  }
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // ENTITY ACTION VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  DYYY0341_EA w_ea = new DYYY0341_EA();
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // LOCAL VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  DYYY0341_LA w_la;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // CURSOR OPEN FLAGS
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  boolean curs_open_0029360138 = false;
  
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // HOST VARIABLES FOR TABLE: VDVYYYT
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  String tkey_attr_002EF;
  String tkey_attr_002EN;
  String tupdate_userid_004EF;
  String tupdate_userid_004EN;
  java.sql.Timestamp tinstance_id_006EF;
  java.sql.Timestamp tinstance_id_006EN;
  java.sql.Timestamp treference_id_008EF;
  java.sql.Timestamp treference_id_008EN;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // HOST VARIABLES FOR TABLE: VDVYYYP
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  String pkey_attr_010EF;
  String pkey_attr_010EN;
  String ptype_tkey_attr_te_012EF;
  String ptype_tkey_attr_te_012EN;
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // TEMPORARY HOST VARIABLES 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  String TkeyAttrText_001TP;
  
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // REPEATING GROUP VIEW STATUS FIELDS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  boolean LocGroupContext_FL_001;
  int LocGroupContext_PS_001;
  boolean LocGroupContext_RF_001;
  public final static int LocGroupContext_MM_001 = 9;
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // MISC DECLARATIONS AND PROTOTYPES 
  //    FOLLOW AS NEEDED:             
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  boolean func_0022020277_esc_flag;
  PreparedStatement hstmt_0037955621_1;
  ResultSet hstmt_0037955621_1_rs;
  int hstmt_0037955621_1_cnt;
  boolean func_0020972526_esc_flag;
  boolean read_each_0068158287_esc_flag;
  PreparedStatement hstmt_0037821843_1;
  ResultSet hstmt_0037821843_1_rs;
  int hstmt_0037821843_1_cnt;
  boolean func_0020972909_esc_flag;
  boolean func_0020973024_esc_flag;
  PadView padview[] = new PadView [66];
  int trace_ret_code;
  PadText padtext[] = initPadText();
  public PadText [] initPadText()
  {
    PadText [] result = new PadText [PADTEXT_SIZE];
    result[0] = PadText.getInstance(   0,"+->   DYYY0341_TYPE_DELETE              07/05/2023  15:09");
    result[1] = PadText.getInstance(   0,"!       IMPORTS:");
    result[2] = PadText.getInstance(   0,"!         Work View imp_error iyy1_component (Transient, Mandatory, Import only)");
    result[3] = PadText.getInstance(   0,"!           severity_code");
    result[4] = PadText.getInstance(   0,"!           rollback_indicator");
    result[5] = PadText.getInstance(   0,"!           origin_servid");
    result[6] = PadText.getInstance(   0,"!           context_string");
    result[7] = PadText.getInstance(   0,"!           return_code");
    result[8] = PadText.getInstance(   0,"!           reason_code");
    result[9] = PadText.getInstance(   0,"!           checksum");
    result[10] = PadText.getInstance(   0,"!         Work View imp_reference iyy1_server_data (Transient, Mandatory, Import only)");
    result[11] = PadText.getInstance(   0,"!           userid");
    result[12] = PadText.getInstance(   0,"!           reference_id");
    result[13] = PadText.getInstance(   0,"!         Entity View imp type (Transient, Mandatory, Import only)");
    result[14] = PadText.getInstance(   0,"!           tinstance_id");
    result[15] = PadText.getInstance(   0,"!           treference_id");
    result[16] = PadText.getInstance(   0,"!           tkey_attr_text");
    result[17] = PadText.getInstance(   0,"!       EXPORTS:");
    result[18] = PadText.getInstance(   0,"!         Work View exp_error iyy1_component (Transient, Export only)");
    result[19] = PadText.getInstance(   0,"!           severity_code");
    result[20] = PadText.getInstance(   0,"!           rollback_indicator");
    result[21] = PadText.getInstance(   0,"!           origin_servid");
    result[22] = PadText.getInstance(   0,"!           context_string");
    result[23] = PadText.getInstance(   0,"!           return_code");
    result[24] = PadText.getInstance(   0,"!           reason_code");
    result[25] = PadText.getInstance(   0,"!           checksum");
    result[26] = PadText.getInstance(   0,"!       ENTITY ACTIONS:");
    result[27] = PadText.getInstance(   0,"!         Entity View parent");
    result[28] = PadText.getInstance(   0,"!           pkey_attr_text");
    result[29] = PadText.getInstance(   0,"!           ptype_tkey_attr_text");
    result[30] = PadText.getInstance(   0,"!         Entity View type");
    result[31] = PadText.getInstance(   0,"!           tinstance_id");
    result[32] = PadText.getInstance(   0,"!           treference_id");
    result[33] = PadText.getInstance(   0,"!           tupdate_user_id");
    result[34] = PadText.getInstance(   0,"!           tkey_attr_text");
    result[35] = PadText.getInstance(   0,"!       LOCALS:");
    result[36] = PadText.getInstance(   0,"!         Group View (9) loc_group_context");
    result[37] = PadText.getInstance(   0,"!           Work View loc_g_context dont_change_text");
    result[38] = PadText.getInstance(   0,"!             text_150");
    result[39] = PadText.getInstance(   0,"!         Work View loc_error iyy1_component");
    result[40] = PadText.getInstance(   0,"!           severity_code");
    result[41] = PadText.getInstance(   0,"!           rollback_indicator");
    result[42] = PadText.getInstance(   0,"!           origin_servid");
    result[43] = PadText.getInstance(   0,"!           context_string");
    result[44] = PadText.getInstance(   0,"!           return_code");
    result[45] = PadText.getInstance(   0,"!           reason_code");
    result[46] = PadText.getInstance(   0,"!           checksum");
    result[47] = PadText.getInstance(   0,"!         Work View loc dont_change_return_codes");
    result[48] = PadText.getInstance(   0,"!           1_ok");
    result[49] = PadText.getInstance(   0,"!           n10_obj_not_found");
    result[50] = PadText.getInstance(   0,"!           n43_obj_not_deleted");
    result[51] = PadText.getInstance(   0,"!         Work View loc dont_change_reason_codes");
    result[52] = PadText.getInstance(   0,"!           1_default");
    result[53] = PadText.getInstance(   0,"!           141_type_not_found");
    result[54] = PadText.getInstance(   0,"!           152_type_concurrency_error");
    result[55] = PadText.getInstance(   0,"!           153_type_integrity_error");
    result[56] = PadText.getInstance(   0,"!");
    result[57] = PadText.getInstance(   0,"!     PROCEDURE STATEMENTS");
    result[58] = PadText.getInstance(   0,"!");
    result[59] = PadText.getInstance(   1,"!  NOTE: ");
    result[60] = PadText.getInstance(   1,"!  Please review explanation for purpose.");
    result[61] = PadText.getInstance(   1,"!  ");
    result[62] = PadText.getInstance(   2,"!  NOTE: ");
    result[63] = PadText.getInstance(   2,"!  RELEASE HISTORY");
    result[64] = PadText.getInstance(   2,"!  01_00 23-02-1998 New release");
    result[65] = PadText.getInstance(   2,"!  ");
    result[66] = PadText.getInstance(   3,"!  MOVE imp_error iyy1_component TO exp_error iyy1_component");
    result[67] = PadText.getInstance(   4,"!   ");
    result[68] = PadText.getInstance(   5,"!  NOTE: ");
    result[69] = PadText.getInstance(   5,"!  ****************************************************************");
    result[70] = PadText.getInstance(   5,"!  Values of the ReturnCode/ReasonCode used.");
    result[71] = PadText.getInstance(   5,"!  ");
    result[72] = PadText.getInstance(   6,"!  NOTE: ");
    result[73] = PadText.getInstance(   6,"!  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    result[74] = PadText.getInstance(   6,"!  Please set the return ve reason code values below.");
    result[75] = PadText.getInstance(   6,"!  ");
    result[76] = PadText.getInstance(   7,"!  SET loc dont_change_return_codes 1_ok TO 1 ");
    result[77] = PadText.getInstance(   8,"!  SET loc dont_change_return_codes n10_obj_not_found TO -10 ");
    result[78] = PadText.getInstance(   9,"!  SET loc dont_change_return_codes n43_obj_not_deleted TO -43 ");
    result[79] = PadText.getInstance(  10,"!   ");
    result[80] = PadText.getInstance(  11,"!  SET loc dont_change_reason_codes 1_default TO 1 ");
    result[81] = PadText.getInstance(  12,"!  SET loc dont_change_reason_codes 141_type_not_found TO 141 ");
    result[82] = PadText.getInstance(  13,"!  SET loc dont_change_reason_codes 152_type_concurrency_error TO 152 ");
    result[83] = PadText.getInstance(  14,"!  SET loc dont_change_reason_codes 153_type_integrity_error TO 153 ");
    result[84] = PadText.getInstance(  15,"!   ");
    result[85] = PadText.getInstance(  16,"!  NOTE: ");
    result[86] = PadText.getInstance(  16,"!  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    result[87] = PadText.getInstance(  16,"!  Please select \"Control of Cursor Generation\" property as \"Select only\". ");
    result[88] = PadText.getInstance(  16,"!  ");
    result[89] = PadText.getInstance(  17,"!  +=>READ (Select Only) type");
    result[90] = PadText.getInstance(  17,"!  !        WHERE DESIRED type tkey_attr_text = imp type tkey_attr_text");
    result[91] = PadText.getInstance(  17, 1, "!  +> WHEN successful");
    result[92] = PadText.getInstance(  18,"!  !  +->IF type treference_id ^= imp type treference_id");
    result[93] = PadText.getInstance(  19,
      "!  !  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n43_obj_not_deleted ");
    result[94] = PadText.getInstance(  20,
      "!  !  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 152_type_concurrency_error ");
    result[95] = PadText.getInstance(  21,"! <------ESCAPE");
    result[96] = PadText.getInstance(  18,"!  !  +--");
    result[97] = PadText.getInstance(  22,"!  !  NOTE: ");
    result[98] = PadText.getInstance(  22,"!  !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    result[99] = PadText.getInstance(  22,
      "!  !  If operation is dependent to 'parent' data type, preserve the PARENT READ process below, otherwise delete it.");
    result[100] = PadText.getInstance(  22,"!  !  ");
    result[101] = PadText.getInstance(  23,"!  !  NOTE: ");
    result[102] = PadText.getInstance(  23,
      "!  !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    result[103] = PadText.getInstance(  23,
      "!  !  Please set \"General->Select Clause Isolation Level\" property to \"Uncomitted / Browse\" ");
    result[104] = PadText.getInstance(  23,"!  !  \"DB2 MVS (XDB)->Optimize for N rows\" property to \"Use the value: 1\". ");
    result[105] = PadText.getInstance(  23,"!  !  ");
    result[106] = PadText.getInstance(  23,"!  !  ");
    result[107] = PadText.getInstance(  24,"!  !  +=>READ EACH (Optimize 1, Isolation UR) parent");
    result[108] = PadText.getInstance(  24,"!  !  !        WHERE DESIRED parent ptype_tkey_attr_text = CURRENT type tkey_attr_text")
      ;
    result[109] = PadText.getInstance(  25,
      "!  !  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n43_obj_not_deleted ");
    result[110] = PadText.getInstance(  26,
      "!  !  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 153_type_integrity_error ");
    result[111] = PadText.getInstance(  27,"! <------ESCAPE");
    result[112] = PadText.getInstance(  24,"!  !  +--");
    result[113] = PadText.getInstance(  28,"!  !  DELETE type");
    result[114] = PadText.getInstance(  17, 2, "!  +> WHEN not found");
    result[115] = PadText.getInstance(  29,
      "!  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n10_obj_not_found ");
    result[116] = PadText.getInstance(  30,
      "!  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 141_type_not_found ");
    result[117] = PadText.getInstance(  17,"!  +--");
    result[118] = PadText.getInstance(   0,"+---");
    result[119] = PadText.getInstance(PadText.LASTLINE,"************************* BOTTOM OF DATA *************************");
    return result;
  }
  final static int PADTEXT_SIZE = 120;
  //       +->   DYYY0341_TYPE_DELETE              07/05/2023  15:09
  //       !       IMPORTS:
  //       !         Work View imp_error iyy1_component (Transient, Mandatory, Import only)
  //       !           severity_code
  //       !           rollback_indicator
  //       !           origin_servid
  //       !           context_string
  //       !           return_code
  //       !           reason_code
  //       !           checksum
  //       !         Work View imp_reference iyy1_server_data (Transient, Mandatory, Import only)
  //       !           userid
  //       !           reference_id
  //       !         Entity View imp type (Transient, Mandatory, Import only)
  //       !           tinstance_id
  //       !           treference_id
  //       !           tkey_attr_text
  //       !       EXPORTS:
  //       !         Work View exp_error iyy1_component (Transient, Export only)
  //       !           severity_code
  //       !           rollback_indicator
  //       !           origin_servid
  //       !           context_string
  //       !           return_code
  //       !           reason_code
  //       !           checksum
  //       !       ENTITY ACTIONS:
  //       !         Entity View parent
  //       !           pkey_attr_text
  //       !           ptype_tkey_attr_text
  //       !         Entity View type
  //       !           tinstance_id
  //       !           treference_id
  //       !           tupdate_user_id
  //       !           tkey_attr_text
  //       !       LOCALS:
  //       !         Group View (9) loc_group_context
  //       !           Work View loc_g_context dont_change_text
  //       !             text_150
  //       !         Work View loc_error iyy1_component
  //       !           severity_code
  //       !           rollback_indicator
  //       !           origin_servid
  //       !           context_string
  //       !           return_code
  //       !           reason_code
  //       !           checksum
  //       !         Work View loc dont_change_return_codes
  //       !           1_ok
  //       !           n10_obj_not_found
  //       !           n43_obj_not_deleted
  //       !         Work View loc dont_change_reason_codes
  //       !           1_default
  //       !           141_type_not_found
  //       !           152_type_concurrency_error
  //       !           153_type_integrity_error
  //       !
  //       !     PROCEDURE STATEMENTS
  //       !
  //     1 !  NOTE: 
  //     1 !  Please review explanation for purpose.
  //     1 !  
  //     2 !  NOTE: 
  //     2 !  RELEASE HISTORY
  //     2 !  01_00 23-02-1998 New release
  //     2 !  
  //     3 !  MOVE imp_error iyy1_component TO exp_error iyy1_component
  //     4 !   
  //     5 !  NOTE: 
  //     5 !  ****************************************************************
  //     5 !  Values of the ReturnCode/ReasonCode used.
  //     5 !  
  //     6 !  NOTE: 
  //     6 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  //     6 !  Please set the return ve reason code values below.
  //     6 !  
  //     7 !  SET loc dont_change_return_codes 1_ok TO 1 
  //     8 !  SET loc dont_change_return_codes n10_obj_not_found TO -10 
  //     9 !  SET loc dont_change_return_codes n43_obj_not_deleted TO -43 
  //    10 !   
  //    11 !  SET loc dont_change_reason_codes 1_default TO 1 
  //    12 !  SET loc dont_change_reason_codes 141_type_not_found TO 141 
  //    13 !  SET loc dont_change_reason_codes 152_type_concurrency_error TO 152 
  //    14 !  SET loc dont_change_reason_codes 153_type_integrity_error TO 153 
  //    15 !   
  //    16 !  NOTE: 
  //    16 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  //    16 !  Please select "Control of Cursor Generation" property as "Select only". 
  //    16 !  
  //    17 !  +=>READ (Select Only) type
  //    17 !  !        WHERE DESIRED type tkey_attr_text = imp type tkey_attr_text
  //    17 !  +> WHEN successful
  //    18 !  !  +->IF type treference_id ^= imp type treference_id
  //    19 !  !  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n43_obj_not_deleted 
  //    20 !  !  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 152_type_concurrency_error 
  //    21 ! <------ESCAPE
  //    18 !  !  +--
  //    22 !  !  NOTE: 
  //    22 !  !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  //    22 !  !  If operation is dependent to 'parent' data type, preserve the PARENT READ process below, otherwise delete it.
  //    22 !  !  
  //    23 !  !  NOTE: 
  //    23 !  !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  //    23 !  !  Please set "General->Select Clause Isolation Level" property to "Uncomitted / Browse" 
  //    23 !  !  "DB2 MVS (XDB)->Optimize for N rows" property to "Use the value: 1". 
  //    23 !  !  
  //    23 !  !  
  //    24 !  !  +=>READ EACH (Optimize 1, Isolation UR) parent
  //    24 !  !  !        WHERE DESIRED parent ptype_tkey_attr_text = CURRENT type tkey_attr_text
  //    25 !  !  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n43_obj_not_deleted 
  //    26 !  !  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 153_type_integrity_error 
  //    27 ! <------ESCAPE
  //    24 !  !  +--
  //    28 !  !  DELETE type
  //    17 !  +> WHEN not found
  //    29 !  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n10_obj_not_found 
  //    30 !  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 141_type_not_found 
  //    17 !  +--
  //       +---
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  //  CONSTRUCTOR FOR THE CLASS       
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  public DYYY0341()
  {
    iefCGenRlse = "CA Gen 8.6";
    ssCopyright = "Copyright (c) 2023 CA Technologies. All rights reserved.";
    iefCGenDate = "2023/07/05";
    iefCGenTime = "15:09:23";
    iefCGenEncy = "9.2.A6";
    iefCGenUserId = "HakanBal";
    iefCGenModel = "N8I_ORT_YYY_0112_TEMPLATE";
    iefCGenSubset = "ALL";
    iefCGenName = "DYYY0341_TYPE_DELETE";
    nestingLevel = 0;
    valChkDeadlockTimeout = false;
    valChkDBError = false;
  }
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // ACTION BLOCK FUNCTION DECLARATIONS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  public void DYYY0341( Object in_runtime_parm1, 
  	IRuntimePStepContext in_runtime_parm2, 
  	GlobData in_globdata, 
  	DYYY0341_IA import_view, 
  	DYYY0341_OA export_view )
  {
    iefRuntimeParm1 = in_runtime_parm1;
    iefRuntimeParm2 = in_runtime_parm2;
    globdata = in_globdata;
    w_ia = import_view;
    w_oa = export_view;
    _DYYY0341();
  }
  
  private void _DYYY0341()
  {
    
    f_22020277_localAlloc("DYYY0341_TYPE_DELETE");
    if ( globdata.getErrorData().getLastStatus() == ErrorData.IEF_ALLOCATION_ERROR_FL_LS )
    	return;
    
    ++(nestingLevel);
    try {
      f_22020277_init();
      f_22020277();
    } catch( ABException e ) {
    } finally {
      --(nestingLevel);
    }
    String last_stmt_num_saved = globdata.getStateData().getLastStatementNumber();
    globdata.getStateData().setLastStatementNumber( "9999999999" );
    try {
      f_0_trace();
    } catch( ABException e ) {
    }
    globdata.getStateData().setLastStatementNumber( last_stmt_num_saved );
  }
  public void f_22020277()
  	throws ABException
  {
    func_0022020277_esc_flag = false;
    globdata.getStateData().setCurrentABId( "0022020277" );
    globdata.getStateData().setCurrentABName( "DYYY0341_TYPE_DELETE" );
    padview_init();
    globdata.getStateData().setLastStatementNumber( "0000000000" );
    f_0_trace();
    f_0022020277_esctag: 
    {
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    Please review explanation for purpose.                          
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    RELEASE HISTORY                                                 
      //    01_00 23-02-1998 New release                                    
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      globdata.getStateData().setLastStatementNumber( "0000000003" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_oa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.valueOf(w_ia.ImpErrorIyy1ComponentSeverityCode, (short)1);
        w_oa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.valueOf(w_ia.ImpErrorIyy1ComponentRollbackIndicator, (short)1)
          ;
        w_oa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.valueOf(w_ia.ImpErrorIyy1ComponentOriginServid);
        w_oa.ExpErrorIyy1ComponentContextString = StringAttr.valueOf(w_ia.ImpErrorIyy1ComponentContextString, (short)512);
        w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf(w_ia.ImpErrorIyy1ComponentReturnCode);
        w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf(w_ia.ImpErrorIyy1ComponentReasonCode);
        w_oa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.valueOf(w_ia.ImpErrorIyy1ComponentChecksum, (short)15);
      }
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    Values of the ReturnCode/ReasonCode used.                       
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
      //    !!                                                              
      //    Please set the return ve reason code values below.              
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      globdata.getStateData().setLastStatementNumber( "0000000007" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_la.LocDontChangeReturnCodesQ1Ok = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(1, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000008" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_la.LocDontChangeReturnCodesN10ObjNotFound = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(-10, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000009" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_la.LocDontChangeReturnCodesN43ObjNotDeleted = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(-43, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      
      globdata.getStateData().setLastStatementNumber( "0000000011" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_la.LocDontChangeReasonCodesQ1Default = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(1, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000012" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_la.LocDontChangeReasonCodesQ141TypeNotFound = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(141, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000013" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_la.LocDontChangeReasonCodesQ152TypeConcurrencyError = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(152, 0, TIRD2DEC.ROUND_NONE, 
          5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000014" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_la.LocDontChangeReasonCodesQ153TypeIntegrityError = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(153, 0, TIRD2DEC.ROUND_NONE, 5))
          ;
      }
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
      //    !!!!!!!!!!!!!!!!!!!!!                                           
      //    Please select "Control of Cursor Generation" property as        
      //    "Select only".                                                  
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      globdata.getStateData().setLastStatementNumber( "0000000017" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        f_29360138();
        if ( sl_29360138.equals( ErrorData.SUCCEEDS_FL_LS ) == true )
        {
          globdata.getStateData().setLastSubStatementNumber( "1" );
          f_0_trace();
          {
            f_20972526();
          }
        }
        else if ( sl_29360138.equals( ErrorData.NOT_FOUND_FL_LS ) == true )
        {
          globdata.getStateData().setLastSubStatementNumber( "2" );
          f_0_trace();
          {
            globdata.getStateData().setLastStatementNumber( "0000000029" );
            f_0_trace();
            if ( trace_ret_code != 8 )
            {
              w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
                w_la.LocDontChangeReturnCodesN10ObjNotFound, 0, TIRD2DEC.ROUND_NONE, 5));
            }
            globdata.getStateData().setLastStatementNumber( "0000000030" );
            f_0_trace();
            if ( trace_ret_code != 8 )
            {
              w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
                w_la.LocDontChangeReasonCodesQ141TypeNotFound, 0, TIRD2DEC.ROUND_NONE, 5));
            }
          }
        }
        else {
          globdata.getErrorData().setStatus( ErrorData.FATAL_ERROR_FL_LS );
          globdata.getErrorData().setLastStatus( sl_29360138 );
          globdata.getErrorData().setErrorEncounteredSW( ErrorData.ERROR_FOUND_SW );
          throw new ABException();
        }
      }
    }
  }
  
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // SUBORDINATE FUNCTIONS
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  
  public void f_20972526()
  	throws ABException
  {
    func_0020972526_esc_flag = false;
    f_0020972526_esctag: 
    {
      globdata.getStateData().setLastStatementNumber( "0000000018" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        if ( CompareExit.compareTo(w_ea.TypeTreferenceId, w_ia.ImpTypeTreferenceId) != 0 )
        {
          f_20972909();
        }
        
      }
      if ( func_0020972526_esc_flag )
      {
        break f_0020972526_esctag;
      }
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
      //    !!!!!!!!!!!!!!                                                  
      //    If operation is dependent to 'parent' data type, preserve the   
      //    PARENT READ process below, otherwise delete it.                 
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
      //    !!!!!!!!!!!!!!!!!!!!!                                           
      //    Please set "General->Select Clause Isolation Level"             
      //    property to "Uncomitted / Browse"                               
      //    "DB2 MVS (XDB)->Optimize for N rows" property to                
      //    "Use the value: 1".                                             
      //                                                                    
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      sl_29360185 = ErrorData.NOT_FOUND_FL_LS;
      globdata.getStateData().setLastStatementNumber( "0000000024" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        read_each_0068158287_esc_flag = false;
        f_29360185_open();
        if ( sl_29360185.equals( ErrorData.SUCCEEDS_FL_LS ) )
        {
          f_29360185_fetch();
          while ((sl_29360185.equals( ErrorData.SUCCEEDS_FL_LS ) == true) && (read_each_0068158287_esc_flag != true))
          {
            {
              f_20973024();
            }
            globdata.getStateData().setLastStatementNumber( "0000000024" );
            if ( read_each_0068158287_esc_flag != true )
            f_29360185_fetch();
          }
          if ( read_each_0068158287_esc_flag != true )
          {
            if ( !((sl_29360185.equals( ErrorData.SUCCEEDS_FL_LS ) == false) && (sl_29360185.equals( ErrorData.NOT_FOUND_FL_LS ) == 
              false)) )
            {
              f_29360185_esc_close();
            }
            f_29360185_close();
          }
        }
        if ( (sl_29360185.equals( ErrorData.SUCCEEDS_FL_LS ) == false) && (sl_29360185.equals( ErrorData.NOT_FOUND_FL_LS ) == false) 
          )
        {
          globdata.getErrorData().setStatus( ErrorData.FATAL_ERROR_FL_LS );
          globdata.getErrorData().setLastStatus( sl_29360185 );
          globdata.getErrorData().setErrorEncounteredSW( ErrorData.ERROR_FOUND_SW );
          throw new ABException();
        }
      }
      if ( func_0020972526_esc_flag )
      {
        break f_0020972526_esctag;
      }
      globdata.getStateData().setLastStatementNumber( "0000000028" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        valChkDeadlockTimeout = false;
        valChkDBError = false;
        f_28311569();
        if ( dl_28311569.equals( ErrorData.SUCCEEDS_FL_LS ) == true )
        {
        }
        else if ( dl_28311569.equals( ErrorData.NOT_FOUND_FL_LS ) == true )
        {
          globdata.getErrorData().setStatus( ErrorData.FATAL_ERROR_FL_LS );
          globdata.getDBMSData().setActionId( 28 );
          globdata.getErrorData().setLastStatus( ErrorData.NOT_FOUND_FL_LS );
          throw new ABException();
        }
        else {
          globdata.getErrorData().setStatus( ErrorData.DB_ERROR_FL_LS );
          globdata.getErrorData().setErrorEncounteredSW( ErrorData.ERROR_FOUND_SW );
          throw new ABException();
        }
      }
    }
  }
  
  public void f_20972909()
  	throws ABException
  {
    func_0020972909_esc_flag = false;
    f_0020972909_esctag: 
    {
      globdata.getStateData().setLastStatementNumber( "0000000019" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
          w_la.LocDontChangeReturnCodesN43ObjNotDeleted, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000020" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
          w_la.LocDontChangeReasonCodesQ152TypeConcurrencyError, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000021" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        func_0020972909_esc_flag = true;
        func_0020972526_esc_flag = true;
      }
    }
  }
  
  public void f_20973024()
  	throws ABException
  {
    func_0020973024_esc_flag = false;
    f_0020973024_esctag: 
    {
      globdata.getStateData().setLastStatementNumber( "0000000025" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
          w_la.LocDontChangeReturnCodesN43ObjNotDeleted, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000026" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
          w_la.LocDontChangeReasonCodesQ153TypeIntegrityError, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000027" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        func_0020973024_esc_flag = true;
        f_29360185_esc_close();
        read_each_0068158287_esc_flag = true;
        func_0020972526_esc_flag = true;
      }
    }
  }
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // INITIALIZATION UTILITY FUNCTIONS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  public void f_22020277_localAlloc(String abname)
  {
    // Request localview allocation 
    w_la = (gen.ort.yyy.DYYY0341_LA)(iefRuntimeParm2.getInstance("gen.ort.yyy.DYYY0341_LA"));
    if ( w_la == null )
    {
      globdata.getStateData().setCurrentABId( "0022020277" );
      globdata.getStateData().setCurrentABName( abname );
      globdata.getErrorData().setErrorEncounteredSW( ErrorData.ERROR_FOUND_SW );
      globdata.getErrorData().setLastStatus( ErrorData.IEF_ALLOCATION_ERROR_FL_LS );
    }
  }
  
  public void f_22020277_init()
  	throws ABException
  {
    
    tkey_attr_002EF = SPACES;
    tkey_attr_002EN = SPACES;
    tupdate_userid_004EF = SPACES;
    tupdate_userid_004EN = SPACES;
    tinstance_id_006EF = TIRVW2S.TIRVW2S(globdata, "IEFDB", "00010101000000000000");
    tinstance_id_006EN = TIRVW2S.TIRVW2S(globdata, "IEFDB", "00010101000000000000");
    treference_id_008EF = TIRVW2S.TIRVW2S(globdata, "IEFDB", "00010101000000000000");
    treference_id_008EN = TIRVW2S.TIRVW2S(globdata, "IEFDB", "00010101000000000000");
    
    pkey_attr_010EF = SPACES;
    pkey_attr_010EN = SPACES;
    ptype_tkey_attr_te_012EF = SPACES;
    ptype_tkey_attr_te_012EN = SPACES;
    if ( nestingLevel < 2 )
    {
      w_la.reset();
    }
    w_la.LocGroupContext_MA = 0;
    for(LocGroupContext_PS_001 = 1; LocGroupContext_PS_001 <= 9; ++(LocGroupContext_PS_001))
    {
    }
    w_ea.reset();
    w_oa.ExpErrorIyy1ComponentSeverityCode = " ";
    w_oa.ExpErrorIyy1ComponentRollbackIndicator = " ";
    w_oa.ExpErrorIyy1ComponentOriginServid = 0.0;
    w_oa.ExpErrorIyy1ComponentContextString = "";
    w_oa.ExpErrorIyy1ComponentReturnCode = 0;
    w_oa.ExpErrorIyy1ComponentReasonCode = 0;
    w_oa.ExpErrorIyy1ComponentChecksum = "               ";
    Parent_es = ABBase.EV_UNUSABLE;
    Parent_lk = ABBase.EVW_UNLOCKED;
    Type_es = ABBase.EV_UNUSABLE;
    Type_lk = ABBase.EVW_UNLOCKED;
    w_ea.TypeTinstanceId = "00000000000000000000";
    w_ea.TypeTreferenceId = "00000000000000000000";
    LocGroupContext_PS_001 = 1;
  }
  
  public void f_0_trace()
  	throws ABException
  {
    trace_ret_code = TIRTRCE.TIRTRCE(iefRuntimeParm1, iefRuntimeParm2, globdata, padtext, padview);
    if ( trace_ret_code == 20 )
    {
      throw new ABException();
    }
  }
  public void f_22020277_procq()
  {
  }
  
  public void padview_init()
  {
padview[0] = PadView.getInstance("IMPORT                          ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_ia, 
      "w_ia");
    padview[1] = PadView.getInstance("IMP_ERROR                       ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ia, 
      null);
    padview[2] = PadView.getInstance("IYY1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, w_ia,
       null);
    padview[3] = PadView.getInstance("SEVERITY_CODE                   ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpErrorIyy1ComponentSeverityCode");
    padview[4] = PadView.getInstance("ROLLBACK_INDICATOR              ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpErrorIyy1ComponentRollbackIndicator");
    padview[5] = PadView.getInstance("ORIGIN_SERVID                   ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_ia, "ImpErrorIyy1ComponentOriginServid");
    padview[6] = PadView.getInstance("CONTEXT_STRING                  ", 512, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_ia, "ImpErrorIyy1ComponentContextString");
    padview[7] = PadView.getInstance("RETURN_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_NUMERIC,
       w_ia, "ImpErrorIyy1ComponentReturnCode");
    padview[8] = PadView.getInstance("REASON_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_NUMERIC,
       w_ia, "ImpErrorIyy1ComponentReasonCode");
    padview[9] = PadView.getInstance("CHECKSUM                        ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpErrorIyy1ComponentChecksum");
    padview[10] = PadView.getInstance("IMP_REFERENCE                   ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ia, 
      null);
    padview[11] = PadView.getInstance("IYY1_SERVER_DATA                ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_ia, null);
    padview[12] = PadView.getInstance("USERID                          ", 8, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpReferenceIyy1ServerDataUserid");
    padview[13] = PadView.getInstance("REFERENCE_ID                    ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_ia, "ImpReferenceIyy1ServerDataReferenceId");
    padview[14] = PadView.getInstance("IMP                             ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ia, 
      null);
    padview[15] = PadView.getInstance("TYPE                            ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_ia, null);
    padview[16] = PadView.getInstance("TINSTANCE_ID                    ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_ia, "ImpTypeTinstanceId");
    padview[17] = PadView.getInstance("TREFERENCE_ID                   ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_ia, "ImpTypeTreferenceId");
    padview[18] = PadView.getInstance("TKEY_ATTR_TEXT                  ", 4, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpTypeTkeyAttrText");
    padview[19] = PadView.getInstance("EXPORT                          ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_oa, 
      "w_oa");
    padview[20] = PadView.getInstance("EXP_ERROR                       ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_oa, 
      null);
    padview[21] = PadView.getInstance("IYY1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_oa, null);
    padview[22] = PadView.getInstance("SEVERITY_CODE                   ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentSeverityCode");
    padview[23] = PadView.getInstance("ROLLBACK_INDICATOR              ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentRollbackIndicator");
    padview[24] = PadView.getInstance("ORIGIN_SERVID                   ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentOriginServid");
    padview[25] = PadView.getInstance("CONTEXT_STRING                  ", 512, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_oa, "ExpErrorIyy1ComponentContextString");
    padview[26] = PadView.getInstance("RETURN_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentReturnCode");
    padview[27] = PadView.getInstance("REASON_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentReasonCode");
    padview[28] = PadView.getInstance("CHECKSUM                        ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentChecksum");
    padview[29] = PadView.getInstance("ENTITY                          ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_ea, 
      "w_ea");
    padview[30] = PadView.getInstance("                                ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ea, 
      null);
    padview[31] = PadView.getInstance("PARENT                          ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_ea, null);
    padview[32] = PadView.getInstance("PKEY_ATTR_TEXT                  ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ea, "ParentPkeyAttrText");
    padview[33] = PadView.getInstance("PTYPE_TKEY_ATTR_TEXT            ", 4, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ea, "ParentPtypeTkeyAttrText");
    padview[34] = PadView.getInstance("                                ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ea, 
      null);
    padview[35] = PadView.getInstance("TYPE                            ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_ea, null);
    padview[36] = PadView.getInstance("TINSTANCE_ID                    ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_ea, "TypeTinstanceId");
    padview[37] = PadView.getInstance("TREFERENCE_ID                   ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_ea, "TypeTreferenceId");
    padview[38] = PadView.getInstance("TUPDATE_USER_ID                 ", 8, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ea, "TypeTupdateUserId");
    padview[39] = PadView.getInstance("TKEY_ATTR_TEXT                  ", 4, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ea, "TypeTkeyAttrText");
    padview[40] = PadView.getInstance("LOCAL                           ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_la, 
      "w_la");
    padview[41] = PadView.getInstance("LOC_GROUP_CONTEXT               ", 0, 0, 9, (short)2, PadView.VT_GROUP, PadView.DT_NONE, w_la,
       "LocGroupContext_MA");
    padview[42] = PadView.getInstance("LOC_G_CONTEXT                   ", 0, 0, 0, (short)3, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[43] = PadView.getInstance("DONT_CHANGE_TEXT                ", 0, 0, 0, (short)4, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[44] = PadView.getInstance("TEXT_150                        ", 150, 0, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_TEXT,
       w_la, "LocGContextDontChangeTextText150");
    padview[45] = PadView.getInstance("LOC_ERROR                       ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[46] = PadView.getInstance("IYY1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[47] = PadView.getInstance("SEVERITY_CODE                   ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocErrorIyy1ComponentSeverityCode");
    padview[48] = PadView.getInstance("ROLLBACK_INDICATOR              ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocErrorIyy1ComponentRollbackIndicator");
    padview[49] = PadView.getInstance("ORIGIN_SERVID                   ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocErrorIyy1ComponentOriginServid");
    padview[50] = PadView.getInstance("CONTEXT_STRING                  ", 512, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_la, "LocErrorIyy1ComponentContextString");
    padview[51] = PadView.getInstance("RETURN_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocErrorIyy1ComponentReturnCode");
    padview[52] = PadView.getInstance("REASON_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocErrorIyy1ComponentReasonCode");
    padview[53] = PadView.getInstance("CHECKSUM                        ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocErrorIyy1ComponentChecksum");
    padview[54] = PadView.getInstance("LOC                             ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[55] = PadView.getInstance("DONT_CHANGE_RETURN_CODES        ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[56] = PadView.getInstance("1_OK                            ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReturnCodesQ1Ok");
    padview[57] = PadView.getInstance("N10_OBJ_NOT_FOUND               ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReturnCodesN10ObjNotFound");
    padview[58] = PadView.getInstance("N43_OBJ_NOT_DELETED             ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReturnCodesN43ObjNotDeleted");
    padview[59] = PadView.getInstance("LOC                             ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[60] = PadView.getInstance("DONT_CHANGE_REASON_CODES        ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[61] = PadView.getInstance("1_DEFAULT                       ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReasonCodesQ1Default");
    padview[62] = PadView.getInstance("141_TYPE_NOT_FOUND              ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReasonCodesQ141TypeNotFound");
    padview[63] = PadView.getInstance("152_TYPE_CONCURRENCY_ERROR      ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReasonCodesQ152TypeConcurrencyError");
    padview[64] = PadView.getInstance("153_TYPE_INTEGRITY_ERROR        ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReasonCodesQ153TypeIntegrityError");
    padview[65] = PadView.getInstance("******** BOTTOM OF DATA ********", 0, 0, 0, (short)0, PadView.VT_END, PadView.DT_NONE, w_la, 
      null);
  }
  public void f_29360138()
  	throws ABException
  {
    sl_29360138 = ErrorData.SUCCEEDS_FL_LS;
    Type_003cd = ABBase.PV_SELECT;
    Type_lk = ABBase.EVW_UNLOCKED;
    f_29360138_moveb();
    
    if ( sl_29360138.equals( ErrorData.SUCCEEDS_FL_LS ) == true )
    {
      valChkDeadlockTimeout = false;
      valChkDBError = false;
      Type_es = ABBase.EV_USABLE;
      sqlException = null;
      try {
        SQLStatement.setLength(0);
        SQLStatement.append("SELECT ");
        SQLStatement.append("VDVYYYT01.`TINSTANCE_ID`,");
        SQLStatement.append("VDVYYYT01.`TREFERENCE_ID`,");
        SQLStatement.append("VDVYYYT01.`TUPDATE_USERID`,");
        SQLStatement.append("VDVYYYT01.`TKEY_ATTR`");
        SQLStatement.append(" FROM ");
        SQLStatement.append("`VDVYYYT` VDVYYYT01");
        SQLStatement.append(" WHERE ");
        SQLStatement.append("(");
        SQLStatement.append("VDVYYYT01.`TKEY_ATTR` = ?");
        SQLStatement.append(")");
        hstmt_0037955621_1 = globdata.getDBMSData().getDBMSManager().getStatement(globdata, iefRuntimeParm2, "IEFDB", 
          SQLStatement.toString());
        globdata.getDBMSData().getDBMSManager().bindParameterString("IEFDB", hstmt_0037955621_1, 1, TkeyAttrText_001TP);
        hstmt_0037955621_1.execute();
        hstmt_0037955621_1_rs = hstmt_0037955621_1.getResultSet();
        if ( hstmt_0037955621_1_rs.next() == false )
        {
          throw new SQLException("No data found");
        }
        tinstance_id_006EF = hstmt_0037955621_1_rs.getTimestamp(1);
        treference_id_008EF = hstmt_0037955621_1_rs.getTimestamp(2);
        tupdate_userid_004EF = globdata.getDBMSData().getDBMSManager().getStringFromResultSet("IEFDB", hstmt_0037955621_1_rs, 3);
        tkey_attr_002EF = globdata.getDBMSData().getDBMSManager().getStringFromResultSet("IEFDB", hstmt_0037955621_1_rs, 4);
        if ( hstmt_0037955621_1_rs.next() == true )
        {
          throw new SQLException("READ statement with SELECT ONLY property returned more than 1 row");
        }
      } catch( SQLException e ) {
        sqlException = e;
      }
      if ( globdata.getDBMSData().getDBMSManager().wasSuccessful(sqlException) )
      {
        f_29360138_movea();
        if ( sl_29360138.equals( ErrorData.SUCCEEDS_FL_LS ) )
        {
          Type_es = ABBase.EV_USABLE;
        }
        else {
          Type_es = ABBase.EV_UNUSABLE;
        }
        try {
          if ( hstmt_0037955621_1_rs != null )
          {
            hstmt_0037955621_1_rs.close();
            hstmt_0037955621_1_rs = null;
          }
          if ( hstmt_0037955621_1 != null )
          {
            hstmt_0037955621_1.close();
            hstmt_0037955621_1 = null;
          }
        } catch( SQLException e ) {
          if ( globdata.getDBMSData().getDBMSManager().wasSuccessful(e) == false )
          {
            sqlException = e;
            f_29360138_jdbc_dberror();
          }
        }
      }
      else if ( globdata.getDBMSData().getDBMSManager().wasNoDataFound(sqlException) )
      {
        sl_29360138 = ErrorData.NOT_FOUND_FL_LS;
        Type_es = ABBase.EV_UNUSABLE;
        try {
          if ( hstmt_0037955621_1_rs != null )
          {
            hstmt_0037955621_1_rs.close();
            hstmt_0037955621_1_rs = null;
          }
          if ( hstmt_0037955621_1 != null )
          {
            hstmt_0037955621_1.close();
            hstmt_0037955621_1 = null;
          }
        } catch( SQLException e ) {
          if ( globdata.getDBMSData().getDBMSManager().wasSuccessful(e) == false )
          {
            sqlException = e;
            f_29360138_jdbc_dberror();
          }
        }
      }
      else {
        f_29360138_jdbc_dberror();
      }
    }
  }
  
  public void f_29360138_jdbc_dberror()
  	throws ABException
  {
    globdata.getErrorData().setStatus( ErrorData.FATAL_ERROR_FL_LS );
    globdata.getDBMSData().setActionId( 17 );
    globdata.getErrorData().setLastStatus( ErrorData.DB_ERROR_FL_LS );
    if ( sqlException != null )
    {
      globdata.getErrorData().setErrorMessage(sqlException);
      if ( globdata.getDBMSData().getDBMSManager().wasDeadlockOrTimeout("IEFDB", sqlException) )
      {
        globdata.getErrorData().setLastStatus( ErrorData.DB_DEADLOCK_TIMEOUT_FL_LS );
      }
    }
    sl_29360138 = globdata.getErrorData().getLastStatus();
    throw new ABException();
  }
  
  public void f_29360138_moveb()
  	throws ABException
  {
    TkeyAttrText_001TP = w_ia.ImpTypeTkeyAttrText;
  }
  
  public void f_29360138_movea()
  	throws ABException
  {
    w_ea.TypeTinstanceId = TimestampAttr.valueOf(TIRS2VW.TIRS2VW(globdata, "IEFDB", tinstance_id_006EF));
    w_ea.TypeTreferenceId = TimestampAttr.valueOf(TIRS2VW.TIRS2VW(globdata, "IEFDB", treference_id_008EF));
    w_ea.TypeTupdateUserId = FixedStringAttr.valueOf(tupdate_userid_004EF, (short)8);
    w_ea.TypeTkeyAttrText = FixedStringAttr.valueOf(tkey_attr_002EF, (short)4);
  }
  public void f_29360185_open()
  	throws ABException
  {
    sl_29360185 = ErrorData.SUCCEEDS_FL_LS;
    Parent_001cd = ABBase.PV_SELECT;
    Parent_lk = ABBase.EVW_UNLOCKED;
    f_29360185_moveb();
    
    if ( sl_29360185.equals( ErrorData.SUCCEEDS_FL_LS ) == true )
    {
      valChkDeadlockTimeout = false;
      valChkDBError = false;
      Parent_es = ABBase.EV_USABLE;
      sqlException = null;
      try {
        SQLStatement.setLength(0);
        SQLStatement.append("SELECT ");
        SQLStatement.append("VDVYYYP01.`PKEY_ATTR`,");
        SQLStatement.append("VDVYYYP01.`PTYPE_TKEY_ATTR_TE`");
        SQLStatement.append(" FROM ");
        SQLStatement.append("`VDVYYYP` VDVYYYP01");
        SQLStatement.append(" WHERE ");
        SQLStatement.append("(");
        SQLStatement.append("VDVYYYP01.`PTYPE_TKEY_ATTR_TE` = ?");
        SQLStatement.append(")");
        if ( globdata.getDBMSData().getDBMSManager().isDBMS("IEFDB", "DB2") )
        {
          SQLStatement.append(" WITH UR ");
        }
        hstmt_0037821843_1 = globdata.getDBMSData().getDBMSManager().getStatement(globdata, iefRuntimeParm2, "IEFDB", 
          SQLStatement.toString());
        globdata.getDBMSData().getDBMSManager().bindParameterString("IEFDB", hstmt_0037821843_1, 1, tkey_attr_002EF);
        hstmt_0037821843_1.execute();
        hstmt_0037821843_1_rs = hstmt_0037821843_1.getResultSet();
      } catch( SQLException e ) {
        sqlException = e;
      }
      if ( !((globdata.getDBMSData().getDBMSManager().wasSuccessful(sqlException))) )
      {
          f_29360185_jdbc_dberror();
      }
    }
  }
  
  public void f_29360185_fetch()
  	throws ABException
  {
    sqlException = null;
    try {
      if ( hstmt_0037821843_1_rs.next() == false )
      {
        throw new SQLException("No data found");
      }
      pkey_attr_010EF = globdata.getDBMSData().getDBMSManager().getStringFromResultSet("IEFDB", hstmt_0037821843_1_rs, 1);
      ptype_tkey_attr_te_012EF = globdata.getDBMSData().getDBMSManager().getStringFromResultSet("IEFDB", hstmt_0037821843_1_rs, 2);
    } catch( SQLException e ) {
      sqlException = e;
    }
    
    if ( globdata.getDBMSData().getDBMSManager().wasSuccessful(sqlException) )
    {
      f_29360185_movea();
      if ( sl_29360185.equals( ErrorData.SUCCEEDS_FL_LS ) )
      {
        Parent_es = ABBase.EV_USABLE;
      }
      else {
        Parent_es = ABBase.EV_UNUSABLE;
      }
    }
    else if ( globdata.getDBMSData().getDBMSManager().wasNoDataFound(sqlException) )
    {
      sl_29360185 = ErrorData.NOT_FOUND_FL_LS;
      Parent_es = ABBase.EV_UNUSABLE;
    }
    else {
      f_29360185_jdbc_dberror();
    }
  }
  
  public void f_29360185_esc_close()
  	throws ABException
  {
    try {
      if ( hstmt_0037821843_1_rs != null )
      {
        hstmt_0037821843_1_rs.close();
        hstmt_0037821843_1_rs = null;
      }
      if ( hstmt_0037821843_1 != null )
      {
        hstmt_0037821843_1.close();
        hstmt_0037821843_1 = null;
      }
    } catch( SQLException e ) {
      if ( globdata.getDBMSData().getDBMSManager().wasSuccessful(e) == false )
      {
        sqlException = e;
        f_29360185_jdbc_dberror();
      }
    }
  }
  public void f_29360185_close()
  	throws ABException
  {
    Parent_es = ABBase.EV_UNUSABLE;
  }
  
  public void f_29360185_jdbc_dberror()
  	throws ABException
  {
    globdata.getErrorData().setStatus( ErrorData.FATAL_ERROR_FL_LS );
    globdata.getDBMSData().setActionId( 24 );
    globdata.getErrorData().setLastStatus( ErrorData.DB_ERROR_FL_LS );
    if ( sqlException != null )
    {
      globdata.getErrorData().setErrorMessage(sqlException);
      if ( globdata.getDBMSData().getDBMSManager().wasDeadlockOrTimeout("IEFDB", sqlException) )
      {
        globdata.getErrorData().setLastStatus( ErrorData.DB_DEADLOCK_TIMEOUT_FL_LS );
      }
    }
    sl_29360185 = globdata.getErrorData().getLastStatus();
    throw new ABException();
  }
  
  public void f_29360185_moveb()
  	throws ABException
  {
    if ( Type_es.equals( ABBase.EV_UNUSABLE ) == true )
    {
      sl_29360185 = ABBase.EV_UNUSABLE;
      return;
    }
    tkey_attr_002EF = w_ea.TypeTkeyAttrText;
  }
  
  public void f_29360185_movea()
  	throws ABException
  {
    w_ea.ParentPkeyAttrText = FixedStringAttr.valueOf(pkey_attr_010EF, (short)5);
    w_ea.ParentPtypeTkeyAttrText = FixedStringAttr.valueOf(ptype_tkey_attr_te_012EF, (short)4);
  }
  
  
  public void f_28311569()
  	throws ABException
  {
    if ( Type_es.equals( ABBase.EV_UNUSABLE ) == true )
    {
      dl_28311569 = ABBase.EV_UNUSABLE;
      globdata.getErrorData().setStatus( ErrorData.FATAL_ERROR_FL_LS );
      globdata.getDBMSData().setActionId( 28 );
      globdata.getErrorData().setLastStatus( dl_28311569 );
      throw new ABException();
    }
    else {
      dl_28311569 = ErrorData.SUCCEEDS_FL_LS;
      Type_003cd = ABBase.PV_DELETE;
      globdata.getErrorData().setStatus( ErrorData.NONE_SF );
      Type_es = ABBase.EV_UNUSABLE;
      Type_lk = ABBase.EVW_UNLOCKED;
      globdata.getDBMSData().setProcessQueue( true );
      if ( pdaQueueCMCB == null )
      {
        pdaQueueCMCB = DAQueue.getInstance();
      }
      pdaQueueCMCB.reset();
      gen.ort.yyy.YYZTYPE1.YYZTYPE1(iefRuntimeParm1, iefRuntimeParm2, globdata, pdaQueueCMCB, 0, tkey_attr_002EF);
      if ( globdata.getErrorData().getStatus().equals( ErrorData.NONE_SF ) == true )
      {
        f_22020277_procq();
        globdata.getStateData().setCurrentABId( "0022020277" );
        globdata.getStateData().setCurrentABName( "DYYY0341_TYPE_DELETE" );
      }
      if ( globdata.getErrorData().getStatus().equals( ErrorData.NONE_SF ) == false )
      {
        
        // Restore the SQLException saved by the RI trigger in GLOBDATA
        sqlException = globdata.getDBMSData().getSaveSQLException();
        if ( globdata.getDBMSData().getDBMSManager().wasDeadlockOrTimeout("IEFDB", sqlException) )
        {
          dl_28311569 = ErrorData.DB_DEADLOCK_TIMEOUT_FL_LS;
          globdata.getErrorData().setStatus( ErrorData.NONE_SF );
          globdata.getErrorData().setLastStatus( ErrorData.DB_DEADLOCK_TIMEOUT_FL_LS );
        }
        else {
          dl_28311569 = ErrorData.FATAL_ERROR_FL_LS;
        }
        throw new ABException();
      }
    }
  }
}// end class


package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: DYYY0341_IA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:09:23
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF IMPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: DYYY0341_IA
 **/
public class DYYY0341_IA extends ViewBase implements IImportView, Serializable
{
  // Entity View: IMP_ERROR
  //        Type: IYY1_COMPONENT
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentSeverityCode
   **/
  public char ImpErrorIyy1ComponentSeverityCode_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentSeverityCode
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ImpErrorIyy1ComponentSeverityCode;
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentRollbackIndicator
   **/
  public char ImpErrorIyy1ComponentRollbackIndicator_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentRollbackIndicator
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ImpErrorIyy1ComponentRollbackIndicator;
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentOriginServid
   **/
  public char ImpErrorIyy1ComponentOriginServid_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentOriginServid
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double ImpErrorIyy1ComponentOriginServid;
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentContextString
   **/
  public char ImpErrorIyy1ComponentContextString_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentContextString
   * Domain: Text
   * Length: 512
   * Varying Length: Y
   **/
  public String ImpErrorIyy1ComponentContextString;
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentReturnCode
   **/
  public char ImpErrorIyy1ComponentReturnCode_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentReturnCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ImpErrorIyy1ComponentReturnCode;
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentReasonCode
   **/
  public char ImpErrorIyy1ComponentReasonCode_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentReasonCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ImpErrorIyy1ComponentReasonCode;
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentChecksum
   **/
  public char ImpErrorIyy1ComponentChecksum_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentChecksum
   * Domain: Text
   * Length: 15
   * Varying Length: N
   **/
  public String ImpErrorIyy1ComponentChecksum;
  // Entity View: IMP_REFERENCE
  //        Type: IYY1_SERVER_DATA
  /**
   * Attribute missing flag for: ImpReferenceIyy1ServerDataUserid
   **/
  public char ImpReferenceIyy1ServerDataUserid_AS;
  /**
   * Attribute for: ImpReferenceIyy1ServerDataUserid
   * Domain: Text
   * Length: 8
   * Varying Length: N
   **/
  public String ImpReferenceIyy1ServerDataUserid;
  /**
   * Attribute missing flag for: ImpReferenceIyy1ServerDataReferenceId
   **/
  public char ImpReferenceIyy1ServerDataReferenceId_AS;
  /**
   * Attribute for: ImpReferenceIyy1ServerDataReferenceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String ImpReferenceIyy1ServerDataReferenceId;
  // Entity View: IMP
  //        Type: TYPE
  /**
   * Attribute missing flag for: ImpTypeTinstanceId
   **/
  public char ImpTypeTinstanceId_AS;
  /**
   * Attribute for: ImpTypeTinstanceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String ImpTypeTinstanceId;
  /**
   * Attribute missing flag for: ImpTypeTreferenceId
   **/
  public char ImpTypeTreferenceId_AS;
  /**
   * Attribute for: ImpTypeTreferenceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String ImpTypeTreferenceId;
  /**
   * Attribute missing flag for: ImpTypeTkeyAttrText
   **/
  public char ImpTypeTkeyAttrText_AS;
  /**
   * Attribute for: ImpTypeTkeyAttrText
   * Domain: Text
   * Length: 4
   * Varying Length: N
   **/
  public String ImpTypeTkeyAttrText;
  /**
   * Default Constructor
   **/
  
  public DYYY0341_IA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public DYYY0341_IA(DYYY0341_IA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static DYYY0341_IA getInstance()
  {
    return new DYYY0341_IA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new DYYY0341_IA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    ImpErrorIyy1ComponentSeverityCode_AS = ' ';
    ImpErrorIyy1ComponentSeverityCode = " ";
    ImpErrorIyy1ComponentRollbackIndicator_AS = ' ';
    ImpErrorIyy1ComponentRollbackIndicator = " ";
    ImpErrorIyy1ComponentOriginServid_AS = ' ';
    ImpErrorIyy1ComponentOriginServid = 0.0;
    ImpErrorIyy1ComponentContextString_AS = ' ';
    ImpErrorIyy1ComponentContextString = "";
    ImpErrorIyy1ComponentReturnCode_AS = ' ';
    ImpErrorIyy1ComponentReturnCode = 0;
    ImpErrorIyy1ComponentReasonCode_AS = ' ';
    ImpErrorIyy1ComponentReasonCode = 0;
    ImpErrorIyy1ComponentChecksum_AS = ' ';
    ImpErrorIyy1ComponentChecksum = "               ";
    ImpReferenceIyy1ServerDataUserid_AS = ' ';
    ImpReferenceIyy1ServerDataUserid = "        ";
    ImpReferenceIyy1ServerDataReferenceId_AS = ' ';
    ImpReferenceIyy1ServerDataReferenceId = "00000000000000000000";
    ImpTypeTinstanceId_AS = ' ';
    ImpTypeTinstanceId = "00000000000000000000";
    ImpTypeTreferenceId_AS = ' ';
    ImpTypeTreferenceId = "00000000000000000000";
    ImpTypeTkeyAttrText_AS = ' ';
    ImpTypeTkeyAttrText = "    ";
  }
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    throw new RuntimeException("can only execute getVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    throw new RuntimeException("can only execute setFromVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IImportView orig)
  {
    this.copyFrom((DYYY0341_IA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(DYYY0341_IA orig)
  {
    ImpErrorIyy1ComponentSeverityCode_AS = orig.ImpErrorIyy1ComponentSeverityCode_AS;
    ImpErrorIyy1ComponentSeverityCode = orig.ImpErrorIyy1ComponentSeverityCode;
    ImpErrorIyy1ComponentRollbackIndicator_AS = orig.ImpErrorIyy1ComponentRollbackIndicator_AS;
    ImpErrorIyy1ComponentRollbackIndicator = orig.ImpErrorIyy1ComponentRollbackIndicator;
    ImpErrorIyy1ComponentOriginServid_AS = orig.ImpErrorIyy1ComponentOriginServid_AS;
    ImpErrorIyy1ComponentOriginServid = orig.ImpErrorIyy1ComponentOriginServid;
    ImpErrorIyy1ComponentContextString_AS = orig.ImpErrorIyy1ComponentContextString_AS;
    ImpErrorIyy1ComponentContextString = orig.ImpErrorIyy1ComponentContextString;
    ImpErrorIyy1ComponentReturnCode_AS = orig.ImpErrorIyy1ComponentReturnCode_AS;
    ImpErrorIyy1ComponentReturnCode = orig.ImpErrorIyy1ComponentReturnCode;
    ImpErrorIyy1ComponentReasonCode_AS = orig.ImpErrorIyy1ComponentReasonCode_AS;
    ImpErrorIyy1ComponentReasonCode = orig.ImpErrorIyy1ComponentReasonCode;
    ImpErrorIyy1ComponentChecksum_AS = orig.ImpErrorIyy1ComponentChecksum_AS;
    ImpErrorIyy1ComponentChecksum = orig.ImpErrorIyy1ComponentChecksum;
    ImpReferenceIyy1ServerDataUserid_AS = orig.ImpReferenceIyy1ServerDataUserid_AS;
    ImpReferenceIyy1ServerDataUserid = orig.ImpReferenceIyy1ServerDataUserid;
    ImpReferenceIyy1ServerDataReferenceId_AS = orig.ImpReferenceIyy1ServerDataReferenceId_AS;
    ImpReferenceIyy1ServerDataReferenceId = orig.ImpReferenceIyy1ServerDataReferenceId;
    ImpTypeTinstanceId_AS = orig.ImpTypeTinstanceId_AS;
    ImpTypeTinstanceId = orig.ImpTypeTinstanceId;
    ImpTypeTreferenceId_AS = orig.ImpTypeTreferenceId_AS;
    ImpTypeTreferenceId = orig.ImpTypeTreferenceId;
    ImpTypeTkeyAttrText_AS = orig.ImpTypeTkeyAttrText_AS;
    ImpTypeTkeyAttrText = orig.ImpTypeTkeyAttrText;
  }
}

package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: DYYY0341_LA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:09:23
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF LOCAL VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: DYYY0341_LA
 **/
public class DYYY0341_LA extends ViewBase implements ILocalView, Serializable
{
  // Repeating GV:  LOC_GROUP_CONTEXT
  //     Repeats: 9 times
  /**
   * Repeating group view count
   **/
  public int LocGroupContext_MA;
  /**
   * Repeating group view occurrance array
   **/
  public char LocGroupContext_AC[] = new char[9];
  // Entity View: LOC_G_CONTEXT
  //        Type: DONT_CHANGE_TEXT
  /**
   * Attribute missing flag for: LocGContextDontChangeTextText150
   **/
  public char LocGContextDontChangeTextText150_AS[] = new char[9];
  /**
   * Attribute for: LocGContextDontChangeTextText150
   * Domain: Text
   * Length: 150
   * Varying Length: N
   **/
  public String LocGContextDontChangeTextText150[] = new String[9];
  // Entity View: LOC_ERROR
  //        Type: IYY1_COMPONENT
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentSeverityCode
   **/
  public char LocErrorIyy1ComponentSeverityCode_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentSeverityCode
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String LocErrorIyy1ComponentSeverityCode;
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentRollbackIndicator
   **/
  public char LocErrorIyy1ComponentRollbackIndicator_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentRollbackIndicator
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String LocErrorIyy1ComponentRollbackIndicator;
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentOriginServid
   **/
  public char LocErrorIyy1ComponentOriginServid_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentOriginServid
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double LocErrorIyy1ComponentOriginServid;
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentContextString
   **/
  public char LocErrorIyy1ComponentContextString_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentContextString
   * Domain: Text
   * Length: 512
   * Varying Length: Y
   **/
  public String LocErrorIyy1ComponentContextString;
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentReturnCode
   **/
  public char LocErrorIyy1ComponentReturnCode_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentReturnCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocErrorIyy1ComponentReturnCode;
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentReasonCode
   **/
  public char LocErrorIyy1ComponentReasonCode_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentReasonCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocErrorIyy1ComponentReasonCode;
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentChecksum
   **/
  public char LocErrorIyy1ComponentChecksum_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentChecksum
   * Domain: Text
   * Length: 15
   * Varying Length: N
   **/
  public String LocErrorIyy1ComponentChecksum;
  // Entity View: LOC
  //        Type: DONT_CHANGE_RETURN_CODES
  /**
   * Attribute missing flag for: LocDontChangeReturnCodesQ1Ok
   **/
  public char LocDontChangeReturnCodesQ1Ok_AS;
  /**
   * Attribute for: LocDontChangeReturnCodesQ1Ok
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReturnCodesQ1Ok;
  /**
   * Attribute missing flag for: LocDontChangeReturnCodesN10ObjNotFound
   **/
  public char LocDontChangeReturnCodesN10ObjNotFound_AS;
  /**
   * Attribute for: LocDontChangeReturnCodesN10ObjNotFound
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReturnCodesN10ObjNotFound;
  /**
   * Attribute missing flag for: LocDontChangeReturnCodesN43ObjNotDeleted
   **/
  public char LocDontChangeReturnCodesN43ObjNotDeleted_AS;
  /**
   * Attribute for: LocDontChangeReturnCodesN43ObjNotDeleted
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReturnCodesN43ObjNotDeleted;
  // Entity View: LOC
  //        Type: DONT_CHANGE_REASON_CODES
  /**
   * Attribute missing flag for: LocDontChangeReasonCodesQ1Default
   **/
  public char LocDontChangeReasonCodesQ1Default_AS;
  /**
   * Attribute for: LocDontChangeReasonCodesQ1Default
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReasonCodesQ1Default;
  /**
   * Attribute missing flag for: LocDontChangeReasonCodesQ141TypeNotFound
   **/
  public char LocDontChangeReasonCodesQ141TypeNotFound_AS;
  /**
   * Attribute for: LocDontChangeReasonCodesQ141TypeNotFound
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReasonCodesQ141TypeNotFound;
  /**
   * Attribute missing flag for: LocDontChangeReasonCodesQ152TypeConcurrencyError
   **/
  public char LocDontChangeReasonCodesQ152TypeConcurrencyError_AS;
  /**
   * Attribute for: LocDontChangeReasonCodesQ152TypeConcurrencyError
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReasonCodesQ152TypeConcurrencyError;
  /**
   * Attribute missing flag for: LocDontChangeReasonCodesQ153TypeIntegrityError
   **/
  public char LocDontChangeReasonCodesQ153TypeIntegrityError_AS;
  /**
   * Attribute for: LocDontChangeReasonCodesQ153TypeIntegrityError
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReasonCodesQ153TypeIntegrityError;
  /**
   * Default Constructor
   **/
  
  public DYYY0341_LA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public DYYY0341_LA(DYYY0341_LA orig)
  {
    LocGroupContext_MA = orig.LocGroupContext_MA;
    System.arraycopy(orig.LocGroupContext_AC, 0, LocGroupContext_AC, 0, LocGroupContext_AC.length);
    System.arraycopy(orig.LocGContextDontChangeTextText150_AS, 0, LocGContextDontChangeTextText150_AS, 0, 
      LocGContextDontChangeTextText150_AS.length);
    System.arraycopy(orig.LocGContextDontChangeTextText150, 0, LocGContextDontChangeTextText150, 0, 
      LocGContextDontChangeTextText150.length);
    LocErrorIyy1ComponentSeverityCode_AS = orig.LocErrorIyy1ComponentSeverityCode_AS;
    LocErrorIyy1ComponentSeverityCode = orig.LocErrorIyy1ComponentSeverityCode;
    LocErrorIyy1ComponentRollbackIndicator_AS = orig.LocErrorIyy1ComponentRollbackIndicator_AS;
    LocErrorIyy1ComponentRollbackIndicator = orig.LocErrorIyy1ComponentRollbackIndicator;
    LocErrorIyy1ComponentOriginServid_AS = orig.LocErrorIyy1ComponentOriginServid_AS;
    LocErrorIyy1ComponentOriginServid = orig.LocErrorIyy1ComponentOriginServid;
    LocErrorIyy1ComponentContextString_AS = orig.LocErrorIyy1ComponentContextString_AS;
    LocErrorIyy1ComponentContextString = orig.LocErrorIyy1ComponentContextString;
    LocErrorIyy1ComponentReturnCode_AS = orig.LocErrorIyy1ComponentReturnCode_AS;
    LocErrorIyy1ComponentReturnCode = orig.LocErrorIyy1ComponentReturnCode;
    LocErrorIyy1ComponentReasonCode_AS = orig.LocErrorIyy1ComponentReasonCode_AS;
    LocErrorIyy1ComponentReasonCode = orig.LocErrorIyy1ComponentReasonCode;
    LocErrorIyy1ComponentChecksum_AS = orig.LocErrorIyy1ComponentChecksum_AS;
    LocErrorIyy1ComponentChecksum = orig.LocErrorIyy1ComponentChecksum;
    LocDontChangeReturnCodesQ1Ok_AS = orig.LocDontChangeReturnCodesQ1Ok_AS;
    LocDontChangeReturnCodesQ1Ok = orig.LocDontChangeReturnCodesQ1Ok;
    LocDontChangeReturnCodesN10ObjNotFound_AS = orig.LocDontChangeReturnCodesN10ObjNotFound_AS;
    LocDontChangeReturnCodesN10ObjNotFound = orig.LocDontChangeReturnCodesN10ObjNotFound;
    LocDontChangeReturnCodesN43ObjNotDeleted_AS = orig.LocDontChangeReturnCodesN43ObjNotDeleted_AS;
    LocDontChangeReturnCodesN43ObjNotDeleted = orig.LocDontChangeReturnCodesN43ObjNotDeleted;
    LocDontChangeReasonCodesQ1Default_AS = orig.LocDontChangeReasonCodesQ1Default_AS;
    LocDontChangeReasonCodesQ1Default = orig.LocDontChangeReasonCodesQ1Default;
    LocDontChangeReasonCodesQ141TypeNotFound_AS = orig.LocDontChangeReasonCodesQ141TypeNotFound_AS;
    LocDontChangeReasonCodesQ141TypeNotFound = orig.LocDontChangeReasonCodesQ141TypeNotFound;
    LocDontChangeReasonCodesQ152TypeConcurrencyError_AS = orig.LocDontChangeReasonCodesQ152TypeConcurrencyError_AS;
    LocDontChangeReasonCodesQ152TypeConcurrencyError = orig.LocDontChangeReasonCodesQ152TypeConcurrencyError;
    LocDontChangeReasonCodesQ153TypeIntegrityError_AS = orig.LocDontChangeReasonCodesQ153TypeIntegrityError_AS;
    LocDontChangeReasonCodesQ153TypeIntegrityError = orig.LocDontChangeReasonCodesQ153TypeIntegrityError;
  }
  /**
   * Static instance creator function
   **/
  
  public static DYYY0341_LA getInstance()
  {
    return new DYYY0341_LA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new DYYY0341_LA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    LocGroupContext_MA = 0;
    for(int a = 0; a < 9; a++)
    {
      LocGroupContext_AC[a] = ' ';
      LocGContextDontChangeTextText150_AS[a] = ' ';
      LocGContextDontChangeTextText150[a] = 
"                                                                                                                                                      "
        ;
    }
    LocErrorIyy1ComponentSeverityCode_AS = ' ';
    LocErrorIyy1ComponentSeverityCode = " ";
    LocErrorIyy1ComponentRollbackIndicator_AS = ' ';
    LocErrorIyy1ComponentRollbackIndicator = " ";
    LocErrorIyy1ComponentOriginServid_AS = ' ';
    LocErrorIyy1ComponentOriginServid = 0.0;
    LocErrorIyy1ComponentContextString_AS = ' ';
    LocErrorIyy1ComponentContextString = "";
    LocErrorIyy1ComponentReturnCode_AS = ' ';
    LocErrorIyy1ComponentReturnCode = 0;
    LocErrorIyy1ComponentReasonCode_AS = ' ';
    LocErrorIyy1ComponentReasonCode = 0;
    LocErrorIyy1ComponentChecksum_AS = ' ';
    LocErrorIyy1ComponentChecksum = "               ";
    LocDontChangeReturnCodesQ1Ok_AS = ' ';
    LocDontChangeReturnCodesQ1Ok = 0;
    LocDontChangeReturnCodesN10ObjNotFound_AS = ' ';
    LocDontChangeReturnCodesN10ObjNotFound = 0;
    LocDontChangeReturnCodesN43ObjNotDeleted_AS = ' ';
    LocDontChangeReturnCodesN43ObjNotDeleted = 0;
    LocDontChangeReasonCodesQ1Default_AS = ' ';
    LocDontChangeReasonCodesQ1Default = 0;
    LocDontChangeReasonCodesQ141TypeNotFound_AS = ' ';
    LocDontChangeReasonCodesQ141TypeNotFound = 0;
    LocDontChangeReasonCodesQ152TypeConcurrencyError_AS = ' ';
    LocDontChangeReasonCodesQ152TypeConcurrencyError = 0;
    LocDontChangeReasonCodesQ153TypeIntegrityError_AS = ' ';
    LocDontChangeReasonCodesQ153TypeIntegrityError = 0;
  }
}

package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: DYYY0341_OA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:09:23
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF EXPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: DYYY0341_OA
 **/
public class DYYY0341_OA extends ViewBase implements IExportView, Serializable
{
  // Entity View: EXP_ERROR
  //        Type: IYY1_COMPONENT
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentSeverityCode
   **/
  public char ExpErrorIyy1ComponentSeverityCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentSeverityCode
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentSeverityCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentRollbackIndicator
   **/
  public char ExpErrorIyy1ComponentRollbackIndicator_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentRollbackIndicator
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentRollbackIndicator;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentOriginServid
   **/
  public char ExpErrorIyy1ComponentOriginServid_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentOriginServid
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double ExpErrorIyy1ComponentOriginServid;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentContextString
   **/
  public char ExpErrorIyy1ComponentContextString_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentContextString
   * Domain: Text
   * Length: 512
   * Varying Length: Y
   **/
  public String ExpErrorIyy1ComponentContextString;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentReturnCode
   **/
  public char ExpErrorIyy1ComponentReturnCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentReturnCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ExpErrorIyy1ComponentReturnCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentReasonCode
   **/
  public char ExpErrorIyy1ComponentReasonCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentReasonCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ExpErrorIyy1ComponentReasonCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentChecksum
   **/
  public char ExpErrorIyy1ComponentChecksum_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentChecksum
   * Domain: Text
   * Length: 15
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentChecksum;
  /**
   * Default Constructor
   **/
  
  public DYYY0341_OA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public DYYY0341_OA(DYYY0341_OA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static DYYY0341_OA getInstance()
  {
    return new DYYY0341_OA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new DYYY0341_OA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    ExpErrorIyy1ComponentSeverityCode_AS = ' ';
    ExpErrorIyy1ComponentSeverityCode = " ";
    ExpErrorIyy1ComponentRollbackIndicator_AS = ' ';
    ExpErrorIyy1ComponentRollbackIndicator = " ";
    ExpErrorIyy1ComponentOriginServid_AS = ' ';
    ExpErrorIyy1ComponentOriginServid = 0.0;
    ExpErrorIyy1ComponentContextString_AS = ' ';
    ExpErrorIyy1ComponentContextString = "";
    ExpErrorIyy1ComponentReturnCode_AS = ' ';
    ExpErrorIyy1ComponentReturnCode = 0;
    ExpErrorIyy1ComponentReasonCode_AS = ' ';
    ExpErrorIyy1ComponentReasonCode = 0;
    ExpErrorIyy1ComponentChecksum_AS = ' ';
    ExpErrorIyy1ComponentChecksum = "               ";
  }
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    throw new RuntimeException("can only execute setFromVDF for a Procedure Step.");
  }
  
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    throw new RuntimeException("can only execute getVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IExportView orig)
  {
    this.copyFrom((DYYY0341_OA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(DYYY0341_OA orig)
  {
    ExpErrorIyy1ComponentSeverityCode_AS = orig.ExpErrorIyy1ComponentSeverityCode_AS;
    ExpErrorIyy1ComponentSeverityCode = orig.ExpErrorIyy1ComponentSeverityCode;
    ExpErrorIyy1ComponentRollbackIndicator_AS = orig.ExpErrorIyy1ComponentRollbackIndicator_AS;
    ExpErrorIyy1ComponentRollbackIndicator = orig.ExpErrorIyy1ComponentRollbackIndicator;
    ExpErrorIyy1ComponentOriginServid_AS = orig.ExpErrorIyy1ComponentOriginServid_AS;
    ExpErrorIyy1ComponentOriginServid = orig.ExpErrorIyy1ComponentOriginServid;
    ExpErrorIyy1ComponentContextString_AS = orig.ExpErrorIyy1ComponentContextString_AS;
    ExpErrorIyy1ComponentContextString = orig.ExpErrorIyy1ComponentContextString;
    ExpErrorIyy1ComponentReturnCode_AS = orig.ExpErrorIyy1ComponentReturnCode_AS;
    ExpErrorIyy1ComponentReturnCode = orig.ExpErrorIyy1ComponentReturnCode;
    ExpErrorIyy1ComponentReasonCode_AS = orig.ExpErrorIyy1ComponentReasonCode_AS;
    ExpErrorIyy1ComponentReasonCode = orig.ExpErrorIyy1ComponentReasonCode;
    ExpErrorIyy1ComponentChecksum_AS = orig.ExpErrorIyy1ComponentChecksum_AS;
    ExpErrorIyy1ComponentChecksum = orig.ExpErrorIyy1ComponentChecksum;
  }
}
