
package gen.ort.yyy;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: DYYY0211_CHILD_CREATE            Date: 2023/07/05
//    Target OS:   JVM                       Time: 15:08:50
//    Target DBMS: JDBC                      User: HakanBal
//    Access Method: JDBC           
//
//    Generation options:
//    Debug trace option selected
//    Data modeling constraint enforcement not selected
//    Optimized import view initialization not selected
//    Enforce default values with DBMS not selected
//    Init unspecified optional fields to NULL not selected
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;

import com.ca.gen.abrt.*;
import com.ca.gen.abrt.functions.*;
import com.ca.gen.abrt.cascade.*;
import com.ca.gen.abrt.trace.*;
import com.ca.gen.exits.common.*;
import com.ca.gen.odc.*;

public class DYYY0211 extends ABBase
{
  // * * * * * * * * * * * * * * * * * * *
  // ENTITY ACTION STATEMENT STATUS FLAGS 
  // ENTITY VIEW STATUS FLAGS AND         
  // LAST COMMAND FOR EACH ENTITY VIEW    
  // * * * * * * * * * * * * * * * * * * *
  String sl_29360174 = ErrorData.NONE_FL_LS;
  String cr_26214451 = ErrorData.NONE_FL_LS;
  String Parent_es;
  String Parent_001cd;
  String Parent_lk;
  String Child_es;
  String Child_003cd;
  String Child_lk;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // IMPORT VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  DYYY0211_IA w_ia;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // EXPORT VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  DYYY0211_OA w_oa;
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // START OF ENTITY ACTION VIEW
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  /**
   * Internal data view storage for: DYYY0211_EA
   **/
  public class DYYY0211_EA extends ViewBase implements IEntityActionView, Serializable
  {
    // Entity View: 
    //        Type: PARENT
    /**
     * Attribute missing flag for: ParentPkeyAttrText
     **/
    public char ParentPkeyAttrText_AS;
    /**
     * Attribute for: ParentPkeyAttrText
     * Domain: Text
     * Length: 5
     * Varying Length: N
     **/
    public String ParentPkeyAttrText;
    // Entity View: 
    //        Type: CHILD
    /**
     * Attribute missing flag for: ChildCinstanceId
     **/
    public char ChildCinstanceId_AS;
    /**
     * Attribute for: ChildCinstanceId
     * Domain: Timestamp
     * Length: 20
     **/
    public String ChildCinstanceId;
    /**
     * Attribute missing flag for: ChildCreferenceId
     **/
    public char ChildCreferenceId_AS;
    /**
     * Attribute for: ChildCreferenceId
     * Domain: Timestamp
     * Length: 20
     **/
    public String ChildCreferenceId;
    /**
     * Attribute missing flag for: ChildCcreateUserId
     **/
    public char ChildCcreateUserId_AS;
    /**
     * Attribute for: ChildCcreateUserId
     * Domain: Text
     * Length: 8
     * Varying Length: N
     **/
    public String ChildCcreateUserId;
    /**
     * Attribute missing flag for: ChildCupdateUserId
     **/
    public char ChildCupdateUserId_AS;
    /**
     * Attribute for: ChildCupdateUserId
     * Domain: Text
     * Length: 8
     * Varying Length: N
     **/
    public String ChildCupdateUserId;
    /**
     * Attribute missing flag for: ChildCparentPkeyAttrText
     **/
    public char ChildCparentPkeyAttrText_AS;
    /**
     * Attribute for: ChildCparentPkeyAttrText
     * Domain: Text
     * Length: 5
     * Varying Length: N
     **/
    public String ChildCparentPkeyAttrText;
    /**
     * Attribute missing flag for: ChildCkeyAttrNum
     **/
    public char ChildCkeyAttrNum_AS;
    /**
     * Attribute for: ChildCkeyAttrNum
     * Domain: Number
     * Length: 6
     * Decimal Places: 0
     * Decimal Precision: N
     **/
    public int ChildCkeyAttrNum;
    /**
     * Attribute missing flag for: ChildCsearchAttrText
     **/
    public char ChildCsearchAttrText_AS;
    /**
     * Attribute for: ChildCsearchAttrText
     * Domain: Text
     * Length: 25
     * Varying Length: N
     **/
    public String ChildCsearchAttrText;
    /**
     * Attribute missing flag for: ChildCotherAttrText
     **/
    public char ChildCotherAttrText_AS;
    /**
     * Attribute for: ChildCotherAttrText
     * Domain: Text
     * Length: 25
     * Varying Length: N
     **/
    public String ChildCotherAttrText;
    /**
     * Default Constructor
     **/
    
    public DYYY0211_EA()
    {
      reset();
    }
    /**
     * Copy Constructor
     **/
    
    public DYYY0211_EA(DYYY0211_EA orig)
    {
      ParentPkeyAttrText_AS = orig.ParentPkeyAttrText_AS;
      ParentPkeyAttrText = orig.ParentPkeyAttrText;
      ChildCinstanceId_AS = orig.ChildCinstanceId_AS;
      ChildCinstanceId = orig.ChildCinstanceId;
      ChildCreferenceId_AS = orig.ChildCreferenceId_AS;
      ChildCreferenceId = orig.ChildCreferenceId;
      ChildCcreateUserId_AS = orig.ChildCcreateUserId_AS;
      ChildCcreateUserId = orig.ChildCcreateUserId;
      ChildCupdateUserId_AS = orig.ChildCupdateUserId_AS;
      ChildCupdateUserId = orig.ChildCupdateUserId;
      ChildCparentPkeyAttrText_AS = orig.ChildCparentPkeyAttrText_AS;
      ChildCparentPkeyAttrText = orig.ChildCparentPkeyAttrText;
      ChildCkeyAttrNum_AS = orig.ChildCkeyAttrNum_AS;
      ChildCkeyAttrNum = orig.ChildCkeyAttrNum;
      ChildCsearchAttrText_AS = orig.ChildCsearchAttrText_AS;
      ChildCsearchAttrText = orig.ChildCsearchAttrText;
      ChildCotherAttrText_AS = orig.ChildCotherAttrText_AS;
      ChildCotherAttrText = orig.ChildCotherAttrText;
    }
    /**
     * clone constructor
     **/
    
    @Override public Object clone()
    	throws CloneNotSupportedException
    {
      return(new DYYY0211_EA(this));
    }
    /**
     * Resets all properties to the defaults.
     **/
    
    public void reset()
    {
      ParentPkeyAttrText_AS = ' ';
      ParentPkeyAttrText = "     ";
      ChildCinstanceId_AS = ' ';
      ChildCinstanceId = "00000000000000000000";
      ChildCreferenceId_AS = ' ';
      ChildCreferenceId = "00000000000000000000";
      ChildCcreateUserId_AS = ' ';
      ChildCcreateUserId = "        ";
      ChildCupdateUserId_AS = ' ';
      ChildCupdateUserId = "        ";
      ChildCparentPkeyAttrText_AS = ' ';
      ChildCparentPkeyAttrText = "     ";
      ChildCkeyAttrNum_AS = ' ';
      ChildCkeyAttrNum = 0;
      ChildCsearchAttrText_AS = ' ';
      ChildCsearchAttrText = "                         ";
      ChildCotherAttrText_AS = ' ';
      ChildCotherAttrText = "                         ";
    }
  }
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // ENTITY ACTION VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  DYYY0211_EA w_ea = new DYYY0211_EA();
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // LOCAL VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  DYYY0211_LA w_la;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // CURSOR OPEN FLAGS
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  boolean curs_open_0029360174 = false;
  
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // HOST VARIABLES FOR TABLE: VDVYYYP
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  String pkey_attr_001EF;
  String pkey_attr_002EN;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // HOST VARIABLES FOR TABLE: VDVYYYC
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  int ckey_attr_003EF;
  int ckey_attr_004EN;
  String csearch_attr_005EF;
  String csearch_attr_006EN;
  String cother_attr_007EF;
  String cother_attr_008EN;
  String ccreate_userid_009EF;
  String ccreate_userid_010EN;
  String cupdate_userid_011EF;
  String cupdate_userid_012EN;
  java.sql.Timestamp cinstance_id_013EF;
  java.sql.Timestamp cinstance_id_014EN;
  java.sql.Timestamp creference_id_015EF;
  java.sql.Timestamp creference_id_016EN;
  String cparent_pkey_attr_017EF;
  String cparent_pkey_attr_018EN;
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // TEMPORARY HOST VARIABLES 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  String CparentPkeyAttrText_001TP;
  
  
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // MISC DECLARATIONS AND PROTOTYPES 
  //    FOLLOW AS NEEDED:             
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  boolean func_0022020305_esc_flag;
  PreparedStatement hstmt_0037931683_1;
  ResultSet hstmt_0037931683_1_rs;
  int hstmt_0037931683_1_cnt;
  boolean func_0020971913_esc_flag;
  PreparedStatement hstmt_0026214451_1;
  ResultSet hstmt_0026214451_1_rs;
  int hstmt_0026214451_1_cnt;
  PadView padview[] = new PadView [60];
  int trace_ret_code;
  PadText padtext[] = initPadText();
  public PadText [] initPadText()
  {
    PadText [] result = new PadText [PADTEXT_SIZE];
    result[0] = PadText.getInstance(   0,"+->   DYYY0211_CHILD_CREATE             07/05/2023  15:08");
    result[1] = PadText.getInstance(   0,"!       IMPORTS:");
    result[2] = PadText.getInstance(   0,"!         Work View imp_error iyy1_component (Transient, Mandatory, Import only)");
    result[3] = PadText.getInstance(   0,"!           severity_code");
    result[4] = PadText.getInstance(   0,"!           rollback_indicator");
    result[5] = PadText.getInstance(   0,"!           origin_servid");
    result[6] = PadText.getInstance(   0,"!           context_string");
    result[7] = PadText.getInstance(   0,"!           return_code");
    result[8] = PadText.getInstance(   0,"!           reason_code");
    result[9] = PadText.getInstance(   0,"!           checksum");
    result[10] = PadText.getInstance(   0,"!         Work View imp_reference iyy1_server_data (Transient, Mandatory, Import only)");
    result[11] = PadText.getInstance(   0,"!           userid");
    result[12] = PadText.getInstance(   0,"!           reference_id");
    result[13] = PadText.getInstance(   0,"!         Entity View imp child (Transient, Mandatory, Import only)");
    result[14] = PadText.getInstance(   0,"!           cinstance_id");
    result[15] = PadText.getInstance(   0,"!           cparent_pkey_attr_text");
    result[16] = PadText.getInstance(   0,"!           ckey_attr_num");
    result[17] = PadText.getInstance(   0,"!           csearch_attr_text");
    result[18] = PadText.getInstance(   0,"!           cother_attr_text");
    result[19] = PadText.getInstance(   0,"!       EXPORTS:");
    result[20] = PadText.getInstance(   0,"!         Entity View exp child (Transient, Export only)");
    result[21] = PadText.getInstance(   0,"!           creference_id");
    result[22] = PadText.getInstance(   0,"!         Work View exp_error iyy1_component (Transient, Export only)");
    result[23] = PadText.getInstance(   0,"!           severity_code");
    result[24] = PadText.getInstance(   0,"!           rollback_indicator");
    result[25] = PadText.getInstance(   0,"!           origin_servid");
    result[26] = PadText.getInstance(   0,"!           context_string");
    result[27] = PadText.getInstance(   0,"!           return_code");
    result[28] = PadText.getInstance(   0,"!           reason_code");
    result[29] = PadText.getInstance(   0,"!           checksum");
    result[30] = PadText.getInstance(   0,"!       ENTITY ACTIONS:");
    result[31] = PadText.getInstance(   0,"!         Entity View parent");
    result[32] = PadText.getInstance(   0,"!           pkey_attr_text");
    result[33] = PadText.getInstance(   0,"!         Entity View child");
    result[34] = PadText.getInstance(   0,"!           cinstance_id");
    result[35] = PadText.getInstance(   0,"!           creference_id");
    result[36] = PadText.getInstance(   0,"!           ccreate_user_id");
    result[37] = PadText.getInstance(   0,"!           cupdate_user_id");
    result[38] = PadText.getInstance(   0,"!           cparent_pkey_attr_text");
    result[39] = PadText.getInstance(   0,"!           ckey_attr_num");
    result[40] = PadText.getInstance(   0,"!           csearch_attr_text");
    result[41] = PadText.getInstance(   0,"!           cother_attr_text");
    result[42] = PadText.getInstance(   0,"!       LOCALS:");
    result[43] = PadText.getInstance(   0,"!         Work View loc dont_change_return_codes");
    result[44] = PadText.getInstance(   0,"!           1_ok");
    result[45] = PadText.getInstance(   0,"!           n40_obj_create_failed");
    result[46] = PadText.getInstance(   0,"!         Work View loc dont_change_reason_codes");
    result[47] = PadText.getInstance(   0,"!           1_default");
    result[48] = PadText.getInstance(   0,"!           122_child_already_exist");
    result[49] = PadText.getInstance(   0,"!           123_child_attr_value_invalid");
    result[50] = PadText.getInstance(   0,"!           131_childs_parent_not_found");
    result[51] = PadText.getInstance(   0,"!");
    result[52] = PadText.getInstance(   0,"!     PROCEDURE STATEMENTS");
    result[53] = PadText.getInstance(   0,"!");
    result[54] = PadText.getInstance(   1,"!  NOTE: ");
    result[55] = PadText.getInstance(   1,"!  See the description for the purpose");
    result[56] = PadText.getInstance(   1,"!  ");
    result[57] = PadText.getInstance(   2,"!  NOTE: ");
    result[58] = PadText.getInstance(   2,"!  RELEASE HISTORY");
    result[59] = PadText.getInstance(   2,"!  01_00 23-02-1998 New release");
    result[60] = PadText.getInstance(   2,"!  ");
    result[61] = PadText.getInstance(   3,"!  MOVE imp_error iyy1_component TO exp_error iyy1_component");
    result[62] = PadText.getInstance(   4,"!   ");
    result[63] = PadText.getInstance(   5,"!  NOTE: ");
    result[64] = PadText.getInstance(   5,"!  ****************************************************************");
    result[65] = PadText.getInstance(   5,"!  The used ReturnCode/ReasonCode values");
    result[66] = PadText.getInstance(   5,"!  ");
    result[67] = PadText.getInstance(   6,"!  NOTE: ");
    result[68] = PadText.getInstance(   6,"!  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    result[69] = PadText.getInstance(   6,"!  Set the return and reason codes below");
    result[70] = PadText.getInstance(   6,"!  ");
    result[71] = PadText.getInstance(   7,"!  SET loc dont_change_return_codes 1_ok TO 1 ");
    result[72] = PadText.getInstance(   8,"!  SET loc dont_change_return_codes n40_obj_create_failed TO -40 ");
    result[73] = PadText.getInstance(   9,"!   ");
    result[74] = PadText.getInstance(  10,"!  SET loc dont_change_reason_codes 1_default TO 1 ");
    result[75] = PadText.getInstance(  11,"!  SET loc dont_change_reason_codes 122_child_already_exist TO 122 ");
    result[76] = PadText.getInstance(  12,"!  SET loc dont_change_reason_codes 123_child_attr_value_invalid TO 123 ");
    result[77] = PadText.getInstance(  13,"!  SET loc dont_change_reason_codes 131_childs_parent_not_found TO 131 ");
    result[78] = PadText.getInstance(  14,"!   ");
    result[79] = PadText.getInstance(  15,"!  NOTE: ");
    result[80] = PadText.getInstance(  15,"!  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    result[81] = PadText.getInstance(  15,"!  If the operation depends on 'parent' data type");
    result[82] = PadText.getInstance(  15,"!  protect the 'READ parent' operation below, delete if not.");
    result[83] = PadText.getInstance(  15,"!  ");
    result[84] = PadText.getInstance(  16,"!  NOTE: ");
    result[85] = PadText.getInstance(  16,"!  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    result[86] = PadText.getInstance(  16,"!  Choose Control of Cursor Generation property as \"Select only\".");
    result[87] = PadText.getInstance(  16,"!  ");
    result[88] = PadText.getInstance(  17,"!  +=>READ (Select Only) parent");
    result[89] = PadText.getInstance(  17,"!  !        WHERE DESIRED parent pkey_attr_text = imp child cparent_pkey_attr_text");
    result[90] = PadText.getInstance(  17, 1, "!  +> WHEN successful");
    result[91] = PadText.getInstance(  18,"!  !  +->CREATE child");
    result[92] = PadText.getInstance(  19,"!  !  !  SET cinstance_id TO imp child cinstance_id ");
    result[93] = PadText.getInstance(  20,"!  !  !  SET creference_id TO imp_reference iyy1_server_data reference_id ");
    result[94] = PadText.getInstance(  21,"!  !  !  SET ccreate_user_id TO imp_reference iyy1_server_data userid ");
    result[95] = PadText.getInstance(  22,"!  !  !  SET cupdate_user_id TO imp_reference iyy1_server_data userid ");
    result[96] = PadText.getInstance(  23,"!  !  !  SET cparent_pkey_attr_text TO imp child cparent_pkey_attr_text ");
    result[97] = PadText.getInstance(  24,"!  !  !  SET ckey_attr_num TO imp child ckey_attr_num ");
    result[98] = PadText.getInstance(  25,"!  !  !  SET csearch_attr_text TO imp child csearch_attr_text ");
    result[99] = PadText.getInstance(  26,"!  !  !  SET cother_attr_text TO imp child cother_attr_text ");
    result[100] = PadText.getInstance(  18, 1, "!  !  +> WHEN successful");
    result[101] = PadText.getInstance(  27,"!  !  !  MOVE  child TO exp child");
    result[102] = PadText.getInstance(  18, 2, "!  !  +> WHEN already exists");
    result[103] = PadText.getInstance(  28,
      "!  !  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n40_obj_create_failed ");
    result[104] = PadText.getInstance(  29,
      "!  !  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 122_child_already_exist ");
    result[105] = PadText.getInstance(  18, 3, "!  !  +> WHEN permitted value violation");
    result[106] = PadText.getInstance(  30,
      "!  !  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n40_obj_create_failed ");
    result[107] = PadText.getInstance(  31,
      "!  !  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 123_child_attr_value_invalid ");
    result[108] = PadText.getInstance(  18,"!  !  +--");
    result[109] = PadText.getInstance(  17, 2, "!  +> WHEN not found");
    result[110] = PadText.getInstance(  32,
      "!  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n40_obj_create_failed ");
    result[111] = PadText.getInstance(  33,
      "!  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 131_childs_parent_not_found ");
    result[112] = PadText.getInstance(  17,"!  +--");
    result[113] = PadText.getInstance(   0,"+---");
    result[114] = PadText.getInstance(PadText.LASTLINE,"************************* BOTTOM OF DATA *************************");
    return result;
  }
  final static int PADTEXT_SIZE = 115;
  //       +->   DYYY0211_CHILD_CREATE             07/05/2023  15:08
  //       !       IMPORTS:
  //       !         Work View imp_error iyy1_component (Transient, Mandatory, Import only)
  //       !           severity_code
  //       !           rollback_indicator
  //       !           origin_servid
  //       !           context_string
  //       !           return_code
  //       !           reason_code
  //       !           checksum
  //       !         Work View imp_reference iyy1_server_data (Transient, Mandatory, Import only)
  //       !           userid
  //       !           reference_id
  //       !         Entity View imp child (Transient, Mandatory, Import only)
  //       !           cinstance_id
  //       !           cparent_pkey_attr_text
  //       !           ckey_attr_num
  //       !           csearch_attr_text
  //       !           cother_attr_text
  //       !       EXPORTS:
  //       !         Entity View exp child (Transient, Export only)
  //       !           creference_id
  //       !         Work View exp_error iyy1_component (Transient, Export only)
  //       !           severity_code
  //       !           rollback_indicator
  //       !           origin_servid
  //       !           context_string
  //       !           return_code
  //       !           reason_code
  //       !           checksum
  //       !       ENTITY ACTIONS:
  //       !         Entity View parent
  //       !           pkey_attr_text
  //       !         Entity View child
  //       !           cinstance_id
  //       !           creference_id
  //       !           ccreate_user_id
  //       !           cupdate_user_id
  //       !           cparent_pkey_attr_text
  //       !           ckey_attr_num
  //       !           csearch_attr_text
  //       !           cother_attr_text
  //       !       LOCALS:
  //       !         Work View loc dont_change_return_codes
  //       !           1_ok
  //       !           n40_obj_create_failed
  //       !         Work View loc dont_change_reason_codes
  //       !           1_default
  //       !           122_child_already_exist
  //       !           123_child_attr_value_invalid
  //       !           131_childs_parent_not_found
  //       !
  //       !     PROCEDURE STATEMENTS
  //       !
  //     1 !  NOTE: 
  //     1 !  See the description for the purpose
  //     1 !  
  //     2 !  NOTE: 
  //     2 !  RELEASE HISTORY
  //     2 !  01_00 23-02-1998 New release
  //     2 !  
  //     3 !  MOVE imp_error iyy1_component TO exp_error iyy1_component
  //     4 !   
  //     5 !  NOTE: 
  //     5 !  ****************************************************************
  //     5 !  The used ReturnCode/ReasonCode values
  //     5 !  
  //     6 !  NOTE: 
  //     6 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  //     6 !  Set the return and reason codes below
  //     6 !  
  //     7 !  SET loc dont_change_return_codes 1_ok TO 1 
  //     8 !  SET loc dont_change_return_codes n40_obj_create_failed TO -40 
  //     9 !   
  //    10 !  SET loc dont_change_reason_codes 1_default TO 1 
  //    11 !  SET loc dont_change_reason_codes 122_child_already_exist TO 122 
  //    12 !  SET loc dont_change_reason_codes 123_child_attr_value_invalid TO 123 
  //    13 !  SET loc dont_change_reason_codes 131_childs_parent_not_found TO 131 
  //    14 !   
  //    15 !  NOTE: 
  //    15 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  //    15 !  If the operation depends on 'parent' data type
  //    15 !  protect the 'READ parent' operation below, delete if not.
  //    15 !  
  //    16 !  NOTE: 
  //    16 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  //    16 !  Choose Control of Cursor Generation property as "Select only".
  //    16 !  
  //    17 !  +=>READ (Select Only) parent
  //    17 !  !        WHERE DESIRED parent pkey_attr_text = imp child cparent_pkey_attr_text
  //    17 !  +> WHEN successful
  //    18 !  !  +->CREATE child
  //    19 !  !  !  SET cinstance_id TO imp child cinstance_id 
  //    20 !  !  !  SET creference_id TO imp_reference iyy1_server_data reference_id 
  //    21 !  !  !  SET ccreate_user_id TO imp_reference iyy1_server_data userid 
  //    22 !  !  !  SET cupdate_user_id TO imp_reference iyy1_server_data userid 
  //    23 !  !  !  SET cparent_pkey_attr_text TO imp child cparent_pkey_attr_text 
  //    24 !  !  !  SET ckey_attr_num TO imp child ckey_attr_num 
  //    25 !  !  !  SET csearch_attr_text TO imp child csearch_attr_text 
  //    26 !  !  !  SET cother_attr_text TO imp child cother_attr_text 
  //    18 !  !  +> WHEN successful
  //    27 !  !  !  MOVE  child TO exp child
  //    18 !  !  +> WHEN already exists
  //    28 !  !  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n40_obj_create_failed 
  //    29 !  !  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 122_child_already_exist 
  //    18 !  !  +> WHEN permitted value violation
  //    30 !  !  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n40_obj_create_failed 
  //    31 !  !  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 123_child_attr_value_invalid 
  //    18 !  !  +--
  //    17 !  +> WHEN not found
  //    32 !  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n40_obj_create_failed 
  //    33 !  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 131_childs_parent_not_found 
  //    17 !  +--
  //       +---
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  //  CONSTRUCTOR FOR THE CLASS       
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  public DYYY0211()
  {
    iefCGenRlse = "CA Gen 8.6";
    ssCopyright = "Copyright (c) 2023 CA Technologies. All rights reserved.";
    iefCGenDate = "2023/07/05";
    iefCGenTime = "15:08:50";
    iefCGenEncy = "9.2.A6";
    iefCGenUserId = "HakanBal";
    iefCGenModel = "N8I_ORT_YYY_0112_TEMPLATE";
    iefCGenSubset = "ALL";
    iefCGenName = "DYYY0211_CHILD_CREATE";
    nestingLevel = 0;
    valChkDeadlockTimeout = false;
    valChkDBError = false;
  }
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // ACTION BLOCK FUNCTION DECLARATIONS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  public void DYYY0211( Object in_runtime_parm1, 
  	IRuntimePStepContext in_runtime_parm2, 
  	GlobData in_globdata, 
  	DYYY0211_IA import_view, 
  	DYYY0211_OA export_view )
  {
    iefRuntimeParm1 = in_runtime_parm1;
    iefRuntimeParm2 = in_runtime_parm2;
    globdata = in_globdata;
    w_ia = import_view;
    w_oa = export_view;
    _DYYY0211();
  }
  
  private void _DYYY0211()
  {
    
    f_22020305_localAlloc("DYYY0211_CHILD_CREATE");
    if ( globdata.getErrorData().getLastStatus() == ErrorData.IEF_ALLOCATION_ERROR_FL_LS )
    	return;
    
    ++(nestingLevel);
    try {
      f_22020305_init();
      f_22020305();
    } catch( ABException e ) {
    } finally {
      --(nestingLevel);
    }
    String last_stmt_num_saved = globdata.getStateData().getLastStatementNumber();
    globdata.getStateData().setLastStatementNumber( "9999999999" );
    try {
      f_0_trace();
    } catch( ABException e ) {
    }
    globdata.getStateData().setLastStatementNumber( last_stmt_num_saved );
  }
  public void f_22020305()
  	throws ABException
  {
    func_0022020305_esc_flag = false;
    globdata.getStateData().setCurrentABId( "0022020305" );
    globdata.getStateData().setCurrentABName( "DYYY0211_CHILD_CREATE" );
    padview_init();
    globdata.getStateData().setLastStatementNumber( "0000000000" );
    f_0_trace();
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    See the description for the purpose                             
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    RELEASE HISTORY                                                 
    //    01_00 23-02-1998 New release                                    
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    globdata.getStateData().setLastStatementNumber( "0000000003" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.valueOf(w_ia.ImpErrorIyy1ComponentSeverityCode, (short)1);
      w_oa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.valueOf(w_ia.ImpErrorIyy1ComponentRollbackIndicator, (short)1);
      w_oa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.valueOf(w_ia.ImpErrorIyy1ComponentOriginServid);
      w_oa.ExpErrorIyy1ComponentContextString = StringAttr.valueOf(w_ia.ImpErrorIyy1ComponentContextString, (short)512);
      w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf(w_ia.ImpErrorIyy1ComponentReturnCode);
      w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf(w_ia.ImpErrorIyy1ComponentReasonCode);
      w_oa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.valueOf(w_ia.ImpErrorIyy1ComponentChecksum, (short)15);
    }
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    **************************************************************  
    //    **                                                              
    //    The used ReturnCode/ReasonCode values                           
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
    //    !!                                                              
    //    Set the return and reason codes below                           
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    globdata.getStateData().setLastStatementNumber( "0000000007" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocDontChangeReturnCodesQ1Ok = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(1, 0, TIRD2DEC.ROUND_NONE, 5));
    }
    globdata.getStateData().setLastStatementNumber( "0000000008" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocDontChangeReturnCodesN40ObjCreateFailed = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(-40, 0, TIRD2DEC.ROUND_NONE, 5));
    }
    
    globdata.getStateData().setLastStatementNumber( "0000000010" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocDontChangeReasonCodesQ1Default = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(1, 0, TIRD2DEC.ROUND_NONE, 5));
    }
    globdata.getStateData().setLastStatementNumber( "0000000011" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocDontChangeReasonCodesQ122ChildAlreadyExist = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(122, 0, TIRD2DEC.ROUND_NONE, 5));
    }
    globdata.getStateData().setLastStatementNumber( "0000000012" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocDontChangeReasonCodesQ123ChildAttrValueInvalid = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(123, 0, TIRD2DEC.ROUND_NONE, 5)
        );
    }
    globdata.getStateData().setLastStatementNumber( "0000000013" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocDontChangeReasonCodesQ131ChildsParentNotFound = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(131, 0, TIRD2DEC.ROUND_NONE, 5))
        ;
    }
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
    //    !!!!!!!!!!!!!!                                                  
    //    If the operation depends on 'parent' data type                  
    //    protect the 'READ parent' operation below, delete if not.       
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
    //    !!!!!!!!!!!!!!!!!!!!!                                           
    //    Choose Control of Cursor Generation property as                 
    //    "Select only".                                                  
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    globdata.getStateData().setLastStatementNumber( "0000000017" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      f_29360174();
      if ( sl_29360174.equals( ErrorData.SUCCEEDS_FL_LS ) == true )
      {
        globdata.getStateData().setLastSubStatementNumber( "1" );
        f_0_trace();
        {
          f_20971913();
        }
      }
      else if ( sl_29360174.equals( ErrorData.NOT_FOUND_FL_LS ) == true )
      {
        globdata.getStateData().setLastSubStatementNumber( "2" );
        f_0_trace();
        {
          globdata.getStateData().setLastStatementNumber( "0000000032" );
          f_0_trace();
          if ( trace_ret_code != 8 )
          {
            w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
              w_la.LocDontChangeReturnCodesN40ObjCreateFailed, 0, TIRD2DEC.ROUND_NONE, 5));
          }
          globdata.getStateData().setLastStatementNumber( "0000000033" );
          f_0_trace();
          if ( trace_ret_code != 8 )
          {
            w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
              w_la.LocDontChangeReasonCodesQ131ChildsParentNotFound, 0, TIRD2DEC.ROUND_NONE, 5));
          }
        }
      }
      else {
        globdata.getErrorData().setStatus( ErrorData.FATAL_ERROR_FL_LS );
        globdata.getErrorData().setLastStatus( sl_29360174 );
        globdata.getErrorData().setErrorEncounteredSW( ErrorData.ERROR_FOUND_SW );
        throw new ABException();
      }
    }
  }
  
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // SUBORDINATE FUNCTIONS
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  
  public void f_20971913()
  	throws ABException
  {
    func_0020971913_esc_flag = false;
    globdata.getStateData().setLastStatementNumber( "0000000018" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_ea.ChildCinstanceId = TimestampAttr.valueOf(w_ia.ImpChildCinstanceId);
      w_ea.ChildCreferenceId = TimestampAttr.valueOf(w_ia.ImpReferenceIyy1ServerDataReferenceId);
      w_ea.ChildCcreateUserId = FixedStringAttr.valueOf(w_ia.ImpReferenceIyy1ServerDataUserid, (short)8);
      w_ea.ChildCupdateUserId = FixedStringAttr.valueOf(w_ia.ImpReferenceIyy1ServerDataUserid, (short)8);
      w_ea.ChildCparentPkeyAttrText = FixedStringAttr.valueOf(w_ia.ImpChildCparentPkeyAttrText, (short)5);
      w_ea.ChildCkeyAttrNum = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) w_ia.ImpChildCkeyAttrNum, 0, TIRD2DEC.ROUND_NONE, 6));
      w_ea.ChildCsearchAttrText = FixedStringAttr.valueOf(w_ia.ImpChildCsearchAttrText, (short)25);
      w_ea.ChildCotherAttrText = FixedStringAttr.valueOf(w_ia.ImpChildCotherAttrText, (short)25);
      valChkDeadlockTimeout = false;
      valChkDBError = false;
      f_26214451();
      if ( cr_26214451.equals( ErrorData.SUCCEEDS_FL_LS ) == true )
      {
        globdata.getStateData().setLastSubStatementNumber( "1" );
        f_0_trace();
        {
          globdata.getStateData().setLastStatementNumber( "0000000027" );
          f_0_trace();
          if ( trace_ret_code != 8 )
          {
            w_oa.ExpChildCreferenceId = TimestampAttr.valueOf(w_ea.ChildCreferenceId);
          }
        }
      }
      else if ( cr_26214451.equals( ErrorData.DUPLICATE_FOUND_FL_LS ) == true )
      {
        globdata.getStateData().setLastSubStatementNumber( "2" );
        f_0_trace();
        {
          globdata.getStateData().setLastStatementNumber( "0000000028" );
          f_0_trace();
          if ( trace_ret_code != 8 )
          {
            w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
              w_la.LocDontChangeReturnCodesN40ObjCreateFailed, 0, TIRD2DEC.ROUND_NONE, 5));
          }
          globdata.getStateData().setLastStatementNumber( "0000000029" );
          f_0_trace();
          if ( trace_ret_code != 8 )
          {
            w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
              w_la.LocDontChangeReasonCodesQ122ChildAlreadyExist, 0, TIRD2DEC.ROUND_NONE, 5));
          }
        }
      }
      else if ( cr_26214451.equals( ErrorData.INVALID_DATAB_PERM_FL_LS ) == true )
      {
        globdata.getStateData().setLastSubStatementNumber( "3" );
        f_0_trace();
        {
          globdata.getStateData().setLastStatementNumber( "0000000030" );
          f_0_trace();
          if ( trace_ret_code != 8 )
          {
            w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
              w_la.LocDontChangeReturnCodesN40ObjCreateFailed, 0, TIRD2DEC.ROUND_NONE, 5));
          }
          globdata.getStateData().setLastStatementNumber( "0000000031" );
          f_0_trace();
          if ( trace_ret_code != 8 )
          {
            w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
              w_la.LocDontChangeReasonCodesQ123ChildAttrValueInvalid, 0, TIRD2DEC.ROUND_NONE, 5));
          }
        }
      }
      else {
        globdata.getErrorData().setStatus( ErrorData.DB_ERROR_FL_LS );
        globdata.getErrorData().setErrorEncounteredSW( ErrorData.ERROR_FOUND_SW );
        throw new ABException();
      }
    }
  }
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // INITIALIZATION UTILITY FUNCTIONS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  public void f_22020305_localAlloc(String abname)
  {
    // Request localview allocation 
    w_la = (gen.ort.yyy.DYYY0211_LA)(iefRuntimeParm2.getInstance("gen.ort.yyy.DYYY0211_LA"));
    if ( w_la == null )
    {
      globdata.getStateData().setCurrentABId( "0022020305" );
      globdata.getStateData().setCurrentABName( abname );
      globdata.getErrorData().setErrorEncounteredSW( ErrorData.ERROR_FOUND_SW );
      globdata.getErrorData().setLastStatus( ErrorData.IEF_ALLOCATION_ERROR_FL_LS );
    }
  }
  
  public void f_22020305_init()
  	throws ABException
  {
    
    pkey_attr_001EF = SPACES;
    pkey_attr_002EN = SPACES;
    
    ckey_attr_003EF = 0;
    ckey_attr_004EN = 0;
    csearch_attr_005EF = SPACES;
    csearch_attr_006EN = SPACES;
    cother_attr_007EF = SPACES;
    cother_attr_008EN = SPACES;
    ccreate_userid_009EF = SPACES;
    ccreate_userid_010EN = SPACES;
    cupdate_userid_011EF = SPACES;
    cupdate_userid_012EN = SPACES;
    cinstance_id_013EF = TIRVW2S.TIRVW2S(globdata, "IEFDB", "00010101000000000000");
    cinstance_id_014EN = TIRVW2S.TIRVW2S(globdata, "IEFDB", "00010101000000000000");
    creference_id_015EF = TIRVW2S.TIRVW2S(globdata, "IEFDB", "00010101000000000000");
    creference_id_016EN = TIRVW2S.TIRVW2S(globdata, "IEFDB", "00010101000000000000");
    cparent_pkey_attr_017EF = SPACES;
    cparent_pkey_attr_018EN = SPACES;
    if ( nestingLevel < 2 )
    {
      w_la.reset();
    }
    w_ea.reset();
    w_oa.ExpChildCreferenceId = "00000000000000000000";
    w_oa.ExpErrorIyy1ComponentSeverityCode = " ";
    w_oa.ExpErrorIyy1ComponentRollbackIndicator = " ";
    w_oa.ExpErrorIyy1ComponentOriginServid = 0.0;
    w_oa.ExpErrorIyy1ComponentContextString = "";
    w_oa.ExpErrorIyy1ComponentReturnCode = 0;
    w_oa.ExpErrorIyy1ComponentReasonCode = 0;
    w_oa.ExpErrorIyy1ComponentChecksum = "               ";
    Parent_es = ABBase.EV_UNUSABLE;
    Parent_lk = ABBase.EVW_UNLOCKED;
    Child_es = ABBase.EV_UNUSABLE;
    Child_lk = ABBase.EVW_UNLOCKED;
    w_ea.ChildCinstanceId = "00000000000000000000";
    w_ea.ChildCreferenceId = "00000000000000000000";
  }
  
  public void f_0_trace()
  	throws ABException
  {
    trace_ret_code = TIRTRCE.TIRTRCE(iefRuntimeParm1, iefRuntimeParm2, globdata, padtext, padview);
    if ( trace_ret_code == 20 )
    {
      throw new ABException();
    }
  }
  
  public void padview_init()
  {
padview[0] = PadView.getInstance("IMPORT                          ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_ia, 
      "w_ia");
    padview[1] = PadView.getInstance("IMP_ERROR                       ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ia, 
      null);
    padview[2] = PadView.getInstance("IYY1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, w_ia,
       null);
    padview[3] = PadView.getInstance("SEVERITY_CODE                   ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpErrorIyy1ComponentSeverityCode");
    padview[4] = PadView.getInstance("ROLLBACK_INDICATOR              ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpErrorIyy1ComponentRollbackIndicator");
    padview[5] = PadView.getInstance("ORIGIN_SERVID                   ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_ia, "ImpErrorIyy1ComponentOriginServid");
    padview[6] = PadView.getInstance("CONTEXT_STRING                  ", 512, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_ia, "ImpErrorIyy1ComponentContextString");
    padview[7] = PadView.getInstance("RETURN_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_NUMERIC,
       w_ia, "ImpErrorIyy1ComponentReturnCode");
    padview[8] = PadView.getInstance("REASON_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_NUMERIC,
       w_ia, "ImpErrorIyy1ComponentReasonCode");
    padview[9] = PadView.getInstance("CHECKSUM                        ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpErrorIyy1ComponentChecksum");
    padview[10] = PadView.getInstance("IMP_REFERENCE                   ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ia, 
      null);
    padview[11] = PadView.getInstance("IYY1_SERVER_DATA                ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_ia, null);
    padview[12] = PadView.getInstance("USERID                          ", 8, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpReferenceIyy1ServerDataUserid");
    padview[13] = PadView.getInstance("REFERENCE_ID                    ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_ia, "ImpReferenceIyy1ServerDataReferenceId");
    padview[14] = PadView.getInstance("IMP                             ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ia, 
      null);
    padview[15] = PadView.getInstance("CHILD                           ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_ia, null);
    padview[16] = PadView.getInstance("CINSTANCE_ID                    ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_ia, "ImpChildCinstanceId");
    padview[17] = PadView.getInstance("CPARENT_PKEY_ATTR_TEXT          ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpChildCparentPkeyAttrText");
    padview[18] = PadView.getInstance("CKEY_ATTR_NUM                   ", 6, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_ia, "ImpChildCkeyAttrNum");
    padview[19] = PadView.getInstance("CSEARCH_ATTR_TEXT               ", 25, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpChildCsearchAttrText");
    padview[20] = PadView.getInstance("COTHER_ATTR_TEXT                ", 25, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpChildCotherAttrText");
    padview[21] = PadView.getInstance("EXPORT                          ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_oa, 
      "w_oa");
    padview[22] = PadView.getInstance("EXP                             ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_oa, 
      null);
    padview[23] = PadView.getInstance("CHILD                           ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_oa, null);
    padview[24] = PadView.getInstance("CREFERENCE_ID                   ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_oa, "ExpChildCreferenceId");
    padview[25] = PadView.getInstance("EXP_ERROR                       ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_oa, 
      null);
    padview[26] = PadView.getInstance("IYY1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_oa, null);
    padview[27] = PadView.getInstance("SEVERITY_CODE                   ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentSeverityCode");
    padview[28] = PadView.getInstance("ROLLBACK_INDICATOR              ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentRollbackIndicator");
    padview[29] = PadView.getInstance("ORIGIN_SERVID                   ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentOriginServid");
    padview[30] = PadView.getInstance("CONTEXT_STRING                  ", 512, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_oa, "ExpErrorIyy1ComponentContextString");
    padview[31] = PadView.getInstance("RETURN_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentReturnCode");
    padview[32] = PadView.getInstance("REASON_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentReasonCode");
    padview[33] = PadView.getInstance("CHECKSUM                        ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentChecksum");
    padview[34] = PadView.getInstance("ENTITY                          ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_ea, 
      "w_ea");
    padview[35] = PadView.getInstance("                                ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ea, 
      null);
    padview[36] = PadView.getInstance("PARENT                          ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_ea, null);
    padview[37] = PadView.getInstance("PKEY_ATTR_TEXT                  ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ea, "ParentPkeyAttrText");
    padview[38] = PadView.getInstance("                                ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ea, 
      null);
    padview[39] = PadView.getInstance("CHILD                           ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_ea, null);
    padview[40] = PadView.getInstance("CINSTANCE_ID                    ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_ea, "ChildCinstanceId");
    padview[41] = PadView.getInstance("CREFERENCE_ID                   ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_ea, "ChildCreferenceId");
    padview[42] = PadView.getInstance("CCREATE_USER_ID                 ", 8, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ea, "ChildCcreateUserId");
    padview[43] = PadView.getInstance("CUPDATE_USER_ID                 ", 8, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ea, "ChildCupdateUserId");
    padview[44] = PadView.getInstance("CPARENT_PKEY_ATTR_TEXT          ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ea, "ChildCparentPkeyAttrText");
    padview[45] = PadView.getInstance("CKEY_ATTR_NUM                   ", 6, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_ea, "ChildCkeyAttrNum");
    padview[46] = PadView.getInstance("CSEARCH_ATTR_TEXT               ", 25, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ea, "ChildCsearchAttrText");
    padview[47] = PadView.getInstance("COTHER_ATTR_TEXT                ", 25, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ea, "ChildCotherAttrText");
    padview[48] = PadView.getInstance("LOCAL                           ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_la, 
      "w_la");
    padview[49] = PadView.getInstance("LOC                             ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[50] = PadView.getInstance("DONT_CHANGE_RETURN_CODES        ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[51] = PadView.getInstance("1_OK                            ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReturnCodesQ1Ok");
    padview[52] = PadView.getInstance("N40_OBJ_CREATE_FAILED           ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReturnCodesN40ObjCreateFailed");
    padview[53] = PadView.getInstance("LOC                             ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[54] = PadView.getInstance("DONT_CHANGE_REASON_CODES        ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[55] = PadView.getInstance("1_DEFAULT                       ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReasonCodesQ1Default");
    padview[56] = PadView.getInstance("122_CHILD_ALREADY_EXIST         ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReasonCodesQ122ChildAlreadyExist");
    padview[57] = PadView.getInstance("123_CHILD_ATTR_VALUE_INVALID    ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReasonCodesQ123ChildAttrValueInvalid");
    padview[58] = PadView.getInstance("131_CHILDS_PARENT_NOT_FOUND     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReasonCodesQ131ChildsParentNotFound");
    padview[59] = PadView.getInstance("******** BOTTOM OF DATA ********", 0, 0, 0, (short)0, PadView.VT_END, PadView.DT_NONE, w_la, 
      null);
  }
  public void f_29360174()
  	throws ABException
  {
    sl_29360174 = ErrorData.SUCCEEDS_FL_LS;
    Parent_001cd = ABBase.PV_SELECT;
    Parent_lk = ABBase.EVW_UNLOCKED;
    f_29360174_moveb();
    
    if ( sl_29360174.equals( ErrorData.SUCCEEDS_FL_LS ) == true )
    {
      valChkDeadlockTimeout = false;
      valChkDBError = false;
      Parent_es = ABBase.EV_USABLE;
      sqlException = null;
      try {
        SQLStatement.setLength(0);
        SQLStatement.append("SELECT ");
        SQLStatement.append("VDVYYYP01.`PKEY_ATTR`");
        SQLStatement.append(" FROM ");
        SQLStatement.append("`VDVYYYP` VDVYYYP01");
        SQLStatement.append(" WHERE ");
        SQLStatement.append("(");
        SQLStatement.append("VDVYYYP01.`PKEY_ATTR` = ?");
        SQLStatement.append(")");
        hstmt_0037931683_1 = globdata.getDBMSData().getDBMSManager().getStatement(globdata, iefRuntimeParm2, "IEFDB", 
          SQLStatement.toString());
        globdata.getDBMSData().getDBMSManager().bindParameterString("IEFDB", hstmt_0037931683_1, 1, CparentPkeyAttrText_001TP);
        hstmt_0037931683_1.execute();
        hstmt_0037931683_1_rs = hstmt_0037931683_1.getResultSet();
        if ( hstmt_0037931683_1_rs.next() == false )
        {
          throw new SQLException("No data found");
        }
        pkey_attr_001EF = globdata.getDBMSData().getDBMSManager().getStringFromResultSet("IEFDB", hstmt_0037931683_1_rs, 1);
        if ( hstmt_0037931683_1_rs.next() == true )
        {
          throw new SQLException("READ statement with SELECT ONLY property returned more than 1 row");
        }
      } catch( SQLException e ) {
        sqlException = e;
      }
      if ( globdata.getDBMSData().getDBMSManager().wasSuccessful(sqlException) )
      {
        f_29360174_movea();
        if ( sl_29360174.equals( ErrorData.SUCCEEDS_FL_LS ) )
        {
          Parent_es = ABBase.EV_USABLE;
        }
        else {
          Parent_es = ABBase.EV_UNUSABLE;
        }
        try {
          if ( hstmt_0037931683_1_rs != null )
          {
            hstmt_0037931683_1_rs.close();
            hstmt_0037931683_1_rs = null;
          }
          if ( hstmt_0037931683_1 != null )
          {
            hstmt_0037931683_1.close();
            hstmt_0037931683_1 = null;
          }
        } catch( SQLException e ) {
          if ( globdata.getDBMSData().getDBMSManager().wasSuccessful(e) == false )
          {
            sqlException = e;
            f_29360174_jdbc_dberror();
          }
        }
      }
      else if ( globdata.getDBMSData().getDBMSManager().wasNoDataFound(sqlException) )
      {
        sl_29360174 = ErrorData.NOT_FOUND_FL_LS;
        Parent_es = ABBase.EV_UNUSABLE;
        try {
          if ( hstmt_0037931683_1_rs != null )
          {
            hstmt_0037931683_1_rs.close();
            hstmt_0037931683_1_rs = null;
          }
          if ( hstmt_0037931683_1 != null )
          {
            hstmt_0037931683_1.close();
            hstmt_0037931683_1 = null;
          }
        } catch( SQLException e ) {
          if ( globdata.getDBMSData().getDBMSManager().wasSuccessful(e) == false )
          {
            sqlException = e;
            f_29360174_jdbc_dberror();
          }
        }
      }
      else {
        f_29360174_jdbc_dberror();
      }
    }
  }
  
  public void f_29360174_jdbc_dberror()
  	throws ABException
  {
    globdata.getErrorData().setStatus( ErrorData.FATAL_ERROR_FL_LS );
    globdata.getDBMSData().setActionId( 17 );
    globdata.getErrorData().setLastStatus( ErrorData.DB_ERROR_FL_LS );
    if ( sqlException != null )
    {
      globdata.getErrorData().setErrorMessage(sqlException);
      if ( globdata.getDBMSData().getDBMSManager().wasDeadlockOrTimeout("IEFDB", sqlException) )
      {
        globdata.getErrorData().setLastStatus( ErrorData.DB_DEADLOCK_TIMEOUT_FL_LS );
      }
    }
    sl_29360174 = globdata.getErrorData().getLastStatus();
    throw new ABException();
  }
  
  public void f_29360174_moveb()
  	throws ABException
  {
    CparentPkeyAttrText_001TP = w_ia.ImpChildCparentPkeyAttrText;
  }
  
  public void f_29360174_movea()
  	throws ABException
  {
    w_ea.ParentPkeyAttrText = FixedStringAttr.valueOf(pkey_attr_001EF, (short)5);
  }
  public void f_26214451_moveb()
  {
    cinstance_id_014EN = TIRVW2S.TIRVW2S(globdata, "IEFDB", w_ea.ChildCinstanceId);
    creference_id_016EN = TIRVW2S.TIRVW2S(globdata, "IEFDB", w_ea.ChildCreferenceId);
    ccreate_userid_010EN = w_ea.ChildCcreateUserId;
    cupdate_userid_012EN = w_ea.ChildCupdateUserId;
    cparent_pkey_attr_018EN = w_ea.ChildCparentPkeyAttrText;
    ckey_attr_004EN = w_ea.ChildCkeyAttrNum;
    csearch_attr_006EN = w_ea.ChildCsearchAttrText;
    cother_attr_008EN = w_ea.ChildCotherAttrText;
  }
  public void f_26214451()
  	throws ABException
  {
    cr_26214451 = ErrorData.SUCCEEDS_FL_LS;
    Child_003cd = ABBase.PV_CREATE;
    f_26214451_moveb();
    
    if ( cr_26214451.equals( ErrorData.SUCCEEDS_FL_LS ) == true )
    {
      sqlException = null;
      try {
        SQLStatement.setLength(0);
        SQLStatement.append("INSERT INTO ");
        SQLStatement.append("`VDVYYYC` (");
        SQLStatement.append("`CKEY_ATTR`,");
        SQLStatement.append("`CSEARCH_ATTR`,");
        SQLStatement.append("`COTHER_ATTR`,");
        SQLStatement.append("`CCREATE_USERID`,");
        SQLStatement.append("`CUPDATE_USERID`,");
        SQLStatement.append("`CINSTANCE_ID`,");
        SQLStatement.append("`CREFERENCE_ID`,");
        SQLStatement.append("`CPARENT_PKEY_ATTR`");
        SQLStatement.append(" ) VALUES ( ");
        SQLStatement.append("?,");
        SQLStatement.append("?,");
        SQLStatement.append("?,");
        SQLStatement.append("?,");
        SQLStatement.append("?,");
        SQLStatement.append("?,");
        SQLStatement.append("?,");
        SQLStatement.append("?");
        SQLStatement.append(")");
        hstmt_0026214451_1 = globdata.getDBMSData().getDBMSManager().getStatement(globdata, iefRuntimeParm2, "IEFDB", 
          SQLStatement.toString());
        hstmt_0026214451_1.setInt(1, ckey_attr_004EN);
        globdata.getDBMSData().getDBMSManager().bindParameterString("IEFDB", hstmt_0026214451_1, 2, csearch_attr_006EN);
        globdata.getDBMSData().getDBMSManager().bindParameterString("IEFDB", hstmt_0026214451_1, 3, cother_attr_008EN);
        globdata.getDBMSData().getDBMSManager().bindParameterString("IEFDB", hstmt_0026214451_1, 4, ccreate_userid_010EN);
        globdata.getDBMSData().getDBMSManager().bindParameterString("IEFDB", hstmt_0026214451_1, 5, cupdate_userid_012EN);
        hstmt_0026214451_1.setTimestamp(6, cinstance_id_014EN);
        hstmt_0026214451_1.setTimestamp(7, creference_id_016EN);
        globdata.getDBMSData().getDBMSManager().bindParameterString("IEFDB", hstmt_0026214451_1, 8, cparent_pkey_attr_018EN);
        hstmt_0026214451_1.execute();
        hstmt_0026214451_1_rs = hstmt_0026214451_1.getResultSet();
        hstmt_0026214451_1_cnt = hstmt_0026214451_1.getUpdateCount();
      } catch( SQLException e ) {
        sqlException = e;
      }
      if ( globdata.getDBMSData().getDBMSManager().wasSuccessful(sqlException) )
      {
        ckey_attr_003EF = ckey_attr_004EN;
        csearch_attr_005EF = csearch_attr_006EN;
        cother_attr_007EF = cother_attr_008EN;
        ccreate_userid_009EF = ccreate_userid_010EN;
        cupdate_userid_011EF = cupdate_userid_012EN;
        cinstance_id_013EF = cinstance_id_014EN;
        creference_id_015EF = creference_id_016EN;
        cparent_pkey_attr_017EF = cparent_pkey_attr_018EN;
        Child_es = ABBase.EV_USABLE;
        Child_lk = ABBase.EVW_LOCKED;
        try {
          if ( hstmt_0026214451_1_rs != null )
          {
            hstmt_0026214451_1_rs.close();
            hstmt_0026214451_1_rs = null;
          }
          if ( hstmt_0026214451_1 != null )
          {
            hstmt_0026214451_1.close();
            hstmt_0026214451_1 = null;
          }
        } catch( SQLException e ) {
          if ( globdata.getDBMSData().getDBMSManager().wasSuccessful(e) == false )
          {
            sqlException = e;
            f_26214451_jdbc_dberror();
          }
        }
      }
      else if ( globdata.getDBMSData().getDBMSManager().wasDuplicateFound("IEFDB", sqlException) )
      {
        cr_26214451 = ErrorData.DUPLICATE_FOUND_FL_LS;
        Child_es = ABBase.EV_UNUSABLE;
        try {
          if ( hstmt_0026214451_1_rs != null )
          {
            hstmt_0026214451_1_rs.close();
            hstmt_0026214451_1_rs = null;
          }
          if ( hstmt_0026214451_1 != null )
          {
            hstmt_0026214451_1.close();
            hstmt_0026214451_1 = null;
          }
        } catch( SQLException e ) {
          if ( globdata.getDBMSData().getDBMSManager().wasSuccessful(e) == false )
          {
            sqlException = e;
            f_26214451_jdbc_dberror();
          }
        }
      }
      else {
        f_26214451_jdbc_dberror();
      }
    }
    else if ( cr_26214451.equals( ErrorData.INVALID_DATAB_PERM_FL_LS ) == false )
    {
      globdata.getErrorData().setStatus( ErrorData.FATAL_ERROR_FL_LS );
      globdata.getDBMSData().setActionId( 18 );
      globdata.getErrorData().setLastStatus( cr_26214451 );
      throw new ABException();
    }
    return;
  }
  
  public void f_26214451_jdbc_dberror()
  	throws ABException
  {
    globdata.getErrorData().setStatus( ErrorData.FATAL_ERROR_FL_LS );
    globdata.getDBMSData().setActionId( 18 );
    globdata.getErrorData().setLastStatus( ErrorData.DB_ERROR_FL_LS );
    if ( sqlException != null )
    {
      globdata.getErrorData().setErrorMessage(sqlException);
      if ( globdata.getDBMSData().getDBMSManager().wasDeadlockOrTimeout("IEFDB", sqlException) )
      {
        globdata.getErrorData().setLastStatus( ErrorData.DB_DEADLOCK_TIMEOUT_FL_LS );
      }
    }
    cr_26214451 = globdata.getErrorData().getLastStatus();
    throw new ABException();
  }
  
}// end class


package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: DYYY0211_IA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:08:50
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF IMPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: DYYY0211_IA
 **/
public class DYYY0211_IA extends ViewBase implements IImportView, Serializable
{
  // Entity View: IMP_ERROR
  //        Type: IYY1_COMPONENT
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentSeverityCode
   **/
  public char ImpErrorIyy1ComponentSeverityCode_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentSeverityCode
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ImpErrorIyy1ComponentSeverityCode;
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentRollbackIndicator
   **/
  public char ImpErrorIyy1ComponentRollbackIndicator_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentRollbackIndicator
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ImpErrorIyy1ComponentRollbackIndicator;
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentOriginServid
   **/
  public char ImpErrorIyy1ComponentOriginServid_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentOriginServid
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double ImpErrorIyy1ComponentOriginServid;
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentContextString
   **/
  public char ImpErrorIyy1ComponentContextString_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentContextString
   * Domain: Text
   * Length: 512
   * Varying Length: Y
   **/
  public String ImpErrorIyy1ComponentContextString;
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentReturnCode
   **/
  public char ImpErrorIyy1ComponentReturnCode_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentReturnCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ImpErrorIyy1ComponentReturnCode;
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentReasonCode
   **/
  public char ImpErrorIyy1ComponentReasonCode_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentReasonCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ImpErrorIyy1ComponentReasonCode;
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentChecksum
   **/
  public char ImpErrorIyy1ComponentChecksum_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentChecksum
   * Domain: Text
   * Length: 15
   * Varying Length: N
   **/
  public String ImpErrorIyy1ComponentChecksum;
  // Entity View: IMP_REFERENCE
  //        Type: IYY1_SERVER_DATA
  /**
   * Attribute missing flag for: ImpReferenceIyy1ServerDataUserid
   **/
  public char ImpReferenceIyy1ServerDataUserid_AS;
  /**
   * Attribute for: ImpReferenceIyy1ServerDataUserid
   * Domain: Text
   * Length: 8
   * Varying Length: N
   **/
  public String ImpReferenceIyy1ServerDataUserid;
  /**
   * Attribute missing flag for: ImpReferenceIyy1ServerDataReferenceId
   **/
  public char ImpReferenceIyy1ServerDataReferenceId_AS;
  /**
   * Attribute for: ImpReferenceIyy1ServerDataReferenceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String ImpReferenceIyy1ServerDataReferenceId;
  // Entity View: IMP
  //        Type: CHILD
  /**
   * Attribute missing flag for: ImpChildCinstanceId
   **/
  public char ImpChildCinstanceId_AS;
  /**
   * Attribute for: ImpChildCinstanceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String ImpChildCinstanceId;
  /**
   * Attribute missing flag for: ImpChildCparentPkeyAttrText
   **/
  public char ImpChildCparentPkeyAttrText_AS;
  /**
   * Attribute for: ImpChildCparentPkeyAttrText
   * Domain: Text
   * Length: 5
   * Varying Length: N
   **/
  public String ImpChildCparentPkeyAttrText;
  /**
   * Attribute missing flag for: ImpChildCkeyAttrNum
   **/
  public char ImpChildCkeyAttrNum_AS;
  /**
   * Attribute for: ImpChildCkeyAttrNum
   * Domain: Number
   * Length: 6
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ImpChildCkeyAttrNum;
  /**
   * Attribute missing flag for: ImpChildCsearchAttrText
   **/
  public char ImpChildCsearchAttrText_AS;
  /**
   * Attribute for: ImpChildCsearchAttrText
   * Domain: Text
   * Length: 25
   * Varying Length: N
   **/
  public String ImpChildCsearchAttrText;
  /**
   * Attribute missing flag for: ImpChildCotherAttrText
   **/
  public char ImpChildCotherAttrText_AS;
  /**
   * Attribute for: ImpChildCotherAttrText
   * Domain: Text
   * Length: 25
   * Varying Length: N
   **/
  public String ImpChildCotherAttrText;
  /**
   * Default Constructor
   **/
  
  public DYYY0211_IA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public DYYY0211_IA(DYYY0211_IA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static DYYY0211_IA getInstance()
  {
    return new DYYY0211_IA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new DYYY0211_IA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    ImpErrorIyy1ComponentSeverityCode_AS = ' ';
    ImpErrorIyy1ComponentSeverityCode = " ";
    ImpErrorIyy1ComponentRollbackIndicator_AS = ' ';
    ImpErrorIyy1ComponentRollbackIndicator = " ";
    ImpErrorIyy1ComponentOriginServid_AS = ' ';
    ImpErrorIyy1ComponentOriginServid = 0.0;
    ImpErrorIyy1ComponentContextString_AS = ' ';
    ImpErrorIyy1ComponentContextString = "";
    ImpErrorIyy1ComponentReturnCode_AS = ' ';
    ImpErrorIyy1ComponentReturnCode = 0;
    ImpErrorIyy1ComponentReasonCode_AS = ' ';
    ImpErrorIyy1ComponentReasonCode = 0;
    ImpErrorIyy1ComponentChecksum_AS = ' ';
    ImpErrorIyy1ComponentChecksum = "               ";
    ImpReferenceIyy1ServerDataUserid_AS = ' ';
    ImpReferenceIyy1ServerDataUserid = "        ";
    ImpReferenceIyy1ServerDataReferenceId_AS = ' ';
    ImpReferenceIyy1ServerDataReferenceId = "00000000000000000000";
    ImpChildCinstanceId_AS = ' ';
    ImpChildCinstanceId = "00000000000000000000";
    ImpChildCparentPkeyAttrText_AS = ' ';
    ImpChildCparentPkeyAttrText = "     ";
    ImpChildCkeyAttrNum_AS = ' ';
    ImpChildCkeyAttrNum = 0;
    ImpChildCsearchAttrText_AS = ' ';
    ImpChildCsearchAttrText = "                         ";
    ImpChildCotherAttrText_AS = ' ';
    ImpChildCotherAttrText = "                         ";
  }
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    throw new RuntimeException("can only execute getVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    throw new RuntimeException("can only execute setFromVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IImportView orig)
  {
    this.copyFrom((DYYY0211_IA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(DYYY0211_IA orig)
  {
    ImpErrorIyy1ComponentSeverityCode_AS = orig.ImpErrorIyy1ComponentSeverityCode_AS;
    ImpErrorIyy1ComponentSeverityCode = orig.ImpErrorIyy1ComponentSeverityCode;
    ImpErrorIyy1ComponentRollbackIndicator_AS = orig.ImpErrorIyy1ComponentRollbackIndicator_AS;
    ImpErrorIyy1ComponentRollbackIndicator = orig.ImpErrorIyy1ComponentRollbackIndicator;
    ImpErrorIyy1ComponentOriginServid_AS = orig.ImpErrorIyy1ComponentOriginServid_AS;
    ImpErrorIyy1ComponentOriginServid = orig.ImpErrorIyy1ComponentOriginServid;
    ImpErrorIyy1ComponentContextString_AS = orig.ImpErrorIyy1ComponentContextString_AS;
    ImpErrorIyy1ComponentContextString = orig.ImpErrorIyy1ComponentContextString;
    ImpErrorIyy1ComponentReturnCode_AS = orig.ImpErrorIyy1ComponentReturnCode_AS;
    ImpErrorIyy1ComponentReturnCode = orig.ImpErrorIyy1ComponentReturnCode;
    ImpErrorIyy1ComponentReasonCode_AS = orig.ImpErrorIyy1ComponentReasonCode_AS;
    ImpErrorIyy1ComponentReasonCode = orig.ImpErrorIyy1ComponentReasonCode;
    ImpErrorIyy1ComponentChecksum_AS = orig.ImpErrorIyy1ComponentChecksum_AS;
    ImpErrorIyy1ComponentChecksum = orig.ImpErrorIyy1ComponentChecksum;
    ImpReferenceIyy1ServerDataUserid_AS = orig.ImpReferenceIyy1ServerDataUserid_AS;
    ImpReferenceIyy1ServerDataUserid = orig.ImpReferenceIyy1ServerDataUserid;
    ImpReferenceIyy1ServerDataReferenceId_AS = orig.ImpReferenceIyy1ServerDataReferenceId_AS;
    ImpReferenceIyy1ServerDataReferenceId = orig.ImpReferenceIyy1ServerDataReferenceId;
    ImpChildCinstanceId_AS = orig.ImpChildCinstanceId_AS;
    ImpChildCinstanceId = orig.ImpChildCinstanceId;
    ImpChildCparentPkeyAttrText_AS = orig.ImpChildCparentPkeyAttrText_AS;
    ImpChildCparentPkeyAttrText = orig.ImpChildCparentPkeyAttrText;
    ImpChildCkeyAttrNum_AS = orig.ImpChildCkeyAttrNum_AS;
    ImpChildCkeyAttrNum = orig.ImpChildCkeyAttrNum;
    ImpChildCsearchAttrText_AS = orig.ImpChildCsearchAttrText_AS;
    ImpChildCsearchAttrText = orig.ImpChildCsearchAttrText;
    ImpChildCotherAttrText_AS = orig.ImpChildCotherAttrText_AS;
    ImpChildCotherAttrText = orig.ImpChildCotherAttrText;
  }
}

package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: DYYY0211_LA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:08:50
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF LOCAL VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: DYYY0211_LA
 **/
public class DYYY0211_LA extends ViewBase implements ILocalView, Serializable
{
  // Entity View: LOC
  //        Type: DONT_CHANGE_RETURN_CODES
  /**
   * Attribute missing flag for: LocDontChangeReturnCodesQ1Ok
   **/
  public char LocDontChangeReturnCodesQ1Ok_AS;
  /**
   * Attribute for: LocDontChangeReturnCodesQ1Ok
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReturnCodesQ1Ok;
  /**
   * Attribute missing flag for: LocDontChangeReturnCodesN40ObjCreateFailed
   **/
  public char LocDontChangeReturnCodesN40ObjCreateFailed_AS;
  /**
   * Attribute for: LocDontChangeReturnCodesN40ObjCreateFailed
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReturnCodesN40ObjCreateFailed;
  // Entity View: LOC
  //        Type: DONT_CHANGE_REASON_CODES
  /**
   * Attribute missing flag for: LocDontChangeReasonCodesQ1Default
   **/
  public char LocDontChangeReasonCodesQ1Default_AS;
  /**
   * Attribute for: LocDontChangeReasonCodesQ1Default
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReasonCodesQ1Default;
  /**
   * Attribute missing flag for: LocDontChangeReasonCodesQ122ChildAlreadyExist
   **/
  public char LocDontChangeReasonCodesQ122ChildAlreadyExist_AS;
  /**
   * Attribute for: LocDontChangeReasonCodesQ122ChildAlreadyExist
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReasonCodesQ122ChildAlreadyExist;
  /**
   * Attribute missing flag for: LocDontChangeReasonCodesQ123ChildAttrValueInvalid
   **/
  public char LocDontChangeReasonCodesQ123ChildAttrValueInvalid_AS;
  /**
   * Attribute for: LocDontChangeReasonCodesQ123ChildAttrValueInvalid
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReasonCodesQ123ChildAttrValueInvalid;
  /**
   * Attribute missing flag for: LocDontChangeReasonCodesQ131ChildsParentNotFound
   **/
  public char LocDontChangeReasonCodesQ131ChildsParentNotFound_AS;
  /**
   * Attribute for: LocDontChangeReasonCodesQ131ChildsParentNotFound
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReasonCodesQ131ChildsParentNotFound;
  /**
   * Default Constructor
   **/
  
  public DYYY0211_LA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public DYYY0211_LA(DYYY0211_LA orig)
  {
    LocDontChangeReturnCodesQ1Ok_AS = orig.LocDontChangeReturnCodesQ1Ok_AS;
    LocDontChangeReturnCodesQ1Ok = orig.LocDontChangeReturnCodesQ1Ok;
    LocDontChangeReturnCodesN40ObjCreateFailed_AS = orig.LocDontChangeReturnCodesN40ObjCreateFailed_AS;
    LocDontChangeReturnCodesN40ObjCreateFailed = orig.LocDontChangeReturnCodesN40ObjCreateFailed;
    LocDontChangeReasonCodesQ1Default_AS = orig.LocDontChangeReasonCodesQ1Default_AS;
    LocDontChangeReasonCodesQ1Default = orig.LocDontChangeReasonCodesQ1Default;
    LocDontChangeReasonCodesQ122ChildAlreadyExist_AS = orig.LocDontChangeReasonCodesQ122ChildAlreadyExist_AS;
    LocDontChangeReasonCodesQ122ChildAlreadyExist = orig.LocDontChangeReasonCodesQ122ChildAlreadyExist;
    LocDontChangeReasonCodesQ123ChildAttrValueInvalid_AS = orig.LocDontChangeReasonCodesQ123ChildAttrValueInvalid_AS;
    LocDontChangeReasonCodesQ123ChildAttrValueInvalid = orig.LocDontChangeReasonCodesQ123ChildAttrValueInvalid;
    LocDontChangeReasonCodesQ131ChildsParentNotFound_AS = orig.LocDontChangeReasonCodesQ131ChildsParentNotFound_AS;
    LocDontChangeReasonCodesQ131ChildsParentNotFound = orig.LocDontChangeReasonCodesQ131ChildsParentNotFound;
  }
  /**
   * Static instance creator function
   **/
  
  public static DYYY0211_LA getInstance()
  {
    return new DYYY0211_LA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new DYYY0211_LA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    LocDontChangeReturnCodesQ1Ok_AS = ' ';
    LocDontChangeReturnCodesQ1Ok = 0;
    LocDontChangeReturnCodesN40ObjCreateFailed_AS = ' ';
    LocDontChangeReturnCodesN40ObjCreateFailed = 0;
    LocDontChangeReasonCodesQ1Default_AS = ' ';
    LocDontChangeReasonCodesQ1Default = 0;
    LocDontChangeReasonCodesQ122ChildAlreadyExist_AS = ' ';
    LocDontChangeReasonCodesQ122ChildAlreadyExist = 0;
    LocDontChangeReasonCodesQ123ChildAttrValueInvalid_AS = ' ';
    LocDontChangeReasonCodesQ123ChildAttrValueInvalid = 0;
    LocDontChangeReasonCodesQ131ChildsParentNotFound_AS = ' ';
    LocDontChangeReasonCodesQ131ChildsParentNotFound = 0;
  }
}

package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: DYYY0211_OA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:08:50
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF EXPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: DYYY0211_OA
 **/
public class DYYY0211_OA extends ViewBase implements IExportView, Serializable
{
  // Entity View: EXP
  //        Type: CHILD
  /**
   * Attribute missing flag for: ExpChildCreferenceId
   **/
  public char ExpChildCreferenceId_AS;
  /**
   * Attribute for: ExpChildCreferenceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String ExpChildCreferenceId;
  // Entity View: EXP_ERROR
  //        Type: IYY1_COMPONENT
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentSeverityCode
   **/
  public char ExpErrorIyy1ComponentSeverityCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentSeverityCode
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentSeverityCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentRollbackIndicator
   **/
  public char ExpErrorIyy1ComponentRollbackIndicator_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentRollbackIndicator
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentRollbackIndicator;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentOriginServid
   **/
  public char ExpErrorIyy1ComponentOriginServid_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentOriginServid
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double ExpErrorIyy1ComponentOriginServid;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentContextString
   **/
  public char ExpErrorIyy1ComponentContextString_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentContextString
   * Domain: Text
   * Length: 512
   * Varying Length: Y
   **/
  public String ExpErrorIyy1ComponentContextString;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentReturnCode
   **/
  public char ExpErrorIyy1ComponentReturnCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentReturnCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ExpErrorIyy1ComponentReturnCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentReasonCode
   **/
  public char ExpErrorIyy1ComponentReasonCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentReasonCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ExpErrorIyy1ComponentReasonCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentChecksum
   **/
  public char ExpErrorIyy1ComponentChecksum_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentChecksum
   * Domain: Text
   * Length: 15
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentChecksum;
  /**
   * Default Constructor
   **/
  
  public DYYY0211_OA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public DYYY0211_OA(DYYY0211_OA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static DYYY0211_OA getInstance()
  {
    return new DYYY0211_OA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new DYYY0211_OA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    ExpChildCreferenceId_AS = ' ';
    ExpChildCreferenceId = "00000000000000000000";
    ExpErrorIyy1ComponentSeverityCode_AS = ' ';
    ExpErrorIyy1ComponentSeverityCode = " ";
    ExpErrorIyy1ComponentRollbackIndicator_AS = ' ';
    ExpErrorIyy1ComponentRollbackIndicator = " ";
    ExpErrorIyy1ComponentOriginServid_AS = ' ';
    ExpErrorIyy1ComponentOriginServid = 0.0;
    ExpErrorIyy1ComponentContextString_AS = ' ';
    ExpErrorIyy1ComponentContextString = "";
    ExpErrorIyy1ComponentReturnCode_AS = ' ';
    ExpErrorIyy1ComponentReturnCode = 0;
    ExpErrorIyy1ComponentReasonCode_AS = ' ';
    ExpErrorIyy1ComponentReasonCode = 0;
    ExpErrorIyy1ComponentChecksum_AS = ' ';
    ExpErrorIyy1ComponentChecksum = "               ";
  }
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    throw new RuntimeException("can only execute setFromVDF for a Procedure Step.");
  }
  
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    throw new RuntimeException("can only execute getVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IExportView orig)
  {
    this.copyFrom((DYYY0211_OA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(DYYY0211_OA orig)
  {
    ExpChildCreferenceId_AS = orig.ExpChildCreferenceId_AS;
    ExpChildCreferenceId = orig.ExpChildCreferenceId;
    ExpErrorIyy1ComponentSeverityCode_AS = orig.ExpErrorIyy1ComponentSeverityCode_AS;
    ExpErrorIyy1ComponentSeverityCode = orig.ExpErrorIyy1ComponentSeverityCode;
    ExpErrorIyy1ComponentRollbackIndicator_AS = orig.ExpErrorIyy1ComponentRollbackIndicator_AS;
    ExpErrorIyy1ComponentRollbackIndicator = orig.ExpErrorIyy1ComponentRollbackIndicator;
    ExpErrorIyy1ComponentOriginServid_AS = orig.ExpErrorIyy1ComponentOriginServid_AS;
    ExpErrorIyy1ComponentOriginServid = orig.ExpErrorIyy1ComponentOriginServid;
    ExpErrorIyy1ComponentContextString_AS = orig.ExpErrorIyy1ComponentContextString_AS;
    ExpErrorIyy1ComponentContextString = orig.ExpErrorIyy1ComponentContextString;
    ExpErrorIyy1ComponentReturnCode_AS = orig.ExpErrorIyy1ComponentReturnCode_AS;
    ExpErrorIyy1ComponentReturnCode = orig.ExpErrorIyy1ComponentReturnCode;
    ExpErrorIyy1ComponentReasonCode_AS = orig.ExpErrorIyy1ComponentReasonCode_AS;
    ExpErrorIyy1ComponentReasonCode = orig.ExpErrorIyy1ComponentReasonCode;
    ExpErrorIyy1ComponentChecksum_AS = orig.ExpErrorIyy1ComponentChecksum_AS;
    ExpErrorIyy1ComponentChecksum = orig.ExpErrorIyy1ComponentChecksum;
  }
}
