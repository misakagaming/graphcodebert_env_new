
package gen.ort.yyy;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: CYYY9041_EXCPTN_MSG_FMT_AS_STR   Date: 2023/07/05
//    Target OS:   JVM                       Time: 15:07:38
//    Target DBMS: JDBC                      User: HakanBal
//    Access Method: JDBC           
//
//    Generation options:
//    Debug trace option selected
//    Data modeling constraint enforcement not selected
//    Optimized import view initialization not selected
//    Enforce default values with DBMS not selected
//    Init unspecified optional fields to NULL not selected
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;

import com.ca.gen.abrt.*;
import com.ca.gen.abrt.functions.*;
import com.ca.gen.abrt.cascade.*;
import com.ca.gen.abrt.trace.*;
import com.ca.gen.exits.common.*;
import com.ca.gen.odc.*;

public class CYYY9041 extends ABBase
{
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // IMPORT VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  CYYY9041_IA w_ia;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // EXPORT VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  CYYY9041_OA w_oa;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // LOCAL VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  CYYY9041_LA w_la;
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // ACTION BLOCK IMPORT/EXPORT VIEWS CLASS VARIABLES
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  gen.ort.yyy.IRO10041_IA iro10041_ia;
  gen.ort.yyy.IRO10041_OA iro10041_oa;
  gen.ort.yyy.CYYY9811_OA cyyy9811_oa;
  gen.ort.yyy.CYYY9911_IA cyyy9911_ia;
  gen.ort.yyy.CYYY9911_OA cyyy9911_oa;
  gen.ort.yyy.CYYY9801_OA cyyy9801_oa;
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // MISC DECLARATIONS AND PROTOTYPES 
  //    FOLLOW AS NEEDED:             
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  boolean func_0022020164_esc_flag;
  boolean func_0020971944_esc_flag;
  PadView padview[] = new PadView [53];
  int trace_ret_code;
  PadText padtext[] = initPadText();
  public PadText [] initPadText()
  {
    PadText [] result = new PadText [PADTEXT_SIZE];
    result[0] = PadText.getInstance(   0,"+->   CYYY9041_EXCPTN_MSG_FMT_AS_STR    07/05/2023  15:07");
    result[1] = PadText.getInstance(   0,"!       IMPORTS:");
    result[2] = PadText.getInstance(   0,"!         Work View imp_error iyy1_component (Transient, Optional, Import only)");
    result[3] = PadText.getInstance(   0,"!           origin_servid");
    result[4] = PadText.getInstance(   0,"!           context_string");
    result[5] = PadText.getInstance(   0,"!           return_code");
    result[6] = PadText.getInstance(   0,"!           reason_code");
    result[7] = PadText.getInstance(   0,"!           implementation_id");
    result[8] = PadText.getInstance(   0,"!           specification_id");
    result[9] = PadText.getInstance(   0,"!           dialect_cd");
    result[10] = PadText.getInstance(   0,"!           activity_cd");
    result[11] = PadText.getInstance(   0,"!       EXPORTS:");
    result[12] = PadText.getInstance(   0,"!         Work View exp_error_msg iyy1_component (Transient, Export only)");
    result[13] = PadText.getInstance(   0,"!           severity_code");
    result[14] = PadText.getInstance(   0,"!           message_tx");
    result[15] = PadText.getInstance(   0,"!         Work View exp_error iyy1_component (Transient, Export only)");
    result[16] = PadText.getInstance(   0,"!           severity_code");
    result[17] = PadText.getInstance(   0,"!           rollback_indicator");
    result[18] = PadText.getInstance(   0,"!           origin_servid");
    result[19] = PadText.getInstance(   0,"!           context_string");
    result[20] = PadText.getInstance(   0,"!           return_code");
    result[21] = PadText.getInstance(   0,"!           reason_code");
    result[22] = PadText.getInstance(   0,"!           checksum");
    result[23] = PadText.getInstance(   0,"!       LOCALS:");
    result[24] = PadText.getInstance(   0,"!         Work View loc_imp_error iro1_component");
    result[25] = PadText.getInstance(   0,"!           specification_id");
    result[26] = PadText.getInstance(   0,"!           implementation_id");
    result[27] = PadText.getInstance(   0,"!           origin_servid");
    result[28] = PadText.getInstance(   0,"!           return_code");
    result[29] = PadText.getInstance(   0,"!           reason_code");
    result[30] = PadText.getInstance(   0,"!           context_string_tx");
    result[31] = PadText.getInstance(   0,"!           activity_cd");
    result[32] = PadText.getInstance(   0,"!           dialect_cd");
    result[33] = PadText.getInstance(   0,"!         Work View loc_other_error iyy1_component");
    result[34] = PadText.getInstance(   0,"!           return_code");
    result[35] = PadText.getInstance(   0,"!           reason_code");
    result[36] = PadText.getInstance(   0,"!         Work View loc_error_msg iro1_component");
    result[37] = PadText.getInstance(   0,"!           severity_cd");
    result[38] = PadText.getInstance(   0,"!           message_tx");
    result[39] = PadText.getInstance(   0,"!         Work View loc_error iro1_component");
    result[40] = PadText.getInstance(   0,"!           origin_servid");
    result[41] = PadText.getInstance(   0,"!           return_code");
    result[42] = PadText.getInstance(   0,"!           reason_code");
    result[43] = PadText.getInstance(   0,"!           context_string_tx");
    result[44] = PadText.getInstance(   0,"!           severity_cd");
    result[45] = PadText.getInstance(   0,"!           rollback_indicator_tx");
    result[46] = PadText.getInstance(   0,"!");
    result[47] = PadText.getInstance(   0,"!     PROCEDURE STATEMENTS");
    result[48] = PadText.getInstance(   0,"!");
    result[49] = PadText.getInstance(   1,"!  NOTE: ");
    result[50] = PadText.getInstance(   1,"!  Please review explanation for purpose.");
    result[51] = PadText.getInstance(   1,"!  ");
    result[52] = PadText.getInstance(   2,"!  NOTE: ");
    result[53] = PadText.getInstance(   2,"!  RELEASE HISTORY");
    result[54] = PadText.getInstance(   2,"!  01_00 23-02-1998 New release");
    result[55] = PadText.getInstance(   3,"!   ");
    result[56] = PadText.getInstance(   4,"!  MOVE imp_error iyy1_component TO exp_error iyy1_component");
    result[57] = PadText.getInstance(   5,"!  SET exp_error iyy1_component return_code TO 1 ");
    result[58] = PadText.getInstance(   6,"!  SET exp_error iyy1_component reason_code TO 1 ");
    result[59] = PadText.getInstance(   7,"!   ");
    result[60] = PadText.getInstance(   8,"!  +->IF imp_error iyy1_component return_code < 1");
    result[61] = PadText.getInstance(   9,"!  !  USE cyyy9811_set_excptn_other_error");
    result[62] = PadText.getInstance(   9,
      "!  !     WHICH EXPORTS: Work View loc_other_error iyy1_component FROM Work View exp_other_error iyy1_component");
    result[63] = PadText.getInstance(   8, 1, "!  +> ELSE");
    result[64] = PadText.getInstance(  10,"!  !  USE cyyy9801_set_excptn_other_info");
    result[65] = PadText.getInstance(  10,
      "!  !     WHICH EXPORTS: Work View loc_other_error iyy1_component FROM Work View exp_other_error iyy1_component");
    result[66] = PadText.getInstance(   8,"!  +--");
    result[67] = PadText.getInstance(  11,"!   ");
    result[68] = PadText.getInstance(  12,
      "!  +->IF imp_error iyy1_component return_code = loc_other_error iyy1_component return_code");
    result[69] = PadText.getInstance(  13,
      "!  !  SET exp_error_msg iyy1_component message_tx TO imp_error iyy1_component context_string ");
    result[70] = PadText.getInstance(  12, 1, "!  +> ELSE");
    result[71] = PadText.getInstance(  14,
      "!  !  SET loc_imp_error iro1_component activity_cd TO imp_error iyy1_component activity_cd ");
    result[72] = PadText.getInstance(  15,
      "!  !  SET loc_imp_error iro1_component context_string_tx TO imp_error iyy1_component context_string ");
    result[73] = PadText.getInstance(  16,"!  !  SET loc_imp_error iro1_component dialect_cd TO imp_error iyy1_component dialect_cd "
      );
    result[74] = PadText.getInstance(  17,
      "!  !  SET loc_imp_error iro1_component implementation_id TO imp_error iyy1_component implementation_id ");
    result[75] = PadText.getInstance(  18,
      "!  !  SET loc_imp_error iro1_component origin_servid TO imp_error iyy1_component origin_servid ");
    result[76] = PadText.getInstance(  19,
      "!  !  SET loc_imp_error iro1_component reason_code TO imp_error iyy1_component reason_code ");
    result[77] = PadText.getInstance(  20,
      "!  !  SET loc_imp_error iro1_component return_code TO imp_error iyy1_component return_code ");
    result[78] = PadText.getInstance(  21,
      "!  !  SET loc_imp_error iro1_component specification_id TO imp_error iyy1_component specification_id ");
    result[79] = PadText.getInstance(  22,"!  !   ");
    result[80] = PadText.getInstance(  23,"!  !  NOTE: ");
    result[81] = PadText.getInstance(  23,"!  !  ****************************************************************");
    result[82] = PadText.getInstance(  23,"!  !  Set the dialect code..");
    result[83] = PadText.getInstance(  23,"!  !  ");
    result[84] = PadText.getInstance(  24,"!  !  USE cyyy9911_check_dialect");
    result[85] = PadText.getInstance(  24,
      "!  !     WHICH IMPORTS: Work View loc_imp_error iro1_component TO Work View imp_dialect iro1_component");
    result[86] = PadText.getInstance(  24,
      "!  !     WHICH EXPORTS: Work View loc_imp_error iro1_component FROM Work View exp_dialect iro1_component");
    result[87] = PadText.getInstance(  25,"!  !   ");
    result[88] = PadText.getInstance(  26,"!  !  NOTE: ");
    result[89] = PadText.getInstance(  26,"!  !  ****************************************************************");
    result[90] = PadText.getInstance(  26,"!  !  Convert the error data to message.");
    result[91] = PadText.getInstance(  26,"!  !  ");
    result[92] = PadText.getInstance(  27,"!  !  USE iro10041_excptn_msg_fmt_as_str_s");
    result[93] = PadText.getInstance(  27,
      "!  !     WHICH IMPORTS: Work View loc_imp_error iro1_component TO Work View in iro1_component");
    result[94] = PadText.getInstance(  27,
      "!  !     WHICH EXPORTS: Work View loc_error iro1_component FROM Work View out_error iro1_component");
    result[95] = PadText.getInstance(  27,
      "!  !                    Work View loc_error_msg iro1_component FROM Work View out_data iro1_component");
    result[96] = PadText.getInstance(  28,"!  !   ");
    result[97] = PadText.getInstance(  29,
      "!  !  SET exp_error_msg iyy1_component message_tx TO loc_error_msg iro1_component message_tx ");
    result[98] = PadText.getInstance(  30,
      "!  !  SET exp_error_msg iyy1_component severity_code TO loc_error_msg iro1_component severity_cd ");
    result[99] = PadText.getInstance(  31,"!  !   ");
    result[100] = PadText.getInstance(  32,"!  !  +->IF loc_error iro1_component return_code < 1");
    result[101] = PadText.getInstance(  33,
      "!  !  !  SET exp_error iyy1_component return_code TO loc_other_error iyy1_component return_code ");
    result[102] = PadText.getInstance(  34,
      "!  !  !  SET exp_error iyy1_component reason_code TO loc_other_error iyy1_component reason_code ");
    result[103] = PadText.getInstance(  35,
      "!  !  !  SET exp_error iyy1_component context_string TO loc_error_msg iro1_component message_tx ");
    result[104] = PadText.getInstance(  32,"!  !  +--");
    result[105] = PadText.getInstance(  12,"!  +--");
    result[106] = PadText.getInstance(   0,"+---");
    result[107] = PadText.getInstance(PadText.LASTLINE,"************************* BOTTOM OF DATA *************************");
    return result;
  }
  final static int PADTEXT_SIZE = 108;
  //       +->   CYYY9041_EXCPTN_MSG_FMT_AS_STR    07/05/2023  15:07
  //       !       IMPORTS:
  //       !         Work View imp_error iyy1_component (Transient, Optional, Import only)
  //       !           origin_servid
  //       !           context_string
  //       !           return_code
  //       !           reason_code
  //       !           implementation_id
  //       !           specification_id
  //       !           dialect_cd
  //       !           activity_cd
  //       !       EXPORTS:
  //       !         Work View exp_error_msg iyy1_component (Transient, Export only)
  //       !           severity_code
  //       !           message_tx
  //       !         Work View exp_error iyy1_component (Transient, Export only)
  //       !           severity_code
  //       !           rollback_indicator
  //       !           origin_servid
  //       !           context_string
  //       !           return_code
  //       !           reason_code
  //       !           checksum
  //       !       LOCALS:
  //       !         Work View loc_imp_error iro1_component
  //       !           specification_id
  //       !           implementation_id
  //       !           origin_servid
  //       !           return_code
  //       !           reason_code
  //       !           context_string_tx
  //       !           activity_cd
  //       !           dialect_cd
  //       !         Work View loc_other_error iyy1_component
  //       !           return_code
  //       !           reason_code
  //       !         Work View loc_error_msg iro1_component
  //       !           severity_cd
  //       !           message_tx
  //       !         Work View loc_error iro1_component
  //       !           origin_servid
  //       !           return_code
  //       !           reason_code
  //       !           context_string_tx
  //       !           severity_cd
  //       !           rollback_indicator_tx
  //       !
  //       !     PROCEDURE STATEMENTS
  //       !
  //     1 !  NOTE: 
  //     1 !  Please review explanation for purpose.
  //     1 !  
  //     2 !  NOTE: 
  //     2 !  RELEASE HISTORY
  //     2 !  01_00 23-02-1998 New release
  //     3 !   
  //     4 !  MOVE imp_error iyy1_component TO exp_error iyy1_component
  //     5 !  SET exp_error iyy1_component return_code TO 1 
  //     6 !  SET exp_error iyy1_component reason_code TO 1 
  //     7 !   
  //     8 !  +->IF imp_error iyy1_component return_code < 1
  //     9 !  !  USE cyyy9811_set_excptn_other_error
  //     9 !  !     WHICH EXPORTS: Work View loc_other_error iyy1_component FROM Work View exp_other_error iyy1_component
  //     8 !  +> ELSE
  //    10 !  !  USE cyyy9801_set_excptn_other_info
  //    10 !  !     WHICH EXPORTS: Work View loc_other_error iyy1_component FROM Work View exp_other_error iyy1_component
  //     8 !  +--
  //    11 !   
  //    12 !  +->IF imp_error iyy1_component return_code = loc_other_error iyy1_component return_code
  //    13 !  !  SET exp_error_msg iyy1_component message_tx TO imp_error iyy1_component context_string 
  //    12 !  +> ELSE
  //    14 !  !  SET loc_imp_error iro1_component activity_cd TO imp_error iyy1_component activity_cd 
  //    15 !  !  SET loc_imp_error iro1_component context_string_tx TO imp_error iyy1_component context_string 
  //    16 !  !  SET loc_imp_error iro1_component dialect_cd TO imp_error iyy1_component dialect_cd 
  //    17 !  !  SET loc_imp_error iro1_component implementation_id TO imp_error iyy1_component implementation_id 
  //    18 !  !  SET loc_imp_error iro1_component origin_servid TO imp_error iyy1_component origin_servid 
  //    19 !  !  SET loc_imp_error iro1_component reason_code TO imp_error iyy1_component reason_code 
  //    20 !  !  SET loc_imp_error iro1_component return_code TO imp_error iyy1_component return_code 
  //    21 !  !  SET loc_imp_error iro1_component specification_id TO imp_error iyy1_component specification_id 
  //    22 !  !   
  //    23 !  !  NOTE: 
  //    23 !  !  ****************************************************************
  //    23 !  !  Set the dialect code..
  //    23 !  !  
  //    24 !  !  USE cyyy9911_check_dialect
  //    24 !  !     WHICH IMPORTS: Work View loc_imp_error iro1_component TO Work View imp_dialect iro1_component
  //    24 !  !     WHICH EXPORTS: Work View loc_imp_error iro1_component FROM Work View exp_dialect iro1_component
  //    25 !  !   
  //    26 !  !  NOTE: 
  //    26 !  !  ****************************************************************
  //    26 !  !  Convert the error data to message.
  //    26 !  !  
  //    27 !  !  USE iro10041_excptn_msg_fmt_as_str_s
  //    27 !  !     WHICH IMPORTS: Work View loc_imp_error iro1_component TO Work View in iro1_component
  //    27 !  !     WHICH EXPORTS: Work View loc_error iro1_component FROM Work View out_error iro1_component
  //    27 !  !                    Work View loc_error_msg iro1_component FROM Work View out_data iro1_component
  //    28 !  !   
  //    29 !  !  SET exp_error_msg iyy1_component message_tx TO loc_error_msg iro1_component message_tx 
  //    30 !  !  SET exp_error_msg iyy1_component severity_code TO loc_error_msg iro1_component severity_cd 
  //    31 !  !   
  //    32 !  !  +->IF loc_error iro1_component return_code < 1
  //    33 !  !  !  SET exp_error iyy1_component return_code TO loc_other_error iyy1_component return_code 
  //    34 !  !  !  SET exp_error iyy1_component reason_code TO loc_other_error iyy1_component reason_code 
  //    35 !  !  !  SET exp_error iyy1_component context_string TO loc_error_msg iro1_component message_tx 
  //    32 !  !  +--
  //    12 !  +--
  //       +---
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  //  CONSTRUCTOR FOR THE CLASS       
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  public CYYY9041()
  {
    iefCGenRlse = "CA Gen 8.6";
    ssCopyright = "Copyright (c) 2023 CA Technologies. All rights reserved.";
    iefCGenDate = "2023/07/05";
    iefCGenTime = "15:07:38";
    iefCGenEncy = "9.2.A6";
    iefCGenUserId = "HakanBal";
    iefCGenModel = "N8I_ORT_YYY_0112_TEMPLATE";
    iefCGenSubset = "ALL";
    iefCGenName = "CYYY9041_EXCPTN_MSG_FMT_AS_STR";
    nestingLevel = 0;
    valChkDeadlockTimeout = false;
    valChkDBError = false;
  }
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // ACTION BLOCK FUNCTION DECLARATIONS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  public void CYYY9041( Object in_runtime_parm1, 
  	IRuntimePStepContext in_runtime_parm2, 
  	GlobData in_globdata, 
  	CYYY9041_IA import_view, 
  	CYYY9041_OA export_view )
  {
    iefRuntimeParm1 = in_runtime_parm1;
    iefRuntimeParm2 = in_runtime_parm2;
    globdata = in_globdata;
    w_ia = import_view;
    w_oa = export_view;
    _CYYY9041();
  }
  
  private void _CYYY9041()
  {
    
    f_22020164_localAlloc("CYYY9041_EXCPTN_MSG_FMT_AS_STR");
    if ( globdata.getErrorData().getLastStatus() == ErrorData.IEF_ALLOCATION_ERROR_FL_LS )
    	return;
    
    ++(nestingLevel);
    try {
      f_22020164_init();
      f_22020164();
    } catch( ABException e ) {
    } finally {
      --(nestingLevel);
    }
    String last_stmt_num_saved = globdata.getStateData().getLastStatementNumber();
    globdata.getStateData().setLastStatementNumber( "9999999999" );
    try {
      f_0_trace();
    } catch( ABException e ) {
    }
    globdata.getStateData().setLastStatementNumber( last_stmt_num_saved );
  }
  public void f_22020164()
  	throws ABException
  {
    func_0022020164_esc_flag = false;
    globdata.getStateData().setCurrentABId( "0022020164" );
    globdata.getStateData().setCurrentABName( "CYYY9041_EXCPTN_MSG_FMT_AS_STR" );
    padview_init();
    globdata.getStateData().setLastStatementNumber( "0000000000" );
    f_0_trace();
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    Please review explanation for purpose.                          
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    RELEASE HISTORY                                                 
    //    01_00 23-02-1998 New release                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    globdata.getStateData().setLastStatementNumber( "0000000004" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.valueOf(w_ia.ImpErrorIyy1ComponentOriginServid);
      w_oa.ExpErrorIyy1ComponentContextString = StringAttr.valueOf(w_ia.ImpErrorIyy1ComponentContextString, (short)512);
      w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf(w_ia.ImpErrorIyy1ComponentReturnCode);
      w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf(w_ia.ImpErrorIyy1ComponentReasonCode);
    }
    globdata.getStateData().setLastStatementNumber( "0000000005" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(1, 0, TIRD2DEC.ROUND_NONE, 5));
    }
    globdata.getStateData().setLastStatementNumber( "0000000006" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(1, 0, TIRD2DEC.ROUND_NONE, 5));
    }
    
    globdata.getStateData().setLastStatementNumber( "0000000008" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      if ( ((double) w_ia.ImpErrorIyy1ComponentReturnCode < 1) )
      {
        globdata.getStateData().setLastStatementNumber( "0000000009" );
        f_0_trace();
        if ( trace_ret_code != 8 )
        {
          
          cyyy9811_oa = (gen.ort.yyy.CYYY9811_OA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY9811_OA"));
          globdata.getErrorData().setErrorEncounteredSW( ErrorData.NO_ERROR_FOUND_SW );
          iefRuntimeParm2.useActionBlock("gen.ort.yyy.CYYY9811", "CYYY9811", null, cyyy9811_oa);
          if ( ((!(globdata.getErrorData().getStatus().equals( ErrorData.NONE_SF ))) || (globdata.getErrorData()
            .getErrorEncounteredSW() != ErrorData.NO_ERROR_FOUND_SW)) || (globdata.getErrorData().getViewOverflowSW() != 
            ErrorData.NO_ERROR_FOUND_SW) )
          {
            throw new ABException();
          }
          globdata.getStateData().setCurrentABId( "0022020164" );
          globdata.getStateData().setCurrentABName( "CYYY9041_EXCPTN_MSG_FMT_AS_STR" );
          globdata.getStateData().setLastStatementNumber( "0000000009" );
          w_la.LocOtherErrorIyy1ComponentReturnCode = IntAttr.valueOf(cyyy9811_oa.ExpOtherErrorIyy1ComponentReturnCode);
          w_la.LocOtherErrorIyy1ComponentReasonCode = IntAttr.valueOf(cyyy9811_oa.ExpOtherErrorIyy1ComponentReasonCode);
          cyyy9811_oa.freeInstance();
          cyyy9811_oa = null;
        }
      }
      else 
      {
        globdata.getStateData().setLastSubStatementNumber( "1" );
        f_0_trace();
        {
          globdata.getStateData().setLastStatementNumber( "0000000010" );
          f_0_trace();
          if ( trace_ret_code != 8 )
          {
            
            cyyy9801_oa = (gen.ort.yyy.CYYY9801_OA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY9801_OA"));
            globdata.getErrorData().setErrorEncounteredSW( ErrorData.NO_ERROR_FOUND_SW );
            iefRuntimeParm2.useActionBlock("gen.ort.yyy.CYYY9801", "CYYY9801", null, cyyy9801_oa);
            if ( ((!(globdata.getErrorData().getStatus().equals( ErrorData.NONE_SF ))) || (globdata.getErrorData()
              .getErrorEncounteredSW() != ErrorData.NO_ERROR_FOUND_SW)) || (globdata.getErrorData().getViewOverflowSW() != 
              ErrorData.NO_ERROR_FOUND_SW) )
            {
              throw new ABException();
            }
            globdata.getStateData().setCurrentABId( "0022020164" );
            globdata.getStateData().setCurrentABName( "CYYY9041_EXCPTN_MSG_FMT_AS_STR" );
            globdata.getStateData().setLastStatementNumber( "0000000010" );
            w_la.LocOtherErrorIyy1ComponentReturnCode = IntAttr.valueOf(cyyy9801_oa.ExpOtherErrorIyy1ComponentReturnCode);
            w_la.LocOtherErrorIyy1ComponentReasonCode = IntAttr.valueOf(cyyy9801_oa.ExpOtherErrorIyy1ComponentReasonCode);
            cyyy9801_oa.freeInstance();
            cyyy9801_oa = null;
          }
        }
      }
      
    }
    
    globdata.getStateData().setLastStatementNumber( "0000000012" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      if ( ((double) w_ia.ImpErrorIyy1ComponentReturnCode == (double) w_la.LocOtherErrorIyy1ComponentReturnCode) )
      {
        globdata.getStateData().setLastStatementNumber( "0000000013" );
        f_0_trace();
        if ( trace_ret_code != 8 )
        {
          w_oa.ExpErrorMsgIyy1ComponentMessageTx = StringAttr.valueOf(w_ia.ImpErrorIyy1ComponentContextString, (short)512);
        }
      }
      else 
      {
        globdata.getStateData().setLastSubStatementNumber( "1" );
        f_0_trace();
        {
          f_20971944();
        }
      }
      
    }
  }
  
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // SUBORDINATE FUNCTIONS
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  
  public void f_20971944()
  	throws ABException
  {
    func_0020971944_esc_flag = false;
    globdata.getStateData().setLastStatementNumber( "0000000014" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpErrorIro1ComponentActivityCd = FixedStringAttr.valueOf(w_ia.ImpErrorIyy1ComponentActivityCd, (short)15);
    }
    globdata.getStateData().setLastStatementNumber( "0000000015" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpErrorIro1ComponentContextStringTx = StringAttr.valueOf(w_ia.ImpErrorIyy1ComponentContextString, (short)255);
    }
    globdata.getStateData().setLastStatementNumber( "0000000016" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpErrorIro1ComponentDialectCd = FixedStringAttr.valueOf(w_ia.ImpErrorIyy1ComponentDialectCd, (short)8);
    }
    globdata.getStateData().setLastStatementNumber( "0000000017" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpErrorIro1ComponentImplementationId = DoubleAttr.valueOf(TIRD2DEC.TIRD2DC1(
        w_ia.ImpErrorIyy1ComponentImplementationId, 0, TIRD2DEC.ROUND_NONE, 15));
    }
    globdata.getStateData().setLastStatementNumber( "0000000018" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpErrorIro1ComponentOriginServid = DoubleAttr.valueOf(TIRD2DEC.TIRD2DC1(w_ia.ImpErrorIyy1ComponentOriginServid, 0, 
        TIRD2DEC.ROUND_NONE, 15));
    }
    globdata.getStateData().setLastStatementNumber( "0000000019" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpErrorIro1ComponentReasonCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) w_ia.ImpErrorIyy1ComponentReasonCode,
         0, TIRD2DEC.ROUND_NONE, 5));
    }
    globdata.getStateData().setLastStatementNumber( "0000000020" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpErrorIro1ComponentReturnCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) w_ia.ImpErrorIyy1ComponentReturnCode,
         0, TIRD2DEC.ROUND_NONE, 5));
    }
    globdata.getStateData().setLastStatementNumber( "0000000021" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocImpErrorIro1ComponentSpecificationId = DoubleAttr.valueOf(TIRD2DEC.TIRD2DC1(w_ia.ImpErrorIyy1ComponentSpecificationId, 
        0, TIRD2DEC.ROUND_NONE, 15));
    }
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    **************************************************************  
    //    **                                                              
    //    Set the dialect code..                                          
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    globdata.getStateData().setLastStatementNumber( "0000000024" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      
      cyyy9911_ia = (gen.ort.yyy.CYYY9911_IA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY9911_IA"));
      cyyy9911_oa = (gen.ort.yyy.CYYY9911_OA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY9911_OA"));
      cyyy9911_ia.ImpDialectIro1ComponentDialectCd = FixedStringAttr.valueOf(w_la.LocImpErrorIro1ComponentDialectCd, (short)8);
      globdata.getErrorData().setErrorEncounteredSW( ErrorData.NO_ERROR_FOUND_SW );
      iefRuntimeParm2.useActionBlock("gen.ort.yyy.CYYY9911", "CYYY9911", cyyy9911_ia, cyyy9911_oa);
      if ( ((!(globdata.getErrorData().getStatus().equals( ErrorData.NONE_SF ))) || (globdata.getErrorData().getErrorEncounteredSW() 
        != ErrorData.NO_ERROR_FOUND_SW)) || (globdata.getErrorData().getViewOverflowSW() != ErrorData.NO_ERROR_FOUND_SW) )
      {
        throw new ABException();
      }
      globdata.getStateData().setCurrentABId( "0022020164" );
      globdata.getStateData().setCurrentABName( "CYYY9041_EXCPTN_MSG_FMT_AS_STR" );
      globdata.getStateData().setLastStatementNumber( "0000000024" );
      w_la.LocImpErrorIro1ComponentDialectCd = FixedStringAttr.valueOf(cyyy9911_oa.ExpDialectIro1ComponentDialectCd, (short)8);
      cyyy9911_ia.freeInstance();
      cyyy9911_ia = null;
      cyyy9911_oa.freeInstance();
      cyyy9911_oa = null;
    }
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    **************************************************************  
    //    **                                                              
    //    Convert the error data to message.                              
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    globdata.getStateData().setLastStatementNumber( "0000000027" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      
      iro10041_ia = (gen.ort.yyy.IRO10041_IA)(iefRuntimeParm2.getInstance("gen.ort.yyy.IRO10041_IA"));
      iro10041_oa = (gen.ort.yyy.IRO10041_OA)(iefRuntimeParm2.getInstance("gen.ort.yyy.IRO10041_OA"));
      iro10041_ia.InIro1ComponentSpecificationId = DoubleAttr.valueOf(w_la.LocImpErrorIro1ComponentSpecificationId);
      iro10041_ia.InIro1ComponentImplementationId = DoubleAttr.valueOf(w_la.LocImpErrorIro1ComponentImplementationId);
      iro10041_ia.InIro1ComponentOriginServid = DoubleAttr.valueOf(w_la.LocImpErrorIro1ComponentOriginServid);
      iro10041_ia.InIro1ComponentReturnCode = IntAttr.valueOf(w_la.LocImpErrorIro1ComponentReturnCode);
      iro10041_ia.InIro1ComponentReasonCode = IntAttr.valueOf(w_la.LocImpErrorIro1ComponentReasonCode);
      iro10041_ia.InIro1ComponentContextStringTx = StringAttr.valueOf(w_la.LocImpErrorIro1ComponentContextStringTx, (short)255);
      iro10041_ia.InIro1ComponentActivityCd = FixedStringAttr.valueOf(w_la.LocImpErrorIro1ComponentActivityCd, (short)15);
      iro10041_ia.InIro1ComponentDialectCd = FixedStringAttr.valueOf(w_la.LocImpErrorIro1ComponentDialectCd, (short)8);
      globdata.getErrorData().setErrorEncounteredSW( ErrorData.NO_ERROR_FOUND_SW );
      iefRuntimeParm2.useActionBlock("gen.ort.yyy.IRO10041", "IRO10041", iro10041_ia, iro10041_oa);
      if ( ((!(globdata.getErrorData().getStatus().equals( ErrorData.NONE_SF ))) || (globdata.getErrorData().getErrorEncounteredSW() 
        != ErrorData.NO_ERROR_FOUND_SW)) || (globdata.getErrorData().getViewOverflowSW() != ErrorData.NO_ERROR_FOUND_SW) )
      {
        throw new ABException();
      }
      globdata.getStateData().setCurrentABId( "0022020164" );
      globdata.getStateData().setCurrentABName( "CYYY9041_EXCPTN_MSG_FMT_AS_STR" );
      globdata.getStateData().setLastStatementNumber( "0000000027" );
      w_la.LocErrorMsgIro1ComponentSeverityCd = FixedStringAttr.valueOf(iro10041_oa.OutDataIro1ComponentSeverityCd, (short)1);
      w_la.LocErrorMsgIro1ComponentMessageTx = StringAttr.valueOf(iro10041_oa.OutDataIro1ComponentMessageTx, (short)512);
      w_la.LocErrorIro1ComponentSeverityCd = FixedStringAttr.valueOf(iro10041_oa.OutErrorIro1ComponentSeverityCd, (short)1);
      w_la.LocErrorIro1ComponentRollbackIndicatorTx = FixedStringAttr.valueOf(iro10041_oa.OutErrorIro1ComponentRollbackIndicatorTx, (
        short)1);
      w_la.LocErrorIro1ComponentOriginServid = DoubleAttr.valueOf(iro10041_oa.OutErrorIro1ComponentOriginServid);
      w_la.LocErrorIro1ComponentContextStringTx = StringAttr.valueOf(iro10041_oa.OutErrorIro1ComponentContextStringTx, (short)255);
      w_la.LocErrorIro1ComponentReturnCode = IntAttr.valueOf(iro10041_oa.OutErrorIro1ComponentReturnCode);
      w_la.LocErrorIro1ComponentReasonCode = IntAttr.valueOf(iro10041_oa.OutErrorIro1ComponentReasonCode);
      iro10041_ia.freeInstance();
      iro10041_ia = null;
      iro10041_oa.freeInstance();
      iro10041_oa = null;
    }
    
    globdata.getStateData().setLastStatementNumber( "0000000029" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpErrorMsgIyy1ComponentMessageTx = StringAttr.valueOf(w_la.LocErrorMsgIro1ComponentMessageTx, (short)512);
    }
    globdata.getStateData().setLastStatementNumber( "0000000030" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpErrorMsgIyy1ComponentSeverityCode = FixedStringAttr.valueOf(w_la.LocErrorMsgIro1ComponentSeverityCd, (short)1);
    }
    
    globdata.getStateData().setLastStatementNumber( "0000000032" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      if ( ((double) w_la.LocErrorIro1ComponentReturnCode < 1) )
      {
        globdata.getStateData().setLastStatementNumber( "0000000033" );
        f_0_trace();
        if ( trace_ret_code != 8 )
        {
          w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
            w_la.LocOtherErrorIyy1ComponentReturnCode, 0, TIRD2DEC.ROUND_NONE, 5));
        }
        globdata.getStateData().setLastStatementNumber( "0000000034" );
        f_0_trace();
        if ( trace_ret_code != 8 )
        {
          w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
            w_la.LocOtherErrorIyy1ComponentReasonCode, 0, TIRD2DEC.ROUND_NONE, 5));
        }
        globdata.getStateData().setLastStatementNumber( "0000000035" );
        f_0_trace();
        if ( trace_ret_code != 8 )
        {
          w_oa.ExpErrorIyy1ComponentContextString = StringAttr.valueOf(w_la.LocErrorMsgIro1ComponentMessageTx, (short)512);
        }
      }
      
    }
  }
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // INITIALIZATION UTILITY FUNCTIONS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  public void f_22020164_localAlloc(String abname)
  {
    // Request localview allocation 
    w_la = (gen.ort.yyy.CYYY9041_LA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY9041_LA"));
    if ( w_la == null )
    {
      globdata.getStateData().setCurrentABId( "0022020164" );
      globdata.getStateData().setCurrentABName( abname );
      globdata.getErrorData().setErrorEncounteredSW( ErrorData.ERROR_FOUND_SW );
      globdata.getErrorData().setLastStatus( ErrorData.IEF_ALLOCATION_ERROR_FL_LS );
    }
  }
  
  public void f_22020164_init()
  	throws ABException
  {
    if ( nestingLevel < 2 )
    {
      w_la.reset();
    }
    w_oa.ExpErrorMsgIyy1ComponentSeverityCode = " ";
    w_oa.ExpErrorMsgIyy1ComponentMessageTx = "";
    w_oa.ExpErrorIyy1ComponentSeverityCode = " ";
    w_oa.ExpErrorIyy1ComponentRollbackIndicator = " ";
    w_oa.ExpErrorIyy1ComponentOriginServid = 0.0;
    w_oa.ExpErrorIyy1ComponentContextString = "";
    w_oa.ExpErrorIyy1ComponentReturnCode = 0;
    w_oa.ExpErrorIyy1ComponentReasonCode = 0;
    w_oa.ExpErrorIyy1ComponentChecksum = "               ";
  }
  
  public void f_0_trace()
  	throws ABException
  {
    trace_ret_code = TIRTRCE.TIRTRCE(iefRuntimeParm1, iefRuntimeParm2, globdata, padtext, padview);
    if ( trace_ret_code == 20 )
    {
      throw new ABException();
    }
  }
  
  public void padview_init()
  {
padview[0] = PadView.getInstance("IMPORT                          ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_ia, 
      "w_ia");
    padview[1] = PadView.getInstance("IMP_ERROR                       ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ia, 
      null);
    padview[2] = PadView.getInstance("IYY1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, w_ia,
       null);
    padview[3] = PadView.getInstance("ORIGIN_SERVID                   ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_ia, "ImpErrorIyy1ComponentOriginServid");
    padview[4] = PadView.getInstance("CONTEXT_STRING                  ", 512, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_ia, "ImpErrorIyy1ComponentContextString");
    padview[5] = PadView.getInstance("RETURN_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_NUMERIC,
       w_ia, "ImpErrorIyy1ComponentReturnCode");
    padview[6] = PadView.getInstance("REASON_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_NUMERIC,
       w_ia, "ImpErrorIyy1ComponentReasonCode");
    padview[7] = PadView.getInstance("IMPLEMENTATION_ID               ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_ia, "ImpErrorIyy1ComponentImplementationId");
    padview[8] = PadView.getInstance("SPECIFICATION_ID                ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_ia, "ImpErrorIyy1ComponentSpecificationId");
    padview[9] = PadView.getInstance("DIALECT_CD                      ", 2, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpErrorIyy1ComponentDialectCd");
    padview[10] = PadView.getInstance("ACTIVITY_CD                     ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpErrorIyy1ComponentActivityCd");
    padview[11] = PadView.getInstance("EXPORT                          ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_oa, 
      "w_oa");
    padview[12] = PadView.getInstance("EXP_ERROR_MSG                   ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_oa, 
      null);
    padview[13] = PadView.getInstance("IYY1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_oa, null);
    padview[14] = PadView.getInstance("SEVERITY_CODE                   ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorMsgIyy1ComponentSeverityCode");
    padview[15] = PadView.getInstance("MESSAGE_TX                      ", 512, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_oa, "ExpErrorMsgIyy1ComponentMessageTx");
    padview[16] = PadView.getInstance("EXP_ERROR                       ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_oa, 
      null);
    padview[17] = PadView.getInstance("IYY1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_oa, null);
    padview[18] = PadView.getInstance("SEVERITY_CODE                   ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentSeverityCode");
    padview[19] = PadView.getInstance("ROLLBACK_INDICATOR              ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentRollbackIndicator");
    padview[20] = PadView.getInstance("ORIGIN_SERVID                   ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentOriginServid");
    padview[21] = PadView.getInstance("CONTEXT_STRING                  ", 512, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_oa, "ExpErrorIyy1ComponentContextString");
    padview[22] = PadView.getInstance("RETURN_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentReturnCode");
    padview[23] = PadView.getInstance("REASON_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentReasonCode");
    padview[24] = PadView.getInstance("CHECKSUM                        ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentChecksum");
    padview[25] = PadView.getInstance("LOCAL                           ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_la, 
      "w_la");
    padview[26] = PadView.getInstance("LOC_IMP_ERROR                   ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[27] = PadView.getInstance("IRO1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[28] = PadView.getInstance("SPECIFICATION_ID                ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocImpErrorIro1ComponentSpecificationId");
    padview[29] = PadView.getInstance("IMPLEMENTATION_ID               ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocImpErrorIro1ComponentImplementationId");
    padview[30] = PadView.getInstance("ORIGIN_SERVID                   ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocImpErrorIro1ComponentOriginServid");
    padview[31] = PadView.getInstance("RETURN_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocImpErrorIro1ComponentReturnCode");
    padview[32] = PadView.getInstance("REASON_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocImpErrorIro1ComponentReasonCode");
    padview[33] = PadView.getInstance("CONTEXT_STRING_TX               ", 255, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_la, "LocImpErrorIro1ComponentContextStringTx");
    padview[34] = PadView.getInstance("ACTIVITY_CD                     ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpErrorIro1ComponentActivityCd");
    padview[35] = PadView.getInstance("DIALECT_CD                      ", 8, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpErrorIro1ComponentDialectCd");
    padview[36] = PadView.getInstance("LOC_OTHER_ERROR                 ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[37] = PadView.getInstance("IYY1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[38] = PadView.getInstance("RETURN_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocOtherErrorIyy1ComponentReturnCode");
    padview[39] = PadView.getInstance("REASON_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocOtherErrorIyy1ComponentReasonCode");
    padview[40] = PadView.getInstance("LOC_ERROR_MSG                   ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[41] = PadView.getInstance("IRO1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[42] = PadView.getInstance("SEVERITY_CD                     ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocErrorMsgIro1ComponentSeverityCd");
    padview[43] = PadView.getInstance("MESSAGE_TX                      ", 512, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_la, "LocErrorMsgIro1ComponentMessageTx");
    padview[44] = PadView.getInstance("LOC_ERROR                       ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[45] = PadView.getInstance("IRO1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[46] = PadView.getInstance("ORIGIN_SERVID                   ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocErrorIro1ComponentOriginServid");
    padview[47] = PadView.getInstance("RETURN_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocErrorIro1ComponentReturnCode");
    padview[48] = PadView.getInstance("REASON_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocErrorIro1ComponentReasonCode");
    padview[49] = PadView.getInstance("CONTEXT_STRING_TX               ", 255, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_la, "LocErrorIro1ComponentContextStringTx");
    padview[50] = PadView.getInstance("SEVERITY_CD                     ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocErrorIro1ComponentSeverityCd");
    padview[51] = PadView.getInstance("ROLLBACK_INDICATOR_TX           ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocErrorIro1ComponentRollbackIndicatorTx");
    padview[52] = PadView.getInstance("******** BOTTOM OF DATA ********", 0, 0, 0, (short)0, PadView.VT_END, PadView.DT_NONE, w_la, 
      null);
  }
}// end class


package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: CYYY9041_IA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:07:38
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF IMPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: CYYY9041_IA
 **/
public class CYYY9041_IA extends ViewBase implements IImportView, Serializable
{
  // Entity View: IMP_ERROR
  //        Type: IYY1_COMPONENT
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentOriginServid
   **/
  public char ImpErrorIyy1ComponentOriginServid_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentOriginServid
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double ImpErrorIyy1ComponentOriginServid;
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentContextString
   **/
  public char ImpErrorIyy1ComponentContextString_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentContextString
   * Domain: Text
   * Length: 512
   * Varying Length: Y
   **/
  public String ImpErrorIyy1ComponentContextString;
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentReturnCode
   **/
  public char ImpErrorIyy1ComponentReturnCode_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentReturnCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ImpErrorIyy1ComponentReturnCode;
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentReasonCode
   **/
  public char ImpErrorIyy1ComponentReasonCode_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentReasonCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ImpErrorIyy1ComponentReasonCode;
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentImplementationId
   **/
  public char ImpErrorIyy1ComponentImplementationId_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentImplementationId
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double ImpErrorIyy1ComponentImplementationId;
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentSpecificationId
   **/
  public char ImpErrorIyy1ComponentSpecificationId_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentSpecificationId
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double ImpErrorIyy1ComponentSpecificationId;
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentDialectCd
   **/
  public char ImpErrorIyy1ComponentDialectCd_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentDialectCd
   * Domain: Text
   * Length: 2
   * Varying Length: N
   **/
  public String ImpErrorIyy1ComponentDialectCd;
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentActivityCd
   **/
  public char ImpErrorIyy1ComponentActivityCd_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentActivityCd
   * Domain: Text
   * Length: 15
   * Varying Length: N
   **/
  public String ImpErrorIyy1ComponentActivityCd;
  /**
   * Default Constructor
   **/
  
  public CYYY9041_IA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public CYYY9041_IA(CYYY9041_IA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static CYYY9041_IA getInstance()
  {
    return new CYYY9041_IA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new CYYY9041_IA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    ImpErrorIyy1ComponentOriginServid_AS = ' ';
    ImpErrorIyy1ComponentOriginServid = 0.0;
    ImpErrorIyy1ComponentContextString_AS = ' ';
    ImpErrorIyy1ComponentContextString = "";
    ImpErrorIyy1ComponentReturnCode_AS = ' ';
    ImpErrorIyy1ComponentReturnCode = 0;
    ImpErrorIyy1ComponentReasonCode_AS = ' ';
    ImpErrorIyy1ComponentReasonCode = 0;
    ImpErrorIyy1ComponentImplementationId_AS = ' ';
    ImpErrorIyy1ComponentImplementationId = 0.0;
    ImpErrorIyy1ComponentSpecificationId_AS = ' ';
    ImpErrorIyy1ComponentSpecificationId = 0.0;
    ImpErrorIyy1ComponentDialectCd_AS = ' ';
    ImpErrorIyy1ComponentDialectCd = "  ";
    ImpErrorIyy1ComponentActivityCd_AS = ' ';
    ImpErrorIyy1ComponentActivityCd = "               ";
  }
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    throw new RuntimeException("can only execute getVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    throw new RuntimeException("can only execute setFromVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IImportView orig)
  {
    this.copyFrom((CYYY9041_IA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(CYYY9041_IA orig)
  {
    ImpErrorIyy1ComponentOriginServid_AS = orig.ImpErrorIyy1ComponentOriginServid_AS;
    ImpErrorIyy1ComponentOriginServid = orig.ImpErrorIyy1ComponentOriginServid;
    ImpErrorIyy1ComponentContextString_AS = orig.ImpErrorIyy1ComponentContextString_AS;
    ImpErrorIyy1ComponentContextString = orig.ImpErrorIyy1ComponentContextString;
    ImpErrorIyy1ComponentReturnCode_AS = orig.ImpErrorIyy1ComponentReturnCode_AS;
    ImpErrorIyy1ComponentReturnCode = orig.ImpErrorIyy1ComponentReturnCode;
    ImpErrorIyy1ComponentReasonCode_AS = orig.ImpErrorIyy1ComponentReasonCode_AS;
    ImpErrorIyy1ComponentReasonCode = orig.ImpErrorIyy1ComponentReasonCode;
    ImpErrorIyy1ComponentImplementationId_AS = orig.ImpErrorIyy1ComponentImplementationId_AS;
    ImpErrorIyy1ComponentImplementationId = orig.ImpErrorIyy1ComponentImplementationId;
    ImpErrorIyy1ComponentSpecificationId_AS = orig.ImpErrorIyy1ComponentSpecificationId_AS;
    ImpErrorIyy1ComponentSpecificationId = orig.ImpErrorIyy1ComponentSpecificationId;
    ImpErrorIyy1ComponentDialectCd_AS = orig.ImpErrorIyy1ComponentDialectCd_AS;
    ImpErrorIyy1ComponentDialectCd = orig.ImpErrorIyy1ComponentDialectCd;
    ImpErrorIyy1ComponentActivityCd_AS = orig.ImpErrorIyy1ComponentActivityCd_AS;
    ImpErrorIyy1ComponentActivityCd = orig.ImpErrorIyy1ComponentActivityCd;
  }
}

package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: CYYY9041_LA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:07:38
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF LOCAL VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: CYYY9041_LA
 **/
public class CYYY9041_LA extends ViewBase implements ILocalView, Serializable
{
  // Entity View: LOC_IMP_ERROR
  //        Type: IRO1_COMPONENT
  /**
   * Attribute missing flag for: LocImpErrorIro1ComponentSpecificationId
   **/
  public char LocImpErrorIro1ComponentSpecificationId_AS;
  /**
   * Attribute for: LocImpErrorIro1ComponentSpecificationId
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double LocImpErrorIro1ComponentSpecificationId;
  /**
   * Attribute missing flag for: LocImpErrorIro1ComponentImplementationId
   **/
  public char LocImpErrorIro1ComponentImplementationId_AS;
  /**
   * Attribute for: LocImpErrorIro1ComponentImplementationId
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double LocImpErrorIro1ComponentImplementationId;
  /**
   * Attribute missing flag for: LocImpErrorIro1ComponentOriginServid
   **/
  public char LocImpErrorIro1ComponentOriginServid_AS;
  /**
   * Attribute for: LocImpErrorIro1ComponentOriginServid
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double LocImpErrorIro1ComponentOriginServid;
  /**
   * Attribute missing flag for: LocImpErrorIro1ComponentReturnCode
   **/
  public char LocImpErrorIro1ComponentReturnCode_AS;
  /**
   * Attribute for: LocImpErrorIro1ComponentReturnCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocImpErrorIro1ComponentReturnCode;
  /**
   * Attribute missing flag for: LocImpErrorIro1ComponentReasonCode
   **/
  public char LocImpErrorIro1ComponentReasonCode_AS;
  /**
   * Attribute for: LocImpErrorIro1ComponentReasonCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocImpErrorIro1ComponentReasonCode;
  /**
   * Attribute missing flag for: LocImpErrorIro1ComponentContextStringTx
   **/
  public char LocImpErrorIro1ComponentContextStringTx_AS;
  /**
   * Attribute for: LocImpErrorIro1ComponentContextStringTx
   * Domain: Text
   * Length: 255
   * Varying Length: Y
   **/
  public String LocImpErrorIro1ComponentContextStringTx;
  /**
   * Attribute missing flag for: LocImpErrorIro1ComponentActivityCd
   **/
  public char LocImpErrorIro1ComponentActivityCd_AS;
  /**
   * Attribute for: LocImpErrorIro1ComponentActivityCd
   * Domain: Text
   * Length: 15
   * Varying Length: N
   **/
  public String LocImpErrorIro1ComponentActivityCd;
  /**
   * Attribute missing flag for: LocImpErrorIro1ComponentDialectCd
   **/
  public char LocImpErrorIro1ComponentDialectCd_AS;
  /**
   * Attribute for: LocImpErrorIro1ComponentDialectCd
   * Domain: Text
   * Length: 8
   * Varying Length: N
   **/
  public String LocImpErrorIro1ComponentDialectCd;
  // Entity View: LOC_OTHER_ERROR
  //        Type: IYY1_COMPONENT
  /**
   * Attribute missing flag for: LocOtherErrorIyy1ComponentReturnCode
   **/
  public char LocOtherErrorIyy1ComponentReturnCode_AS;
  /**
   * Attribute for: LocOtherErrorIyy1ComponentReturnCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocOtherErrorIyy1ComponentReturnCode;
  /**
   * Attribute missing flag for: LocOtherErrorIyy1ComponentReasonCode
   **/
  public char LocOtherErrorIyy1ComponentReasonCode_AS;
  /**
   * Attribute for: LocOtherErrorIyy1ComponentReasonCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocOtherErrorIyy1ComponentReasonCode;
  // Entity View: LOC_ERROR_MSG
  //        Type: IRO1_COMPONENT
  /**
   * Attribute missing flag for: LocErrorMsgIro1ComponentSeverityCd
   **/
  public char LocErrorMsgIro1ComponentSeverityCd_AS;
  /**
   * Attribute for: LocErrorMsgIro1ComponentSeverityCd
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String LocErrorMsgIro1ComponentSeverityCd;
  /**
   * Attribute missing flag for: LocErrorMsgIro1ComponentMessageTx
   **/
  public char LocErrorMsgIro1ComponentMessageTx_AS;
  /**
   * Attribute for: LocErrorMsgIro1ComponentMessageTx
   * Domain: Text
   * Length: 512
   * Varying Length: Y
   **/
  public String LocErrorMsgIro1ComponentMessageTx;
  // Entity View: LOC_ERROR
  //        Type: IRO1_COMPONENT
  /**
   * Attribute missing flag for: LocErrorIro1ComponentOriginServid
   **/
  public char LocErrorIro1ComponentOriginServid_AS;
  /**
   * Attribute for: LocErrorIro1ComponentOriginServid
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double LocErrorIro1ComponentOriginServid;
  /**
   * Attribute missing flag for: LocErrorIro1ComponentReturnCode
   **/
  public char LocErrorIro1ComponentReturnCode_AS;
  /**
   * Attribute for: LocErrorIro1ComponentReturnCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocErrorIro1ComponentReturnCode;
  /**
   * Attribute missing flag for: LocErrorIro1ComponentReasonCode
   **/
  public char LocErrorIro1ComponentReasonCode_AS;
  /**
   * Attribute for: LocErrorIro1ComponentReasonCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocErrorIro1ComponentReasonCode;
  /**
   * Attribute missing flag for: LocErrorIro1ComponentContextStringTx
   **/
  public char LocErrorIro1ComponentContextStringTx_AS;
  /**
   * Attribute for: LocErrorIro1ComponentContextStringTx
   * Domain: Text
   * Length: 255
   * Varying Length: Y
   **/
  public String LocErrorIro1ComponentContextStringTx;
  /**
   * Attribute missing flag for: LocErrorIro1ComponentSeverityCd
   **/
  public char LocErrorIro1ComponentSeverityCd_AS;
  /**
   * Attribute for: LocErrorIro1ComponentSeverityCd
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String LocErrorIro1ComponentSeverityCd;
  /**
   * Attribute missing flag for: LocErrorIro1ComponentRollbackIndicatorTx
   **/
  public char LocErrorIro1ComponentRollbackIndicatorTx_AS;
  /**
   * Attribute for: LocErrorIro1ComponentRollbackIndicatorTx
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String LocErrorIro1ComponentRollbackIndicatorTx;
  /**
   * Default Constructor
   **/
  
  public CYYY9041_LA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public CYYY9041_LA(CYYY9041_LA orig)
  {
    LocImpErrorIro1ComponentSpecificationId_AS = orig.LocImpErrorIro1ComponentSpecificationId_AS;
    LocImpErrorIro1ComponentSpecificationId = orig.LocImpErrorIro1ComponentSpecificationId;
    LocImpErrorIro1ComponentImplementationId_AS = orig.LocImpErrorIro1ComponentImplementationId_AS;
    LocImpErrorIro1ComponentImplementationId = orig.LocImpErrorIro1ComponentImplementationId;
    LocImpErrorIro1ComponentOriginServid_AS = orig.LocImpErrorIro1ComponentOriginServid_AS;
    LocImpErrorIro1ComponentOriginServid = orig.LocImpErrorIro1ComponentOriginServid;
    LocImpErrorIro1ComponentReturnCode_AS = orig.LocImpErrorIro1ComponentReturnCode_AS;
    LocImpErrorIro1ComponentReturnCode = orig.LocImpErrorIro1ComponentReturnCode;
    LocImpErrorIro1ComponentReasonCode_AS = orig.LocImpErrorIro1ComponentReasonCode_AS;
    LocImpErrorIro1ComponentReasonCode = orig.LocImpErrorIro1ComponentReasonCode;
    LocImpErrorIro1ComponentContextStringTx_AS = orig.LocImpErrorIro1ComponentContextStringTx_AS;
    LocImpErrorIro1ComponentContextStringTx = orig.LocImpErrorIro1ComponentContextStringTx;
    LocImpErrorIro1ComponentActivityCd_AS = orig.LocImpErrorIro1ComponentActivityCd_AS;
    LocImpErrorIro1ComponentActivityCd = orig.LocImpErrorIro1ComponentActivityCd;
    LocImpErrorIro1ComponentDialectCd_AS = orig.LocImpErrorIro1ComponentDialectCd_AS;
    LocImpErrorIro1ComponentDialectCd = orig.LocImpErrorIro1ComponentDialectCd;
    LocOtherErrorIyy1ComponentReturnCode_AS = orig.LocOtherErrorIyy1ComponentReturnCode_AS;
    LocOtherErrorIyy1ComponentReturnCode = orig.LocOtherErrorIyy1ComponentReturnCode;
    LocOtherErrorIyy1ComponentReasonCode_AS = orig.LocOtherErrorIyy1ComponentReasonCode_AS;
    LocOtherErrorIyy1ComponentReasonCode = orig.LocOtherErrorIyy1ComponentReasonCode;
    LocErrorMsgIro1ComponentSeverityCd_AS = orig.LocErrorMsgIro1ComponentSeverityCd_AS;
    LocErrorMsgIro1ComponentSeverityCd = orig.LocErrorMsgIro1ComponentSeverityCd;
    LocErrorMsgIro1ComponentMessageTx_AS = orig.LocErrorMsgIro1ComponentMessageTx_AS;
    LocErrorMsgIro1ComponentMessageTx = orig.LocErrorMsgIro1ComponentMessageTx;
    LocErrorIro1ComponentOriginServid_AS = orig.LocErrorIro1ComponentOriginServid_AS;
    LocErrorIro1ComponentOriginServid = orig.LocErrorIro1ComponentOriginServid;
    LocErrorIro1ComponentReturnCode_AS = orig.LocErrorIro1ComponentReturnCode_AS;
    LocErrorIro1ComponentReturnCode = orig.LocErrorIro1ComponentReturnCode;
    LocErrorIro1ComponentReasonCode_AS = orig.LocErrorIro1ComponentReasonCode_AS;
    LocErrorIro1ComponentReasonCode = orig.LocErrorIro1ComponentReasonCode;
    LocErrorIro1ComponentContextStringTx_AS = orig.LocErrorIro1ComponentContextStringTx_AS;
    LocErrorIro1ComponentContextStringTx = orig.LocErrorIro1ComponentContextStringTx;
    LocErrorIro1ComponentSeverityCd_AS = orig.LocErrorIro1ComponentSeverityCd_AS;
    LocErrorIro1ComponentSeverityCd = orig.LocErrorIro1ComponentSeverityCd;
    LocErrorIro1ComponentRollbackIndicatorTx_AS = orig.LocErrorIro1ComponentRollbackIndicatorTx_AS;
    LocErrorIro1ComponentRollbackIndicatorTx = orig.LocErrorIro1ComponentRollbackIndicatorTx;
  }
  /**
   * Static instance creator function
   **/
  
  public static CYYY9041_LA getInstance()
  {
    return new CYYY9041_LA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new CYYY9041_LA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    LocImpErrorIro1ComponentSpecificationId_AS = ' ';
    LocImpErrorIro1ComponentSpecificationId = 0.0;
    LocImpErrorIro1ComponentImplementationId_AS = ' ';
    LocImpErrorIro1ComponentImplementationId = 0.0;
    LocImpErrorIro1ComponentOriginServid_AS = ' ';
    LocImpErrorIro1ComponentOriginServid = 0.0;
    LocImpErrorIro1ComponentReturnCode_AS = ' ';
    LocImpErrorIro1ComponentReturnCode = 0;
    LocImpErrorIro1ComponentReasonCode_AS = ' ';
    LocImpErrorIro1ComponentReasonCode = 0;
    LocImpErrorIro1ComponentContextStringTx_AS = ' ';
    LocImpErrorIro1ComponentContextStringTx = "";
    LocImpErrorIro1ComponentActivityCd_AS = ' ';
    LocImpErrorIro1ComponentActivityCd = "               ";
    LocImpErrorIro1ComponentDialectCd_AS = ' ';
    LocImpErrorIro1ComponentDialectCd = "        ";
    LocOtherErrorIyy1ComponentReturnCode_AS = ' ';
    LocOtherErrorIyy1ComponentReturnCode = 0;
    LocOtherErrorIyy1ComponentReasonCode_AS = ' ';
    LocOtherErrorIyy1ComponentReasonCode = 0;
    LocErrorMsgIro1ComponentSeverityCd_AS = ' ';
    LocErrorMsgIro1ComponentSeverityCd = " ";
    LocErrorMsgIro1ComponentMessageTx_AS = ' ';
    LocErrorMsgIro1ComponentMessageTx = "";
    LocErrorIro1ComponentOriginServid_AS = ' ';
    LocErrorIro1ComponentOriginServid = 0.0;
    LocErrorIro1ComponentReturnCode_AS = ' ';
    LocErrorIro1ComponentReturnCode = 0;
    LocErrorIro1ComponentReasonCode_AS = ' ';
    LocErrorIro1ComponentReasonCode = 0;
    LocErrorIro1ComponentContextStringTx_AS = ' ';
    LocErrorIro1ComponentContextStringTx = "";
    LocErrorIro1ComponentSeverityCd_AS = ' ';
    LocErrorIro1ComponentSeverityCd = " ";
    LocErrorIro1ComponentRollbackIndicatorTx_AS = ' ';
    LocErrorIro1ComponentRollbackIndicatorTx = " ";
  }
}

package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: CYYY9041_OA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:07:38
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF EXPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: CYYY9041_OA
 **/
public class CYYY9041_OA extends ViewBase implements IExportView, Serializable
{
  // Entity View: EXP_ERROR_MSG
  //        Type: IYY1_COMPONENT
  /**
   * Attribute missing flag for: ExpErrorMsgIyy1ComponentSeverityCode
   **/
  public char ExpErrorMsgIyy1ComponentSeverityCode_AS;
  /**
   * Attribute for: ExpErrorMsgIyy1ComponentSeverityCode
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ExpErrorMsgIyy1ComponentSeverityCode;
  /**
   * Attribute missing flag for: ExpErrorMsgIyy1ComponentMessageTx
   **/
  public char ExpErrorMsgIyy1ComponentMessageTx_AS;
  /**
   * Attribute for: ExpErrorMsgIyy1ComponentMessageTx
   * Domain: Text
   * Length: 512
   * Varying Length: Y
   **/
  public String ExpErrorMsgIyy1ComponentMessageTx;
  // Entity View: EXP_ERROR
  //        Type: IYY1_COMPONENT
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentSeverityCode
   **/
  public char ExpErrorIyy1ComponentSeverityCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentSeverityCode
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentSeverityCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentRollbackIndicator
   **/
  public char ExpErrorIyy1ComponentRollbackIndicator_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentRollbackIndicator
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentRollbackIndicator;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentOriginServid
   **/
  public char ExpErrorIyy1ComponentOriginServid_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentOriginServid
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double ExpErrorIyy1ComponentOriginServid;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentContextString
   **/
  public char ExpErrorIyy1ComponentContextString_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentContextString
   * Domain: Text
   * Length: 512
   * Varying Length: Y
   **/
  public String ExpErrorIyy1ComponentContextString;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentReturnCode
   **/
  public char ExpErrorIyy1ComponentReturnCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentReturnCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ExpErrorIyy1ComponentReturnCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentReasonCode
   **/
  public char ExpErrorIyy1ComponentReasonCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentReasonCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ExpErrorIyy1ComponentReasonCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentChecksum
   **/
  public char ExpErrorIyy1ComponentChecksum_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentChecksum
   * Domain: Text
   * Length: 15
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentChecksum;
  /**
   * Default Constructor
   **/
  
  public CYYY9041_OA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public CYYY9041_OA(CYYY9041_OA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static CYYY9041_OA getInstance()
  {
    return new CYYY9041_OA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new CYYY9041_OA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    ExpErrorMsgIyy1ComponentSeverityCode_AS = ' ';
    ExpErrorMsgIyy1ComponentSeverityCode = " ";
    ExpErrorMsgIyy1ComponentMessageTx_AS = ' ';
    ExpErrorMsgIyy1ComponentMessageTx = "";
    ExpErrorIyy1ComponentSeverityCode_AS = ' ';
    ExpErrorIyy1ComponentSeverityCode = " ";
    ExpErrorIyy1ComponentRollbackIndicator_AS = ' ';
    ExpErrorIyy1ComponentRollbackIndicator = " ";
    ExpErrorIyy1ComponentOriginServid_AS = ' ';
    ExpErrorIyy1ComponentOriginServid = 0.0;
    ExpErrorIyy1ComponentContextString_AS = ' ';
    ExpErrorIyy1ComponentContextString = "";
    ExpErrorIyy1ComponentReturnCode_AS = ' ';
    ExpErrorIyy1ComponentReturnCode = 0;
    ExpErrorIyy1ComponentReasonCode_AS = ' ';
    ExpErrorIyy1ComponentReasonCode = 0;
    ExpErrorIyy1ComponentChecksum_AS = ' ';
    ExpErrorIyy1ComponentChecksum = "               ";
  }
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    throw new RuntimeException("can only execute setFromVDF for a Procedure Step.");
  }
  
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    throw new RuntimeException("can only execute getVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IExportView orig)
  {
    this.copyFrom((CYYY9041_OA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(CYYY9041_OA orig)
  {
    ExpErrorMsgIyy1ComponentSeverityCode_AS = orig.ExpErrorMsgIyy1ComponentSeverityCode_AS;
    ExpErrorMsgIyy1ComponentSeverityCode = orig.ExpErrorMsgIyy1ComponentSeverityCode;
    ExpErrorMsgIyy1ComponentMessageTx_AS = orig.ExpErrorMsgIyy1ComponentMessageTx_AS;
    ExpErrorMsgIyy1ComponentMessageTx = orig.ExpErrorMsgIyy1ComponentMessageTx;
    ExpErrorIyy1ComponentSeverityCode_AS = orig.ExpErrorIyy1ComponentSeverityCode_AS;
    ExpErrorIyy1ComponentSeverityCode = orig.ExpErrorIyy1ComponentSeverityCode;
    ExpErrorIyy1ComponentRollbackIndicator_AS = orig.ExpErrorIyy1ComponentRollbackIndicator_AS;
    ExpErrorIyy1ComponentRollbackIndicator = orig.ExpErrorIyy1ComponentRollbackIndicator;
    ExpErrorIyy1ComponentOriginServid_AS = orig.ExpErrorIyy1ComponentOriginServid_AS;
    ExpErrorIyy1ComponentOriginServid = orig.ExpErrorIyy1ComponentOriginServid;
    ExpErrorIyy1ComponentContextString_AS = orig.ExpErrorIyy1ComponentContextString_AS;
    ExpErrorIyy1ComponentContextString = orig.ExpErrorIyy1ComponentContextString;
    ExpErrorIyy1ComponentReturnCode_AS = orig.ExpErrorIyy1ComponentReturnCode_AS;
    ExpErrorIyy1ComponentReturnCode = orig.ExpErrorIyy1ComponentReturnCode;
    ExpErrorIyy1ComponentReasonCode_AS = orig.ExpErrorIyy1ComponentReasonCode_AS;
    ExpErrorIyy1ComponentReasonCode = orig.ExpErrorIyy1ComponentReasonCode;
    ExpErrorIyy1ComponentChecksum_AS = orig.ExpErrorIyy1ComponentChecksum_AS;
    ExpErrorIyy1ComponentChecksum = orig.ExpErrorIyy1ComponentChecksum;
  }
}
