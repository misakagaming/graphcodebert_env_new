
package gen.ort.yyy;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: CYYY0231_CHILD_UPDATE            Date: 2023/07/05
//    Target OS:   JVM                       Time: 15:08:46
//    Target DBMS: JDBC                      User: HakanBal
//    Access Method: JDBC           
//
//    Generation options:
//    Debug trace option selected
//    Data modeling constraint enforcement not selected
//    Optimized import view initialization not selected
//    Enforce default values with DBMS not selected
//    Init unspecified optional fields to NULL not selected
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;

import com.ca.gen.abrt.*;
import com.ca.gen.abrt.functions.*;
import com.ca.gen.abrt.cascade.*;
import com.ca.gen.abrt.trace.*;
import com.ca.gen.exits.common.*;
import com.ca.gen.odc.*;

public class CYYY0231 extends ABBase
{
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // IMPORT VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  CYYY0231_IA w_ia;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // EXPORT VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  CYYY0231_OA w_oa;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // LOCAL VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  CYYY0231_LA w_la;
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // ACTION BLOCK IMPORT/EXPORT VIEWS CLASS VARIABLES
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  gen.ort.yyy.CYYY9001_OA cyyy9001_oa;
  gen.ort.yyy.CYYY9141_IA cyyy9141_ia;
  gen.ort.yyy.CYYY9141_OA cyyy9141_oa;
  gen.ort.yyy.DYYY0231_IA dyyy0231_ia;
  gen.ort.yyy.DYYY0231_OA dyyy0231_oa;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // REPEATING GROUP VIEW STATUS FIELDS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  boolean LocGroupContext_FL_001;
  int LocGroupContext_PS_001;
  boolean LocGroupContext_RF_001;
  public final static int LocGroupContext_MM_001 = 9;
  boolean ImpGroupContext_FL_002;
  int ImpGroupContext_PS_002;
  boolean ImpGroupContext_RF_002;
  public final static int ImpGroupContext_MM_002 = 9;
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // MISC DECLARATIONS AND PROTOTYPES 
  //    FOLLOW AS NEEDED:             
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  boolean func_0022020114_esc_flag;
  boolean func_0020972457_esc_flag;
  boolean func_0020972964_esc_flag;
  boolean func_0020971904_esc_flag;
  boolean func_0020971673_esc_flag;
  boolean func_0020972377_esc_flag;
  boolean func_0020972454_esc_flag;
  boolean func_0020973004_esc_flag;
  PadView padview[] = new PadView [67];
  int trace_ret_code;
  PadText padtext[] = initPadText();
  public PadText [] initPadText()
  {
    PadText [] result = new PadText [PADTEXT_SIZE];
    result[0] = PadText.getInstance(   0,"+->   CYYY0231_CHILD_UPDATE             07/05/2023  15:08");
    result[1] = PadText.getInstance(   0,"!       IMPORTS:");
    result[2] = PadText.getInstance(   0,"!         Work View imp_reference iyy1_server_data (Transient, Mandatory, Import only)");
    result[3] = PadText.getInstance(   0,"!           userid");
    result[4] = PadText.getInstance(   0,"!           reference_id");
    result[5] = PadText.getInstance(   0,"!         Entity View imp child (Transient, Mandatory, Import only)");
    result[6] = PadText.getInstance(   0,"!           cinstance_id");
    result[7] = PadText.getInstance(   0,"!           creference_id");
    result[8] = PadText.getInstance(   0,"!           cparent_pkey_attr_text");
    result[9] = PadText.getInstance(   0,"!           ckey_attr_num");
    result[10] = PadText.getInstance(   0,"!           csearch_attr_text");
    result[11] = PadText.getInstance(   0,"!           cother_attr_text");
    result[12] = PadText.getInstance(   0,"!       EXPORTS:");
    result[13] = PadText.getInstance(   0,"!         Entity View exp child (Transient, Export only)");
    result[14] = PadText.getInstance(   0,"!           creference_id");
    result[15] = PadText.getInstance(   0,"!         Work View exp_error iyy1_component (Transient, Export only)");
    result[16] = PadText.getInstance(   0,"!           severity_code");
    result[17] = PadText.getInstance(   0,"!           rollback_indicator");
    result[18] = PadText.getInstance(   0,"!           origin_servid");
    result[19] = PadText.getInstance(   0,"!           context_string");
    result[20] = PadText.getInstance(   0,"!           return_code");
    result[21] = PadText.getInstance(   0,"!           reason_code");
    result[22] = PadText.getInstance(   0,"!           checksum");
    result[23] = PadText.getInstance(   0,"!       LOCALS:");
    result[24] = PadText.getInstance(   0,"!         Entity View loc_imp child");
    result[25] = PadText.getInstance(   0,"!           cinstance_id");
    result[26] = PadText.getInstance(   0,"!           creference_id");
    result[27] = PadText.getInstance(   0,"!           cparent_pkey_attr_text");
    result[28] = PadText.getInstance(   0,"!           ckey_attr_num");
    result[29] = PadText.getInstance(   0,"!           csearch_attr_text");
    result[30] = PadText.getInstance(   0,"!           cother_attr_text");
    result[31] = PadText.getInstance(   0,"!         Entity View loc_empty child");
    result[32] = PadText.getInstance(   0,"!           cinstance_id");
    result[33] = PadText.getInstance(   0,"!           creference_id");
    result[34] = PadText.getInstance(   0,"!           cparent_pkey_attr_text");
    result[35] = PadText.getInstance(   0,"!           ckey_attr_num");
    result[36] = PadText.getInstance(   0,"!           csearch_attr_text");
    result[37] = PadText.getInstance(   0,"!           cother_attr_text");
    result[38] = PadText.getInstance(   0,"!         Work View loc_error iyy1_component");
    result[39] = PadText.getInstance(   0,"!           severity_code");
    result[40] = PadText.getInstance(   0,"!           rollback_indicator");
    result[41] = PadText.getInstance(   0,"!           origin_servid");
    result[42] = PadText.getInstance(   0,"!           context_string");
    result[43] = PadText.getInstance(   0,"!           return_code");
    result[44] = PadText.getInstance(   0,"!           reason_code");
    result[45] = PadText.getInstance(   0,"!           checksum");
    result[46] = PadText.getInstance(   0,"!         Group View (9) loc_group_context");
    result[47] = PadText.getInstance(   0,"!           Work View loc_g_context dont_change_text");
    result[48] = PadText.getInstance(   0,"!             text_150");
    result[49] = PadText.getInstance(   0,"!         Work View loc dont_change_return_codes");
    result[50] = PadText.getInstance(   0,"!           1_ok");
    result[51] = PadText.getInstance(   0,"!           n20_mandatory_import_missing");
    result[52] = PadText.getInstance(   0,"!         Work View loc dont_change_reason_codes");
    result[53] = PadText.getInstance(   0,"!           1_default");
    result[54] = PadText.getInstance(   0,"!           124_child_parent_key_attr_mand");
    result[55] = PadText.getInstance(   0,"!           125_child_key_attr_mand");
    result[56] = PadText.getInstance(   0,"!           126_child_search_attr_mand");
    result[57] = PadText.getInstance(   0,"!");
    result[58] = PadText.getInstance(   0,"!     PROCEDURE STATEMENTS");
    result[59] = PadText.getInstance(   0,"!");
    result[60] = PadText.getInstance(   1,"!  NOTE: ");
    result[61] = PadText.getInstance(   1,"!  See the description for the purpose.");
    result[62] = PadText.getInstance(   1,"!  ");
    result[63] = PadText.getInstance(   2,"!  NOTE: ");
    result[64] = PadText.getInstance(   2,"!  RELEASE HISTORY");
    result[65] = PadText.getInstance(   2,"!  01_00 23-02-1998 New release");
    result[66] = PadText.getInstance(   2,"!  ");
    result[67] = PadText.getInstance(   3,"!  USE cyyy9001_exception_hndlng_dflt");
    result[68] = PadText.getInstance(   3,
      "!     WHICH EXPORTS: Work View exp_error iyy1_component FROM Work View exp_error iyy1_component");
    result[69] = PadText.getInstance(   4,"!   ");
    result[70] = PadText.getInstance(   5,"!  NOTE: ");
    result[71] = PadText.getInstance(   5,"!  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    result[72] = PadText.getInstance(   5,"!  Name the method below");
    result[73] = PadText.getInstance(   5,"!  ");
    result[74] = PadText.getInstance(   6,"!  SET SUBSCRIPT OF loc_group_context TO 1 ");
    result[75] = PadText.getInstance(   7,"!  SET loc_g_context dont_change_text text_150 TO \"CYYY0231\" ");
    result[76] = PadText.getInstance(   8,"!  SET SUBSCRIPT OF loc_group_context TO 2 ");
    result[77] = PadText.getInstance(   9,"!  SET loc_g_context dont_change_text text_150 TO \"UPDATE\" ");
    result[78] = PadText.getInstance(  10,"!   ");
    result[79] = PadText.getInstance(  11,"!  NOTE: ");
    result[80] = PadText.getInstance(  11,"!  ****************************************************************");
    result[81] = PadText.getInstance(  11,"!  The used ReturnCode/ReasonCode values");
    result[82] = PadText.getInstance(  11,"!  ");
    result[83] = PadText.getInstance(  12,"!  NOTE: ");
    result[84] = PadText.getInstance(  12,"!  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    result[85] = PadText.getInstance(  12,"!  Set the return and reason codes below");
    result[86] = PadText.getInstance(  12,"!  ");
    result[87] = PadText.getInstance(  13,"!  SET loc dont_change_return_codes 1_ok TO 1 ");
    result[88] = PadText.getInstance(  14,"!  SET loc dont_change_return_codes n20_mandatory_import_missing TO -20 ");
    result[89] = PadText.getInstance(  15,"!   ");
    result[90] = PadText.getInstance(  16,"!  SET loc dont_change_reason_codes 1_default TO 1 ");
    result[91] = PadText.getInstance(  17,"!  SET loc dont_change_reason_codes 124_child_parent_key_attr_mand TO 124 ");
    result[92] = PadText.getInstance(  18,"!  SET loc dont_change_reason_codes 125_child_key_attr_mand TO 125 ");
    result[93] = PadText.getInstance(  19,"!  SET loc dont_change_reason_codes 126_child_search_attr_mand TO 126 ");
    result[94] = PadText.getInstance(  20,"!   ");
    result[95] = PadText.getInstance(  21,"!  NOTE: ");
    result[96] = PadText.getInstance(  21,"!  ****************************************************************");
    result[97] = PadText.getInstance(  21,"!  ");
    result[98] = PadText.getInstance(  22,"!  MOVE imp child TO loc_imp child");
    result[99] = PadText.getInstance(  23,"!   ");
    result[100] = PadText.getInstance(  24,"!  NOTE: ");
    result[101] = PadText.getInstance(  24,"!  ****************************************************************");
    result[102] = PadText.getInstance(  24,"!  Mandatory or optional only the needed fields for the operation are checked.");
    result[103] = PadText.getInstance(  24,"!  ");
    result[104] = PadText.getInstance(  25,"!  +->IF exp_error iyy1_component return_code >= loc dont_change_return_codes 1_ok");
    result[105] = PadText.getInstance(  26,
      "!  !  +->IF loc_imp child cparent_pkey_attr_text <= loc_empty child cparent_pkey_attr_text");
    result[106] = PadText.getInstance(  27,
      "!  !  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n20_mandatory_import_missing ");
    result[107] = PadText.getInstance(  28,
      "!  !  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 124_child_parent_key_attr_mand ");
    result[108] = PadText.getInstance(  29,"! <------ESCAPE");
    result[109] = PadText.getInstance(  26,"!  !  +--");
    result[110] = PadText.getInstance(  30,"!  !  +->IF loc_imp child ckey_attr_num <= loc_empty child ckey_attr_num");
    result[111] = PadText.getInstance(  31,
      "!  !  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n20_mandatory_import_missing ");
    result[112] = PadText.getInstance(  32,
      "!  !  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 125_child_key_attr_mand ");
    result[113] = PadText.getInstance(  33,"! <------ESCAPE");
    result[114] = PadText.getInstance(  30,"!  !  +--");
    result[115] = PadText.getInstance(  34,"!  !  +->IF loc_imp child csearch_attr_text <= loc_empty child csearch_attr_text");
    result[116] = PadText.getInstance(  35,
      "!  !  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n20_mandatory_import_missing ");
    result[117] = PadText.getInstance(  36,
      "!  !  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 126_child_search_attr_mand ");
    result[118] = PadText.getInstance(  37,"! <------ESCAPE");
    result[119] = PadText.getInstance(  34,"!  !  +--");
    result[120] = PadText.getInstance(  25,"!  +--");
    result[121] = PadText.getInstance(  38,"!   ");
    result[122] = PadText.getInstance(  39,"!  NOTE: ");
    result[123] = PadText.getInstance(  39,"!  ****************************************************************");
    result[124] = PadText.getInstance(  39,"!  The operation is done.");
    result[125] = PadText.getInstance(  39,"!  ");
    result[126] = PadText.getInstance(  40,"!  +->IF exp_error iyy1_component return_code >= loc dont_change_return_codes 1_ok");
    result[127] = PadText.getInstance(  41,"!  !  USE dyyy0231_child_update");
    result[128] = PadText.getInstance(  41,
      "!  !     WHICH IMPORTS: Work View exp_error iyy1_component TO Work View imp_error iyy1_component");
    result[129] = PadText.getInstance(  41,
      "!  !                    Work View imp_reference iyy1_server_data TO Work View imp_reference iyy1_server_data");
    result[130] = PadText.getInstance(  41,"!  !                    Entity View loc_imp child TO Entity View imp child");
    result[131] = PadText.getInstance(  41,"!  !     WHICH EXPORTS: Entity View exp child FROM Entity View exp child");
    result[132] = PadText.getInstance(  41,
      "!  !                    Work View loc_error iyy1_component FROM Work View exp_error iyy1_component");
    result[133] = PadText.getInstance(  42,"!  !  +->IF loc_error iyy1_component return_code < loc dont_change_return_codes 1_ok");
    result[134] = PadText.getInstance(  43,"!  !  !  MOVE loc_error iyy1_component TO exp_error iyy1_component");
    result[135] = PadText.getInstance(  44,"!  !  !  NOTE: ");
    result[136] = PadText.getInstance(  44,"!  !  !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    result[137] = PadText.getInstance(  44,
      "!  !  !  !! WARNING: In D AB, if there' s a need for generating context string, must exit from ESCAPE AB.");
    result[138] = PadText.getInstance(  44,"!  !  !  ");
    result[139] = PadText.getInstance(  45,"! <------ESCAPE");
    result[140] = PadText.getInstance(  42,"!  !  +--");
    result[141] = PadText.getInstance(  40,"!  +--");
    result[142] = PadText.getInstance(  46,"!   ");
    result[143] = PadText.getInstance(  47,"!  +->IF exp_error iyy1_component return_code < loc dont_change_return_codes 1_ok");
    result[144] = PadText.getInstance(  48,"!  !  USE cyyy9141_context_string_set");
    result[145] = PadText.getInstance(  48,"!  !     WHICH IMPORTS: Group View  loc_group_context TO Group View imp_group_context");
    result[146] = PadText.getInstance(  48,
      "!  !     WHICH EXPORTS: Work View loc_error iyy1_component FROM Work View exp_error iyy1_component");
    result[147] = PadText.getInstance(  48,
      "!  !                    Work View exp_error iyy1_component FROM Work View exp_context iyy1_component");
    result[148] = PadText.getInstance(  49,"!  !   ");
    result[149] = PadText.getInstance(  50,"!  !  +->IF loc_error iyy1_component return_code < loc dont_change_return_codes 1_ok");
    result[150] = PadText.getInstance(  51,"!  !  !  MOVE loc_error iyy1_component TO exp_error iyy1_component");
    result[151] = PadText.getInstance(  50,"!  !  +--");
    result[152] = PadText.getInstance(  52,"!  !  SET exp_error iyy1_component severity_code TO \"E\" ");
    result[153] = PadText.getInstance(  47,"!  +--");
    result[154] = PadText.getInstance(   0,"+---");
    result[155] = PadText.getInstance(PadText.LASTLINE,"************************* BOTTOM OF DATA *************************");
    return result;
  }
  final static int PADTEXT_SIZE = 156;
  //       +->   CYYY0231_CHILD_UPDATE             07/05/2023  15:08
  //       !       IMPORTS:
  //       !         Work View imp_reference iyy1_server_data (Transient, Mandatory, Import only)
  //       !           userid
  //       !           reference_id
  //       !         Entity View imp child (Transient, Mandatory, Import only)
  //       !           cinstance_id
  //       !           creference_id
  //       !           cparent_pkey_attr_text
  //       !           ckey_attr_num
  //       !           csearch_attr_text
  //       !           cother_attr_text
  //       !       EXPORTS:
  //       !         Entity View exp child (Transient, Export only)
  //       !           creference_id
  //       !         Work View exp_error iyy1_component (Transient, Export only)
  //       !           severity_code
  //       !           rollback_indicator
  //       !           origin_servid
  //       !           context_string
  //       !           return_code
  //       !           reason_code
  //       !           checksum
  //       !       LOCALS:
  //       !         Entity View loc_imp child
  //       !           cinstance_id
  //       !           creference_id
  //       !           cparent_pkey_attr_text
  //       !           ckey_attr_num
  //       !           csearch_attr_text
  //       !           cother_attr_text
  //       !         Entity View loc_empty child
  //       !           cinstance_id
  //       !           creference_id
  //       !           cparent_pkey_attr_text
  //       !           ckey_attr_num
  //       !           csearch_attr_text
  //       !           cother_attr_text
  //       !         Work View loc_error iyy1_component
  //       !           severity_code
  //       !           rollback_indicator
  //       !           origin_servid
  //       !           context_string
  //       !           return_code
  //       !           reason_code
  //       !           checksum
  //       !         Group View (9) loc_group_context
  //       !           Work View loc_g_context dont_change_text
  //       !             text_150
  //       !         Work View loc dont_change_return_codes
  //       !           1_ok
  //       !           n20_mandatory_import_missing
  //       !         Work View loc dont_change_reason_codes
  //       !           1_default
  //       !           124_child_parent_key_attr_mand
  //       !           125_child_key_attr_mand
  //       !           126_child_search_attr_mand
  //       !
  //       !     PROCEDURE STATEMENTS
  //       !
  //     1 !  NOTE: 
  //     1 !  See the description for the purpose.
  //     1 !  
  //     2 !  NOTE: 
  //     2 !  RELEASE HISTORY
  //     2 !  01_00 23-02-1998 New release
  //     2 !  
  //     3 !  USE cyyy9001_exception_hndlng_dflt
  //     3 !     WHICH EXPORTS: Work View exp_error iyy1_component FROM Work View exp_error iyy1_component
  //     4 !   
  //     5 !  NOTE: 
  //     5 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  //     5 !  Name the method below
  //     5 !  
  //     6 !  SET SUBSCRIPT OF loc_group_context TO 1 
  //     7 !  SET loc_g_context dont_change_text text_150 TO "CYYY0231" 
  //     8 !  SET SUBSCRIPT OF loc_group_context TO 2 
  //     9 !  SET loc_g_context dont_change_text text_150 TO "UPDATE" 
  //    10 !   
  //    11 !  NOTE: 
  //    11 !  ****************************************************************
  //    11 !  The used ReturnCode/ReasonCode values
  //    11 !  
  //    12 !  NOTE: 
  //    12 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  //    12 !  Set the return and reason codes below
  //    12 !  
  //    13 !  SET loc dont_change_return_codes 1_ok TO 1 
  //    14 !  SET loc dont_change_return_codes n20_mandatory_import_missing TO -20 
  //    15 !   
  //    16 !  SET loc dont_change_reason_codes 1_default TO 1 
  //    17 !  SET loc dont_change_reason_codes 124_child_parent_key_attr_mand TO 124 
  //    18 !  SET loc dont_change_reason_codes 125_child_key_attr_mand TO 125 
  //    19 !  SET loc dont_change_reason_codes 126_child_search_attr_mand TO 126 
  //    20 !   
  //    21 !  NOTE: 
  //    21 !  ****************************************************************
  //    21 !  
  //    22 !  MOVE imp child TO loc_imp child
  //    23 !   
  //    24 !  NOTE: 
  //    24 !  ****************************************************************
  //    24 !  Mandatory or optional only the needed fields for the operation are checked.
  //    24 !  
  //    25 !  +->IF exp_error iyy1_component return_code >= loc dont_change_return_codes 1_ok
  //    26 !  !  +->IF loc_imp child cparent_pkey_attr_text <= loc_empty child cparent_pkey_attr_text
  //    27 !  !  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n20_mandatory_import_missing 
  //    28 !  !  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 124_child_parent_key_attr_mand 
  //    29 ! <------ESCAPE
  //    26 !  !  +--
  //    30 !  !  +->IF loc_imp child ckey_attr_num <= loc_empty child ckey_attr_num
  //    31 !  !  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n20_mandatory_import_missing 
  //    32 !  !  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 125_child_key_attr_mand 
  //    33 ! <------ESCAPE
  //    30 !  !  +--
  //    34 !  !  +->IF loc_imp child csearch_attr_text <= loc_empty child csearch_attr_text
  //    35 !  !  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n20_mandatory_import_missing 
  //    36 !  !  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 126_child_search_attr_mand 
  //    37 ! <------ESCAPE
  //    34 !  !  +--
  //    25 !  +--
  //    38 !   
  //    39 !  NOTE: 
  //    39 !  ****************************************************************
  //    39 !  The operation is done.
  //    39 !  
  //    40 !  +->IF exp_error iyy1_component return_code >= loc dont_change_return_codes 1_ok
  //    41 !  !  USE dyyy0231_child_update
  //    41 !  !     WHICH IMPORTS: Work View exp_error iyy1_component TO Work View imp_error iyy1_component
  //    41 !  !                    Work View imp_reference iyy1_server_data TO Work View imp_reference iyy1_server_data
  //    41 !  !                    Entity View loc_imp child TO Entity View imp child
  //    41 !  !     WHICH EXPORTS: Entity View exp child FROM Entity View exp child
  //    41 !  !                    Work View loc_error iyy1_component FROM Work View exp_error iyy1_component
  //    42 !  !  +->IF loc_error iyy1_component return_code < loc dont_change_return_codes 1_ok
  //    43 !  !  !  MOVE loc_error iyy1_component TO exp_error iyy1_component
  //    44 !  !  !  NOTE: 
  //    44 !  !  !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  //    44 !  !  !  !! WARNING: In D AB, if there' s a need for generating context string, must exit from ESCAPE AB.
  //    44 !  !  !  
  //    45 ! <------ESCAPE
  //    42 !  !  +--
  //    40 !  +--
  //    46 !   
  //    47 !  +->IF exp_error iyy1_component return_code < loc dont_change_return_codes 1_ok
  //    48 !  !  USE cyyy9141_context_string_set
  //    48 !  !     WHICH IMPORTS: Group View  loc_group_context TO Group View imp_group_context
  //    48 !  !     WHICH EXPORTS: Work View loc_error iyy1_component FROM Work View exp_error iyy1_component
  //    48 !  !                    Work View exp_error iyy1_component FROM Work View exp_context iyy1_component
  //    49 !  !   
  //    50 !  !  +->IF loc_error iyy1_component return_code < loc dont_change_return_codes 1_ok
  //    51 !  !  !  MOVE loc_error iyy1_component TO exp_error iyy1_component
  //    50 !  !  +--
  //    52 !  !  SET exp_error iyy1_component severity_code TO "E" 
  //    47 !  +--
  //       +---
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  //  CONSTRUCTOR FOR THE CLASS       
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  public CYYY0231()
  {
    iefCGenRlse = "CA Gen 8.6";
    ssCopyright = "Copyright (c) 2023 CA Technologies. All rights reserved.";
    iefCGenDate = "2023/07/05";
    iefCGenTime = "15:08:46";
    iefCGenEncy = "9.2.A6";
    iefCGenUserId = "HakanBal";
    iefCGenModel = "N8I_ORT_YYY_0112_TEMPLATE";
    iefCGenSubset = "ALL";
    iefCGenName = "CYYY0231_CHILD_UPDATE";
    nestingLevel = 0;
    valChkDeadlockTimeout = false;
    valChkDBError = false;
  }
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // ACTION BLOCK FUNCTION DECLARATIONS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  public void CYYY0231( Object in_runtime_parm1, 
  	IRuntimePStepContext in_runtime_parm2, 
  	GlobData in_globdata, 
  	CYYY0231_IA import_view, 
  	CYYY0231_OA export_view )
  {
    iefRuntimeParm1 = in_runtime_parm1;
    iefRuntimeParm2 = in_runtime_parm2;
    globdata = in_globdata;
    w_ia = import_view;
    w_oa = export_view;
    _CYYY0231();
  }
  
  private void _CYYY0231()
  {
    
    f_22020114_localAlloc("CYYY0231_CHILD_UPDATE");
    if ( globdata.getErrorData().getLastStatus() == ErrorData.IEF_ALLOCATION_ERROR_FL_LS )
    	return;
    
    ++(nestingLevel);
    try {
      f_22020114_init();
      f_22020114();
    } catch( ABException e ) {
    } finally {
      --(nestingLevel);
    }
    String last_stmt_num_saved = globdata.getStateData().getLastStatementNumber();
    globdata.getStateData().setLastStatementNumber( "9999999999" );
    try {
      f_0_trace();
    } catch( ABException e ) {
    }
    globdata.getStateData().setLastStatementNumber( last_stmt_num_saved );
  }
  public void f_22020114()
  	throws ABException
  {
    func_0022020114_esc_flag = false;
    globdata.getStateData().setCurrentABId( "0022020114" );
    globdata.getStateData().setCurrentABName( "CYYY0231_CHILD_UPDATE" );
    padview_init();
    globdata.getStateData().setLastStatementNumber( "0000000000" );
    f_0_trace();
    f_0022020114_esctag: 
    {
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    See the description for the purpose.                            
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    RELEASE HISTORY                                                 
      //    01_00 23-02-1998 New release                                    
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      globdata.getStateData().setLastStatementNumber( "0000000003" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        
        cyyy9001_oa = (gen.ort.yyy.CYYY9001_OA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY9001_OA"));
        globdata.getErrorData().setErrorEncounteredSW( ErrorData.NO_ERROR_FOUND_SW );
        iefRuntimeParm2.useActionBlock("gen.ort.yyy.CYYY9001", "CYYY9001", null, cyyy9001_oa);
        if ( ((!(globdata.getErrorData().getStatus().equals( ErrorData.NONE_SF ))) || (globdata.getErrorData().getErrorEncounteredSW(
          ) != ErrorData.NO_ERROR_FOUND_SW)) || (globdata.getErrorData().getViewOverflowSW() != ErrorData.NO_ERROR_FOUND_SW) )
        {
          throw new ABException();
        }
        globdata.getStateData().setCurrentABId( "0022020114" );
        globdata.getStateData().setCurrentABName( "CYYY0231_CHILD_UPDATE" );
        globdata.getStateData().setLastStatementNumber( "0000000003" );
        w_oa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.valueOf(cyyy9001_oa.ExpErrorIyy1ComponentSeverityCode, (short)1);
        w_oa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.valueOf(cyyy9001_oa.ExpErrorIyy1ComponentRollbackIndicator, (
          short)1);
        w_oa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.valueOf(cyyy9001_oa.ExpErrorIyy1ComponentOriginServid);
        w_oa.ExpErrorIyy1ComponentContextString = StringAttr.valueOf(cyyy9001_oa.ExpErrorIyy1ComponentContextString, (short)512);
        w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf(cyyy9001_oa.ExpErrorIyy1ComponentReturnCode);
        w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf(cyyy9001_oa.ExpErrorIyy1ComponentReasonCode);
        w_oa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.valueOf(cyyy9001_oa.ExpErrorIyy1ComponentChecksum, (short)15);
        cyyy9001_oa.freeInstance();
        cyyy9001_oa = null;
      }
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!                      
      //    Name the method below                                           
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      globdata.getStateData().setLastStatementNumber( "0000000006" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        LocGroupContext_PS_001 = (int)TIRD2DEC.TIRD2DC1(1, 0, TIRD2DEC.ROUND_NONE, 0);
        if ( (LocGroupContext_PS_001 > w_la.LocGroupContext_MA) && (LocGroupContext_PS_001 <= 9) )
        w_la.LocGroupContext_MA = IntAttr.valueOf(LocGroupContext_PS_001);
      }
      globdata.getStateData().setLastStatementNumber( "0000000007" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_la.LocGContextDontChangeTextText150[LocGroupContext_PS_001-1] = FixedStringAttr.valueOf("CYYY0231", (short)150);
        f_173015131_rgvc();
      }
      globdata.getStateData().setLastStatementNumber( "0000000008" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        LocGroupContext_PS_001 = (int)TIRD2DEC.TIRD2DC1(2, 0, TIRD2DEC.ROUND_NONE, 0);
        if ( (LocGroupContext_PS_001 > w_la.LocGroupContext_MA) && (LocGroupContext_PS_001 <= 9) )
        w_la.LocGroupContext_MA = IntAttr.valueOf(LocGroupContext_PS_001);
      }
      globdata.getStateData().setLastStatementNumber( "0000000009" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_la.LocGContextDontChangeTextText150[LocGroupContext_PS_001-1] = FixedStringAttr.valueOf("UPDATE", (short)150);
        f_173015131_rgvc();
      }
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    The used ReturnCode/ReasonCode values                           
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
      //    !!                                                              
      //    Set the return and reason codes below                           
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      globdata.getStateData().setLastStatementNumber( "0000000013" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_la.LocDontChangeReturnCodesQ1Ok = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(1, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000014" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_la.LocDontChangeReturnCodesN20MandatoryImportMissing = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(-20, 0, TIRD2DEC.ROUND_NONE, 
          5));
      }
      
      globdata.getStateData().setLastStatementNumber( "0000000016" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_la.LocDontChangeReasonCodesQ1Default = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(1, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000017" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_la.LocDontChangeReasonCodesQ124ChildParentKeyAttrMand = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(124, 0, TIRD2DEC.ROUND_NONE,
           5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000018" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_la.LocDontChangeReasonCodesQ125ChildKeyAttrMand = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(125, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000019" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_la.LocDontChangeReasonCodesQ126ChildSearchAttrMand = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(126, 0, TIRD2DEC.ROUND_NONE, 5)
          );
      }
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      globdata.getStateData().setLastStatementNumber( "0000000022" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_la.LocImpChildCinstanceId = TimestampAttr.valueOf(w_ia.ImpChildCinstanceId);
        w_la.LocImpChildCreferenceId = TimestampAttr.valueOf(w_ia.ImpChildCreferenceId);
        w_la.LocImpChildCparentPkeyAttrText = FixedStringAttr.valueOf(w_ia.ImpChildCparentPkeyAttrText, (short)5);
        w_la.LocImpChildCkeyAttrNum = IntAttr.valueOf(w_ia.ImpChildCkeyAttrNum);
        w_la.LocImpChildCsearchAttrText = FixedStringAttr.valueOf(w_ia.ImpChildCsearchAttrText, (short)25);
        w_la.LocImpChildCotherAttrText = FixedStringAttr.valueOf(w_ia.ImpChildCotherAttrText, (short)25);
      }
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    Mandatory or optional only the needed fields for the operation  
      //    are checked.                                                    
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      globdata.getStateData().setLastStatementNumber( "0000000025" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        if ( ((double) w_oa.ExpErrorIyy1ComponentReturnCode >= (double) w_la.LocDontChangeReturnCodesQ1Ok) )
        {
          f_20972457();
        }
        
      }
      if ( func_0022020114_esc_flag )
      {
        break f_0022020114_esctag;
      }
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    The operation is done.                                          
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      globdata.getStateData().setLastStatementNumber( "0000000040" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        if ( ((double) w_oa.ExpErrorIyy1ComponentReturnCode >= (double) w_la.LocDontChangeReturnCodesQ1Ok) )
        {
          f_20972964();
        }
        
      }
      if ( func_0022020114_esc_flag )
      {
        break f_0022020114_esctag;
      }
      
      globdata.getStateData().setLastStatementNumber( "0000000047" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        if ( ((double) w_oa.ExpErrorIyy1ComponentReturnCode < (double) w_la.LocDontChangeReturnCodesQ1Ok) )
        {
          f_20971904();
        }
        
      }
    }
  }
  
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // SUBORDINATE FUNCTIONS
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  
  public void f_20972457()
  	throws ABException
  {
    func_0020972457_esc_flag = false;
    f_0020972457_esctag: 
    {
      globdata.getStateData().setLastStatementNumber( "0000000026" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        if ( CompareExit.compareTo(w_la.LocImpChildCparentPkeyAttrText, w_la.LocEmptyChildCparentPkeyAttrText) <= 0 )
        {
          f_20971673();
        }
        
      }
      if ( func_0020972457_esc_flag )
      {
        break f_0020972457_esctag;
      }
      globdata.getStateData().setLastStatementNumber( "0000000030" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        if ( ((double) w_la.LocImpChildCkeyAttrNum <= (double) w_la.LocEmptyChildCkeyAttrNum) )
        {
          f_20972377();
        }
        
      }
      if ( func_0020972457_esc_flag )
      {
        break f_0020972457_esctag;
      }
      globdata.getStateData().setLastStatementNumber( "0000000034" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        if ( CompareExit.compareTo(w_la.LocImpChildCsearchAttrText, w_la.LocEmptyChildCsearchAttrText) <= 0 )
        {
          f_20972454();
        }
        
      }
    }
  }
  
  public void f_20972964()
  	throws ABException
  {
    func_0020972964_esc_flag = false;
    f_0020972964_esctag: 
    {
      globdata.getStateData().setLastStatementNumber( "0000000041" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        
        dyyy0231_ia = (gen.ort.yyy.DYYY0231_IA)(iefRuntimeParm2.getInstance("gen.ort.yyy.DYYY0231_IA"));
        dyyy0231_oa = (gen.ort.yyy.DYYY0231_OA)(iefRuntimeParm2.getInstance("gen.ort.yyy.DYYY0231_OA"));
        dyyy0231_ia.ImpChildCinstanceId = TimestampAttr.valueOf(w_la.LocImpChildCinstanceId);
        dyyy0231_ia.ImpChildCreferenceId = TimestampAttr.valueOf(w_la.LocImpChildCreferenceId);
        dyyy0231_ia.ImpChildCparentPkeyAttrText = FixedStringAttr.valueOf(w_la.LocImpChildCparentPkeyAttrText, (short)5);
        dyyy0231_ia.ImpChildCkeyAttrNum = IntAttr.valueOf(w_la.LocImpChildCkeyAttrNum);
        dyyy0231_ia.ImpChildCsearchAttrText = FixedStringAttr.valueOf(w_la.LocImpChildCsearchAttrText, (short)25);
        dyyy0231_ia.ImpChildCotherAttrText = FixedStringAttr.valueOf(w_la.LocImpChildCotherAttrText, (short)25);
        dyyy0231_ia.ImpReferenceIyy1ServerDataUserid = FixedStringAttr.valueOf(w_ia.ImpReferenceIyy1ServerDataUserid, (short)8);
        dyyy0231_ia.ImpReferenceIyy1ServerDataReferenceId = TimestampAttr.valueOf(w_ia.ImpReferenceIyy1ServerDataReferenceId);
        dyyy0231_ia.ImpErrorIyy1ComponentSeverityCode = FixedStringAttr.valueOf(w_oa.ExpErrorIyy1ComponentSeverityCode, (short)1);
        dyyy0231_ia.ImpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.valueOf(w_oa.ExpErrorIyy1ComponentRollbackIndicator, (
          short)1);
        dyyy0231_ia.ImpErrorIyy1ComponentOriginServid = DoubleAttr.valueOf(w_oa.ExpErrorIyy1ComponentOriginServid);
        dyyy0231_ia.ImpErrorIyy1ComponentContextString = StringAttr.valueOf(w_oa.ExpErrorIyy1ComponentContextString, (short)512);
        dyyy0231_ia.ImpErrorIyy1ComponentReturnCode = IntAttr.valueOf(w_oa.ExpErrorIyy1ComponentReturnCode);
        dyyy0231_ia.ImpErrorIyy1ComponentReasonCode = IntAttr.valueOf(w_oa.ExpErrorIyy1ComponentReasonCode);
        dyyy0231_ia.ImpErrorIyy1ComponentChecksum = FixedStringAttr.valueOf(w_oa.ExpErrorIyy1ComponentChecksum, (short)15);
        globdata.getErrorData().setErrorEncounteredSW( ErrorData.NO_ERROR_FOUND_SW );
        iefRuntimeParm2.useActionBlock("gen.ort.yyy.DYYY0231", "DYYY0231", dyyy0231_ia, dyyy0231_oa);
        if ( ((!(globdata.getErrorData().getStatus().equals( ErrorData.NONE_SF ))) || (globdata.getErrorData().getErrorEncounteredSW(
          ) != ErrorData.NO_ERROR_FOUND_SW)) || (globdata.getErrorData().getViewOverflowSW() != ErrorData.NO_ERROR_FOUND_SW) )
        {
          throw new ABException();
        }
        globdata.getStateData().setCurrentABId( "0022020114" );
        globdata.getStateData().setCurrentABName( "CYYY0231_CHILD_UPDATE" );
        globdata.getStateData().setLastStatementNumber( "0000000041" );
        w_la.LocErrorIyy1ComponentSeverityCode = FixedStringAttr.valueOf(dyyy0231_oa.ExpErrorIyy1ComponentSeverityCode, (short)1);
        w_la.LocErrorIyy1ComponentRollbackIndicator = FixedStringAttr.valueOf(dyyy0231_oa.ExpErrorIyy1ComponentRollbackIndicator, (
          short)1);
        w_la.LocErrorIyy1ComponentOriginServid = DoubleAttr.valueOf(dyyy0231_oa.ExpErrorIyy1ComponentOriginServid);
        w_la.LocErrorIyy1ComponentContextString = StringAttr.valueOf(dyyy0231_oa.ExpErrorIyy1ComponentContextString, (short)512);
        w_la.LocErrorIyy1ComponentReturnCode = IntAttr.valueOf(dyyy0231_oa.ExpErrorIyy1ComponentReturnCode);
        w_la.LocErrorIyy1ComponentReasonCode = IntAttr.valueOf(dyyy0231_oa.ExpErrorIyy1ComponentReasonCode);
        w_la.LocErrorIyy1ComponentChecksum = FixedStringAttr.valueOf(dyyy0231_oa.ExpErrorIyy1ComponentChecksum, (short)15);
        w_oa.ExpChildCreferenceId = TimestampAttr.valueOf(dyyy0231_oa.ExpChildCreferenceId);
        dyyy0231_ia.freeInstance();
        dyyy0231_ia = null;
        dyyy0231_oa.freeInstance();
        dyyy0231_oa = null;
      }
      globdata.getStateData().setLastStatementNumber( "0000000042" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        if ( ((double) w_la.LocErrorIyy1ComponentReturnCode < (double) w_la.LocDontChangeReturnCodesQ1Ok) )
        {
          f_20973004();
        }
        
      }
    }
  }
  
  public void f_20971904()
  	throws ABException
  {
    func_0020971904_esc_flag = false;
    globdata.getStateData().setLastStatementNumber( "0000000048" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      
      cyyy9141_ia = (gen.ort.yyy.CYYY9141_IA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY9141_IA"));
      cyyy9141_oa = (gen.ort.yyy.CYYY9141_OA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY9141_OA"));
      cyyy9141_ia.ImpGroupContext_MA = IntAttr.valueOf(w_la.LocGroupContext_MA);
      for(adim1 = 1; adim1 <= w_la.LocGroupContext_MA; ++(adim1))
      {
        cyyy9141_ia.ImpGContextDontChangeTextText150[adim1-1] = FixedStringAttr.valueOf(w_la.LocGContextDontChangeTextText150[
          adim1-1], (short)150);
      }
      for(adim1 = w_la.LocGroupContext_MA + 1; adim1 <= 9; ++(adim1))
      {
        cyyy9141_ia.ImpGContextDontChangeTextText150[adim1-1] = 
"                                                                                                                                                      "
          ;
      }
      globdata.getErrorData().setErrorEncounteredSW( ErrorData.NO_ERROR_FOUND_SW );
      iefRuntimeParm2.useActionBlock("gen.ort.yyy.CYYY9141", "CYYY9141", cyyy9141_ia, cyyy9141_oa);
      if ( ((!(globdata.getErrorData().getStatus().equals( ErrorData.NONE_SF ))) || (globdata.getErrorData().getErrorEncounteredSW() 
        != ErrorData.NO_ERROR_FOUND_SW)) || (globdata.getErrorData().getViewOverflowSW() != ErrorData.NO_ERROR_FOUND_SW) )
      {
        throw new ABException();
      }
      globdata.getStateData().setCurrentABId( "0022020114" );
      globdata.getStateData().setCurrentABName( "CYYY0231_CHILD_UPDATE" );
      globdata.getStateData().setLastStatementNumber( "0000000048" );
      w_oa.ExpErrorIyy1ComponentContextString = StringAttr.valueOf(cyyy9141_oa.ExpContextIyy1ComponentContextString, (short)512);
      w_la.LocErrorIyy1ComponentSeverityCode = FixedStringAttr.valueOf(cyyy9141_oa.ExpErrorIyy1ComponentSeverityCode, (short)1);
      w_la.LocErrorIyy1ComponentRollbackIndicator = FixedStringAttr.valueOf(cyyy9141_oa.ExpErrorIyy1ComponentRollbackIndicator, (
        short)1);
      w_la.LocErrorIyy1ComponentOriginServid = DoubleAttr.valueOf(cyyy9141_oa.ExpErrorIyy1ComponentOriginServid);
      w_la.LocErrorIyy1ComponentContextString = StringAttr.valueOf(cyyy9141_oa.ExpErrorIyy1ComponentContextString, (short)512);
      w_la.LocErrorIyy1ComponentReturnCode = IntAttr.valueOf(cyyy9141_oa.ExpErrorIyy1ComponentReturnCode);
      w_la.LocErrorIyy1ComponentReasonCode = IntAttr.valueOf(cyyy9141_oa.ExpErrorIyy1ComponentReasonCode);
      w_la.LocErrorIyy1ComponentChecksum = FixedStringAttr.valueOf(cyyy9141_oa.ExpErrorIyy1ComponentChecksum, (short)15);
      cyyy9141_ia.freeInstance();
      cyyy9141_ia = null;
      cyyy9141_oa.freeInstance();
      cyyy9141_oa = null;
    }
    
    globdata.getStateData().setLastStatementNumber( "0000000050" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      if ( ((double) w_la.LocErrorIyy1ComponentReturnCode < (double) w_la.LocDontChangeReturnCodesQ1Ok) )
      {
        globdata.getStateData().setLastStatementNumber( "0000000051" );
        f_0_trace();
        if ( trace_ret_code != 8 )
        {
          w_oa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.valueOf(w_la.LocErrorIyy1ComponentSeverityCode, (short)1);
          w_oa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.valueOf(w_la.LocErrorIyy1ComponentRollbackIndicator, (short)
            1);
          w_oa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.valueOf(w_la.LocErrorIyy1ComponentOriginServid);
          w_oa.ExpErrorIyy1ComponentContextString = StringAttr.valueOf(w_la.LocErrorIyy1ComponentContextString, (short)512);
          w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf(w_la.LocErrorIyy1ComponentReturnCode);
          w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf(w_la.LocErrorIyy1ComponentReasonCode);
          w_oa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.valueOf(w_la.LocErrorIyy1ComponentChecksum, (short)15);
        }
      }
      
    }
    globdata.getStateData().setLastStatementNumber( "0000000052" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.valueOf("E", (short)1);
    }
  }
  
  public void f_20971673()
  	throws ABException
  {
    func_0020971673_esc_flag = false;
    f_0020971673_esctag: 
    {
      globdata.getStateData().setLastStatementNumber( "0000000027" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
          w_la.LocDontChangeReturnCodesN20MandatoryImportMissing, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000028" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
          w_la.LocDontChangeReasonCodesQ124ChildParentKeyAttrMand, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000029" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        func_0020971673_esc_flag = true;
        func_0020972457_esc_flag = true;
      }
    }
  }
  
  public void f_20972377()
  	throws ABException
  {
    func_0020972377_esc_flag = false;
    f_0020972377_esctag: 
    {
      globdata.getStateData().setLastStatementNumber( "0000000031" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
          w_la.LocDontChangeReturnCodesN20MandatoryImportMissing, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000032" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
          w_la.LocDontChangeReasonCodesQ125ChildKeyAttrMand, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000033" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        func_0020972377_esc_flag = true;
        func_0020972457_esc_flag = true;
      }
    }
  }
  
  public void f_20972454()
  	throws ABException
  {
    func_0020972454_esc_flag = false;
    f_0020972454_esctag: 
    {
      globdata.getStateData().setLastStatementNumber( "0000000035" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
          w_la.LocDontChangeReturnCodesN20MandatoryImportMissing, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000036" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
          w_la.LocDontChangeReasonCodesQ126ChildSearchAttrMand, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      globdata.getStateData().setLastStatementNumber( "0000000037" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        func_0020972454_esc_flag = true;
        func_0020972457_esc_flag = true;
      }
    }
  }
  
  public void f_20973004()
  	throws ABException
  {
    func_0020973004_esc_flag = false;
    f_0020973004_esctag: 
    {
      globdata.getStateData().setLastStatementNumber( "0000000043" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        w_oa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.valueOf(w_la.LocErrorIyy1ComponentSeverityCode, (short)1);
        w_oa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.valueOf(w_la.LocErrorIyy1ComponentRollbackIndicator, (short)1)
          ;
        w_oa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.valueOf(w_la.LocErrorIyy1ComponentOriginServid);
        w_oa.ExpErrorIyy1ComponentContextString = StringAttr.valueOf(w_la.LocErrorIyy1ComponentContextString, (short)512);
        w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf(w_la.LocErrorIyy1ComponentReturnCode);
        w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf(w_la.LocErrorIyy1ComponentReasonCode);
        w_oa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.valueOf(w_la.LocErrorIyy1ComponentChecksum, (short)15);
      }
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
      //    !!!!!!!!!!!                                                     
      //    !! WARNING: In D AB, if there'                                  
      //    s a need for generating context string, must exit from ESCAPE   
      //    AB.                                                             
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      globdata.getStateData().setLastStatementNumber( "0000000045" );
      f_0_trace();
      if ( trace_ret_code != 8 )
      {
        func_0020973004_esc_flag = true;
        func_0020972964_esc_flag = true;
      }
    }
  }
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // INITIALIZATION UTILITY FUNCTIONS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  public void f_22020114_localAlloc(String abname)
  {
    // Request localview allocation 
    w_la = (gen.ort.yyy.CYYY0231_LA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY0231_LA"));
    if ( w_la == null )
    {
      globdata.getStateData().setCurrentABId( "0022020114" );
      globdata.getStateData().setCurrentABName( abname );
      globdata.getErrorData().setErrorEncounteredSW( ErrorData.ERROR_FOUND_SW );
      globdata.getErrorData().setLastStatus( ErrorData.IEF_ALLOCATION_ERROR_FL_LS );
    }
  }
  
  public void f_22020114_init()
  	throws ABException
  {
    if ( nestingLevel < 2 )
    {
      w_la.reset();
    }
    w_la.LocGroupContext_MA = 0;
    for(LocGroupContext_PS_001 = 1; LocGroupContext_PS_001 <= 9; ++(LocGroupContext_PS_001))
    {
    }
    w_oa.ExpChildCreferenceId = "00000000000000000000";
    w_oa.ExpErrorIyy1ComponentSeverityCode = " ";
    w_oa.ExpErrorIyy1ComponentRollbackIndicator = " ";
    w_oa.ExpErrorIyy1ComponentOriginServid = 0.0;
    w_oa.ExpErrorIyy1ComponentContextString = "";
    w_oa.ExpErrorIyy1ComponentReturnCode = 0;
    w_oa.ExpErrorIyy1ComponentReasonCode = 0;
    w_oa.ExpErrorIyy1ComponentChecksum = "               ";
    LocGroupContext_PS_001 = 1;
  }
  
  public void f_0_trace()
  	throws ABException
  {
    trace_ret_code = TIRTRCE.TIRTRCE(iefRuntimeParm1, iefRuntimeParm2, globdata, padtext, padview);
    if ( trace_ret_code == 20 )
    {
      throw new ABException();
    }
  }
  
  public void padview_init()
  {
padview[0] = PadView.getInstance("IMPORT                          ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_ia, 
      "w_ia");
    padview[1] = PadView.getInstance("IMP_REFERENCE                   ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ia, 
      null);
    padview[2] = PadView.getInstance("IYY1_SERVER_DATA                ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, w_ia,
       null);
    padview[3] = PadView.getInstance("USERID                          ", 8, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpReferenceIyy1ServerDataUserid");
    padview[4] = PadView.getInstance("REFERENCE_ID                    ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_ia, "ImpReferenceIyy1ServerDataReferenceId");
    padview[5] = PadView.getInstance("IMP                             ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ia, 
      null);
    padview[6] = PadView.getInstance("CHILD                           ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, w_ia,
       null);
    padview[7] = PadView.getInstance("CINSTANCE_ID                    ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_ia, "ImpChildCinstanceId");
    padview[8] = PadView.getInstance("CREFERENCE_ID                   ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_ia, "ImpChildCreferenceId");
    padview[9] = PadView.getInstance("CPARENT_PKEY_ATTR_TEXT          ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpChildCparentPkeyAttrText");
    padview[10] = PadView.getInstance("CKEY_ATTR_NUM                   ", 6, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_ia, "ImpChildCkeyAttrNum");
    padview[11] = PadView.getInstance("CSEARCH_ATTR_TEXT               ", 25, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpChildCsearchAttrText");
    padview[12] = PadView.getInstance("COTHER_ATTR_TEXT                ", 25, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpChildCotherAttrText");
    padview[13] = PadView.getInstance("EXPORT                          ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_oa, 
      "w_oa");
    padview[14] = PadView.getInstance("EXP                             ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_oa, 
      null);
    padview[15] = PadView.getInstance("CHILD                           ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_oa, null);
    padview[16] = PadView.getInstance("CREFERENCE_ID                   ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_oa, "ExpChildCreferenceId");
    padview[17] = PadView.getInstance("EXP_ERROR                       ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_oa, 
      null);
    padview[18] = PadView.getInstance("IYY1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_oa, null);
    padview[19] = PadView.getInstance("SEVERITY_CODE                   ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentSeverityCode");
    padview[20] = PadView.getInstance("ROLLBACK_INDICATOR              ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentRollbackIndicator");
    padview[21] = PadView.getInstance("ORIGIN_SERVID                   ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentOriginServid");
    padview[22] = PadView.getInstance("CONTEXT_STRING                  ", 512, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_oa, "ExpErrorIyy1ComponentContextString");
    padview[23] = PadView.getInstance("RETURN_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentReturnCode");
    padview[24] = PadView.getInstance("REASON_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentReasonCode");
    padview[25] = PadView.getInstance("CHECKSUM                        ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentChecksum");
    padview[26] = PadView.getInstance("LOCAL                           ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_la, 
      "w_la");
    padview[27] = PadView.getInstance("LOC_IMP                         ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[28] = PadView.getInstance("CHILD                           ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[29] = PadView.getInstance("CINSTANCE_ID                    ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_la, "LocImpChildCinstanceId");
    padview[30] = PadView.getInstance("CREFERENCE_ID                   ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_la, "LocImpChildCreferenceId");
    padview[31] = PadView.getInstance("CPARENT_PKEY_ATTR_TEXT          ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpChildCparentPkeyAttrText");
    padview[32] = PadView.getInstance("CKEY_ATTR_NUM                   ", 6, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocImpChildCkeyAttrNum");
    padview[33] = PadView.getInstance("CSEARCH_ATTR_TEXT               ", 25, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpChildCsearchAttrText");
    padview[34] = PadView.getInstance("COTHER_ATTR_TEXT                ", 25, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocImpChildCotherAttrText");
    padview[35] = PadView.getInstance("LOC_EMPTY                       ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[36] = PadView.getInstance("CHILD                           ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[37] = PadView.getInstance("CINSTANCE_ID                    ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_la, "LocEmptyChildCinstanceId");
    padview[38] = PadView.getInstance("CREFERENCE_ID                   ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_la, "LocEmptyChildCreferenceId");
    padview[39] = PadView.getInstance("CPARENT_PKEY_ATTR_TEXT          ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocEmptyChildCparentPkeyAttrText");
    padview[40] = PadView.getInstance("CKEY_ATTR_NUM                   ", 6, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocEmptyChildCkeyAttrNum");
    padview[41] = PadView.getInstance("CSEARCH_ATTR_TEXT               ", 25, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocEmptyChildCsearchAttrText");
    padview[42] = PadView.getInstance("COTHER_ATTR_TEXT                ", 25, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocEmptyChildCotherAttrText");
    padview[43] = PadView.getInstance("LOC_ERROR                       ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[44] = PadView.getInstance("IYY1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[45] = PadView.getInstance("SEVERITY_CODE                   ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocErrorIyy1ComponentSeverityCode");
    padview[46] = PadView.getInstance("ROLLBACK_INDICATOR              ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocErrorIyy1ComponentRollbackIndicator");
    padview[47] = PadView.getInstance("ORIGIN_SERVID                   ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocErrorIyy1ComponentOriginServid");
    padview[48] = PadView.getInstance("CONTEXT_STRING                  ", 512, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_la, "LocErrorIyy1ComponentContextString");
    padview[49] = PadView.getInstance("RETURN_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocErrorIyy1ComponentReturnCode");
    padview[50] = PadView.getInstance("REASON_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocErrorIyy1ComponentReasonCode");
    padview[51] = PadView.getInstance("CHECKSUM                        ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocErrorIyy1ComponentChecksum");
    padview[52] = PadView.getInstance("LOC_GROUP_CONTEXT               ", 0, 0, 9, (short)2, PadView.VT_GROUP, PadView.DT_NONE, w_la,
       "LocGroupContext_MA");
    padview[53] = PadView.getInstance("LOC_G_CONTEXT                   ", 0, 0, 0, (short)3, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[54] = PadView.getInstance("DONT_CHANGE_TEXT                ", 0, 0, 0, (short)4, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[55] = PadView.getInstance("TEXT_150                        ", 150, 0, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_TEXT,
       w_la, "LocGContextDontChangeTextText150");
    padview[56] = PadView.getInstance("LOC                             ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[57] = PadView.getInstance("DONT_CHANGE_RETURN_CODES        ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[58] = PadView.getInstance("1_OK                            ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReturnCodesQ1Ok");
    padview[59] = PadView.getInstance("N20_MANDATORY_IMPORT_MISSING    ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReturnCodesN20MandatoryImportMissing");
    padview[60] = PadView.getInstance("LOC                             ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[61] = PadView.getInstance("DONT_CHANGE_REASON_CODES        ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[62] = PadView.getInstance("1_DEFAULT                       ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReasonCodesQ1Default");
    padview[63] = PadView.getInstance("124_CHILD_PARENT_KEY_ATTR_MAND  ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReasonCodesQ124ChildParentKeyAttrMand");
    padview[64] = PadView.getInstance("125_CHILD_KEY_ATTR_MAND         ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReasonCodesQ125ChildKeyAttrMand");
    padview[65] = PadView.getInstance("126_CHILD_SEARCH_ATTR_MAND      ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReasonCodesQ126ChildSearchAttrMand");
    padview[66] = PadView.getInstance("******** BOTTOM OF DATA ********", 0, 0, 0, (short)0, PadView.VT_END, PadView.DT_NONE, w_la, 
      null);
  }
  public void f_173015131_rgvc()
  	throws ABException
  {
    if ( (LocGroupContext_PS_001 > 9) || (LocGroupContext_PS_001 < 1) )
    {
      globdata.getErrorData().setViewOverflowSW( ErrorData.ERROR_FOUND_SW );
      {
        throw new ABException();
      }
    }
  }
}// end class


package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: CYYY0231_IA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:08:46
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF IMPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: CYYY0231_IA
 **/
public class CYYY0231_IA extends ViewBase implements IImportView, Serializable
{
  // Entity View: IMP_REFERENCE
  //        Type: IYY1_SERVER_DATA
  /**
   * Attribute missing flag for: ImpReferenceIyy1ServerDataUserid
   **/
  public char ImpReferenceIyy1ServerDataUserid_AS;
  /**
   * Attribute for: ImpReferenceIyy1ServerDataUserid
   * Domain: Text
   * Length: 8
   * Varying Length: N
   **/
  public String ImpReferenceIyy1ServerDataUserid;
  /**
   * Attribute missing flag for: ImpReferenceIyy1ServerDataReferenceId
   **/
  public char ImpReferenceIyy1ServerDataReferenceId_AS;
  /**
   * Attribute for: ImpReferenceIyy1ServerDataReferenceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String ImpReferenceIyy1ServerDataReferenceId;
  // Entity View: IMP
  //        Type: CHILD
  /**
   * Attribute missing flag for: ImpChildCinstanceId
   **/
  public char ImpChildCinstanceId_AS;
  /**
   * Attribute for: ImpChildCinstanceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String ImpChildCinstanceId;
  /**
   * Attribute missing flag for: ImpChildCreferenceId
   **/
  public char ImpChildCreferenceId_AS;
  /**
   * Attribute for: ImpChildCreferenceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String ImpChildCreferenceId;
  /**
   * Attribute missing flag for: ImpChildCparentPkeyAttrText
   **/
  public char ImpChildCparentPkeyAttrText_AS;
  /**
   * Attribute for: ImpChildCparentPkeyAttrText
   * Domain: Text
   * Length: 5
   * Varying Length: N
   **/
  public String ImpChildCparentPkeyAttrText;
  /**
   * Attribute missing flag for: ImpChildCkeyAttrNum
   **/
  public char ImpChildCkeyAttrNum_AS;
  /**
   * Attribute for: ImpChildCkeyAttrNum
   * Domain: Number
   * Length: 6
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ImpChildCkeyAttrNum;
  /**
   * Attribute missing flag for: ImpChildCsearchAttrText
   **/
  public char ImpChildCsearchAttrText_AS;
  /**
   * Attribute for: ImpChildCsearchAttrText
   * Domain: Text
   * Length: 25
   * Varying Length: N
   **/
  public String ImpChildCsearchAttrText;
  /**
   * Attribute missing flag for: ImpChildCotherAttrText
   **/
  public char ImpChildCotherAttrText_AS;
  /**
   * Attribute for: ImpChildCotherAttrText
   * Domain: Text
   * Length: 25
   * Varying Length: N
   **/
  public String ImpChildCotherAttrText;
  /**
   * Default Constructor
   **/
  
  public CYYY0231_IA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public CYYY0231_IA(CYYY0231_IA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static CYYY0231_IA getInstance()
  {
    return new CYYY0231_IA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new CYYY0231_IA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    ImpReferenceIyy1ServerDataUserid_AS = ' ';
    ImpReferenceIyy1ServerDataUserid = "        ";
    ImpReferenceIyy1ServerDataReferenceId_AS = ' ';
    ImpReferenceIyy1ServerDataReferenceId = "00000000000000000000";
    ImpChildCinstanceId_AS = ' ';
    ImpChildCinstanceId = "00000000000000000000";
    ImpChildCreferenceId_AS = ' ';
    ImpChildCreferenceId = "00000000000000000000";
    ImpChildCparentPkeyAttrText_AS = ' ';
    ImpChildCparentPkeyAttrText = "     ";
    ImpChildCkeyAttrNum_AS = ' ';
    ImpChildCkeyAttrNum = 0;
    ImpChildCsearchAttrText_AS = ' ';
    ImpChildCsearchAttrText = "                         ";
    ImpChildCotherAttrText_AS = ' ';
    ImpChildCotherAttrText = "                         ";
  }
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    throw new RuntimeException("can only execute getVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    throw new RuntimeException("can only execute setFromVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IImportView orig)
  {
    this.copyFrom((CYYY0231_IA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(CYYY0231_IA orig)
  {
    ImpReferenceIyy1ServerDataUserid_AS = orig.ImpReferenceIyy1ServerDataUserid_AS;
    ImpReferenceIyy1ServerDataUserid = orig.ImpReferenceIyy1ServerDataUserid;
    ImpReferenceIyy1ServerDataReferenceId_AS = orig.ImpReferenceIyy1ServerDataReferenceId_AS;
    ImpReferenceIyy1ServerDataReferenceId = orig.ImpReferenceIyy1ServerDataReferenceId;
    ImpChildCinstanceId_AS = orig.ImpChildCinstanceId_AS;
    ImpChildCinstanceId = orig.ImpChildCinstanceId;
    ImpChildCreferenceId_AS = orig.ImpChildCreferenceId_AS;
    ImpChildCreferenceId = orig.ImpChildCreferenceId;
    ImpChildCparentPkeyAttrText_AS = orig.ImpChildCparentPkeyAttrText_AS;
    ImpChildCparentPkeyAttrText = orig.ImpChildCparentPkeyAttrText;
    ImpChildCkeyAttrNum_AS = orig.ImpChildCkeyAttrNum_AS;
    ImpChildCkeyAttrNum = orig.ImpChildCkeyAttrNum;
    ImpChildCsearchAttrText_AS = orig.ImpChildCsearchAttrText_AS;
    ImpChildCsearchAttrText = orig.ImpChildCsearchAttrText;
    ImpChildCotherAttrText_AS = orig.ImpChildCotherAttrText_AS;
    ImpChildCotherAttrText = orig.ImpChildCotherAttrText;
  }
}

package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: CYYY0231_LA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:08:46
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF LOCAL VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: CYYY0231_LA
 **/
public class CYYY0231_LA extends ViewBase implements ILocalView, Serializable
{
  // Entity View: LOC_IMP
  //        Type: CHILD
  /**
   * Attribute missing flag for: LocImpChildCinstanceId
   **/
  public char LocImpChildCinstanceId_AS;
  /**
   * Attribute for: LocImpChildCinstanceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String LocImpChildCinstanceId;
  /**
   * Attribute missing flag for: LocImpChildCreferenceId
   **/
  public char LocImpChildCreferenceId_AS;
  /**
   * Attribute for: LocImpChildCreferenceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String LocImpChildCreferenceId;
  /**
   * Attribute missing flag for: LocImpChildCparentPkeyAttrText
   **/
  public char LocImpChildCparentPkeyAttrText_AS;
  /**
   * Attribute for: LocImpChildCparentPkeyAttrText
   * Domain: Text
   * Length: 5
   * Varying Length: N
   **/
  public String LocImpChildCparentPkeyAttrText;
  /**
   * Attribute missing flag for: LocImpChildCkeyAttrNum
   **/
  public char LocImpChildCkeyAttrNum_AS;
  /**
   * Attribute for: LocImpChildCkeyAttrNum
   * Domain: Number
   * Length: 6
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocImpChildCkeyAttrNum;
  /**
   * Attribute missing flag for: LocImpChildCsearchAttrText
   **/
  public char LocImpChildCsearchAttrText_AS;
  /**
   * Attribute for: LocImpChildCsearchAttrText
   * Domain: Text
   * Length: 25
   * Varying Length: N
   **/
  public String LocImpChildCsearchAttrText;
  /**
   * Attribute missing flag for: LocImpChildCotherAttrText
   **/
  public char LocImpChildCotherAttrText_AS;
  /**
   * Attribute for: LocImpChildCotherAttrText
   * Domain: Text
   * Length: 25
   * Varying Length: N
   **/
  public String LocImpChildCotherAttrText;
  // Entity View: LOC_EMPTY
  //        Type: CHILD
  /**
   * Attribute missing flag for: LocEmptyChildCinstanceId
   **/
  public char LocEmptyChildCinstanceId_AS;
  /**
   * Attribute for: LocEmptyChildCinstanceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String LocEmptyChildCinstanceId;
  /**
   * Attribute missing flag for: LocEmptyChildCreferenceId
   **/
  public char LocEmptyChildCreferenceId_AS;
  /**
   * Attribute for: LocEmptyChildCreferenceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String LocEmptyChildCreferenceId;
  /**
   * Attribute missing flag for: LocEmptyChildCparentPkeyAttrText
   **/
  public char LocEmptyChildCparentPkeyAttrText_AS;
  /**
   * Attribute for: LocEmptyChildCparentPkeyAttrText
   * Domain: Text
   * Length: 5
   * Varying Length: N
   **/
  public String LocEmptyChildCparentPkeyAttrText;
  /**
   * Attribute missing flag for: LocEmptyChildCkeyAttrNum
   **/
  public char LocEmptyChildCkeyAttrNum_AS;
  /**
   * Attribute for: LocEmptyChildCkeyAttrNum
   * Domain: Number
   * Length: 6
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocEmptyChildCkeyAttrNum;
  /**
   * Attribute missing flag for: LocEmptyChildCsearchAttrText
   **/
  public char LocEmptyChildCsearchAttrText_AS;
  /**
   * Attribute for: LocEmptyChildCsearchAttrText
   * Domain: Text
   * Length: 25
   * Varying Length: N
   **/
  public String LocEmptyChildCsearchAttrText;
  /**
   * Attribute missing flag for: LocEmptyChildCotherAttrText
   **/
  public char LocEmptyChildCotherAttrText_AS;
  /**
   * Attribute for: LocEmptyChildCotherAttrText
   * Domain: Text
   * Length: 25
   * Varying Length: N
   **/
  public String LocEmptyChildCotherAttrText;
  // Entity View: LOC_ERROR
  //        Type: IYY1_COMPONENT
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentSeverityCode
   **/
  public char LocErrorIyy1ComponentSeverityCode_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentSeverityCode
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String LocErrorIyy1ComponentSeverityCode;
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentRollbackIndicator
   **/
  public char LocErrorIyy1ComponentRollbackIndicator_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentRollbackIndicator
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String LocErrorIyy1ComponentRollbackIndicator;
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentOriginServid
   **/
  public char LocErrorIyy1ComponentOriginServid_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentOriginServid
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double LocErrorIyy1ComponentOriginServid;
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentContextString
   **/
  public char LocErrorIyy1ComponentContextString_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentContextString
   * Domain: Text
   * Length: 512
   * Varying Length: Y
   **/
  public String LocErrorIyy1ComponentContextString;
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentReturnCode
   **/
  public char LocErrorIyy1ComponentReturnCode_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentReturnCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocErrorIyy1ComponentReturnCode;
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentReasonCode
   **/
  public char LocErrorIyy1ComponentReasonCode_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentReasonCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocErrorIyy1ComponentReasonCode;
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentChecksum
   **/
  public char LocErrorIyy1ComponentChecksum_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentChecksum
   * Domain: Text
   * Length: 15
   * Varying Length: N
   **/
  public String LocErrorIyy1ComponentChecksum;
  // Repeating GV:  LOC_GROUP_CONTEXT
  //     Repeats: 9 times
  /**
   * Repeating group view count
   **/
  public int LocGroupContext_MA;
  /**
   * Repeating group view occurrance array
   **/
  public char LocGroupContext_AC[] = new char[9];
  // Entity View: LOC_G_CONTEXT
  //        Type: DONT_CHANGE_TEXT
  /**
   * Attribute missing flag for: LocGContextDontChangeTextText150
   **/
  public char LocGContextDontChangeTextText150_AS[] = new char[9];
  /**
   * Attribute for: LocGContextDontChangeTextText150
   * Domain: Text
   * Length: 150
   * Varying Length: N
   **/
  public String LocGContextDontChangeTextText150[] = new String[9];
  // Entity View: LOC
  //        Type: DONT_CHANGE_RETURN_CODES
  /**
   * Attribute missing flag for: LocDontChangeReturnCodesQ1Ok
   **/
  public char LocDontChangeReturnCodesQ1Ok_AS;
  /**
   * Attribute for: LocDontChangeReturnCodesQ1Ok
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReturnCodesQ1Ok;
  /**
   * Attribute missing flag for: LocDontChangeReturnCodesN20MandatoryImportMissing
   **/
  public char LocDontChangeReturnCodesN20MandatoryImportMissing_AS;
  /**
   * Attribute for: LocDontChangeReturnCodesN20MandatoryImportMissing
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReturnCodesN20MandatoryImportMissing;
  // Entity View: LOC
  //        Type: DONT_CHANGE_REASON_CODES
  /**
   * Attribute missing flag for: LocDontChangeReasonCodesQ1Default
   **/
  public char LocDontChangeReasonCodesQ1Default_AS;
  /**
   * Attribute for: LocDontChangeReasonCodesQ1Default
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReasonCodesQ1Default;
  /**
   * Attribute missing flag for: LocDontChangeReasonCodesQ124ChildParentKeyAttrMand
   **/
  public char LocDontChangeReasonCodesQ124ChildParentKeyAttrMand_AS;
  /**
   * Attribute for: LocDontChangeReasonCodesQ124ChildParentKeyAttrMand
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReasonCodesQ124ChildParentKeyAttrMand;
  /**
   * Attribute missing flag for: LocDontChangeReasonCodesQ125ChildKeyAttrMand
   **/
  public char LocDontChangeReasonCodesQ125ChildKeyAttrMand_AS;
  /**
   * Attribute for: LocDontChangeReasonCodesQ125ChildKeyAttrMand
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReasonCodesQ125ChildKeyAttrMand;
  /**
   * Attribute missing flag for: LocDontChangeReasonCodesQ126ChildSearchAttrMand
   **/
  public char LocDontChangeReasonCodesQ126ChildSearchAttrMand_AS;
  /**
   * Attribute for: LocDontChangeReasonCodesQ126ChildSearchAttrMand
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReasonCodesQ126ChildSearchAttrMand;
  /**
   * Default Constructor
   **/
  
  public CYYY0231_LA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public CYYY0231_LA(CYYY0231_LA orig)
  {
    LocImpChildCinstanceId_AS = orig.LocImpChildCinstanceId_AS;
    LocImpChildCinstanceId = orig.LocImpChildCinstanceId;
    LocImpChildCreferenceId_AS = orig.LocImpChildCreferenceId_AS;
    LocImpChildCreferenceId = orig.LocImpChildCreferenceId;
    LocImpChildCparentPkeyAttrText_AS = orig.LocImpChildCparentPkeyAttrText_AS;
    LocImpChildCparentPkeyAttrText = orig.LocImpChildCparentPkeyAttrText;
    LocImpChildCkeyAttrNum_AS = orig.LocImpChildCkeyAttrNum_AS;
    LocImpChildCkeyAttrNum = orig.LocImpChildCkeyAttrNum;
    LocImpChildCsearchAttrText_AS = orig.LocImpChildCsearchAttrText_AS;
    LocImpChildCsearchAttrText = orig.LocImpChildCsearchAttrText;
    LocImpChildCotherAttrText_AS = orig.LocImpChildCotherAttrText_AS;
    LocImpChildCotherAttrText = orig.LocImpChildCotherAttrText;
    LocEmptyChildCinstanceId_AS = orig.LocEmptyChildCinstanceId_AS;
    LocEmptyChildCinstanceId = orig.LocEmptyChildCinstanceId;
    LocEmptyChildCreferenceId_AS = orig.LocEmptyChildCreferenceId_AS;
    LocEmptyChildCreferenceId = orig.LocEmptyChildCreferenceId;
    LocEmptyChildCparentPkeyAttrText_AS = orig.LocEmptyChildCparentPkeyAttrText_AS;
    LocEmptyChildCparentPkeyAttrText = orig.LocEmptyChildCparentPkeyAttrText;
    LocEmptyChildCkeyAttrNum_AS = orig.LocEmptyChildCkeyAttrNum_AS;
    LocEmptyChildCkeyAttrNum = orig.LocEmptyChildCkeyAttrNum;
    LocEmptyChildCsearchAttrText_AS = orig.LocEmptyChildCsearchAttrText_AS;
    LocEmptyChildCsearchAttrText = orig.LocEmptyChildCsearchAttrText;
    LocEmptyChildCotherAttrText_AS = orig.LocEmptyChildCotherAttrText_AS;
    LocEmptyChildCotherAttrText = orig.LocEmptyChildCotherAttrText;
    LocErrorIyy1ComponentSeverityCode_AS = orig.LocErrorIyy1ComponentSeverityCode_AS;
    LocErrorIyy1ComponentSeverityCode = orig.LocErrorIyy1ComponentSeverityCode;
    LocErrorIyy1ComponentRollbackIndicator_AS = orig.LocErrorIyy1ComponentRollbackIndicator_AS;
    LocErrorIyy1ComponentRollbackIndicator = orig.LocErrorIyy1ComponentRollbackIndicator;
    LocErrorIyy1ComponentOriginServid_AS = orig.LocErrorIyy1ComponentOriginServid_AS;
    LocErrorIyy1ComponentOriginServid = orig.LocErrorIyy1ComponentOriginServid;
    LocErrorIyy1ComponentContextString_AS = orig.LocErrorIyy1ComponentContextString_AS;
    LocErrorIyy1ComponentContextString = orig.LocErrorIyy1ComponentContextString;
    LocErrorIyy1ComponentReturnCode_AS = orig.LocErrorIyy1ComponentReturnCode_AS;
    LocErrorIyy1ComponentReturnCode = orig.LocErrorIyy1ComponentReturnCode;
    LocErrorIyy1ComponentReasonCode_AS = orig.LocErrorIyy1ComponentReasonCode_AS;
    LocErrorIyy1ComponentReasonCode = orig.LocErrorIyy1ComponentReasonCode;
    LocErrorIyy1ComponentChecksum_AS = orig.LocErrorIyy1ComponentChecksum_AS;
    LocErrorIyy1ComponentChecksum = orig.LocErrorIyy1ComponentChecksum;
    LocGroupContext_MA = orig.LocGroupContext_MA;
    System.arraycopy(orig.LocGroupContext_AC, 0, LocGroupContext_AC, 0, LocGroupContext_AC.length);
    System.arraycopy(orig.LocGContextDontChangeTextText150_AS, 0, LocGContextDontChangeTextText150_AS, 0, 
      LocGContextDontChangeTextText150_AS.length);
    System.arraycopy(orig.LocGContextDontChangeTextText150, 0, LocGContextDontChangeTextText150, 0, 
      LocGContextDontChangeTextText150.length);
    LocDontChangeReturnCodesQ1Ok_AS = orig.LocDontChangeReturnCodesQ1Ok_AS;
    LocDontChangeReturnCodesQ1Ok = orig.LocDontChangeReturnCodesQ1Ok;
    LocDontChangeReturnCodesN20MandatoryImportMissing_AS = orig.LocDontChangeReturnCodesN20MandatoryImportMissing_AS;
    LocDontChangeReturnCodesN20MandatoryImportMissing = orig.LocDontChangeReturnCodesN20MandatoryImportMissing;
    LocDontChangeReasonCodesQ1Default_AS = orig.LocDontChangeReasonCodesQ1Default_AS;
    LocDontChangeReasonCodesQ1Default = orig.LocDontChangeReasonCodesQ1Default;
    LocDontChangeReasonCodesQ124ChildParentKeyAttrMand_AS = orig.LocDontChangeReasonCodesQ124ChildParentKeyAttrMand_AS;
    LocDontChangeReasonCodesQ124ChildParentKeyAttrMand = orig.LocDontChangeReasonCodesQ124ChildParentKeyAttrMand;
    LocDontChangeReasonCodesQ125ChildKeyAttrMand_AS = orig.LocDontChangeReasonCodesQ125ChildKeyAttrMand_AS;
    LocDontChangeReasonCodesQ125ChildKeyAttrMand = orig.LocDontChangeReasonCodesQ125ChildKeyAttrMand;
    LocDontChangeReasonCodesQ126ChildSearchAttrMand_AS = orig.LocDontChangeReasonCodesQ126ChildSearchAttrMand_AS;
    LocDontChangeReasonCodesQ126ChildSearchAttrMand = orig.LocDontChangeReasonCodesQ126ChildSearchAttrMand;
  }
  /**
   * Static instance creator function
   **/
  
  public static CYYY0231_LA getInstance()
  {
    return new CYYY0231_LA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new CYYY0231_LA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    LocImpChildCinstanceId_AS = ' ';
    LocImpChildCinstanceId = "00000000000000000000";
    LocImpChildCreferenceId_AS = ' ';
    LocImpChildCreferenceId = "00000000000000000000";
    LocImpChildCparentPkeyAttrText_AS = ' ';
    LocImpChildCparentPkeyAttrText = "     ";
    LocImpChildCkeyAttrNum_AS = ' ';
    LocImpChildCkeyAttrNum = 0;
    LocImpChildCsearchAttrText_AS = ' ';
    LocImpChildCsearchAttrText = "                         ";
    LocImpChildCotherAttrText_AS = ' ';
    LocImpChildCotherAttrText = "                         ";
    LocEmptyChildCinstanceId_AS = ' ';
    LocEmptyChildCinstanceId = "00000000000000000000";
    LocEmptyChildCreferenceId_AS = ' ';
    LocEmptyChildCreferenceId = "00000000000000000000";
    LocEmptyChildCparentPkeyAttrText_AS = ' ';
    LocEmptyChildCparentPkeyAttrText = "     ";
    LocEmptyChildCkeyAttrNum_AS = ' ';
    LocEmptyChildCkeyAttrNum = 0;
    LocEmptyChildCsearchAttrText_AS = ' ';
    LocEmptyChildCsearchAttrText = "                         ";
    LocEmptyChildCotherAttrText_AS = ' ';
    LocEmptyChildCotherAttrText = "                         ";
    LocErrorIyy1ComponentSeverityCode_AS = ' ';
    LocErrorIyy1ComponentSeverityCode = " ";
    LocErrorIyy1ComponentRollbackIndicator_AS = ' ';
    LocErrorIyy1ComponentRollbackIndicator = " ";
    LocErrorIyy1ComponentOriginServid_AS = ' ';
    LocErrorIyy1ComponentOriginServid = 0.0;
    LocErrorIyy1ComponentContextString_AS = ' ';
    LocErrorIyy1ComponentContextString = "";
    LocErrorIyy1ComponentReturnCode_AS = ' ';
    LocErrorIyy1ComponentReturnCode = 0;
    LocErrorIyy1ComponentReasonCode_AS = ' ';
    LocErrorIyy1ComponentReasonCode = 0;
    LocErrorIyy1ComponentChecksum_AS = ' ';
    LocErrorIyy1ComponentChecksum = "               ";
    LocGroupContext_MA = 0;
    for(int a = 0; a < 9; a++)
    {
      LocGroupContext_AC[a] = ' ';
      LocGContextDontChangeTextText150_AS[a] = ' ';
      LocGContextDontChangeTextText150[a] = 
"                                                                                                                                                      "
        ;
    }
    LocDontChangeReturnCodesQ1Ok_AS = ' ';
    LocDontChangeReturnCodesQ1Ok = 0;
    LocDontChangeReturnCodesN20MandatoryImportMissing_AS = ' ';
    LocDontChangeReturnCodesN20MandatoryImportMissing = 0;
    LocDontChangeReasonCodesQ1Default_AS = ' ';
    LocDontChangeReasonCodesQ1Default = 0;
    LocDontChangeReasonCodesQ124ChildParentKeyAttrMand_AS = ' ';
    LocDontChangeReasonCodesQ124ChildParentKeyAttrMand = 0;
    LocDontChangeReasonCodesQ125ChildKeyAttrMand_AS = ' ';
    LocDontChangeReasonCodesQ125ChildKeyAttrMand = 0;
    LocDontChangeReasonCodesQ126ChildSearchAttrMand_AS = ' ';
    LocDontChangeReasonCodesQ126ChildSearchAttrMand = 0;
  }
}

package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: CYYY0231_OA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:08:46
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF EXPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: CYYY0231_OA
 **/
public class CYYY0231_OA extends ViewBase implements IExportView, Serializable
{
  // Entity View: EXP
  //        Type: CHILD
  /**
   * Attribute missing flag for: ExpChildCreferenceId
   **/
  public char ExpChildCreferenceId_AS;
  /**
   * Attribute for: ExpChildCreferenceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String ExpChildCreferenceId;
  // Entity View: EXP_ERROR
  //        Type: IYY1_COMPONENT
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentSeverityCode
   **/
  public char ExpErrorIyy1ComponentSeverityCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentSeverityCode
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentSeverityCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentRollbackIndicator
   **/
  public char ExpErrorIyy1ComponentRollbackIndicator_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentRollbackIndicator
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentRollbackIndicator;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentOriginServid
   **/
  public char ExpErrorIyy1ComponentOriginServid_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentOriginServid
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double ExpErrorIyy1ComponentOriginServid;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentContextString
   **/
  public char ExpErrorIyy1ComponentContextString_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentContextString
   * Domain: Text
   * Length: 512
   * Varying Length: Y
   **/
  public String ExpErrorIyy1ComponentContextString;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentReturnCode
   **/
  public char ExpErrorIyy1ComponentReturnCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentReturnCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ExpErrorIyy1ComponentReturnCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentReasonCode
   **/
  public char ExpErrorIyy1ComponentReasonCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentReasonCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ExpErrorIyy1ComponentReasonCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentChecksum
   **/
  public char ExpErrorIyy1ComponentChecksum_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentChecksum
   * Domain: Text
   * Length: 15
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentChecksum;
  /**
   * Default Constructor
   **/
  
  public CYYY0231_OA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public CYYY0231_OA(CYYY0231_OA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static CYYY0231_OA getInstance()
  {
    return new CYYY0231_OA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new CYYY0231_OA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    ExpChildCreferenceId_AS = ' ';
    ExpChildCreferenceId = "00000000000000000000";
    ExpErrorIyy1ComponentSeverityCode_AS = ' ';
    ExpErrorIyy1ComponentSeverityCode = " ";
    ExpErrorIyy1ComponentRollbackIndicator_AS = ' ';
    ExpErrorIyy1ComponentRollbackIndicator = " ";
    ExpErrorIyy1ComponentOriginServid_AS = ' ';
    ExpErrorIyy1ComponentOriginServid = 0.0;
    ExpErrorIyy1ComponentContextString_AS = ' ';
    ExpErrorIyy1ComponentContextString = "";
    ExpErrorIyy1ComponentReturnCode_AS = ' ';
    ExpErrorIyy1ComponentReturnCode = 0;
    ExpErrorIyy1ComponentReasonCode_AS = ' ';
    ExpErrorIyy1ComponentReasonCode = 0;
    ExpErrorIyy1ComponentChecksum_AS = ' ';
    ExpErrorIyy1ComponentChecksum = "               ";
  }
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    throw new RuntimeException("can only execute setFromVDF for a Procedure Step.");
  }
  
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    throw new RuntimeException("can only execute getVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IExportView orig)
  {
    this.copyFrom((CYYY0231_OA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(CYYY0231_OA orig)
  {
    ExpChildCreferenceId_AS = orig.ExpChildCreferenceId_AS;
    ExpChildCreferenceId = orig.ExpChildCreferenceId;
    ExpErrorIyy1ComponentSeverityCode_AS = orig.ExpErrorIyy1ComponentSeverityCode_AS;
    ExpErrorIyy1ComponentSeverityCode = orig.ExpErrorIyy1ComponentSeverityCode;
    ExpErrorIyy1ComponentRollbackIndicator_AS = orig.ExpErrorIyy1ComponentRollbackIndicator_AS;
    ExpErrorIyy1ComponentRollbackIndicator = orig.ExpErrorIyy1ComponentRollbackIndicator;
    ExpErrorIyy1ComponentOriginServid_AS = orig.ExpErrorIyy1ComponentOriginServid_AS;
    ExpErrorIyy1ComponentOriginServid = orig.ExpErrorIyy1ComponentOriginServid;
    ExpErrorIyy1ComponentContextString_AS = orig.ExpErrorIyy1ComponentContextString_AS;
    ExpErrorIyy1ComponentContextString = orig.ExpErrorIyy1ComponentContextString;
    ExpErrorIyy1ComponentReturnCode_AS = orig.ExpErrorIyy1ComponentReturnCode_AS;
    ExpErrorIyy1ComponentReturnCode = orig.ExpErrorIyy1ComponentReturnCode;
    ExpErrorIyy1ComponentReasonCode_AS = orig.ExpErrorIyy1ComponentReasonCode_AS;
    ExpErrorIyy1ComponentReasonCode = orig.ExpErrorIyy1ComponentReasonCode;
    ExpErrorIyy1ComponentChecksum_AS = orig.ExpErrorIyy1ComponentChecksum_AS;
    ExpErrorIyy1ComponentChecksum = orig.ExpErrorIyy1ComponentChecksum;
  }
}
