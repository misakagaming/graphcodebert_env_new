
package gen.ort.yyy;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: DYYY0121_PARENT_READ             Date: 2023/07/05
//    Target OS:   JVM                       Time: 15:08:20
//    Target DBMS: JDBC                      User: HakanBal
//    Access Method: JDBC           
//
//    Generation options:
//    Debug trace option selected
//    Data modeling constraint enforcement not selected
//    Optimized import view initialization not selected
//    Enforce default values with DBMS not selected
//    Init unspecified optional fields to NULL not selected
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;

import com.ca.gen.abrt.*;
import com.ca.gen.abrt.functions.*;
import com.ca.gen.abrt.cascade.*;
import com.ca.gen.abrt.trace.*;
import com.ca.gen.exits.common.*;
import com.ca.gen.odc.*;

public class DYYY0121 extends ABBase
{
  // * * * * * * * * * * * * * * * * * * *
  // ENTITY ACTION STATEMENT STATUS FLAGS 
  // ENTITY VIEW STATUS FLAGS AND         
  // LAST COMMAND FOR EACH ENTITY VIEW    
  // * * * * * * * * * * * * * * * * * * *
  String sl_29360146 = ErrorData.NONE_FL_LS;
  String Parent_es;
  String Parent_001cd;
  String Parent_lk;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // IMPORT VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  DYYY0121_IA w_ia;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // EXPORT VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  DYYY0121_OA w_oa;
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // START OF ENTITY ACTION VIEW
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  /**
   * Internal data view storage for: DYYY0121_EA
   **/
  public class DYYY0121_EA extends ViewBase implements IEntityActionView, Serializable
  {
    // Entity View: 
    //        Type: PARENT
    /**
     * Attribute missing flag for: ParentPinstanceId
     **/
    public char ParentPinstanceId_AS;
    /**
     * Attribute for: ParentPinstanceId
     * Domain: Timestamp
     * Length: 20
     **/
    public String ParentPinstanceId;
    /**
     * Attribute missing flag for: ParentPreferenceId
     **/
    public char ParentPreferenceId_AS;
    /**
     * Attribute for: ParentPreferenceId
     * Domain: Timestamp
     * Length: 20
     **/
    public String ParentPreferenceId;
    /**
     * Attribute missing flag for: ParentPcreateUserId
     **/
    public char ParentPcreateUserId_AS;
    /**
     * Attribute for: ParentPcreateUserId
     * Domain: Text
     * Length: 8
     * Varying Length: N
     **/
    public String ParentPcreateUserId;
    /**
     * Attribute missing flag for: ParentPupdateUserId
     **/
    public char ParentPupdateUserId_AS;
    /**
     * Attribute for: ParentPupdateUserId
     * Domain: Text
     * Length: 8
     * Varying Length: N
     **/
    public String ParentPupdateUserId;
    /**
     * Attribute missing flag for: ParentPkeyAttrText
     **/
    public char ParentPkeyAttrText_AS;
    /**
     * Attribute for: ParentPkeyAttrText
     * Domain: Text
     * Length: 5
     * Varying Length: N
     **/
    public String ParentPkeyAttrText;
    /**
     * Attribute missing flag for: ParentPsearchAttrText
     **/
    public char ParentPsearchAttrText_AS;
    /**
     * Attribute for: ParentPsearchAttrText
     * Domain: Text
     * Length: 25
     * Varying Length: N
     **/
    public String ParentPsearchAttrText;
    /**
     * Attribute missing flag for: ParentPotherAttrText
     **/
    public char ParentPotherAttrText_AS;
    /**
     * Attribute for: ParentPotherAttrText
     * Domain: Text
     * Length: 25
     * Varying Length: N
     **/
    public String ParentPotherAttrText;
    /**
     * Attribute missing flag for: ParentPtypeTkeyAttrText
     **/
    public char ParentPtypeTkeyAttrText_AS;
    /**
     * Attribute for: ParentPtypeTkeyAttrText
     * Domain: Text
     * Length: 4
     * Varying Length: N
     **/
    public String ParentPtypeTkeyAttrText;
    /**
     * Default Constructor
     **/
    
    public DYYY0121_EA()
    {
      reset();
    }
    /**
     * Copy Constructor
     **/
    
    public DYYY0121_EA(DYYY0121_EA orig)
    {
      ParentPinstanceId_AS = orig.ParentPinstanceId_AS;
      ParentPinstanceId = orig.ParentPinstanceId;
      ParentPreferenceId_AS = orig.ParentPreferenceId_AS;
      ParentPreferenceId = orig.ParentPreferenceId;
      ParentPcreateUserId_AS = orig.ParentPcreateUserId_AS;
      ParentPcreateUserId = orig.ParentPcreateUserId;
      ParentPupdateUserId_AS = orig.ParentPupdateUserId_AS;
      ParentPupdateUserId = orig.ParentPupdateUserId;
      ParentPkeyAttrText_AS = orig.ParentPkeyAttrText_AS;
      ParentPkeyAttrText = orig.ParentPkeyAttrText;
      ParentPsearchAttrText_AS = orig.ParentPsearchAttrText_AS;
      ParentPsearchAttrText = orig.ParentPsearchAttrText;
      ParentPotherAttrText_AS = orig.ParentPotherAttrText_AS;
      ParentPotherAttrText = orig.ParentPotherAttrText;
      ParentPtypeTkeyAttrText_AS = orig.ParentPtypeTkeyAttrText_AS;
      ParentPtypeTkeyAttrText = orig.ParentPtypeTkeyAttrText;
    }
    /**
     * clone constructor
     **/
    
    @Override public Object clone()
    	throws CloneNotSupportedException
    {
      return(new DYYY0121_EA(this));
    }
    /**
     * Resets all properties to the defaults.
     **/
    
    public void reset()
    {
      ParentPinstanceId_AS = ' ';
      ParentPinstanceId = "00000000000000000000";
      ParentPreferenceId_AS = ' ';
      ParentPreferenceId = "00000000000000000000";
      ParentPcreateUserId_AS = ' ';
      ParentPcreateUserId = "        ";
      ParentPupdateUserId_AS = ' ';
      ParentPupdateUserId = "        ";
      ParentPkeyAttrText_AS = ' ';
      ParentPkeyAttrText = "     ";
      ParentPsearchAttrText_AS = ' ';
      ParentPsearchAttrText = "                         ";
      ParentPotherAttrText_AS = ' ';
      ParentPotherAttrText = "                         ";
      ParentPtypeTkeyAttrText_AS = ' ';
      ParentPtypeTkeyAttrText = "    ";
    }
  }
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // ENTITY ACTION VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  DYYY0121_EA w_ea = new DYYY0121_EA();
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // LOCAL VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  DYYY0121_LA w_la;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // CURSOR OPEN FLAGS
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  boolean curs_open_0029360146 = false;
  
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // HOST VARIABLES FOR TABLE: VDVYYYP
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  String pkey_attr_001EF;
  String pkey_attr_002EN;
  String psearch_attr_003EF;
  String psearch_attr_004EN;
  String pother_attr_005EF;
  String pother_attr_006EN;
  String pcreate_userid_007EF;
  String pcreate_userid_008EN;
  String pupdate_userid_009EF;
  String pupdate_userid_010EN;
  java.sql.Timestamp pinstance_id_011EF;
  java.sql.Timestamp pinstance_id_012EN;
  java.sql.Timestamp preference_id_013EF;
  java.sql.Timestamp preference_id_014EN;
  String ptype_tkey_attr_te_015EF;
  String ptype_tkey_attr_te_016EN;
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // TEMPORARY HOST VARIABLES 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  String PkeyAttrText_001TP;
  
  
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // MISC DECLARATIONS AND PROTOTYPES 
  //    FOLLOW AS NEEDED:             
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  boolean func_0022020282_esc_flag;
  PreparedStatement hstmt_0037925369_1;
  ResultSet hstmt_0037925369_1_rs;
  int hstmt_0037925369_1_cnt;
  PadView padview[] = new PadView [55];
  int trace_ret_code;
  PadText padtext[] = initPadText();
  public PadText [] initPadText()
  {
    PadText [] result = new PadText [PADTEXT_SIZE];
    result[0] = PadText.getInstance(   0,"+->   DYYY0121_PARENT_READ              07/05/2023  15:08");
    result[1] = PadText.getInstance(   0,"!       IMPORTS:");
    result[2] = PadText.getInstance(   0,"!         Work View imp_error iyy1_component (Transient, Mandatory, Import only)");
    result[3] = PadText.getInstance(   0,"!           severity_code");
    result[4] = PadText.getInstance(   0,"!           rollback_indicator");
    result[5] = PadText.getInstance(   0,"!           origin_servid");
    result[6] = PadText.getInstance(   0,"!           context_string");
    result[7] = PadText.getInstance(   0,"!           return_code");
    result[8] = PadText.getInstance(   0,"!           reason_code");
    result[9] = PadText.getInstance(   0,"!           checksum");
    result[10] = PadText.getInstance(   0,"!         Entity View imp parent (Transient, Mandatory, Import only)");
    result[11] = PadText.getInstance(   0,"!           pinstance_id");
    result[12] = PadText.getInstance(   0,"!           pkey_attr_text");
    result[13] = PadText.getInstance(   0,"!       EXPORTS:");
    result[14] = PadText.getInstance(   0,"!         Entity View exp parent (Transient, Export only)");
    result[15] = PadText.getInstance(   0,"!           pinstance_id");
    result[16] = PadText.getInstance(   0,"!           preference_id");
    result[17] = PadText.getInstance(   0,"!           pcreate_user_id");
    result[18] = PadText.getInstance(   0,"!           pupdate_user_id");
    result[19] = PadText.getInstance(   0,"!           pkey_attr_text");
    result[20] = PadText.getInstance(   0,"!           psearch_attr_text");
    result[21] = PadText.getInstance(   0,"!           pother_attr_text");
    result[22] = PadText.getInstance(   0,"!           ptype_tkey_attr_text");
    result[23] = PadText.getInstance(   0,"!         Work View exp_error iyy1_component (Transient, Export only)");
    result[24] = PadText.getInstance(   0,"!           severity_code");
    result[25] = PadText.getInstance(   0,"!           rollback_indicator");
    result[26] = PadText.getInstance(   0,"!           origin_servid");
    result[27] = PadText.getInstance(   0,"!           context_string");
    result[28] = PadText.getInstance(   0,"!           return_code");
    result[29] = PadText.getInstance(   0,"!           reason_code");
    result[30] = PadText.getInstance(   0,"!           checksum");
    result[31] = PadText.getInstance(   0,"!       ENTITY ACTIONS:");
    result[32] = PadText.getInstance(   0,"!         Entity View parent");
    result[33] = PadText.getInstance(   0,"!           pinstance_id");
    result[34] = PadText.getInstance(   0,"!           preference_id");
    result[35] = PadText.getInstance(   0,"!           pcreate_user_id");
    result[36] = PadText.getInstance(   0,"!           pupdate_user_id");
    result[37] = PadText.getInstance(   0,"!           pkey_attr_text");
    result[38] = PadText.getInstance(   0,"!           psearch_attr_text");
    result[39] = PadText.getInstance(   0,"!           pother_attr_text");
    result[40] = PadText.getInstance(   0,"!           ptype_tkey_attr_text");
    result[41] = PadText.getInstance(   0,"!       LOCALS:");
    result[42] = PadText.getInstance(   0,"!         Work View loc dont_change_return_codes");
    result[43] = PadText.getInstance(   0,"!           1_ok");
    result[44] = PadText.getInstance(   0,"!           n10_obj_not_found");
    result[45] = PadText.getInstance(   0,"!         Work View loc dont_change_reason_codes");
    result[46] = PadText.getInstance(   0,"!           1_default");
    result[47] = PadText.getInstance(   0,"!           101_parent_not_found");
    result[48] = PadText.getInstance(   0,"!");
    result[49] = PadText.getInstance(   0,"!     PROCEDURE STATEMENTS");
    result[50] = PadText.getInstance(   0,"!");
    result[51] = PadText.getInstance(   1,"!  NOTE: ");
    result[52] = PadText.getInstance(   1,"!  See the description for the purpose.");
    result[53] = PadText.getInstance(   1,"!  ");
    result[54] = PadText.getInstance(   2,"!  NOTE: ");
    result[55] = PadText.getInstance(   2,"!  RELEASE HISTORY");
    result[56] = PadText.getInstance(   2,"!  01_00 23-02-1998 New release");
    result[57] = PadText.getInstance(   2,"!  ");
    result[58] = PadText.getInstance(   3,"!  MOVE imp_error iyy1_component TO exp_error iyy1_component");
    result[59] = PadText.getInstance(   4,"!   ");
    result[60] = PadText.getInstance(   5,"!  NOTE: ");
    result[61] = PadText.getInstance(   5,"!  ****************************************************************");
    result[62] = PadText.getInstance(   5,"!  The used ReturnCode/ReasonCode values");
    result[63] = PadText.getInstance(   5,"!  ");
    result[64] = PadText.getInstance(   6,"!  NOTE: ");
    result[65] = PadText.getInstance(   6,"!  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    result[66] = PadText.getInstance(   6,"!  Set the return and reason codes below");
    result[67] = PadText.getInstance(   6,"!  ");
    result[68] = PadText.getInstance(   7,"!  SET loc dont_change_return_codes 1_ok TO 1 ");
    result[69] = PadText.getInstance(   8,"!  SET loc dont_change_return_codes n10_obj_not_found TO -10 ");
    result[70] = PadText.getInstance(   9,"!   ");
    result[71] = PadText.getInstance(  10,"!  SET loc dont_change_reason_codes 1_default TO 1 ");
    result[72] = PadText.getInstance(  11,"!  SET loc dont_change_reason_codes 101_parent_not_found TO 101 ");
    result[73] = PadText.getInstance(  12,"!   ");
    result[74] = PadText.getInstance(  13,"!  NOTE: ");
    result[75] = PadText.getInstance(  13,"!  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    result[76] = PadText.getInstance(  13,
      "!  If the Instance_id is being used, reading must be operated according to this section, instead of business_key(s).");
    result[77] = PadText.getInstance(  13,"!  ");
    result[78] = PadText.getInstance(  14,"!  NOTE: ");
    result[79] = PadText.getInstance(  14,"!  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    result[80] = PadText.getInstance(  14,"!  Choose Control of Cursor Generation property as \"Select only\".");
    result[81] = PadText.getInstance(  14,"!  ");
    result[82] = PadText.getInstance(  15,"!  +=>READ (Select Only) parent");
    result[83] = PadText.getInstance(  15,"!  !        WHERE DESIRED parent pkey_attr_text = imp parent pkey_attr_text");
    result[84] = PadText.getInstance(  15, 1, "!  +> WHEN successful");
    result[85] = PadText.getInstance(  16,"!  !  MOVE  parent TO exp parent");
    result[86] = PadText.getInstance(  15, 2, "!  +> WHEN not found");
    result[87] = PadText.getInstance(  17,
      "!  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n10_obj_not_found ");
    result[88] = PadText.getInstance(  18,
      "!  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 101_parent_not_found ");
    result[89] = PadText.getInstance(  15,"!  +--");
    result[90] = PadText.getInstance(   0,"+---");
    result[91] = PadText.getInstance(PadText.LASTLINE,"************************* BOTTOM OF DATA *************************");
    return result;
  }
  final static int PADTEXT_SIZE = 92;
  //       +->   DYYY0121_PARENT_READ              07/05/2023  15:08
  //       !       IMPORTS:
  //       !         Work View imp_error iyy1_component (Transient, Mandatory, Import only)
  //       !           severity_code
  //       !           rollback_indicator
  //       !           origin_servid
  //       !           context_string
  //       !           return_code
  //       !           reason_code
  //       !           checksum
  //       !         Entity View imp parent (Transient, Mandatory, Import only)
  //       !           pinstance_id
  //       !           pkey_attr_text
  //       !       EXPORTS:
  //       !         Entity View exp parent (Transient, Export only)
  //       !           pinstance_id
  //       !           preference_id
  //       !           pcreate_user_id
  //       !           pupdate_user_id
  //       !           pkey_attr_text
  //       !           psearch_attr_text
  //       !           pother_attr_text
  //       !           ptype_tkey_attr_text
  //       !         Work View exp_error iyy1_component (Transient, Export only)
  //       !           severity_code
  //       !           rollback_indicator
  //       !           origin_servid
  //       !           context_string
  //       !           return_code
  //       !           reason_code
  //       !           checksum
  //       !       ENTITY ACTIONS:
  //       !         Entity View parent
  //       !           pinstance_id
  //       !           preference_id
  //       !           pcreate_user_id
  //       !           pupdate_user_id
  //       !           pkey_attr_text
  //       !           psearch_attr_text
  //       !           pother_attr_text
  //       !           ptype_tkey_attr_text
  //       !       LOCALS:
  //       !         Work View loc dont_change_return_codes
  //       !           1_ok
  //       !           n10_obj_not_found
  //       !         Work View loc dont_change_reason_codes
  //       !           1_default
  //       !           101_parent_not_found
  //       !
  //       !     PROCEDURE STATEMENTS
  //       !
  //     1 !  NOTE: 
  //     1 !  See the description for the purpose.
  //     1 !  
  //     2 !  NOTE: 
  //     2 !  RELEASE HISTORY
  //     2 !  01_00 23-02-1998 New release
  //     2 !  
  //     3 !  MOVE imp_error iyy1_component TO exp_error iyy1_component
  //     4 !   
  //     5 !  NOTE: 
  //     5 !  ****************************************************************
  //     5 !  The used ReturnCode/ReasonCode values
  //     5 !  
  //     6 !  NOTE: 
  //     6 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  //     6 !  Set the return and reason codes below
  //     6 !  
  //     7 !  SET loc dont_change_return_codes 1_ok TO 1 
  //     8 !  SET loc dont_change_return_codes n10_obj_not_found TO -10 
  //     9 !   
  //    10 !  SET loc dont_change_reason_codes 1_default TO 1 
  //    11 !  SET loc dont_change_reason_codes 101_parent_not_found TO 101 
  //    12 !   
  //    13 !  NOTE: 
  //    13 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  //    13 !  If the Instance_id is being used, reading must be operated according to this section, instead of business_key(s).
  //    13 !  
  //    14 !  NOTE: 
  //    14 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  //    14 !  Choose Control of Cursor Generation property as "Select only".
  //    14 !  
  //    15 !  +=>READ (Select Only) parent
  //    15 !  !        WHERE DESIRED parent pkey_attr_text = imp parent pkey_attr_text
  //    15 !  +> WHEN successful
  //    16 !  !  MOVE  parent TO exp parent
  //    15 !  +> WHEN not found
  //    17 !  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n10_obj_not_found 
  //    18 !  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 101_parent_not_found 
  //    15 !  +--
  //       +---
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  //  CONSTRUCTOR FOR THE CLASS       
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  public DYYY0121()
  {
    iefCGenRlse = "CA Gen 8.6";
    ssCopyright = "Copyright (c) 2023 CA Technologies. All rights reserved.";
    iefCGenDate = "2023/07/05";
    iefCGenTime = "15:08:20";
    iefCGenEncy = "9.2.A6";
    iefCGenUserId = "HakanBal";
    iefCGenModel = "N8I_ORT_YYY_0112_TEMPLATE";
    iefCGenSubset = "ALL";
    iefCGenName = "DYYY0121_PARENT_READ";
    nestingLevel = 0;
    valChkDeadlockTimeout = false;
    valChkDBError = false;
  }
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // ACTION BLOCK FUNCTION DECLARATIONS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  public void DYYY0121( Object in_runtime_parm1, 
  	IRuntimePStepContext in_runtime_parm2, 
  	GlobData in_globdata, 
  	DYYY0121_IA import_view, 
  	DYYY0121_OA export_view )
  {
    iefRuntimeParm1 = in_runtime_parm1;
    iefRuntimeParm2 = in_runtime_parm2;
    globdata = in_globdata;
    w_ia = import_view;
    w_oa = export_view;
    _DYYY0121();
  }
  
  private void _DYYY0121()
  {
    
    f_22020282_localAlloc("DYYY0121_PARENT_READ");
    if ( globdata.getErrorData().getLastStatus() == ErrorData.IEF_ALLOCATION_ERROR_FL_LS )
    	return;
    
    ++(nestingLevel);
    try {
      f_22020282_init();
      f_22020282();
    } catch( ABException e ) {
    } finally {
      --(nestingLevel);
    }
    String last_stmt_num_saved = globdata.getStateData().getLastStatementNumber();
    globdata.getStateData().setLastStatementNumber( "9999999999" );
    try {
      f_0_trace();
    } catch( ABException e ) {
    }
    globdata.getStateData().setLastStatementNumber( last_stmt_num_saved );
  }
  public void f_22020282()
  	throws ABException
  {
    func_0022020282_esc_flag = false;
    globdata.getStateData().setCurrentABId( "0022020282" );
    globdata.getStateData().setCurrentABName( "DYYY0121_PARENT_READ" );
    padview_init();
    globdata.getStateData().setLastStatementNumber( "0000000000" );
    f_0_trace();
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    See the description for the purpose.                            
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    RELEASE HISTORY                                                 
    //    01_00 23-02-1998 New release                                    
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    globdata.getStateData().setLastStatementNumber( "0000000003" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.valueOf(w_ia.ImpErrorIyy1ComponentSeverityCode, (short)1);
      w_oa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.valueOf(w_ia.ImpErrorIyy1ComponentRollbackIndicator, (short)1);
      w_oa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.valueOf(w_ia.ImpErrorIyy1ComponentOriginServid);
      w_oa.ExpErrorIyy1ComponentContextString = StringAttr.valueOf(w_ia.ImpErrorIyy1ComponentContextString, (short)512);
      w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf(w_ia.ImpErrorIyy1ComponentReturnCode);
      w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf(w_ia.ImpErrorIyy1ComponentReasonCode);
      w_oa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.valueOf(w_ia.ImpErrorIyy1ComponentChecksum, (short)15);
    }
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    **************************************************************  
    //    **                                                              
    //    The used ReturnCode/ReasonCode values                           
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
    //    !!                                                              
    //    Set the return and reason codes below                           
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    globdata.getStateData().setLastStatementNumber( "0000000007" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocDontChangeReturnCodesQ1Ok = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(1, 0, TIRD2DEC.ROUND_NONE, 5));
    }
    globdata.getStateData().setLastStatementNumber( "0000000008" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocDontChangeReturnCodesN10ObjNotFound = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(-10, 0, TIRD2DEC.ROUND_NONE, 5));
    }
    
    globdata.getStateData().setLastStatementNumber( "0000000010" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocDontChangeReasonCodesQ1Default = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(1, 0, TIRD2DEC.ROUND_NONE, 5));
    }
    globdata.getStateData().setLastStatementNumber( "0000000011" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocDontChangeReasonCodesQ101ParentNotFound = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(101, 0, TIRD2DEC.ROUND_NONE, 5));
    }
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
    //    !!!!!!!!!!!!!!!!!!!!!                                           
    //    If the Instance_id is being used,                               
    //    reading must be operated according to this section,             
    //    instead of business_key(s).                                     
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
    //    !!!!!!!!!!!!!!!!!!!!!                                           
    //    Choose Control of Cursor Generation property as                 
    //    "Select only".                                                  
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    globdata.getStateData().setLastStatementNumber( "0000000015" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      f_29360146();
      if ( sl_29360146.equals( ErrorData.SUCCEEDS_FL_LS ) == true )
      {
        globdata.getStateData().setLastSubStatementNumber( "1" );
        f_0_trace();
        {
          globdata.getStateData().setLastStatementNumber( "0000000016" );
          f_0_trace();
          if ( trace_ret_code != 8 )
          {
            w_oa.ExpParentPinstanceId = TimestampAttr.valueOf(w_ea.ParentPinstanceId);
            w_oa.ExpParentPreferenceId = TimestampAttr.valueOf(w_ea.ParentPreferenceId);
            w_oa.ExpParentPcreateUserId = FixedStringAttr.valueOf(w_ea.ParentPcreateUserId, (short)8);
            w_oa.ExpParentPupdateUserId = FixedStringAttr.valueOf(w_ea.ParentPupdateUserId, (short)8);
            w_oa.ExpParentPkeyAttrText = FixedStringAttr.valueOf(w_ea.ParentPkeyAttrText, (short)5);
            w_oa.ExpParentPsearchAttrText = FixedStringAttr.valueOf(w_ea.ParentPsearchAttrText, (short)25);
            w_oa.ExpParentPotherAttrText = FixedStringAttr.valueOf(w_ea.ParentPotherAttrText, (short)25);
            w_oa.ExpParentPtypeTkeyAttrText = FixedStringAttr.valueOf(w_ea.ParentPtypeTkeyAttrText, (short)4);
          }
        }
      }
      else if ( sl_29360146.equals( ErrorData.NOT_FOUND_FL_LS ) == true )
      {
        globdata.getStateData().setLastSubStatementNumber( "2" );
        f_0_trace();
        {
          globdata.getStateData().setLastStatementNumber( "0000000017" );
          f_0_trace();
          if ( trace_ret_code != 8 )
          {
            w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
              w_la.LocDontChangeReturnCodesN10ObjNotFound, 0, TIRD2DEC.ROUND_NONE, 5));
          }
          globdata.getStateData().setLastStatementNumber( "0000000018" );
          f_0_trace();
          if ( trace_ret_code != 8 )
          {
            w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
              w_la.LocDontChangeReasonCodesQ101ParentNotFound, 0, TIRD2DEC.ROUND_NONE, 5));
          }
        }
      }
      else {
        globdata.getErrorData().setStatus( ErrorData.FATAL_ERROR_FL_LS );
        globdata.getErrorData().setLastStatus( sl_29360146 );
        globdata.getErrorData().setErrorEncounteredSW( ErrorData.ERROR_FOUND_SW );
        throw new ABException();
      }
    }
  }
  
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // SUBORDINATE FUNCTIONS
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // INITIALIZATION UTILITY FUNCTIONS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  public void f_22020282_localAlloc(String abname)
  {
    // Request localview allocation 
    w_la = (gen.ort.yyy.DYYY0121_LA)(iefRuntimeParm2.getInstance("gen.ort.yyy.DYYY0121_LA"));
    if ( w_la == null )
    {
      globdata.getStateData().setCurrentABId( "0022020282" );
      globdata.getStateData().setCurrentABName( abname );
      globdata.getErrorData().setErrorEncounteredSW( ErrorData.ERROR_FOUND_SW );
      globdata.getErrorData().setLastStatus( ErrorData.IEF_ALLOCATION_ERROR_FL_LS );
    }
  }
  
  public void f_22020282_init()
  	throws ABException
  {
    
    pkey_attr_001EF = SPACES;
    pkey_attr_002EN = SPACES;
    psearch_attr_003EF = SPACES;
    psearch_attr_004EN = SPACES;
    pother_attr_005EF = SPACES;
    pother_attr_006EN = SPACES;
    pcreate_userid_007EF = SPACES;
    pcreate_userid_008EN = SPACES;
    pupdate_userid_009EF = SPACES;
    pupdate_userid_010EN = SPACES;
    pinstance_id_011EF = TIRVW2S.TIRVW2S(globdata, "IEFDB", "00010101000000000000");
    pinstance_id_012EN = TIRVW2S.TIRVW2S(globdata, "IEFDB", "00010101000000000000");
    preference_id_013EF = TIRVW2S.TIRVW2S(globdata, "IEFDB", "00010101000000000000");
    preference_id_014EN = TIRVW2S.TIRVW2S(globdata, "IEFDB", "00010101000000000000");
    ptype_tkey_attr_te_015EF = SPACES;
    ptype_tkey_attr_te_016EN = SPACES;
    if ( nestingLevel < 2 )
    {
      w_la.reset();
    }
    w_ea.reset();
    w_oa.ExpParentPinstanceId = "00000000000000000000";
    w_oa.ExpParentPreferenceId = "00000000000000000000";
    w_oa.ExpParentPcreateUserId = "        ";
    w_oa.ExpParentPupdateUserId = "        ";
    w_oa.ExpParentPkeyAttrText = "     ";
    w_oa.ExpParentPsearchAttrText = "                         ";
    w_oa.ExpParentPotherAttrText = "                         ";
    w_oa.ExpParentPtypeTkeyAttrText = "    ";
    w_oa.ExpErrorIyy1ComponentSeverityCode = " ";
    w_oa.ExpErrorIyy1ComponentRollbackIndicator = " ";
    w_oa.ExpErrorIyy1ComponentOriginServid = 0.0;
    w_oa.ExpErrorIyy1ComponentContextString = "";
    w_oa.ExpErrorIyy1ComponentReturnCode = 0;
    w_oa.ExpErrorIyy1ComponentReasonCode = 0;
    w_oa.ExpErrorIyy1ComponentChecksum = "               ";
    Parent_es = ABBase.EV_UNUSABLE;
    Parent_lk = ABBase.EVW_UNLOCKED;
    w_ea.ParentPinstanceId = "00000000000000000000";
    w_ea.ParentPreferenceId = "00000000000000000000";
  }
  
  public void f_0_trace()
  	throws ABException
  {
    trace_ret_code = TIRTRCE.TIRTRCE(iefRuntimeParm1, iefRuntimeParm2, globdata, padtext, padview);
    if ( trace_ret_code == 20 )
    {
      throw new ABException();
    }
  }
  
  public void padview_init()
  {
padview[0] = PadView.getInstance("IMPORT                          ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_ia, 
      "w_ia");
    padview[1] = PadView.getInstance("IMP_ERROR                       ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ia, 
      null);
    padview[2] = PadView.getInstance("IYY1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, w_ia,
       null);
    padview[3] = PadView.getInstance("SEVERITY_CODE                   ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpErrorIyy1ComponentSeverityCode");
    padview[4] = PadView.getInstance("ROLLBACK_INDICATOR              ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpErrorIyy1ComponentRollbackIndicator");
    padview[5] = PadView.getInstance("ORIGIN_SERVID                   ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_ia, "ImpErrorIyy1ComponentOriginServid");
    padview[6] = PadView.getInstance("CONTEXT_STRING                  ", 512, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_ia, "ImpErrorIyy1ComponentContextString");
    padview[7] = PadView.getInstance("RETURN_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_NUMERIC,
       w_ia, "ImpErrorIyy1ComponentReturnCode");
    padview[8] = PadView.getInstance("REASON_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_NUMERIC,
       w_ia, "ImpErrorIyy1ComponentReasonCode");
    padview[9] = PadView.getInstance("CHECKSUM                        ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpErrorIyy1ComponentChecksum");
    padview[10] = PadView.getInstance("IMP                             ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ia, 
      null);
    padview[11] = PadView.getInstance("PARENT                          ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_ia, null);
    padview[12] = PadView.getInstance("PINSTANCE_ID                    ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_ia, "ImpParentPinstanceId");
    padview[13] = PadView.getInstance("PKEY_ATTR_TEXT                  ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ia, "ImpParentPkeyAttrText");
    padview[14] = PadView.getInstance("EXPORT                          ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_oa, 
      "w_oa");
    padview[15] = PadView.getInstance("EXP                             ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_oa, 
      null);
    padview[16] = PadView.getInstance("PARENT                          ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_oa, null);
    padview[17] = PadView.getInstance("PINSTANCE_ID                    ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_oa, "ExpParentPinstanceId");
    padview[18] = PadView.getInstance("PREFERENCE_ID                   ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_oa, "ExpParentPreferenceId");
    padview[19] = PadView.getInstance("PCREATE_USER_ID                 ", 8, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpParentPcreateUserId");
    padview[20] = PadView.getInstance("PUPDATE_USER_ID                 ", 8, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpParentPupdateUserId");
    padview[21] = PadView.getInstance("PKEY_ATTR_TEXT                  ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpParentPkeyAttrText");
    padview[22] = PadView.getInstance("PSEARCH_ATTR_TEXT               ", 25, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpParentPsearchAttrText");
    padview[23] = PadView.getInstance("POTHER_ATTR_TEXT                ", 25, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpParentPotherAttrText");
    padview[24] = PadView.getInstance("PTYPE_TKEY_ATTR_TEXT            ", 4, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpParentPtypeTkeyAttrText");
    padview[25] = PadView.getInstance("EXP_ERROR                       ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_oa, 
      null);
    padview[26] = PadView.getInstance("IYY1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_oa, null);
    padview[27] = PadView.getInstance("SEVERITY_CODE                   ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentSeverityCode");
    padview[28] = PadView.getInstance("ROLLBACK_INDICATOR              ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentRollbackIndicator");
    padview[29] = PadView.getInstance("ORIGIN_SERVID                   ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentOriginServid");
    padview[30] = PadView.getInstance("CONTEXT_STRING                  ", 512, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_oa, "ExpErrorIyy1ComponentContextString");
    padview[31] = PadView.getInstance("RETURN_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentReturnCode");
    padview[32] = PadView.getInstance("REASON_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentReasonCode");
    padview[33] = PadView.getInstance("CHECKSUM                        ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentChecksum");
    padview[34] = PadView.getInstance("ENTITY                          ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_ea, 
      "w_ea");
    padview[35] = PadView.getInstance("                                ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ea, 
      null);
    padview[36] = PadView.getInstance("PARENT                          ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_ea, null);
    padview[37] = PadView.getInstance("PINSTANCE_ID                    ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_ea, "ParentPinstanceId");
    padview[38] = PadView.getInstance("PREFERENCE_ID                   ", 20, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_ea, "ParentPreferenceId");
    padview[39] = PadView.getInstance("PCREATE_USER_ID                 ", 8, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ea, "ParentPcreateUserId");
    padview[40] = PadView.getInstance("PUPDATE_USER_ID                 ", 8, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ea, "ParentPupdateUserId");
    padview[41] = PadView.getInstance("PKEY_ATTR_TEXT                  ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ea, "ParentPkeyAttrText");
    padview[42] = PadView.getInstance("PSEARCH_ATTR_TEXT               ", 25, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ea, "ParentPsearchAttrText");
    padview[43] = PadView.getInstance("POTHER_ATTR_TEXT                ", 25, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ea, "ParentPotherAttrText");
    padview[44] = PadView.getInstance("PTYPE_TKEY_ATTR_TEXT            ", 4, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_ea, "ParentPtypeTkeyAttrText");
    padview[45] = PadView.getInstance("LOCAL                           ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_la, 
      "w_la");
    padview[46] = PadView.getInstance("LOC                             ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[47] = PadView.getInstance("DONT_CHANGE_RETURN_CODES        ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[48] = PadView.getInstance("1_OK                            ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReturnCodesQ1Ok");
    padview[49] = PadView.getInstance("N10_OBJ_NOT_FOUND               ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReturnCodesN10ObjNotFound");
    padview[50] = PadView.getInstance("LOC                             ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[51] = PadView.getInstance("DONT_CHANGE_REASON_CODES        ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[52] = PadView.getInstance("1_DEFAULT                       ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReasonCodesQ1Default");
    padview[53] = PadView.getInstance("101_PARENT_NOT_FOUND            ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReasonCodesQ101ParentNotFound");
    padview[54] = PadView.getInstance("******** BOTTOM OF DATA ********", 0, 0, 0, (short)0, PadView.VT_END, PadView.DT_NONE, w_la, 
      null);
  }
  public void f_29360146()
  	throws ABException
  {
    sl_29360146 = ErrorData.SUCCEEDS_FL_LS;
    Parent_001cd = ABBase.PV_SELECT;
    Parent_lk = ABBase.EVW_UNLOCKED;
    f_29360146_moveb();
    
    if ( sl_29360146.equals( ErrorData.SUCCEEDS_FL_LS ) == true )
    {
      valChkDeadlockTimeout = false;
      valChkDBError = false;
      Parent_es = ABBase.EV_USABLE;
      sqlException = null;
      try {
        SQLStatement.setLength(0);
        SQLStatement.append("SELECT ");
        SQLStatement.append("VDVYYYP01.`PINSTANCE_ID`,");
        SQLStatement.append("VDVYYYP01.`PREFERENCE_ID`,");
        SQLStatement.append("VDVYYYP01.`PCREATE_USERID`,");
        SQLStatement.append("VDVYYYP01.`PUPDATE_USERID`,");
        SQLStatement.append("VDVYYYP01.`PKEY_ATTR`,");
        SQLStatement.append("VDVYYYP01.`PSEARCH_ATTR`,");
        SQLStatement.append("VDVYYYP01.`POTHER_ATTR`,");
        SQLStatement.append("VDVYYYP01.`PTYPE_TKEY_ATTR_TE`");
        SQLStatement.append(" FROM ");
        SQLStatement.append("`VDVYYYP` VDVYYYP01");
        SQLStatement.append(" WHERE ");
        SQLStatement.append("(");
        SQLStatement.append("VDVYYYP01.`PKEY_ATTR` = ?");
        SQLStatement.append(")");
        hstmt_0037925369_1 = globdata.getDBMSData().getDBMSManager().getStatement(globdata, iefRuntimeParm2, "IEFDB", 
          SQLStatement.toString());
        globdata.getDBMSData().getDBMSManager().bindParameterString("IEFDB", hstmt_0037925369_1, 1, PkeyAttrText_001TP);
        hstmt_0037925369_1.execute();
        hstmt_0037925369_1_rs = hstmt_0037925369_1.getResultSet();
        if ( hstmt_0037925369_1_rs.next() == false )
        {
          throw new SQLException("No data found");
        }
        pinstance_id_011EF = hstmt_0037925369_1_rs.getTimestamp(1);
        preference_id_013EF = hstmt_0037925369_1_rs.getTimestamp(2);
        pcreate_userid_007EF = globdata.getDBMSData().getDBMSManager().getStringFromResultSet("IEFDB", hstmt_0037925369_1_rs, 3);
        pupdate_userid_009EF = globdata.getDBMSData().getDBMSManager().getStringFromResultSet("IEFDB", hstmt_0037925369_1_rs, 4);
        pkey_attr_001EF = globdata.getDBMSData().getDBMSManager().getStringFromResultSet("IEFDB", hstmt_0037925369_1_rs, 5);
        psearch_attr_003EF = globdata.getDBMSData().getDBMSManager().getStringFromResultSet("IEFDB", hstmt_0037925369_1_rs, 6);
        pother_attr_005EF = globdata.getDBMSData().getDBMSManager().getStringFromResultSet("IEFDB", hstmt_0037925369_1_rs, 7);
        ptype_tkey_attr_te_015EF = globdata.getDBMSData().getDBMSManager().getStringFromResultSet("IEFDB", hstmt_0037925369_1_rs, 8)
          ;
        if ( hstmt_0037925369_1_rs.next() == true )
        {
          throw new SQLException("READ statement with SELECT ONLY property returned more than 1 row");
        }
      } catch( SQLException e ) {
        sqlException = e;
      }
      if ( globdata.getDBMSData().getDBMSManager().wasSuccessful(sqlException) )
      {
        f_29360146_movea();
        if ( sl_29360146.equals( ErrorData.SUCCEEDS_FL_LS ) )
        {
          Parent_es = ABBase.EV_USABLE;
        }
        else {
          Parent_es = ABBase.EV_UNUSABLE;
        }
        try {
          if ( hstmt_0037925369_1_rs != null )
          {
            hstmt_0037925369_1_rs.close();
            hstmt_0037925369_1_rs = null;
          }
          if ( hstmt_0037925369_1 != null )
          {
            hstmt_0037925369_1.close();
            hstmt_0037925369_1 = null;
          }
        } catch( SQLException e ) {
          if ( globdata.getDBMSData().getDBMSManager().wasSuccessful(e) == false )
          {
            sqlException = e;
            f_29360146_jdbc_dberror();
          }
        }
      }
      else if ( globdata.getDBMSData().getDBMSManager().wasNoDataFound(sqlException) )
      {
        sl_29360146 = ErrorData.NOT_FOUND_FL_LS;
        Parent_es = ABBase.EV_UNUSABLE;
        try {
          if ( hstmt_0037925369_1_rs != null )
          {
            hstmt_0037925369_1_rs.close();
            hstmt_0037925369_1_rs = null;
          }
          if ( hstmt_0037925369_1 != null )
          {
            hstmt_0037925369_1.close();
            hstmt_0037925369_1 = null;
          }
        } catch( SQLException e ) {
          if ( globdata.getDBMSData().getDBMSManager().wasSuccessful(e) == false )
          {
            sqlException = e;
            f_29360146_jdbc_dberror();
          }
        }
      }
      else {
        f_29360146_jdbc_dberror();
      }
    }
  }
  
  public void f_29360146_jdbc_dberror()
  	throws ABException
  {
    globdata.getErrorData().setStatus( ErrorData.FATAL_ERROR_FL_LS );
    globdata.getDBMSData().setActionId( 15 );
    globdata.getErrorData().setLastStatus( ErrorData.DB_ERROR_FL_LS );
    if ( sqlException != null )
    {
      globdata.getErrorData().setErrorMessage(sqlException);
      if ( globdata.getDBMSData().getDBMSManager().wasDeadlockOrTimeout("IEFDB", sqlException) )
      {
        globdata.getErrorData().setLastStatus( ErrorData.DB_DEADLOCK_TIMEOUT_FL_LS );
      }
    }
    sl_29360146 = globdata.getErrorData().getLastStatus();
    throw new ABException();
  }
  
  public void f_29360146_moveb()
  	throws ABException
  {
    PkeyAttrText_001TP = w_ia.ImpParentPkeyAttrText;
  }
  
  public void f_29360146_movea()
  	throws ABException
  {
    w_ea.ParentPinstanceId = TimestampAttr.valueOf(TIRS2VW.TIRS2VW(globdata, "IEFDB", pinstance_id_011EF));
    w_ea.ParentPreferenceId = TimestampAttr.valueOf(TIRS2VW.TIRS2VW(globdata, "IEFDB", preference_id_013EF));
    w_ea.ParentPcreateUserId = FixedStringAttr.valueOf(pcreate_userid_007EF, (short)8);
    w_ea.ParentPupdateUserId = FixedStringAttr.valueOf(pupdate_userid_009EF, (short)8);
    w_ea.ParentPkeyAttrText = FixedStringAttr.valueOf(pkey_attr_001EF, (short)5);
    w_ea.ParentPsearchAttrText = FixedStringAttr.valueOf(psearch_attr_003EF, (short)25);
    w_ea.ParentPotherAttrText = FixedStringAttr.valueOf(pother_attr_005EF, (short)25);
    w_ea.ParentPtypeTkeyAttrText = FixedStringAttr.valueOf(ptype_tkey_attr_te_015EF, (short)4);
  }
}// end class


package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: DYYY0121_IA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:08:20
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF IMPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: DYYY0121_IA
 **/
public class DYYY0121_IA extends ViewBase implements IImportView, Serializable
{
  // Entity View: IMP_ERROR
  //        Type: IYY1_COMPONENT
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentSeverityCode
   **/
  public char ImpErrorIyy1ComponentSeverityCode_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentSeverityCode
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ImpErrorIyy1ComponentSeverityCode;
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentRollbackIndicator
   **/
  public char ImpErrorIyy1ComponentRollbackIndicator_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentRollbackIndicator
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ImpErrorIyy1ComponentRollbackIndicator;
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentOriginServid
   **/
  public char ImpErrorIyy1ComponentOriginServid_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentOriginServid
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double ImpErrorIyy1ComponentOriginServid;
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentContextString
   **/
  public char ImpErrorIyy1ComponentContextString_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentContextString
   * Domain: Text
   * Length: 512
   * Varying Length: Y
   **/
  public String ImpErrorIyy1ComponentContextString;
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentReturnCode
   **/
  public char ImpErrorIyy1ComponentReturnCode_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentReturnCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ImpErrorIyy1ComponentReturnCode;
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentReasonCode
   **/
  public char ImpErrorIyy1ComponentReasonCode_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentReasonCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ImpErrorIyy1ComponentReasonCode;
  /**
   * Attribute missing flag for: ImpErrorIyy1ComponentChecksum
   **/
  public char ImpErrorIyy1ComponentChecksum_AS;
  /**
   * Attribute for: ImpErrorIyy1ComponentChecksum
   * Domain: Text
   * Length: 15
   * Varying Length: N
   **/
  public String ImpErrorIyy1ComponentChecksum;
  // Entity View: IMP
  //        Type: PARENT
  /**
   * Attribute missing flag for: ImpParentPinstanceId
   **/
  public char ImpParentPinstanceId_AS;
  /**
   * Attribute for: ImpParentPinstanceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String ImpParentPinstanceId;
  /**
   * Attribute missing flag for: ImpParentPkeyAttrText
   **/
  public char ImpParentPkeyAttrText_AS;
  /**
   * Attribute for: ImpParentPkeyAttrText
   * Domain: Text
   * Length: 5
   * Varying Length: N
   **/
  public String ImpParentPkeyAttrText;
  /**
   * Default Constructor
   **/
  
  public DYYY0121_IA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public DYYY0121_IA(DYYY0121_IA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static DYYY0121_IA getInstance()
  {
    return new DYYY0121_IA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new DYYY0121_IA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    ImpErrorIyy1ComponentSeverityCode_AS = ' ';
    ImpErrorIyy1ComponentSeverityCode = " ";
    ImpErrorIyy1ComponentRollbackIndicator_AS = ' ';
    ImpErrorIyy1ComponentRollbackIndicator = " ";
    ImpErrorIyy1ComponentOriginServid_AS = ' ';
    ImpErrorIyy1ComponentOriginServid = 0.0;
    ImpErrorIyy1ComponentContextString_AS = ' ';
    ImpErrorIyy1ComponentContextString = "";
    ImpErrorIyy1ComponentReturnCode_AS = ' ';
    ImpErrorIyy1ComponentReturnCode = 0;
    ImpErrorIyy1ComponentReasonCode_AS = ' ';
    ImpErrorIyy1ComponentReasonCode = 0;
    ImpErrorIyy1ComponentChecksum_AS = ' ';
    ImpErrorIyy1ComponentChecksum = "               ";
    ImpParentPinstanceId_AS = ' ';
    ImpParentPinstanceId = "00000000000000000000";
    ImpParentPkeyAttrText_AS = ' ';
    ImpParentPkeyAttrText = "     ";
  }
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    throw new RuntimeException("can only execute getVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    throw new RuntimeException("can only execute setFromVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IImportView orig)
  {
    this.copyFrom((DYYY0121_IA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(DYYY0121_IA orig)
  {
    ImpErrorIyy1ComponentSeverityCode_AS = orig.ImpErrorIyy1ComponentSeverityCode_AS;
    ImpErrorIyy1ComponentSeverityCode = orig.ImpErrorIyy1ComponentSeverityCode;
    ImpErrorIyy1ComponentRollbackIndicator_AS = orig.ImpErrorIyy1ComponentRollbackIndicator_AS;
    ImpErrorIyy1ComponentRollbackIndicator = orig.ImpErrorIyy1ComponentRollbackIndicator;
    ImpErrorIyy1ComponentOriginServid_AS = orig.ImpErrorIyy1ComponentOriginServid_AS;
    ImpErrorIyy1ComponentOriginServid = orig.ImpErrorIyy1ComponentOriginServid;
    ImpErrorIyy1ComponentContextString_AS = orig.ImpErrorIyy1ComponentContextString_AS;
    ImpErrorIyy1ComponentContextString = orig.ImpErrorIyy1ComponentContextString;
    ImpErrorIyy1ComponentReturnCode_AS = orig.ImpErrorIyy1ComponentReturnCode_AS;
    ImpErrorIyy1ComponentReturnCode = orig.ImpErrorIyy1ComponentReturnCode;
    ImpErrorIyy1ComponentReasonCode_AS = orig.ImpErrorIyy1ComponentReasonCode_AS;
    ImpErrorIyy1ComponentReasonCode = orig.ImpErrorIyy1ComponentReasonCode;
    ImpErrorIyy1ComponentChecksum_AS = orig.ImpErrorIyy1ComponentChecksum_AS;
    ImpErrorIyy1ComponentChecksum = orig.ImpErrorIyy1ComponentChecksum;
    ImpParentPinstanceId_AS = orig.ImpParentPinstanceId_AS;
    ImpParentPinstanceId = orig.ImpParentPinstanceId;
    ImpParentPkeyAttrText_AS = orig.ImpParentPkeyAttrText_AS;
    ImpParentPkeyAttrText = orig.ImpParentPkeyAttrText;
  }
}

package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: DYYY0121_LA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:08:20
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF LOCAL VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: DYYY0121_LA
 **/
public class DYYY0121_LA extends ViewBase implements ILocalView, Serializable
{
  // Entity View: LOC
  //        Type: DONT_CHANGE_RETURN_CODES
  /**
   * Attribute missing flag for: LocDontChangeReturnCodesQ1Ok
   **/
  public char LocDontChangeReturnCodesQ1Ok_AS;
  /**
   * Attribute for: LocDontChangeReturnCodesQ1Ok
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReturnCodesQ1Ok;
  /**
   * Attribute missing flag for: LocDontChangeReturnCodesN10ObjNotFound
   **/
  public char LocDontChangeReturnCodesN10ObjNotFound_AS;
  /**
   * Attribute for: LocDontChangeReturnCodesN10ObjNotFound
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReturnCodesN10ObjNotFound;
  // Entity View: LOC
  //        Type: DONT_CHANGE_REASON_CODES
  /**
   * Attribute missing flag for: LocDontChangeReasonCodesQ1Default
   **/
  public char LocDontChangeReasonCodesQ1Default_AS;
  /**
   * Attribute for: LocDontChangeReasonCodesQ1Default
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReasonCodesQ1Default;
  /**
   * Attribute missing flag for: LocDontChangeReasonCodesQ101ParentNotFound
   **/
  public char LocDontChangeReasonCodesQ101ParentNotFound_AS;
  /**
   * Attribute for: LocDontChangeReasonCodesQ101ParentNotFound
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReasonCodesQ101ParentNotFound;
  /**
   * Default Constructor
   **/
  
  public DYYY0121_LA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public DYYY0121_LA(DYYY0121_LA orig)
  {
    LocDontChangeReturnCodesQ1Ok_AS = orig.LocDontChangeReturnCodesQ1Ok_AS;
    LocDontChangeReturnCodesQ1Ok = orig.LocDontChangeReturnCodesQ1Ok;
    LocDontChangeReturnCodesN10ObjNotFound_AS = orig.LocDontChangeReturnCodesN10ObjNotFound_AS;
    LocDontChangeReturnCodesN10ObjNotFound = orig.LocDontChangeReturnCodesN10ObjNotFound;
    LocDontChangeReasonCodesQ1Default_AS = orig.LocDontChangeReasonCodesQ1Default_AS;
    LocDontChangeReasonCodesQ1Default = orig.LocDontChangeReasonCodesQ1Default;
    LocDontChangeReasonCodesQ101ParentNotFound_AS = orig.LocDontChangeReasonCodesQ101ParentNotFound_AS;
    LocDontChangeReasonCodesQ101ParentNotFound = orig.LocDontChangeReasonCodesQ101ParentNotFound;
  }
  /**
   * Static instance creator function
   **/
  
  public static DYYY0121_LA getInstance()
  {
    return new DYYY0121_LA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new DYYY0121_LA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    LocDontChangeReturnCodesQ1Ok_AS = ' ';
    LocDontChangeReturnCodesQ1Ok = 0;
    LocDontChangeReturnCodesN10ObjNotFound_AS = ' ';
    LocDontChangeReturnCodesN10ObjNotFound = 0;
    LocDontChangeReasonCodesQ1Default_AS = ' ';
    LocDontChangeReasonCodesQ1Default = 0;
    LocDontChangeReasonCodesQ101ParentNotFound_AS = ' ';
    LocDontChangeReasonCodesQ101ParentNotFound = 0;
  }
}

package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: DYYY0121_OA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:08:20
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF EXPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: DYYY0121_OA
 **/
public class DYYY0121_OA extends ViewBase implements IExportView, Serializable
{
  // Entity View: EXP
  //        Type: PARENT
  /**
   * Attribute missing flag for: ExpParentPinstanceId
   **/
  public char ExpParentPinstanceId_AS;
  /**
   * Attribute for: ExpParentPinstanceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String ExpParentPinstanceId;
  /**
   * Attribute missing flag for: ExpParentPreferenceId
   **/
  public char ExpParentPreferenceId_AS;
  /**
   * Attribute for: ExpParentPreferenceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String ExpParentPreferenceId;
  /**
   * Attribute missing flag for: ExpParentPcreateUserId
   **/
  public char ExpParentPcreateUserId_AS;
  /**
   * Attribute for: ExpParentPcreateUserId
   * Domain: Text
   * Length: 8
   * Varying Length: N
   **/
  public String ExpParentPcreateUserId;
  /**
   * Attribute missing flag for: ExpParentPupdateUserId
   **/
  public char ExpParentPupdateUserId_AS;
  /**
   * Attribute for: ExpParentPupdateUserId
   * Domain: Text
   * Length: 8
   * Varying Length: N
   **/
  public String ExpParentPupdateUserId;
  /**
   * Attribute missing flag for: ExpParentPkeyAttrText
   **/
  public char ExpParentPkeyAttrText_AS;
  /**
   * Attribute for: ExpParentPkeyAttrText
   * Domain: Text
   * Length: 5
   * Varying Length: N
   **/
  public String ExpParentPkeyAttrText;
  /**
   * Attribute missing flag for: ExpParentPsearchAttrText
   **/
  public char ExpParentPsearchAttrText_AS;
  /**
   * Attribute for: ExpParentPsearchAttrText
   * Domain: Text
   * Length: 25
   * Varying Length: N
   **/
  public String ExpParentPsearchAttrText;
  /**
   * Attribute missing flag for: ExpParentPotherAttrText
   **/
  public char ExpParentPotherAttrText_AS;
  /**
   * Attribute for: ExpParentPotherAttrText
   * Domain: Text
   * Length: 25
   * Varying Length: N
   **/
  public String ExpParentPotherAttrText;
  /**
   * Attribute missing flag for: ExpParentPtypeTkeyAttrText
   **/
  public char ExpParentPtypeTkeyAttrText_AS;
  /**
   * Attribute for: ExpParentPtypeTkeyAttrText
   * Domain: Text
   * Length: 4
   * Varying Length: N
   **/
  public String ExpParentPtypeTkeyAttrText;
  // Entity View: EXP_ERROR
  //        Type: IYY1_COMPONENT
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentSeverityCode
   **/
  public char ExpErrorIyy1ComponentSeverityCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentSeverityCode
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentSeverityCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentRollbackIndicator
   **/
  public char ExpErrorIyy1ComponentRollbackIndicator_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentRollbackIndicator
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentRollbackIndicator;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentOriginServid
   **/
  public char ExpErrorIyy1ComponentOriginServid_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentOriginServid
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double ExpErrorIyy1ComponentOriginServid;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentContextString
   **/
  public char ExpErrorIyy1ComponentContextString_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentContextString
   * Domain: Text
   * Length: 512
   * Varying Length: Y
   **/
  public String ExpErrorIyy1ComponentContextString;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentReturnCode
   **/
  public char ExpErrorIyy1ComponentReturnCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentReturnCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ExpErrorIyy1ComponentReturnCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentReasonCode
   **/
  public char ExpErrorIyy1ComponentReasonCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentReasonCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ExpErrorIyy1ComponentReasonCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentChecksum
   **/
  public char ExpErrorIyy1ComponentChecksum_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentChecksum
   * Domain: Text
   * Length: 15
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentChecksum;
  /**
   * Default Constructor
   **/
  
  public DYYY0121_OA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public DYYY0121_OA(DYYY0121_OA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static DYYY0121_OA getInstance()
  {
    return new DYYY0121_OA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new DYYY0121_OA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    ExpParentPinstanceId_AS = ' ';
    ExpParentPinstanceId = "00000000000000000000";
    ExpParentPreferenceId_AS = ' ';
    ExpParentPreferenceId = "00000000000000000000";
    ExpParentPcreateUserId_AS = ' ';
    ExpParentPcreateUserId = "        ";
    ExpParentPupdateUserId_AS = ' ';
    ExpParentPupdateUserId = "        ";
    ExpParentPkeyAttrText_AS = ' ';
    ExpParentPkeyAttrText = "     ";
    ExpParentPsearchAttrText_AS = ' ';
    ExpParentPsearchAttrText = "                         ";
    ExpParentPotherAttrText_AS = ' ';
    ExpParentPotherAttrText = "                         ";
    ExpParentPtypeTkeyAttrText_AS = ' ';
    ExpParentPtypeTkeyAttrText = "    ";
    ExpErrorIyy1ComponentSeverityCode_AS = ' ';
    ExpErrorIyy1ComponentSeverityCode = " ";
    ExpErrorIyy1ComponentRollbackIndicator_AS = ' ';
    ExpErrorIyy1ComponentRollbackIndicator = " ";
    ExpErrorIyy1ComponentOriginServid_AS = ' ';
    ExpErrorIyy1ComponentOriginServid = 0.0;
    ExpErrorIyy1ComponentContextString_AS = ' ';
    ExpErrorIyy1ComponentContextString = "";
    ExpErrorIyy1ComponentReturnCode_AS = ' ';
    ExpErrorIyy1ComponentReturnCode = 0;
    ExpErrorIyy1ComponentReasonCode_AS = ' ';
    ExpErrorIyy1ComponentReasonCode = 0;
    ExpErrorIyy1ComponentChecksum_AS = ' ';
    ExpErrorIyy1ComponentChecksum = "               ";
  }
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    throw new RuntimeException("can only execute setFromVDF for a Procedure Step.");
  }
  
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    throw new RuntimeException("can only execute getVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IExportView orig)
  {
    this.copyFrom((DYYY0121_OA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(DYYY0121_OA orig)
  {
    ExpParentPinstanceId_AS = orig.ExpParentPinstanceId_AS;
    ExpParentPinstanceId = orig.ExpParentPinstanceId;
    ExpParentPreferenceId_AS = orig.ExpParentPreferenceId_AS;
    ExpParentPreferenceId = orig.ExpParentPreferenceId;
    ExpParentPcreateUserId_AS = orig.ExpParentPcreateUserId_AS;
    ExpParentPcreateUserId = orig.ExpParentPcreateUserId;
    ExpParentPupdateUserId_AS = orig.ExpParentPupdateUserId_AS;
    ExpParentPupdateUserId = orig.ExpParentPupdateUserId;
    ExpParentPkeyAttrText_AS = orig.ExpParentPkeyAttrText_AS;
    ExpParentPkeyAttrText = orig.ExpParentPkeyAttrText;
    ExpParentPsearchAttrText_AS = orig.ExpParentPsearchAttrText_AS;
    ExpParentPsearchAttrText = orig.ExpParentPsearchAttrText;
    ExpParentPotherAttrText_AS = orig.ExpParentPotherAttrText_AS;
    ExpParentPotherAttrText = orig.ExpParentPotherAttrText;
    ExpParentPtypeTkeyAttrText_AS = orig.ExpParentPtypeTkeyAttrText_AS;
    ExpParentPtypeTkeyAttrText = orig.ExpParentPtypeTkeyAttrText;
    ExpErrorIyy1ComponentSeverityCode_AS = orig.ExpErrorIyy1ComponentSeverityCode_AS;
    ExpErrorIyy1ComponentSeverityCode = orig.ExpErrorIyy1ComponentSeverityCode;
    ExpErrorIyy1ComponentRollbackIndicator_AS = orig.ExpErrorIyy1ComponentRollbackIndicator_AS;
    ExpErrorIyy1ComponentRollbackIndicator = orig.ExpErrorIyy1ComponentRollbackIndicator;
    ExpErrorIyy1ComponentOriginServid_AS = orig.ExpErrorIyy1ComponentOriginServid_AS;
    ExpErrorIyy1ComponentOriginServid = orig.ExpErrorIyy1ComponentOriginServid;
    ExpErrorIyy1ComponentContextString_AS = orig.ExpErrorIyy1ComponentContextString_AS;
    ExpErrorIyy1ComponentContextString = orig.ExpErrorIyy1ComponentContextString;
    ExpErrorIyy1ComponentReturnCode_AS = orig.ExpErrorIyy1ComponentReturnCode_AS;
    ExpErrorIyy1ComponentReturnCode = orig.ExpErrorIyy1ComponentReturnCode;
    ExpErrorIyy1ComponentReasonCode_AS = orig.ExpErrorIyy1ComponentReasonCode_AS;
    ExpErrorIyy1ComponentReasonCode = orig.ExpErrorIyy1ComponentReasonCode;
    ExpErrorIyy1ComponentChecksum_AS = orig.ExpErrorIyy1ComponentChecksum_AS;
    ExpErrorIyy1ComponentChecksum = orig.ExpErrorIyy1ComponentChecksum;
  }
}
