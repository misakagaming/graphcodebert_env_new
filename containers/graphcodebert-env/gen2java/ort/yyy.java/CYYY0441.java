
package gen.ort.yyy;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: CYYY0441_XML_GROUP_PARSE         Date: 2023/07/05
//    Target OS:   JVM                       Time: 15:09:54
//    Target DBMS: JDBC                      User: HakanBal
//    Access Method: JDBC           
//
//    Generation options:
//    Debug trace option selected
//    Data modeling constraint enforcement not selected
//    Optimized import view initialization not selected
//    Enforce default values with DBMS not selected
//    Init unspecified optional fields to NULL not selected
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;

import com.ca.gen.abrt.*;
import com.ca.gen.abrt.functions.*;
import com.ca.gen.abrt.cascade.*;
import com.ca.gen.abrt.trace.*;
import com.ca.gen.exits.common.*;
import com.ca.gen.odc.*;

public class CYYY0441 extends ABBase
{
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // IMPORT VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  CYYY0441_IA w_ia;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // EXPORT VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  CYYY0441_OA w_oa;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // LOCAL VIEW CLASS VARIABLE
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  CYYY0441_LA w_la;
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // ACTION BLOCK IMPORT/EXPORT VIEWS CLASS VARIABLES
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  gen.ort.yyy.EYYY0441_IA eyyy0441_ia;
  gen.ort.yyy.EYYY0441_OA eyyy0441_oa;
  gen.ort.yyy.CYYY9141_IA cyyy9141_ia;
  gen.ort.yyy.CYYY9141_OA cyyy9141_oa;
  gen.ort.yyy.CYYY9001_OA cyyy9001_oa;
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // REPEATING GROUP VIEW STATUS FIELDS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  boolean ExpGroup_FL_001;
  int ExpGroup_PS_001;
  boolean ExpGroup_RF_001;
  public final static int ExpGroup_MM_001 = 48;
  boolean LocGroupContext_FL_002;
  int LocGroupContext_PS_002;
  boolean LocGroupContext_RF_002;
  public final static int LocGroupContext_MM_002 = 9;
  boolean ExpGroup_FL_003;
  int ExpGroup_PS_003;
  boolean ExpGroup_RF_003;
  public final static int ExpGroup_MM_003 = 48;
  boolean ImpGroupContext_FL_004;
  int ImpGroupContext_PS_004;
  boolean ImpGroupContext_RF_004;
  public final static int ImpGroupContext_MM_004 = 9;
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // MISC DECLARATIONS AND PROTOTYPES 
  //    FOLLOW AS NEEDED:             
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  boolean func_0022020283_esc_flag;
  boolean func_0020972107_esc_flag;
  boolean func_0020972030_esc_flag;
  boolean func_0020972028_esc_flag;
  boolean func_0020972029_esc_flag;
  PadView padview[] = new PadView [55];
  int trace_ret_code;
  PadText padtext[] = initPadText();
  public PadText [] initPadText()
  {
    PadText [] result = new PadText [PADTEXT_SIZE];
    result[0] = PadText.getInstance(   0,"+->   CYYY0441_XML_GROUP_PARSE          07/05/2023  15:09");
    result[1] = PadText.getInstance(   0,"!       IMPORTS:");
    result[2] = PadText.getInstance(   0,"!         Work View imp canam_xml (Transient, Optional, Import only)");
    result[3] = PadText.getInstance(   0,"!           xml_buffer");
    result[4] = PadText.getInstance(   0,"!       EXPORTS:");
    result[5] = PadText.getInstance(   0,"!         Group View (48) exp_group");
    result[6] = PadText.getInstance(   0,"!           Entity View exp_g type (Transient, Export only)");
    result[7] = PadText.getInstance(   0,"!             tinstance_id");
    result[8] = PadText.getInstance(   0,"!             treference_id");
    result[9] = PadText.getInstance(   0,"!             tcreate_user_id");
    result[10] = PadText.getInstance(   0,"!             tupdate_user_id");
    result[11] = PadText.getInstance(   0,"!             tkey_attr_text");
    result[12] = PadText.getInstance(   0,"!             tsearch_attr_text");
    result[13] = PadText.getInstance(   0,"!             tother_attr_text");
    result[14] = PadText.getInstance(   0,"!             tother_attr_date");
    result[15] = PadText.getInstance(   0,"!             tother_attr_time");
    result[16] = PadText.getInstance(   0,"!             tother_attr_amount");
    result[17] = PadText.getInstance(   0,"!         Work View exp_error canam_xml (Transient, Export only)");
    result[18] = PadText.getInstance(   0,"!           xml_return_code");
    result[19] = PadText.getInstance(   0,"!           xml_message");
    result[20] = PadText.getInstance(   0,"!           xml_position");
    result[21] = PadText.getInstance(   0,"!           xml_source");
    result[22] = PadText.getInstance(   0,"!         Work View exp_error iyy1_component (Transient, Export only)");
    result[23] = PadText.getInstance(   0,"!           severity_code");
    result[24] = PadText.getInstance(   0,"!           rollback_indicator");
    result[25] = PadText.getInstance(   0,"!           origin_servid");
    result[26] = PadText.getInstance(   0,"!           context_string");
    result[27] = PadText.getInstance(   0,"!           return_code");
    result[28] = PadText.getInstance(   0,"!           reason_code");
    result[29] = PadText.getInstance(   0,"!           checksum");
    result[30] = PadText.getInstance(   0,"!       LOCALS:");
    result[31] = PadText.getInstance(   0,"!         Work View loc dont_change_return_codes");
    result[32] = PadText.getInstance(   0,"!           1_ok");
    result[33] = PadText.getInstance(   0,"!           n70_xml_error");
    result[34] = PadText.getInstance(   0,"!         Work View loc dont_change_reason_codes");
    result[35] = PadText.getInstance(   0,"!           1_default");
    result[36] = PadText.getInstance(   0,"!         Work View loc_error iyy1_component");
    result[37] = PadText.getInstance(   0,"!           severity_code");
    result[38] = PadText.getInstance(   0,"!           rollback_indicator");
    result[39] = PadText.getInstance(   0,"!           origin_servid");
    result[40] = PadText.getInstance(   0,"!           context_string");
    result[41] = PadText.getInstance(   0,"!           return_code");
    result[42] = PadText.getInstance(   0,"!           reason_code");
    result[43] = PadText.getInstance(   0,"!           checksum");
    result[44] = PadText.getInstance(   0,"!         Group View (9) loc_group_context");
    result[45] = PadText.getInstance(   0,"!           Work View loc_g_context dont_change_text");
    result[46] = PadText.getInstance(   0,"!             text_150");
    result[47] = PadText.getInstance(   0,"!");
    result[48] = PadText.getInstance(   0,"!     PROCEDURE STATEMENTS");
    result[49] = PadText.getInstance(   0,"!");
    result[50] = PadText.getInstance(   1,"!  NOTE: ");
    result[51] = PadText.getInstance(   1,"!  Check description for porpose");
    result[52] = PadText.getInstance(   1,"!  ");
    result[53] = PadText.getInstance(   2,"!  NOTE: ");
    result[54] = PadText.getInstance(   2,"!  RELEASE HISTORY");
    result[55] = PadText.getInstance(   2,"!  01_00 01-10-2009 New Release");
    result[56] = PadText.getInstance(   2,"!  ");
    result[57] = PadText.getInstance(   3,"!  USE cyyy9001_exception_hndlng_dflt");
    result[58] = PadText.getInstance(   3,
      "!     WHICH EXPORTS: Work View exp_error iyy1_component FROM Work View exp_error iyy1_component");
    result[59] = PadText.getInstance(   4,"!   ");
    result[60] = PadText.getInstance(   5,"!  NOTE: ");
    result[61] = PadText.getInstance(   5,"!  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    result[62] = PadText.getInstance(   5,"!  Change Action Block Name");
    result[63] = PadText.getInstance(   5,"!  ");
    result[64] = PadText.getInstance(   6,"!  SET SUBSCRIPT OF loc_group_context TO 1 ");
    result[65] = PadText.getInstance(   7,"!  SET loc_g_context dont_change_text text_150 TO \"CYYY0411\" ");
    result[66] = PadText.getInstance(   8,"!  SET SUBSCRIPT OF loc_group_context TO 2 ");
    result[67] = PadText.getInstance(   9,"!  SET loc_g_context dont_change_text text_150 TO \"XML CREATE\" ");
    result[68] = PadText.getInstance(  10,"!   ");
    result[69] = PadText.getInstance(  11,"!  NOTE: ");
    result[70] = PadText.getInstance(  11,"!  ****************************************************************");
    result[71] = PadText.getInstance(  11,"!  Kullanılan ReturnCode/ReasonCode değerleri");
    result[72] = PadText.getInstance(  11,"!  ");
    result[73] = PadText.getInstance(  12,"!  NOTE: ");
    result[74] = PadText.getInstance(  12,"!  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    result[75] = PadText.getInstance(  12,"!  Aşağıdaki return ve reason code ları ayarlayın");
    result[76] = PadText.getInstance(  12,"!  ");
    result[77] = PadText.getInstance(  13,"!  SET loc dont_change_return_codes 1_ok TO 1 ");
    result[78] = PadText.getInstance(  14,"!  SET loc dont_change_return_codes n70_xml_error TO -70 ");
    result[79] = PadText.getInstance(  15,"!   ");
    result[80] = PadText.getInstance(  16,"!  SET loc dont_change_reason_codes 1_default TO 1 ");
    result[81] = PadText.getInstance(  17,"!   ");
    result[82] = PadText.getInstance(  18,"!  +->IF exp_error iyy1_component return_code >= loc dont_change_return_codes 1_ok");
    result[83] = PadText.getInstance(  19,"!  !  USE eyyy0441_xml_group_parse");
    result[84] = PadText.getInstance(  19,"!  !     WHICH IMPORTS: Work View imp canam_xml TO Work View imp canam_xml");
    result[85] = PadText.getInstance(  19,"!  !     WHICH EXPORTS: Group View  exp_group FROM Group View exp_group");
    result[86] = PadText.getInstance(  19,"!  !                    Work View exp_error canam_xml FROM Work View exp_error canam_xml")
      ;
    result[87] = PadText.getInstance(  20,"!  !  +->CASE OF exp_error canam_xml xml_return_code");
    result[88] = PadText.getInstance(  20, 1, "!  !  +> CASE \"OK\"");
    result[89] = PadText.getInstance(  21,"!  !  !  NOTE: ");
    result[90] = PadText.getInstance(  21,"!  !  !  ****************************************************************");
    result[91] = PadText.getInstance(  21,"!  !  !  OK");
    result[92] = PadText.getInstance(  21,"!  !  !   Successful.");
    result[93] = PadText.getInstance(  22,"!  !  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes 1_ok ")
      ;
    result[94] = PadText.getInstance(  23,
      "!  !  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 1_default ");
    result[95] = PadText.getInstance(  20, 2, "!  !  +> OTHERWISE");
    result[96] = PadText.getInstance(  24,
      "!  !  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n70_xml_error ");
    result[97] = PadText.getInstance(  25,
      "!  !  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 1_default ");
    result[98] = PadText.getInstance(  26,"!  !  !  NOTE: ");
    result[99] = PadText.getInstance(  26,"...Check exp_error canam_xml for error details..");
    result[100] = PadText.getInstance(  26,"...       Work View   exp_error canam_xml (transient,export only)");
    result[101] = PadText.getInstance(  26,"...         xml_return_code ");
    result[102] = PadText.getInstance(  26,"...         xml_message ");
    result[103] = PadText.getInstance(  26,"...         xml_position ");
    result[104] = PadText.getInstance(  26,"...         xml_source ");
    result[105] = PadText.getInstance(  26,"...");
    result[106] = PadText.getInstance(  26,"...CASE OF  xml_return_code:");
    result[107] = PadText.getInstance(  26,"...EB");
    result[108] = PadText.getInstance(  26,
      "... End of buffer. Occurs during parsing when end of buffer is encountered while more data was expected. For the writer,");
    result[109] = PadText.getInstance(  26,"...it means that buffer is exhausted while more data was needed to be written out.");
    result[110] = PadText.getInstance(  26,"... ");
    result[111] = PadText.getInstance(  26,"...IC");
    result[112] = PadText.getInstance(  26,
      "... Invalid character. Occurs when a character is encountered in the stream that was not expected. Such as, a missing “=”");
    result[113] = PadText.getInstance(  26,"...after attribute name.");
    result[114] = PadText.getInstance(  26,"... ");
    result[115] = PadText.getInstance(  26,"...MN");
    result[116] = PadText.getInstance(  26,"... Missing node. Occurs when a mandatory element or attribute is missing.");
    result[117] = PadText.getInstance(  26,"... ");
    result[118] = PadText.getInstance(  26,"...UN");
    result[119] = PadText.getInstance(  26,
      "... Unknown node. Occurs when a foreign (unknown) node has been encountered within a ‘non-extensible’ element context");
    result[120] = PadText.getInstance(  26,"... ");
    result[121] = PadText.getInstance(  26,"...DA");
    result[122] = PadText.getInstance(  26,
      "... Duplicate attribute. Occurs during parsing when an XML element has two attributes with the same name.");
    result[123] = PadText.getInstance(  26,"... ");
    result[124] = PadText.getInstance(  26,"...PE");
    result[125] = PadText.getInstance(  26,
      "... Pattern error. The node text does not have the pattern specified during design, such as date/time patterns.");
    result[126] = PadText.getInstance(  26,"... ");
    result[127] = PadText.getInstance(  26,"...OV");
    result[128] = PadText.getInstance(  26,
      "... Numeric overflow error. This can happen when the integer part of the number is truncated after parsing.");
    result[129] = PadText.getInstance(  26,"... ");
    result[130] = PadText.getInstance(  26,"...MD");
    result[131] = PadText.getInstance(  26,
      "... More data warning. This is a warning message that means there is more data in XML document than the IDS (Interface Data")
      ;
    result[132] = PadText.getInstance(  26,"...Structure) can hold.");
    result[133] = PadText.getInstance(  26,"... ");
    result[134] = PadText.getInstance(  26,"...BP");
    result[135] = PadText.getInstance(  26,"... XML PARSE statement error.");
    result[136] = PadText.getInstance(  26,"... ");
    result[137] = PadText.getInstance(  26,"...ER");
    result[138] = PadText.getInstance(  26,"... Unknown error. Occurs when operation could not be completed for any other reason.");
    result[139] = PadText.getInstance(  26,"... ");
    result[140] = PadText.getInstance(  20,"!  !  +--");
    result[141] = PadText.getInstance(  18,"!  +--");
    result[142] = PadText.getInstance(  27,"!   ");
    result[143] = PadText.getInstance(  28,"!  +->IF exp_error iyy1_component return_code < loc dont_change_return_codes 1_ok");
    result[144] = PadText.getInstance(  29,"!  !  USE cyyy9141_context_string_set");
    result[145] = PadText.getInstance(  29,"!  !     WHICH IMPORTS: Group View  loc_group_context TO Group View imp_group_context");
    result[146] = PadText.getInstance(  29,
      "!  !     WHICH EXPORTS: Work View exp_error iyy1_component FROM Work View exp_context iyy1_component");
    result[147] = PadText.getInstance(  29,
      "!  !                    Work View loc_error iyy1_component FROM Work View exp_error iyy1_component");
    result[148] = PadText.getInstance(  30,"!  !   ");
    result[149] = PadText.getInstance(  31,"!  !  +->IF loc_error iyy1_component return_code < loc dont_change_return_codes 1_ok");
    result[150] = PadText.getInstance(  32,"!  !  !  MOVE loc_error iyy1_component TO exp_error iyy1_component");
    result[151] = PadText.getInstance(  31,"!  !  +--");
    result[152] = PadText.getInstance(  33,"!  !  SET exp_error iyy1_component severity_code TO \"E\" ");
    result[153] = PadText.getInstance(  28,"!  +--");
    result[154] = PadText.getInstance(   0,"+---");
    result[155] = PadText.getInstance(PadText.LASTLINE,"************************* BOTTOM OF DATA *************************");
    return result;
  }
  final static int PADTEXT_SIZE = 156;
  //       +->   CYYY0441_XML_GROUP_PARSE          07/05/2023  15:09
  //       !       IMPORTS:
  //       !         Work View imp canam_xml (Transient, Optional, Import only)
  //       !           xml_buffer
  //       !       EXPORTS:
  //       !         Group View (48) exp_group
  //       !           Entity View exp_g type (Transient, Export only)
  //       !             tinstance_id
  //       !             treference_id
  //       !             tcreate_user_id
  //       !             tupdate_user_id
  //       !             tkey_attr_text
  //       !             tsearch_attr_text
  //       !             tother_attr_text
  //       !             tother_attr_date
  //       !             tother_attr_time
  //       !             tother_attr_amount
  //       !         Work View exp_error canam_xml (Transient, Export only)
  //       !           xml_return_code
  //       !           xml_message
  //       !           xml_position
  //       !           xml_source
  //       !         Work View exp_error iyy1_component (Transient, Export only)
  //       !           severity_code
  //       !           rollback_indicator
  //       !           origin_servid
  //       !           context_string
  //       !           return_code
  //       !           reason_code
  //       !           checksum
  //       !       LOCALS:
  //       !         Work View loc dont_change_return_codes
  //       !           1_ok
  //       !           n70_xml_error
  //       !         Work View loc dont_change_reason_codes
  //       !           1_default
  //       !         Work View loc_error iyy1_component
  //       !           severity_code
  //       !           rollback_indicator
  //       !           origin_servid
  //       !           context_string
  //       !           return_code
  //       !           reason_code
  //       !           checksum
  //       !         Group View (9) loc_group_context
  //       !           Work View loc_g_context dont_change_text
  //       !             text_150
  //       !
  //       !     PROCEDURE STATEMENTS
  //       !
  //     1 !  NOTE: 
  //     1 !  Check description for porpose
  //     1 !  
  //     2 !  NOTE: 
  //     2 !  RELEASE HISTORY
  //     2 !  01_00 01-10-2009 New Release
  //     2 !  
  //     3 !  USE cyyy9001_exception_hndlng_dflt
  //     3 !     WHICH EXPORTS: Work View exp_error iyy1_component FROM Work View exp_error iyy1_component
  //     4 !   
  //     5 !  NOTE: 
  //     5 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  //     5 !  Change Action Block Name
  //     5 !  
  //     6 !  SET SUBSCRIPT OF loc_group_context TO 1 
  //     7 !  SET loc_g_context dont_change_text text_150 TO "CYYY0411" 
  //     8 !  SET SUBSCRIPT OF loc_group_context TO 2 
  //     9 !  SET loc_g_context dont_change_text text_150 TO "XML CREATE" 
  //    10 !   
  //    11 !  NOTE: 
  //    11 !  ****************************************************************
  //    11 !  Kullanılan ReturnCode/ReasonCode değerleri
  //    11 !  
  //    12 !  NOTE: 
  //    12 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  //    12 !  Aşağıdaki return ve reason code ları ayarlayın
  //    12 !  
  //    13 !  SET loc dont_change_return_codes 1_ok TO 1 
  //    14 !  SET loc dont_change_return_codes n70_xml_error TO -70 
  //    15 !   
  //    16 !  SET loc dont_change_reason_codes 1_default TO 1 
  //    17 !   
  //    18 !  +->IF exp_error iyy1_component return_code >= loc dont_change_return_codes 1_ok
  //    19 !  !  USE eyyy0441_xml_group_parse
  //    19 !  !     WHICH IMPORTS: Work View imp canam_xml TO Work View imp canam_xml
  //    19 !  !     WHICH EXPORTS: Group View  exp_group FROM Group View exp_group
  //    19 !  !                    Work View exp_error canam_xml FROM Work View exp_error canam_xml
  //    20 !  !  +->CASE OF exp_error canam_xml xml_return_code
  //    20 !  !  +> CASE "OK"
  //    21 !  !  !  NOTE: 
  //    21 !  !  !  ****************************************************************
  //    21 !  !  !  OK
  //    21 !  !  !   Successful.
  //    22 !  !  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes 1_ok 
  //    23 !  !  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 1_default 
  //    20 !  !  +> OTHERWISE
  //    24 !  !  !  SET exp_error iyy1_component return_code TO loc dont_change_return_codes n70_xml_error 
  //    25 !  !  !  SET exp_error iyy1_component reason_code TO loc dont_change_reason_codes 1_default 
  //    26 !  !  !  NOTE: 
  //    26 ...Check exp_error canam_xml for error details..
  //    26 ...       Work View   exp_error canam_xml (transient,export only)
  //    26 ...         xml_return_code 
  //    26 ...         xml_message 
  //    26 ...         xml_position 
  //    26 ...         xml_source 
  //    26 ...
  //    26 ...CASE OF  xml_return_code:
  //    26 ...EB
  //    26 ... End of buffer. Occurs during parsing when end of buffer is encountered while more data was expected. For the writer,
  //    26 ...it means that buffer is exhausted while more data was needed to be written out.
  //    26 ... 
  //    26 ...IC
  //    26 ... Invalid character. Occurs when a character is encountered in the stream that was not expected. Such as, a missing “=”
  //    26 ...after attribute name.
  //    26 ... 
  //    26 ...MN
  //    26 ... Missing node. Occurs when a mandatory element or attribute is missing.
  //    26 ... 
  //    26 ...UN
  //    26 ... Unknown node. Occurs when a foreign (unknown) node has been encountered within a ‘non-extensible’ element context
  //    26 ... 
  //    26 ...DA
  //    26 ... Duplicate attribute. Occurs during parsing when an XML element has two attributes with the same name.
  //    26 ... 
  //    26 ...PE
  //    26 ... Pattern error. The node text does not have the pattern specified during design, such as date/time patterns.
  //    26 ... 
  //    26 ...OV
  //    26 ... Numeric overflow error. This can happen when the integer part of the number is truncated after parsing.
  //    26 ... 
  //    26 ...MD
  //    26 ... More data warning. This is a warning message that means there is more data in XML document than the IDS (Interface 
  // Data
  //    26 ...Structure) can hold.
  //    26 ... 
  //    26 ...BP
  //    26 ... XML PARSE statement error.
  //    26 ... 
  //    26 ...ER
  //    26 ... Unknown error. Occurs when operation could not be completed for any other reason.
  //    26 ... 
  //    20 !  !  +--
  //    18 !  +--
  //    27 !   
  //    28 !  +->IF exp_error iyy1_component return_code < loc dont_change_return_codes 1_ok
  //    29 !  !  USE cyyy9141_context_string_set
  //    29 !  !     WHICH IMPORTS: Group View  loc_group_context TO Group View imp_group_context
  //    29 !  !     WHICH EXPORTS: Work View exp_error iyy1_component FROM Work View exp_context iyy1_component
  //    29 !  !                    Work View loc_error iyy1_component FROM Work View exp_error iyy1_component
  //    30 !  !   
  //    31 !  !  +->IF loc_error iyy1_component return_code < loc dont_change_return_codes 1_ok
  //    32 !  !  !  MOVE loc_error iyy1_component TO exp_error iyy1_component
  //    31 !  !  +--
  //    33 !  !  SET exp_error iyy1_component severity_code TO "E" 
  //    28 !  +--
  //       +---
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  //  CONSTRUCTOR FOR THE CLASS       
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  public CYYY0441()
  {
    iefCGenRlse = "CA Gen 8.6";
    ssCopyright = "Copyright (c) 2023 CA Technologies. All rights reserved.";
    iefCGenDate = "2023/07/05";
    iefCGenTime = "15:09:54";
    iefCGenEncy = "9.2.A6";
    iefCGenUserId = "HakanBal";
    iefCGenModel = "N8I_ORT_YYY_0112_TEMPLATE";
    iefCGenSubset = "ALL";
    iefCGenName = "CYYY0441_XML_GROUP_PARSE";
    nestingLevel = 0;
    valChkDeadlockTimeout = false;
    valChkDBError = false;
  }
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // ACTION BLOCK FUNCTION DECLARATIONS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  public void CYYY0441( Object in_runtime_parm1, 
  	IRuntimePStepContext in_runtime_parm2, 
  	GlobData in_globdata, 
  	CYYY0441_IA import_view, 
  	CYYY0441_OA export_view )
  {
    iefRuntimeParm1 = in_runtime_parm1;
    iefRuntimeParm2 = in_runtime_parm2;
    globdata = in_globdata;
    w_ia = import_view;
    w_oa = export_view;
    _CYYY0441();
  }
  
  private void _CYYY0441()
  {
    
    f_22020283_localAlloc("CYYY0441_XML_GROUP_PARSE");
    if ( globdata.getErrorData().getLastStatus() == ErrorData.IEF_ALLOCATION_ERROR_FL_LS )
    	return;
    
    ++(nestingLevel);
    try {
      f_22020283_init();
      f_22020283();
    } catch( ABException e ) {
    } finally {
      --(nestingLevel);
    }
    String last_stmt_num_saved = globdata.getStateData().getLastStatementNumber();
    globdata.getStateData().setLastStatementNumber( "9999999999" );
    try {
      f_0_trace();
    } catch( ABException e ) {
    }
    globdata.getStateData().setLastStatementNumber( last_stmt_num_saved );
  }
  public void f_22020283()
  	throws ABException
  {
    func_0022020283_esc_flag = false;
    globdata.getStateData().setCurrentABId( "0022020283" );
    globdata.getStateData().setCurrentABName( "CYYY0441_XML_GROUP_PARSE" );
    padview_init();
    globdata.getStateData().setLastStatementNumber( "0000000000" );
    f_0_trace();
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    Check description for porpose                                   
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    RELEASE HISTORY                                                 
    //    01_00 01-10-2009 New Release                                    
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    globdata.getStateData().setLastStatementNumber( "0000000003" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      
      cyyy9001_oa = (gen.ort.yyy.CYYY9001_OA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY9001_OA"));
      globdata.getErrorData().setErrorEncounteredSW( ErrorData.NO_ERROR_FOUND_SW );
      iefRuntimeParm2.useActionBlock("gen.ort.yyy.CYYY9001", "CYYY9001", null, cyyy9001_oa);
      if ( ((!(globdata.getErrorData().getStatus().equals( ErrorData.NONE_SF ))) || (globdata.getErrorData().getErrorEncounteredSW() 
        != ErrorData.NO_ERROR_FOUND_SW)) || (globdata.getErrorData().getViewOverflowSW() != ErrorData.NO_ERROR_FOUND_SW) )
      {
        throw new ABException();
      }
      globdata.getStateData().setCurrentABId( "0022020283" );
      globdata.getStateData().setCurrentABName( "CYYY0441_XML_GROUP_PARSE" );
      globdata.getStateData().setLastStatementNumber( "0000000003" );
      w_oa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.valueOf(cyyy9001_oa.ExpErrorIyy1ComponentSeverityCode, (short)1);
      w_oa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.valueOf(cyyy9001_oa.ExpErrorIyy1ComponentRollbackIndicator, (
        short)1);
      w_oa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.valueOf(cyyy9001_oa.ExpErrorIyy1ComponentOriginServid);
      w_oa.ExpErrorIyy1ComponentContextString = StringAttr.valueOf(cyyy9001_oa.ExpErrorIyy1ComponentContextString, (short)512);
      w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf(cyyy9001_oa.ExpErrorIyy1ComponentReturnCode);
      w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf(cyyy9001_oa.ExpErrorIyy1ComponentReasonCode);
      w_oa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.valueOf(cyyy9001_oa.ExpErrorIyy1ComponentChecksum, (short)15);
      cyyy9001_oa.freeInstance();
      cyyy9001_oa = null;
    }
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!                      
    //    Change Action Block Name                                        
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    globdata.getStateData().setLastStatementNumber( "0000000006" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      LocGroupContext_PS_002 = (int)TIRD2DEC.TIRD2DC1(1, 0, TIRD2DEC.ROUND_NONE, 0);
      if ( (LocGroupContext_PS_002 > w_la.LocGroupContext_MA) && (LocGroupContext_PS_002 <= 9) )
      w_la.LocGroupContext_MA = IntAttr.valueOf(LocGroupContext_PS_002);
    }
    globdata.getStateData().setLastStatementNumber( "0000000007" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocGContextDontChangeTextText150[LocGroupContext_PS_002-1] = FixedStringAttr.valueOf("CYYY0411", (short)150);
      f_173015095_rgvc();
    }
    globdata.getStateData().setLastStatementNumber( "0000000008" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      LocGroupContext_PS_002 = (int)TIRD2DEC.TIRD2DC1(2, 0, TIRD2DEC.ROUND_NONE, 0);
      if ( (LocGroupContext_PS_002 > w_la.LocGroupContext_MA) && (LocGroupContext_PS_002 <= 9) )
      w_la.LocGroupContext_MA = IntAttr.valueOf(LocGroupContext_PS_002);
    }
    globdata.getStateData().setLastStatementNumber( "0000000009" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocGContextDontChangeTextText150[LocGroupContext_PS_002-1] = FixedStringAttr.valueOf("XML CREATE", (short)150);
      f_173015095_rgvc();
    }
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    **************************************************************  
    //    **                                                              
    //    Kullanılan ReturnCode/ReasonCode değerleri                      
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
    //    !!                                                              
    //    Aşağıdaki return ve reason code ları ayarlayın                  
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    globdata.getStateData().setLastStatementNumber( "0000000013" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocDontChangeReturnCodesQ1Ok = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(1, 0, TIRD2DEC.ROUND_NONE, 5));
    }
    globdata.getStateData().setLastStatementNumber( "0000000014" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocDontChangeReturnCodesN70XmlError = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(-70, 0, TIRD2DEC.ROUND_NONE, 5));
    }
    
    globdata.getStateData().setLastStatementNumber( "0000000016" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_la.LocDontChangeReasonCodesQ1Default = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1(1, 0, TIRD2DEC.ROUND_NONE, 5));
    }
    
    globdata.getStateData().setLastStatementNumber( "0000000018" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      if ( ((double) w_oa.ExpErrorIyy1ComponentReturnCode >= (double) w_la.LocDontChangeReturnCodesQ1Ok) )
      {
        f_20972107();
      }
      
    }
    
    globdata.getStateData().setLastStatementNumber( "0000000028" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      if ( ((double) w_oa.ExpErrorIyy1ComponentReturnCode < (double) w_la.LocDontChangeReturnCodesQ1Ok) )
      {
        f_20972030();
      }
      
    }
  }
  
  
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // SUBORDINATE FUNCTIONS
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  
  public void f_20972107()
  	throws ABException
  {
    func_0020972107_esc_flag = false;
    globdata.getStateData().setLastStatementNumber( "0000000019" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      
      eyyy0441_ia = (gen.ort.yyy.EYYY0441_IA)(iefRuntimeParm2.getInstance("gen.ort.yyy.EYYY0441_IA"));
      eyyy0441_oa = (gen.ort.yyy.EYYY0441_OA)(iefRuntimeParm2.getInstance("gen.ort.yyy.EYYY0441_OA"));
      eyyy0441_ia.ImpCanamXmlXmlBuffer = StringAttr.valueOf(w_ia.ImpCanamXmlXmlBuffer, (short)4094);
      globdata.getErrorData().setErrorEncounteredSW( ErrorData.NO_ERROR_FOUND_SW );
      iefRuntimeParm2.useActionBlock("gen.ort.yyy.EYYY0441", "EYYY0441", eyyy0441_ia, eyyy0441_oa);
      if ( ((!(globdata.getErrorData().getStatus().equals( ErrorData.NONE_SF ))) || (globdata.getErrorData().getErrorEncounteredSW() 
        != ErrorData.NO_ERROR_FOUND_SW)) || (globdata.getErrorData().getViewOverflowSW() != ErrorData.NO_ERROR_FOUND_SW) )
      {
        throw new ABException();
      }
      globdata.getStateData().setCurrentABId( "0022020283" );
      globdata.getStateData().setCurrentABName( "CYYY0441_XML_GROUP_PARSE" );
      globdata.getStateData().setLastStatementNumber( "0000000019" );
      w_oa.ExpErrorCanamXmlXmlReturnCode = FixedStringAttr.valueOf(eyyy0441_oa.ExpErrorCanamXmlXmlReturnCode, (short)2);
      w_oa.ExpErrorCanamXmlXmlMessage = FixedStringAttr.valueOf(eyyy0441_oa.ExpErrorCanamXmlXmlMessage, (short)80);
      w_oa.ExpErrorCanamXmlXmlPosition = DoubleAttr.valueOf(eyyy0441_oa.ExpErrorCanamXmlXmlPosition);
      w_oa.ExpErrorCanamXmlXmlSource = FixedStringAttr.valueOf(eyyy0441_oa.ExpErrorCanamXmlXmlSource, (short)120);
      w_oa.ExpGroup_MA = IntAttr.valueOf(eyyy0441_oa.ExpGroup_MA);
      for(adim1 = 1; adim1 <= w_oa.ExpGroup_MA; ++(adim1))
      {
        w_oa.ExpGTypeTinstanceId[adim1-1] = TimestampAttr.valueOf(eyyy0441_oa.ExpGTypeTinstanceId[adim1-1]);
        w_oa.ExpGTypeTreferenceId[adim1-1] = TimestampAttr.valueOf(eyyy0441_oa.ExpGTypeTreferenceId[adim1-1]);
        w_oa.ExpGTypeTcreateUserId[adim1-1] = FixedStringAttr.valueOf(eyyy0441_oa.ExpGTypeTcreateUserId[adim1-1], (short)8);
        w_oa.ExpGTypeTupdateUserId[adim1-1] = FixedStringAttr.valueOf(eyyy0441_oa.ExpGTypeTupdateUserId[adim1-1], (short)8);
        w_oa.ExpGTypeTkeyAttrText[adim1-1] = FixedStringAttr.valueOf(eyyy0441_oa.ExpGTypeTkeyAttrText[adim1-1], (short)4);
        w_oa.ExpGTypeTsearchAttrText[adim1-1] = FixedStringAttr.valueOf(eyyy0441_oa.ExpGTypeTsearchAttrText[adim1-1], (short)20);
        w_oa.ExpGTypeTotherAttrText[adim1-1] = FixedStringAttr.valueOf(eyyy0441_oa.ExpGTypeTotherAttrText[adim1-1], (short)2);
        w_oa.ExpGTypeTotherAttrDate[adim1-1] = DateAttr.valueOf(eyyy0441_oa.ExpGTypeTotherAttrDate[adim1-1]);
        w_oa.ExpGTypeTotherAttrTime[adim1-1] = TimeAttr.valueOf(eyyy0441_oa.ExpGTypeTotherAttrTime[adim1-1]);
        w_oa.ExpGTypeTotherAttrAmount[adim1-1] = BigDecimalAttr.valueOf(eyyy0441_oa.ExpGTypeTotherAttrAmount[adim1-1]);
      }
      eyyy0441_ia.freeInstance();
      eyyy0441_ia = null;
      eyyy0441_oa.freeInstance();
      eyyy0441_oa = null;
    }
    globdata.getStateData().setLastStatementNumber( "0000000020" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      if ( CompareExit.compareTo(w_oa.ExpErrorCanamXmlXmlReturnCode, "OK") == 0 )
      {
        globdata.getStateData().setLastSubStatementNumber( "1" );
        f_0_trace();
        {
          f_20972028();
        }
      }
      else {
        globdata.getStateData().setLastSubStatementNumber( "2" );
        f_0_trace();
        {
          f_20972029();
        }
      }
    }
  }
  
  public void f_20972030()
  	throws ABException
  {
    func_0020972030_esc_flag = false;
    globdata.getStateData().setLastStatementNumber( "0000000029" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      
      cyyy9141_ia = (gen.ort.yyy.CYYY9141_IA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY9141_IA"));
      cyyy9141_oa = (gen.ort.yyy.CYYY9141_OA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY9141_OA"));
      cyyy9141_ia.ImpGroupContext_MA = IntAttr.valueOf(w_la.LocGroupContext_MA);
      for(adim1 = 1; adim1 <= w_la.LocGroupContext_MA; ++(adim1))
      {
        cyyy9141_ia.ImpGContextDontChangeTextText150[adim1-1] = FixedStringAttr.valueOf(w_la.LocGContextDontChangeTextText150[
          adim1-1], (short)150);
      }
      for(adim1 = w_la.LocGroupContext_MA + 1; adim1 <= 9; ++(adim1))
      {
        cyyy9141_ia.ImpGContextDontChangeTextText150[adim1-1] = 
"                                                                                                                                                      "
          ;
      }
      globdata.getErrorData().setErrorEncounteredSW( ErrorData.NO_ERROR_FOUND_SW );
      iefRuntimeParm2.useActionBlock("gen.ort.yyy.CYYY9141", "CYYY9141", cyyy9141_ia, cyyy9141_oa);
      if ( ((!(globdata.getErrorData().getStatus().equals( ErrorData.NONE_SF ))) || (globdata.getErrorData().getErrorEncounteredSW() 
        != ErrorData.NO_ERROR_FOUND_SW)) || (globdata.getErrorData().getViewOverflowSW() != ErrorData.NO_ERROR_FOUND_SW) )
      {
        throw new ABException();
      }
      globdata.getStateData().setCurrentABId( "0022020283" );
      globdata.getStateData().setCurrentABName( "CYYY0441_XML_GROUP_PARSE" );
      globdata.getStateData().setLastStatementNumber( "0000000029" );
      w_la.LocErrorIyy1ComponentSeverityCode = FixedStringAttr.valueOf(cyyy9141_oa.ExpErrorIyy1ComponentSeverityCode, (short)1);
      w_la.LocErrorIyy1ComponentRollbackIndicator = FixedStringAttr.valueOf(cyyy9141_oa.ExpErrorIyy1ComponentRollbackIndicator, (
        short)1);
      w_la.LocErrorIyy1ComponentOriginServid = DoubleAttr.valueOf(cyyy9141_oa.ExpErrorIyy1ComponentOriginServid);
      w_la.LocErrorIyy1ComponentContextString = StringAttr.valueOf(cyyy9141_oa.ExpErrorIyy1ComponentContextString, (short)512);
      w_la.LocErrorIyy1ComponentReturnCode = IntAttr.valueOf(cyyy9141_oa.ExpErrorIyy1ComponentReturnCode);
      w_la.LocErrorIyy1ComponentReasonCode = IntAttr.valueOf(cyyy9141_oa.ExpErrorIyy1ComponentReasonCode);
      w_la.LocErrorIyy1ComponentChecksum = FixedStringAttr.valueOf(cyyy9141_oa.ExpErrorIyy1ComponentChecksum, (short)15);
      w_oa.ExpErrorIyy1ComponentContextString = StringAttr.valueOf(cyyy9141_oa.ExpContextIyy1ComponentContextString, (short)512);
      cyyy9141_ia.freeInstance();
      cyyy9141_ia = null;
      cyyy9141_oa.freeInstance();
      cyyy9141_oa = null;
    }
    
    globdata.getStateData().setLastStatementNumber( "0000000031" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      if ( ((double) w_la.LocErrorIyy1ComponentReturnCode < (double) w_la.LocDontChangeReturnCodesQ1Ok) )
      {
        globdata.getStateData().setLastStatementNumber( "0000000032" );
        f_0_trace();
        if ( trace_ret_code != 8 )
        {
          w_oa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.valueOf(w_la.LocErrorIyy1ComponentSeverityCode, (short)1);
          w_oa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.valueOf(w_la.LocErrorIyy1ComponentRollbackIndicator, (short)
            1);
          w_oa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.valueOf(w_la.LocErrorIyy1ComponentOriginServid);
          w_oa.ExpErrorIyy1ComponentContextString = StringAttr.valueOf(w_la.LocErrorIyy1ComponentContextString, (short)512);
          w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf(w_la.LocErrorIyy1ComponentReturnCode);
          w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf(w_la.LocErrorIyy1ComponentReasonCode);
          w_oa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.valueOf(w_la.LocErrorIyy1ComponentChecksum, (short)15);
        }
      }
      
    }
    globdata.getStateData().setLastStatementNumber( "0000000033" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.valueOf("E", (short)1);
    }
  }
  
  public void f_20972028()
  	throws ABException
  {
    func_0020972028_esc_flag = false;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    **************************************************************  
    //    **                                                              
    //    OK                                                              
    //     Successful.                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    globdata.getStateData().setLastStatementNumber( "0000000022" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) w_la.LocDontChangeReturnCodesQ1Ok, 0, 
        TIRD2DEC.ROUND_NONE, 5));
    }
    globdata.getStateData().setLastStatementNumber( "0000000023" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) w_la.LocDontChangeReasonCodesQ1Default, 
        0, TIRD2DEC.ROUND_NONE, 5));
    }
  }
  
  public void f_20972029()
  	throws ABException
  {
    func_0020972029_esc_flag = false;
    globdata.getStateData().setLastStatementNumber( "0000000024" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpErrorIyy1ComponentReturnCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) 
        w_la.LocDontChangeReturnCodesN70XmlError, 0, TIRD2DEC.ROUND_NONE, 5));
    }
    globdata.getStateData().setLastStatementNumber( "0000000025" );
    f_0_trace();
    if ( trace_ret_code != 8 )
    {
      w_oa.ExpErrorIyy1ComponentReasonCode = IntAttr.valueOf((int)TIRD2DEC.TIRD2DC1((double) w_la.LocDontChangeReasonCodesQ1Default, 
        0, TIRD2DEC.ROUND_NONE, 5));
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //    Check exp_error canam_xml for error details..                   
    //           Work View   exp_error canam_xml                          
    //    (transient,export only)                                         
    //             xml_return_code                                        
    //             xml_message                                            
    //             xml_position                                           
    //             xml_source                                             
    //                                                                    
    //    CASE OF  xml_return_code:                                       
    //    EB                                                              
    //     End of buffer.                                                 
    //    Occurs during parsing when end of buffer is encountered while   
    //    more data was expected. For the writer,                         
    //    it means that buffer is exhausted while more data was needed t  
    //    o be written out.                                               
    //                                                                    
    //    IC                                                              
    //     Invalid character.                                             
    //    Occurs when a character is encountered in the stream that was   
    //    not expected. Such as, a missing “=” after attribute name.      
    //                                                                    
    //    MN                                                              
    //     Missing node.                                                  
    //    Occurs when a mandatory element or attribute is missing.        
    //                                                                    
    //    UN                                                              
    //     Unknown node. Occurs when a foreign (unknown)                  
    //    node has been encountered within a ‘non-extensible’             
    //    element context                                                 
    //                                                                    
    //    DA                                                              
    //     Duplicate attribute. Occurs during parsing when an XML         
    //    element has two attributes with the same name.                  
    //                                                                    
    //    PE                                                              
    //     Pattern error.                                                 
    //    The node text does not have the pattern specified during desig  
    //    n, such as date/time patterns.                                  
    //                                                                    
    //    OV                                                              
    //     Numeric overflow error.                                        
    //    This can happen when the integer part of the number is truncat  
    //    ed after parsing.                                               
    //                                                                    
    //    MD                                                              
    //     More data warning.                                             
    //    This is a warning message that means there is more data in      
    //    XML document than the IDS (Interface Data Structure)            
    //    can hold.                                                       
    //                                                                    
    //    BP                                                              
    //     XML PARSE statement error.                                     
    //                                                                    
    //    ER                                                              
    //     Unknown error.                                                 
    //    Occurs when operation could not be completed for any other rea  
    //    son.                                                            
    //                                                                    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  }
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // INITIALIZATION UTILITY FUNCTIONS 
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  public void f_22020283_localAlloc(String abname)
  {
    // Request localview allocation 
    w_la = (gen.ort.yyy.CYYY0441_LA)(iefRuntimeParm2.getInstance("gen.ort.yyy.CYYY0441_LA"));
    if ( w_la == null )
    {
      globdata.getStateData().setCurrentABId( "0022020283" );
      globdata.getStateData().setCurrentABName( abname );
      globdata.getErrorData().setErrorEncounteredSW( ErrorData.ERROR_FOUND_SW );
      globdata.getErrorData().setLastStatus( ErrorData.IEF_ALLOCATION_ERROR_FL_LS );
    }
  }
  
  public void f_22020283_init()
  	throws ABException
  {
    if ( nestingLevel < 2 )
    {
      w_la.reset();
    }
    w_la.LocGroupContext_MA = 0;
    for(LocGroupContext_PS_002 = 1; LocGroupContext_PS_002 <= 9; ++(LocGroupContext_PS_002))
    {
    }
    w_oa.ExpGroup_MA = 0;
    for(ExpGroup_PS_001 = 1; ExpGroup_PS_001 <= 48; ++(ExpGroup_PS_001))
    {
      w_oa.ExpGTypeTinstanceId[ExpGroup_PS_001-1] = "00000000000000000000";
      w_oa.ExpGTypeTreferenceId[ExpGroup_PS_001-1] = "00000000000000000000";
      w_oa.ExpGTypeTcreateUserId[ExpGroup_PS_001-1] = "        ";
      w_oa.ExpGTypeTupdateUserId[ExpGroup_PS_001-1] = "        ";
      w_oa.ExpGTypeTkeyAttrText[ExpGroup_PS_001-1] = "    ";
      w_oa.ExpGTypeTsearchAttrText[ExpGroup_PS_001-1] = "                    ";
      w_oa.ExpGTypeTotherAttrText[ExpGroup_PS_001-1] = "  ";
      w_oa.ExpGTypeTotherAttrDate[ExpGroup_PS_001-1] = 00000000;
      w_oa.ExpGTypeTotherAttrTime[ExpGroup_PS_001-1] = 00000000;
      w_oa.ExpGTypeTotherAttrAmount[ExpGroup_PS_001-1] = BigDecimalAttr.getDefaultValue();
    }
    w_oa.ExpErrorCanamXmlXmlReturnCode = "  ";
    w_oa.ExpErrorCanamXmlXmlMessage = "                                                                                ";
    w_oa.ExpErrorCanamXmlXmlPosition = 0.0;
    w_oa.ExpErrorCanamXmlXmlSource = 
      "                                                                                                                        ";
    w_oa.ExpErrorIyy1ComponentSeverityCode = " ";
    w_oa.ExpErrorIyy1ComponentRollbackIndicator = " ";
    w_oa.ExpErrorIyy1ComponentOriginServid = 0.0;
    w_oa.ExpErrorIyy1ComponentContextString = "";
    w_oa.ExpErrorIyy1ComponentReturnCode = 0;
    w_oa.ExpErrorIyy1ComponentReasonCode = 0;
    w_oa.ExpErrorIyy1ComponentChecksum = "               ";
    ExpGroup_PS_001 = 1;
    LocGroupContext_PS_002 = 1;
  }
  
  public void f_0_trace()
  	throws ABException
  {
    trace_ret_code = TIRTRCE.TIRTRCE(iefRuntimeParm1, iefRuntimeParm2, globdata, padtext, padview);
    if ( trace_ret_code == 20 )
    {
      throw new ABException();
    }
  }
  
  public void padview_init()
  {
padview[0] = PadView.getInstance("IMPORT                          ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_ia, 
      "w_ia");
    padview[1] = PadView.getInstance("IMP                             ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_ia, 
      null);
    padview[2] = PadView.getInstance("CANAM_XML                       ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, w_ia,
       null);
    padview[3] = PadView.getInstance("XML_BUFFER                      ", 4094, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_ia, "ImpCanamXmlXmlBuffer");
padview[4] = PadView.getInstance("EXPORT                          ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_oa, 
      "w_oa");
    padview[5] = PadView.getInstance("EXP_GROUP                       ", 0, 0, 48, (short)2, PadView.VT_GROUP, PadView.DT_NONE, w_oa,
       "ExpGroup_MA");
    padview[6] = PadView.getInstance("EXP_G                           ", 0, 0, 0, (short)3, PadView.VT_VIEW, PadView.DT_NONE, w_oa, 
      null);
    padview[7] = PadView.getInstance("TYPE                            ", 0, 0, 0, (short)4, PadView.VT_ENTITY, PadView.DT_NONE, w_oa,
       null);
    padview[8] = PadView.getInstance("TINSTANCE_ID                    ", 20, 0, 0, (short)4, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_oa, "ExpGTypeTinstanceId");
    padview[9] = PadView.getInstance("TREFERENCE_ID                   ", 20, 0, 0, (short)4, PadView.VT_PREDICATE, 
      PadView.DT_TIMESTAMP, w_oa, "ExpGTypeTreferenceId");
    padview[10] = PadView.getInstance("TCREATE_USER_ID                 ", 8, 0, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpGTypeTcreateUserId");
    padview[11] = PadView.getInstance("TUPDATE_USER_ID                 ", 8, 0, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpGTypeTupdateUserId");
    padview[12] = PadView.getInstance("TKEY_ATTR_TEXT                  ", 4, 0, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpGTypeTkeyAttrText");
    padview[13] = PadView.getInstance("TSEARCH_ATTR_TEXT               ", 20, 0, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpGTypeTsearchAttrText");
    padview[14] = PadView.getInstance("TOTHER_ATTR_TEXT                ", 2, 0, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpGTypeTotherAttrText");
    padview[15] = PadView.getInstance("TOTHER_ATTR_DATE                ", 8, 0, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_DATE, 
      w_oa, "ExpGTypeTotherAttrDate");
    padview[16] = PadView.getInstance("TOTHER_ATTR_TIME                ", 6, 0, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_TIME, 
      w_oa, "ExpGTypeTotherAttrTime");
    padview[17] = PadView.getInstance("TOTHER_ATTR_AMOUNT              ", 17, 2, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_FIXED,
       w_oa, "ExpGTypeTotherAttrAmount");
    padview[18] = PadView.getInstance("EXP_ERROR                       ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_oa, 
      null);
    padview[19] = PadView.getInstance("CANAM_XML                       ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_oa, null);
    padview[20] = PadView.getInstance("XML_RETURN_CODE                 ", 2, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorCanamXmlXmlReturnCode");
    padview[21] = PadView.getInstance("XML_MESSAGE                     ", 80, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorCanamXmlXmlMessage");
    padview[22] = PadView.getInstance("XML_POSITION                    ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorCanamXmlXmlPosition");
    padview[23] = PadView.getInstance("XML_SOURCE                      ", 120, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT,
       w_oa, "ExpErrorCanamXmlXmlSource");
    padview[24] = PadView.getInstance("EXP_ERROR                       ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_oa, 
      null);
    padview[25] = PadView.getInstance("IYY1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_oa, null);
    padview[26] = PadView.getInstance("SEVERITY_CODE                   ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentSeverityCode");
    padview[27] = PadView.getInstance("ROLLBACK_INDICATOR              ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentRollbackIndicator");
    padview[28] = PadView.getInstance("ORIGIN_SERVID                   ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentOriginServid");
    padview[29] = PadView.getInstance("CONTEXT_STRING                  ", 512, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_oa, "ExpErrorIyy1ComponentContextString");
    padview[30] = PadView.getInstance("RETURN_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentReturnCode");
    padview[31] = PadView.getInstance("REASON_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_oa, "ExpErrorIyy1ComponentReasonCode");
    padview[32] = PadView.getInstance("CHECKSUM                        ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_oa, "ExpErrorIyy1ComponentChecksum");
    padview[33] = PadView.getInstance("LOCAL                           ", 0, 0, 0, (short)1, PadView.VT_BASE, PadView.DT_NONE, w_la, 
      "w_la");
    padview[34] = PadView.getInstance("LOC                             ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[35] = PadView.getInstance("DONT_CHANGE_RETURN_CODES        ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[36] = PadView.getInstance("1_OK                            ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReturnCodesQ1Ok");
    padview[37] = PadView.getInstance("N70_XML_ERROR                   ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReturnCodesN70XmlError");
    padview[38] = PadView.getInstance("LOC                             ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[39] = PadView.getInstance("DONT_CHANGE_REASON_CODES        ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[40] = PadView.getInstance("1_DEFAULT                       ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocDontChangeReasonCodesQ1Default");
    padview[41] = PadView.getInstance("LOC_ERROR                       ", 0, 0, 0, (short)2, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[42] = PadView.getInstance("IYY1_COMPONENT                  ", 0, 0, 0, (short)3, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[43] = PadView.getInstance("SEVERITY_CODE                   ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocErrorIyy1ComponentSeverityCode");
    padview[44] = PadView.getInstance("ROLLBACK_INDICATOR              ", 1, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocErrorIyy1ComponentRollbackIndicator");
    padview[45] = PadView.getInstance("ORIGIN_SERVID                   ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocErrorIyy1ComponentOriginServid");
    padview[46] = PadView.getInstance("CONTEXT_STRING                  ", 512, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_VARCHAR, w_la, "LocErrorIyy1ComponentContextString");
    padview[47] = PadView.getInstance("RETURN_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocErrorIyy1ComponentReturnCode");
    padview[48] = PadView.getInstance("REASON_CODE                     ", 5, 0, 0, (short)3, PadView.VT_PREDICATE, 
      PadView.DT_NUMERIC, w_la, "LocErrorIyy1ComponentReasonCode");
    padview[49] = PadView.getInstance("CHECKSUM                        ", 15, 0, 0, (short)3, PadView.VT_PREDICATE, PadView.DT_TEXT, 
      w_la, "LocErrorIyy1ComponentChecksum");
    padview[50] = PadView.getInstance("LOC_GROUP_CONTEXT               ", 0, 0, 9, (short)2, PadView.VT_GROUP, PadView.DT_NONE, w_la,
       "LocGroupContext_MA");
    padview[51] = PadView.getInstance("LOC_G_CONTEXT                   ", 0, 0, 0, (short)3, PadView.VT_VIEW, PadView.DT_NONE, w_la, 
      null);
    padview[52] = PadView.getInstance("DONT_CHANGE_TEXT                ", 0, 0, 0, (short)4, PadView.VT_ENTITY, PadView.DT_NONE, 
      w_la, null);
    padview[53] = PadView.getInstance("TEXT_150                        ", 150, 0, 0, (short)4, PadView.VT_PREDICATE, PadView.DT_TEXT,
       w_la, "LocGContextDontChangeTextText150");
    padview[54] = PadView.getInstance("******** BOTTOM OF DATA ********", 0, 0, 0, (short)0, PadView.VT_END, PadView.DT_NONE, w_la, 
      null);
  }
  public void f_173015095_rgvc()
  	throws ABException
  {
    if ( (LocGroupContext_PS_002 > 9) || (LocGroupContext_PS_002 < 1) )
    {
      globdata.getErrorData().setViewOverflowSW( ErrorData.ERROR_FOUND_SW );
      {
        throw new ABException();
      }
    }
  }
}// end class


package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: CYYY0441_IA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:10:07
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF IMPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: CYYY0441_IA
 **/
public class CYYY0441_IA extends ViewBase implements IImportView, Serializable
{
  // Entity View: IMP
  //        Type: CANAM_XML
  /**
   * Attribute missing flag for: ImpCanamXmlXmlBuffer
   **/
  public char ImpCanamXmlXmlBuffer_AS;
  /**
   * Attribute for: ImpCanamXmlXmlBuffer
   * Domain: Text
   * Length: 4094
   * Varying Length: Y
   **/
  public String ImpCanamXmlXmlBuffer;
  /**
   * Default Constructor
   **/
  
  public CYYY0441_IA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public CYYY0441_IA(CYYY0441_IA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static CYYY0441_IA getInstance()
  {
    return new CYYY0441_IA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new CYYY0441_IA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    ImpCanamXmlXmlBuffer_AS = ' ';
    ImpCanamXmlXmlBuffer = "";
  }
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    throw new RuntimeException("can only execute getVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    throw new RuntimeException("can only execute setFromVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IImportView orig)
  {
    this.copyFrom((CYYY0441_IA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(CYYY0441_IA orig)
  {
    ImpCanamXmlXmlBuffer_AS = orig.ImpCanamXmlXmlBuffer_AS;
    ImpCanamXmlXmlBuffer = orig.ImpCanamXmlXmlBuffer;
  }
}

package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: CYYY0441_LA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:09:54
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF LOCAL VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: CYYY0441_LA
 **/
public class CYYY0441_LA extends ViewBase implements ILocalView, Serializable
{
  // Entity View: LOC
  //        Type: DONT_CHANGE_RETURN_CODES
  /**
   * Attribute missing flag for: LocDontChangeReturnCodesQ1Ok
   **/
  public char LocDontChangeReturnCodesQ1Ok_AS;
  /**
   * Attribute for: LocDontChangeReturnCodesQ1Ok
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReturnCodesQ1Ok;
  /**
   * Attribute missing flag for: LocDontChangeReturnCodesN70XmlError
   **/
  public char LocDontChangeReturnCodesN70XmlError_AS;
  /**
   * Attribute for: LocDontChangeReturnCodesN70XmlError
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReturnCodesN70XmlError;
  // Entity View: LOC
  //        Type: DONT_CHANGE_REASON_CODES
  /**
   * Attribute missing flag for: LocDontChangeReasonCodesQ1Default
   **/
  public char LocDontChangeReasonCodesQ1Default_AS;
  /**
   * Attribute for: LocDontChangeReasonCodesQ1Default
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocDontChangeReasonCodesQ1Default;
  // Entity View: LOC_ERROR
  //        Type: IYY1_COMPONENT
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentSeverityCode
   **/
  public char LocErrorIyy1ComponentSeverityCode_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentSeverityCode
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String LocErrorIyy1ComponentSeverityCode;
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentRollbackIndicator
   **/
  public char LocErrorIyy1ComponentRollbackIndicator_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentRollbackIndicator
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String LocErrorIyy1ComponentRollbackIndicator;
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentOriginServid
   **/
  public char LocErrorIyy1ComponentOriginServid_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentOriginServid
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double LocErrorIyy1ComponentOriginServid;
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentContextString
   **/
  public char LocErrorIyy1ComponentContextString_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentContextString
   * Domain: Text
   * Length: 512
   * Varying Length: Y
   **/
  public String LocErrorIyy1ComponentContextString;
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentReturnCode
   **/
  public char LocErrorIyy1ComponentReturnCode_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentReturnCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocErrorIyy1ComponentReturnCode;
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentReasonCode
   **/
  public char LocErrorIyy1ComponentReasonCode_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentReasonCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int LocErrorIyy1ComponentReasonCode;
  /**
   * Attribute missing flag for: LocErrorIyy1ComponentChecksum
   **/
  public char LocErrorIyy1ComponentChecksum_AS;
  /**
   * Attribute for: LocErrorIyy1ComponentChecksum
   * Domain: Text
   * Length: 15
   * Varying Length: N
   **/
  public String LocErrorIyy1ComponentChecksum;
  // Repeating GV:  LOC_GROUP_CONTEXT
  //     Repeats: 9 times
  /**
   * Repeating group view count
   **/
  public int LocGroupContext_MA;
  /**
   * Repeating group view occurrance array
   **/
  public char LocGroupContext_AC[] = new char[9];
  // Entity View: LOC_G_CONTEXT
  //        Type: DONT_CHANGE_TEXT
  /**
   * Attribute missing flag for: LocGContextDontChangeTextText150
   **/
  public char LocGContextDontChangeTextText150_AS[] = new char[9];
  /**
   * Attribute for: LocGContextDontChangeTextText150
   * Domain: Text
   * Length: 150
   * Varying Length: N
   **/
  public String LocGContextDontChangeTextText150[] = new String[9];
  /**
   * Default Constructor
   **/
  
  public CYYY0441_LA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public CYYY0441_LA(CYYY0441_LA orig)
  {
    LocDontChangeReturnCodesQ1Ok_AS = orig.LocDontChangeReturnCodesQ1Ok_AS;
    LocDontChangeReturnCodesQ1Ok = orig.LocDontChangeReturnCodesQ1Ok;
    LocDontChangeReturnCodesN70XmlError_AS = orig.LocDontChangeReturnCodesN70XmlError_AS;
    LocDontChangeReturnCodesN70XmlError = orig.LocDontChangeReturnCodesN70XmlError;
    LocDontChangeReasonCodesQ1Default_AS = orig.LocDontChangeReasonCodesQ1Default_AS;
    LocDontChangeReasonCodesQ1Default = orig.LocDontChangeReasonCodesQ1Default;
    LocErrorIyy1ComponentSeverityCode_AS = orig.LocErrorIyy1ComponentSeverityCode_AS;
    LocErrorIyy1ComponentSeverityCode = orig.LocErrorIyy1ComponentSeverityCode;
    LocErrorIyy1ComponentRollbackIndicator_AS = orig.LocErrorIyy1ComponentRollbackIndicator_AS;
    LocErrorIyy1ComponentRollbackIndicator = orig.LocErrorIyy1ComponentRollbackIndicator;
    LocErrorIyy1ComponentOriginServid_AS = orig.LocErrorIyy1ComponentOriginServid_AS;
    LocErrorIyy1ComponentOriginServid = orig.LocErrorIyy1ComponentOriginServid;
    LocErrorIyy1ComponentContextString_AS = orig.LocErrorIyy1ComponentContextString_AS;
    LocErrorIyy1ComponentContextString = orig.LocErrorIyy1ComponentContextString;
    LocErrorIyy1ComponentReturnCode_AS = orig.LocErrorIyy1ComponentReturnCode_AS;
    LocErrorIyy1ComponentReturnCode = orig.LocErrorIyy1ComponentReturnCode;
    LocErrorIyy1ComponentReasonCode_AS = orig.LocErrorIyy1ComponentReasonCode_AS;
    LocErrorIyy1ComponentReasonCode = orig.LocErrorIyy1ComponentReasonCode;
    LocErrorIyy1ComponentChecksum_AS = orig.LocErrorIyy1ComponentChecksum_AS;
    LocErrorIyy1ComponentChecksum = orig.LocErrorIyy1ComponentChecksum;
    LocGroupContext_MA = orig.LocGroupContext_MA;
    System.arraycopy(orig.LocGroupContext_AC, 0, LocGroupContext_AC, 0, LocGroupContext_AC.length);
    System.arraycopy(orig.LocGContextDontChangeTextText150_AS, 0, LocGContextDontChangeTextText150_AS, 0, 
      LocGContextDontChangeTextText150_AS.length);
    System.arraycopy(orig.LocGContextDontChangeTextText150, 0, LocGContextDontChangeTextText150, 0, 
      LocGContextDontChangeTextText150.length);
  }
  /**
   * Static instance creator function
   **/
  
  public static CYYY0441_LA getInstance()
  {
    return new CYYY0441_LA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new CYYY0441_LA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    LocDontChangeReturnCodesQ1Ok_AS = ' ';
    LocDontChangeReturnCodesQ1Ok = 0;
    LocDontChangeReturnCodesN70XmlError_AS = ' ';
    LocDontChangeReturnCodesN70XmlError = 0;
    LocDontChangeReasonCodesQ1Default_AS = ' ';
    LocDontChangeReasonCodesQ1Default = 0;
    LocErrorIyy1ComponentSeverityCode_AS = ' ';
    LocErrorIyy1ComponentSeverityCode = " ";
    LocErrorIyy1ComponentRollbackIndicator_AS = ' ';
    LocErrorIyy1ComponentRollbackIndicator = " ";
    LocErrorIyy1ComponentOriginServid_AS = ' ';
    LocErrorIyy1ComponentOriginServid = 0.0;
    LocErrorIyy1ComponentContextString_AS = ' ';
    LocErrorIyy1ComponentContextString = "";
    LocErrorIyy1ComponentReturnCode_AS = ' ';
    LocErrorIyy1ComponentReturnCode = 0;
    LocErrorIyy1ComponentReasonCode_AS = ' ';
    LocErrorIyy1ComponentReasonCode = 0;
    LocErrorIyy1ComponentChecksum_AS = ' ';
    LocErrorIyy1ComponentChecksum = "               ";
    LocGroupContext_MA = 0;
    for(int a = 0; a < 9; a++)
    {
      LocGroupContext_AC[a] = ' ';
      LocGContextDontChangeTextText150_AS[a] = ' ';
      LocGContextDontChangeTextText150[a] = 
"                                                                                                                                                      "
        ;
    }
  }
}

package gen.ort.yyy;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2023 CA Technologies. All rights reserved.
//
//    Name: CYYY0441_OA                      Date: 2023/07/05
//    User: HakanBal                         Time: 15:10:07
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF EXPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: CYYY0441_OA
 **/
public class CYYY0441_OA extends ViewBase implements IExportView, Serializable
{
  // Repeating GV:  EXP_GROUP
  //     Repeats: 48 times
  /**
   * Repeating group view count
   **/
  public int ExpGroup_MA;
  /**
   * Repeating group view occurrance array
   **/
  public char ExpGroup_AC[] = new char[48];
  // Entity View: EXP_G
  //        Type: TYPE
  /**
   * Attribute missing flag for: ExpGTypeTinstanceId
   **/
  public char ExpGTypeTinstanceId_AS[] = new char[48];
  /**
   * Attribute for: ExpGTypeTinstanceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String ExpGTypeTinstanceId[] = new String[48];
  /**
   * Attribute missing flag for: ExpGTypeTreferenceId
   **/
  public char ExpGTypeTreferenceId_AS[] = new char[48];
  /**
   * Attribute for: ExpGTypeTreferenceId
   * Domain: Timestamp
   * Length: 20
   **/
  public String ExpGTypeTreferenceId[] = new String[48];
  /**
   * Attribute missing flag for: ExpGTypeTcreateUserId
   **/
  public char ExpGTypeTcreateUserId_AS[] = new char[48];
  /**
   * Attribute for: ExpGTypeTcreateUserId
   * Domain: Text
   * Length: 8
   * Varying Length: N
   **/
  public String ExpGTypeTcreateUserId[] = new String[48];
  /**
   * Attribute missing flag for: ExpGTypeTupdateUserId
   **/
  public char ExpGTypeTupdateUserId_AS[] = new char[48];
  /**
   * Attribute for: ExpGTypeTupdateUserId
   * Domain: Text
   * Length: 8
   * Varying Length: N
   **/
  public String ExpGTypeTupdateUserId[] = new String[48];
  /**
   * Attribute missing flag for: ExpGTypeTkeyAttrText
   **/
  public char ExpGTypeTkeyAttrText_AS[] = new char[48];
  /**
   * Attribute for: ExpGTypeTkeyAttrText
   * Domain: Text
   * Length: 4
   * Varying Length: N
   **/
  public String ExpGTypeTkeyAttrText[] = new String[48];
  /**
   * Attribute missing flag for: ExpGTypeTsearchAttrText
   **/
  public char ExpGTypeTsearchAttrText_AS[] = new char[48];
  /**
   * Attribute for: ExpGTypeTsearchAttrText
   * Domain: Text
   * Length: 20
   * Varying Length: N
   **/
  public String ExpGTypeTsearchAttrText[] = new String[48];
  /**
   * Attribute missing flag for: ExpGTypeTotherAttrText
   **/
  public char ExpGTypeTotherAttrText_AS[] = new char[48];
  /**
   * Attribute for: ExpGTypeTotherAttrText
   * Domain: Text
   * Length: 2
   * Varying Length: N
   **/
  public String ExpGTypeTotherAttrText[] = new String[48];
  /**
   * Attribute missing flag for: ExpGTypeTotherAttrDate
   **/
  public char ExpGTypeTotherAttrDate_AS[] = new char[48];
  /**
   * Attribute for: ExpGTypeTotherAttrDate
   * Domain: Date
   * Length: 8
   **/
  public int ExpGTypeTotherAttrDate[] = new int[48];
  /**
   * Attribute missing flag for: ExpGTypeTotherAttrTime
   **/
  public char ExpGTypeTotherAttrTime_AS[] = new char[48];
  /**
   * Attribute for: ExpGTypeTotherAttrTime
   * Domain: Time
   * Length: 6
   **/
  public int ExpGTypeTotherAttrTime[] = new int[48];
  /**
   * Attribute missing flag for: ExpGTypeTotherAttrAmount
   **/
  public char ExpGTypeTotherAttrAmount_AS[] = new char[48];
  /**
   * Attribute for: ExpGTypeTotherAttrAmount
   * Domain: Number
   * Length: 17
   * Decimal Places: 2
   * Decimal Precision: Y
   **/
  public BigDecimal ExpGTypeTotherAttrAmount[] = new BigDecimal[48];
  // Entity View: EXP_ERROR
  //        Type: CANAM_XML
  /**
   * Attribute missing flag for: ExpErrorCanamXmlXmlReturnCode
   **/
  public char ExpErrorCanamXmlXmlReturnCode_AS;
  /**
   * Attribute for: ExpErrorCanamXmlXmlReturnCode
   * Domain: Text
   * Length: 2
   * Varying Length: N
   **/
  public String ExpErrorCanamXmlXmlReturnCode;
  /**
   * Attribute missing flag for: ExpErrorCanamXmlXmlMessage
   **/
  public char ExpErrorCanamXmlXmlMessage_AS;
  /**
   * Attribute for: ExpErrorCanamXmlXmlMessage
   * Domain: Text
   * Length: 80
   * Varying Length: N
   **/
  public String ExpErrorCanamXmlXmlMessage;
  /**
   * Attribute missing flag for: ExpErrorCanamXmlXmlPosition
   **/
  public char ExpErrorCanamXmlXmlPosition_AS;
  /**
   * Attribute for: ExpErrorCanamXmlXmlPosition
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double ExpErrorCanamXmlXmlPosition;
  /**
   * Attribute missing flag for: ExpErrorCanamXmlXmlSource
   **/
  public char ExpErrorCanamXmlXmlSource_AS;
  /**
   * Attribute for: ExpErrorCanamXmlXmlSource
   * Domain: Text
   * Length: 120
   * Varying Length: N
   **/
  public String ExpErrorCanamXmlXmlSource;
  // Entity View: EXP_ERROR
  //        Type: IYY1_COMPONENT
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentSeverityCode
   **/
  public char ExpErrorIyy1ComponentSeverityCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentSeverityCode
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentSeverityCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentRollbackIndicator
   **/
  public char ExpErrorIyy1ComponentRollbackIndicator_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentRollbackIndicator
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentRollbackIndicator;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentOriginServid
   **/
  public char ExpErrorIyy1ComponentOriginServid_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentOriginServid
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double ExpErrorIyy1ComponentOriginServid;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentContextString
   **/
  public char ExpErrorIyy1ComponentContextString_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentContextString
   * Domain: Text
   * Length: 512
   * Varying Length: Y
   **/
  public String ExpErrorIyy1ComponentContextString;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentReturnCode
   **/
  public char ExpErrorIyy1ComponentReturnCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentReturnCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ExpErrorIyy1ComponentReturnCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentReasonCode
   **/
  public char ExpErrorIyy1ComponentReasonCode_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentReasonCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ExpErrorIyy1ComponentReasonCode;
  /**
   * Attribute missing flag for: ExpErrorIyy1ComponentChecksum
   **/
  public char ExpErrorIyy1ComponentChecksum_AS;
  /**
   * Attribute for: ExpErrorIyy1ComponentChecksum
   * Domain: Text
   * Length: 15
   * Varying Length: N
   **/
  public String ExpErrorIyy1ComponentChecksum;
  /**
   * Default Constructor
   **/
  
  public CYYY0441_OA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public CYYY0441_OA(CYYY0441_OA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static CYYY0441_OA getInstance()
  {
    return new CYYY0441_OA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new CYYY0441_OA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    ExpGroup_MA = 0;
    for(int a = 0; a < 48; a++)
    {
      ExpGroup_AC[a] = ' ';
      ExpGTypeTinstanceId_AS[a] = ' ';
      ExpGTypeTinstanceId[a] = "00000000000000000000";
      ExpGTypeTreferenceId_AS[a] = ' ';
      ExpGTypeTreferenceId[a] = "00000000000000000000";
      ExpGTypeTcreateUserId_AS[a] = ' ';
      ExpGTypeTcreateUserId[a] = "        ";
      ExpGTypeTupdateUserId_AS[a] = ' ';
      ExpGTypeTupdateUserId[a] = "        ";
      ExpGTypeTkeyAttrText_AS[a] = ' ';
      ExpGTypeTkeyAttrText[a] = "    ";
      ExpGTypeTsearchAttrText_AS[a] = ' ';
      ExpGTypeTsearchAttrText[a] = "                    ";
      ExpGTypeTotherAttrText_AS[a] = ' ';
      ExpGTypeTotherAttrText[a] = "  ";
      ExpGTypeTotherAttrDate_AS[a] = ' ';
      ExpGTypeTotherAttrDate[a] = 00000000;
      ExpGTypeTotherAttrTime_AS[a] = ' ';
      ExpGTypeTotherAttrTime[a] = 00000000;
      ExpGTypeTotherAttrAmount_AS[a] = ' ';
      ExpGTypeTotherAttrAmount[a] = BigDecimalAttr.getDefaultValue();
    }
    ExpErrorCanamXmlXmlReturnCode_AS = ' ';
    ExpErrorCanamXmlXmlReturnCode = "  ";
    ExpErrorCanamXmlXmlMessage_AS = ' ';
    ExpErrorCanamXmlXmlMessage = "                                                                                ";
    ExpErrorCanamXmlXmlPosition_AS = ' ';
    ExpErrorCanamXmlXmlPosition = 0.0;
    ExpErrorCanamXmlXmlSource_AS = ' ';
    ExpErrorCanamXmlXmlSource = 
      "                                                                                                                        ";
    ExpErrorIyy1ComponentSeverityCode_AS = ' ';
    ExpErrorIyy1ComponentSeverityCode = " ";
    ExpErrorIyy1ComponentRollbackIndicator_AS = ' ';
    ExpErrorIyy1ComponentRollbackIndicator = " ";
    ExpErrorIyy1ComponentOriginServid_AS = ' ';
    ExpErrorIyy1ComponentOriginServid = 0.0;
    ExpErrorIyy1ComponentContextString_AS = ' ';
    ExpErrorIyy1ComponentContextString = "";
    ExpErrorIyy1ComponentReturnCode_AS = ' ';
    ExpErrorIyy1ComponentReturnCode = 0;
    ExpErrorIyy1ComponentReasonCode_AS = ' ';
    ExpErrorIyy1ComponentReasonCode = 0;
    ExpErrorIyy1ComponentChecksum_AS = ' ';
    ExpErrorIyy1ComponentChecksum = "               ";
  }
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    throw new RuntimeException("can only execute setFromVDF for a Procedure Step.");
  }
  
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    throw new RuntimeException("can only execute getVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IExportView orig)
  {
    this.copyFrom((CYYY0441_OA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(CYYY0441_OA orig)
  {
    ExpGroup_MA = orig.ExpGroup_MA;
    for(int a = 0; a < 48; a++)
    {
      ExpGroup_AC[a] = orig.ExpGroup_AC[a];
      ExpGTypeTinstanceId_AS[a] = orig.ExpGTypeTinstanceId_AS[a];
      ExpGTypeTinstanceId[a] = orig.ExpGTypeTinstanceId[a];
      ExpGTypeTreferenceId_AS[a] = orig.ExpGTypeTreferenceId_AS[a];
      ExpGTypeTreferenceId[a] = orig.ExpGTypeTreferenceId[a];
      ExpGTypeTcreateUserId_AS[a] = orig.ExpGTypeTcreateUserId_AS[a];
      ExpGTypeTcreateUserId[a] = orig.ExpGTypeTcreateUserId[a];
      ExpGTypeTupdateUserId_AS[a] = orig.ExpGTypeTupdateUserId_AS[a];
      ExpGTypeTupdateUserId[a] = orig.ExpGTypeTupdateUserId[a];
      ExpGTypeTkeyAttrText_AS[a] = orig.ExpGTypeTkeyAttrText_AS[a];
      ExpGTypeTkeyAttrText[a] = orig.ExpGTypeTkeyAttrText[a];
      ExpGTypeTsearchAttrText_AS[a] = orig.ExpGTypeTsearchAttrText_AS[a];
      ExpGTypeTsearchAttrText[a] = orig.ExpGTypeTsearchAttrText[a];
      ExpGTypeTotherAttrText_AS[a] = orig.ExpGTypeTotherAttrText_AS[a];
      ExpGTypeTotherAttrText[a] = orig.ExpGTypeTotherAttrText[a];
      ExpGTypeTotherAttrDate_AS[a] = orig.ExpGTypeTotherAttrDate_AS[a];
      ExpGTypeTotherAttrDate[a] = orig.ExpGTypeTotherAttrDate[a];
      ExpGTypeTotherAttrTime_AS[a] = orig.ExpGTypeTotherAttrTime_AS[a];
      ExpGTypeTotherAttrTime[a] = orig.ExpGTypeTotherAttrTime[a];
      ExpGTypeTotherAttrAmount_AS[a] = orig.ExpGTypeTotherAttrAmount_AS[a];
      ExpGTypeTotherAttrAmount[a] = orig.ExpGTypeTotherAttrAmount[a];
    }
    ExpErrorCanamXmlXmlReturnCode_AS = orig.ExpErrorCanamXmlXmlReturnCode_AS;
    ExpErrorCanamXmlXmlReturnCode = orig.ExpErrorCanamXmlXmlReturnCode;
    ExpErrorCanamXmlXmlMessage_AS = orig.ExpErrorCanamXmlXmlMessage_AS;
    ExpErrorCanamXmlXmlMessage = orig.ExpErrorCanamXmlXmlMessage;
    ExpErrorCanamXmlXmlPosition_AS = orig.ExpErrorCanamXmlXmlPosition_AS;
    ExpErrorCanamXmlXmlPosition = orig.ExpErrorCanamXmlXmlPosition;
    ExpErrorCanamXmlXmlSource_AS = orig.ExpErrorCanamXmlXmlSource_AS;
    ExpErrorCanamXmlXmlSource = orig.ExpErrorCanamXmlXmlSource;
    ExpErrorIyy1ComponentSeverityCode_AS = orig.ExpErrorIyy1ComponentSeverityCode_AS;
    ExpErrorIyy1ComponentSeverityCode = orig.ExpErrorIyy1ComponentSeverityCode;
    ExpErrorIyy1ComponentRollbackIndicator_AS = orig.ExpErrorIyy1ComponentRollbackIndicator_AS;
    ExpErrorIyy1ComponentRollbackIndicator = orig.ExpErrorIyy1ComponentRollbackIndicator;
    ExpErrorIyy1ComponentOriginServid_AS = orig.ExpErrorIyy1ComponentOriginServid_AS;
    ExpErrorIyy1ComponentOriginServid = orig.ExpErrorIyy1ComponentOriginServid;
    ExpErrorIyy1ComponentContextString_AS = orig.ExpErrorIyy1ComponentContextString_AS;
    ExpErrorIyy1ComponentContextString = orig.ExpErrorIyy1ComponentContextString;
    ExpErrorIyy1ComponentReturnCode_AS = orig.ExpErrorIyy1ComponentReturnCode_AS;
    ExpErrorIyy1ComponentReturnCode = orig.ExpErrorIyy1ComponentReturnCode;
    ExpErrorIyy1ComponentReasonCode_AS = orig.ExpErrorIyy1ComponentReasonCode_AS;
    ExpErrorIyy1ComponentReasonCode = orig.ExpErrorIyy1ComponentReasonCode;
    ExpErrorIyy1ComponentChecksum_AS = orig.ExpErrorIyy1ComponentChecksum_AS;
    ExpErrorIyy1ComponentChecksum = orig.ExpErrorIyy1ComponentChecksum;
  }
}
