// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2024 CA Technologies. All rights reserved.
//
//    Name: EYYY0411_OA                      Date: 2024/01/09
//    User: AliAl                            Time: 13:41:27
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// using Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
using System;
using com.ca.gen.vwrt;
using com.ca.gen.vwrt.types;
using com.ca.gen.vwrt.vdf;
using com.ca.gen.csu.exception;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF EXPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
namespace GEN.ORT.YYY
{
  /// <summary>
  /// Internal data view storage for: EYYY0411_OA
  /// </summary>
  [Serializable]
  public class EYYY0411_OA : ViewBase, IExportView
  {
    private static EYYY0411_OA[] freeArray = new EYYY0411_OA[30];
    private static int countFree = 0;
    
    // Entity View: EXP
    //        Type: CANAM_XML
    /// <summary>
    /// Internal storage for attribute missing flag for: ExpCanamXmlXmlBuffer
    /// </summary>
    private char _ExpCanamXmlXmlBuffer_AS;
    /// <summary>
    /// Attribute missing flag for: ExpCanamXmlXmlBuffer
    /// </summary>
    public char ExpCanamXmlXmlBuffer_AS {
      get {
        return(_ExpCanamXmlXmlBuffer_AS);
      }
      set {
        _ExpCanamXmlXmlBuffer_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ExpCanamXmlXmlBuffer
    /// Domain: Text
    /// Length: 4094
    /// Varying Length: Y
    /// </summary>
    private string _ExpCanamXmlXmlBuffer;
    /// <summary>
    /// Attribute for: ExpCanamXmlXmlBuffer
    /// </summary>
    public string ExpCanamXmlXmlBuffer {
      get {
        return(_ExpCanamXmlXmlBuffer);
      }
      set {
        _ExpCanamXmlXmlBuffer = value;
      }
    }
    // Entity View: EXP_ERROR
    //        Type: CANAM_XML
    /// <summary>
    /// Internal storage for attribute missing flag for: ExpErrorCanamXmlXmlReturnCode
    /// </summary>
    private char _ExpErrorCanamXmlXmlReturnCode_AS;
    /// <summary>
    /// Attribute missing flag for: ExpErrorCanamXmlXmlReturnCode
    /// </summary>
    public char ExpErrorCanamXmlXmlReturnCode_AS {
      get {
        return(_ExpErrorCanamXmlXmlReturnCode_AS);
      }
      set {
        _ExpErrorCanamXmlXmlReturnCode_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ExpErrorCanamXmlXmlReturnCode
    /// Domain: Text
    /// Length: 2
    /// Varying Length: N
    /// </summary>
    private string _ExpErrorCanamXmlXmlReturnCode;
    /// <summary>
    /// Attribute for: ExpErrorCanamXmlXmlReturnCode
    /// </summary>
    public string ExpErrorCanamXmlXmlReturnCode {
      get {
        return(_ExpErrorCanamXmlXmlReturnCode);
      }
      set {
        _ExpErrorCanamXmlXmlReturnCode = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ExpErrorCanamXmlXmlMessage
    /// </summary>
    private char _ExpErrorCanamXmlXmlMessage_AS;
    /// <summary>
    /// Attribute missing flag for: ExpErrorCanamXmlXmlMessage
    /// </summary>
    public char ExpErrorCanamXmlXmlMessage_AS {
      get {
        return(_ExpErrorCanamXmlXmlMessage_AS);
      }
      set {
        _ExpErrorCanamXmlXmlMessage_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ExpErrorCanamXmlXmlMessage
    /// Domain: Text
    /// Length: 80
    /// Varying Length: N
    /// </summary>
    private string _ExpErrorCanamXmlXmlMessage;
    /// <summary>
    /// Attribute for: ExpErrorCanamXmlXmlMessage
    /// </summary>
    public string ExpErrorCanamXmlXmlMessage {
      get {
        return(_ExpErrorCanamXmlXmlMessage);
      }
      set {
        _ExpErrorCanamXmlXmlMessage = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ExpErrorCanamXmlXmlPosition
    /// </summary>
    private char _ExpErrorCanamXmlXmlPosition_AS;
    /// <summary>
    /// Attribute missing flag for: ExpErrorCanamXmlXmlPosition
    /// </summary>
    public char ExpErrorCanamXmlXmlPosition_AS {
      get {
        return(_ExpErrorCanamXmlXmlPosition_AS);
      }
      set {
        _ExpErrorCanamXmlXmlPosition_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ExpErrorCanamXmlXmlPosition
    /// Domain: Number
    /// Length: 15
    /// Decimal Places: 0
    /// Decimal Precision: N
    /// </summary>
    private double _ExpErrorCanamXmlXmlPosition;
    /// <summary>
    /// Attribute for: ExpErrorCanamXmlXmlPosition
    /// </summary>
    public double ExpErrorCanamXmlXmlPosition {
      get {
        return(_ExpErrorCanamXmlXmlPosition);
      }
      set {
        _ExpErrorCanamXmlXmlPosition = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ExpErrorCanamXmlXmlSource
    /// </summary>
    private char _ExpErrorCanamXmlXmlSource_AS;
    /// <summary>
    /// Attribute missing flag for: ExpErrorCanamXmlXmlSource
    /// </summary>
    public char ExpErrorCanamXmlXmlSource_AS {
      get {
        return(_ExpErrorCanamXmlXmlSource_AS);
      }
      set {
        _ExpErrorCanamXmlXmlSource_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ExpErrorCanamXmlXmlSource
    /// Domain: Text
    /// Length: 120
    /// Varying Length: N
    /// </summary>
    private string _ExpErrorCanamXmlXmlSource;
    /// <summary>
    /// Attribute for: ExpErrorCanamXmlXmlSource
    /// </summary>
    public string ExpErrorCanamXmlXmlSource {
      get {
        return(_ExpErrorCanamXmlXmlSource);
      }
      set {
        _ExpErrorCanamXmlXmlSource = value;
      }
    }
    /// <summary>
    /// Default Constructor
    /// </summary>
    
    public EYYY0411_OA(  )
    {
      Reset(  );
    }
    /// <summary>
    /// Copy Constructor
    /// </summary>
    
    public EYYY0411_OA( EYYY0411_OA orig )
    {
      ExpCanamXmlXmlBuffer_AS = orig.ExpCanamXmlXmlBuffer_AS;
      ExpCanamXmlXmlBuffer = orig.ExpCanamXmlXmlBuffer;
      ExpErrorCanamXmlXmlReturnCode_AS = orig.ExpErrorCanamXmlXmlReturnCode_AS;
      ExpErrorCanamXmlXmlReturnCode = orig.ExpErrorCanamXmlXmlReturnCode;
      ExpErrorCanamXmlXmlMessage_AS = orig.ExpErrorCanamXmlXmlMessage_AS;
      ExpErrorCanamXmlXmlMessage = orig.ExpErrorCanamXmlXmlMessage;
      ExpErrorCanamXmlXmlPosition_AS = orig.ExpErrorCanamXmlXmlPosition_AS;
      ExpErrorCanamXmlXmlPosition = orig.ExpErrorCanamXmlXmlPosition;
      ExpErrorCanamXmlXmlSource_AS = orig.ExpErrorCanamXmlXmlSource_AS;
      ExpErrorCanamXmlXmlSource = orig.ExpErrorCanamXmlXmlSource;
    }
    /// <summary>
    /// Static instance creator function
    /// </summary>
    
    public static EYYY0411_OA GetInstance(  )
    {
      if ( countFree == 0 )
      {
        return(new EYYY0411_OA());
      }
      else 
      {
        lock (freeArray)
        {
          if ( countFree == 0 )
          {
            return(new EYYY0411_OA());
          }
          else 
          {
            EYYY0411_OA result = freeArray[--countFree];
            freeArray[countFree] = null;
            result.Reset(  );
            return(result);
          }
        }
      }
    }
    /// <summary>
    /// Static free instance method
    /// </summary>
    
    public void FreeInstance(  )
    {
      lock (freeArray)
      {
        if ( countFree < freeArray.Length )
        {
          freeArray[countFree++] = this;
        }
      }
    }
    /// <summary>
    /// clone constructor
    /// </summary>
    
    public override Object Clone(  )
    {
      return(new EYYY0411_OA(this));
    }
    /// <summary>
    /// Resets all properties to the defaults.
    /// </summary>
    
    public void Reset(  )
    {
      ExpCanamXmlXmlBuffer_AS = ' ';
      ExpCanamXmlXmlBuffer = "";
      ExpErrorCanamXmlXmlReturnCode_AS = ' ';
      ExpErrorCanamXmlXmlReturnCode = "  ";
      ExpErrorCanamXmlXmlMessage_AS = ' ';
      ExpErrorCanamXmlXmlMessage = "                                                                                ";
      ExpErrorCanamXmlXmlPosition_AS = ' ';
      ExpErrorCanamXmlXmlPosition = 0.0;
      ExpErrorCanamXmlXmlSource_AS = ' ';
      ExpErrorCanamXmlXmlSource = 
        "                                                                                                                        ";
    }
    /// <summary>
    /// Sets the current state of the instance to the VDF version.
    /// </summary>
    public void SetFromVDF( VDF vdf )
    {
      throw new Exception("can only execute SetFromVDF for a Procedure Step.");
    }
    
    /// <summary>
    /// Gets the VDF version of the current state of the instance.
    /// </summary>
    public VDF GetVDF(  )
    {
      throw new Exception("can only execute GetVDF for a Procedure Step.");
    }
    
    /// <summary>
    /// Sets the current instance based on the passed view.
    /// </summary>
    public void CopyFrom( IExportView orig )
    {
      this.CopyFrom((EYYY0411_OA) orig);
    }
    
    /// <summary>
    /// Sets the current instance based on the passed view.
    /// </summary>
    public void CopyFrom( EYYY0411_OA orig )
    {
      ExpCanamXmlXmlBuffer_AS = orig.ExpCanamXmlXmlBuffer_AS;
      ExpCanamXmlXmlBuffer = orig.ExpCanamXmlXmlBuffer;
      ExpErrorCanamXmlXmlReturnCode_AS = orig.ExpErrorCanamXmlXmlReturnCode_AS;
      ExpErrorCanamXmlXmlReturnCode = orig.ExpErrorCanamXmlXmlReturnCode;
      ExpErrorCanamXmlXmlMessage_AS = orig.ExpErrorCanamXmlXmlMessage_AS;
      ExpErrorCanamXmlXmlMessage = orig.ExpErrorCanamXmlXmlMessage;
      ExpErrorCanamXmlXmlPosition_AS = orig.ExpErrorCanamXmlXmlPosition_AS;
      ExpErrorCanamXmlXmlPosition = orig.ExpErrorCanamXmlXmlPosition;
      ExpErrorCanamXmlXmlSource_AS = orig.ExpErrorCanamXmlXmlSource_AS;
      ExpErrorCanamXmlXmlSource = orig.ExpErrorCanamXmlXmlSource;
    }
  }
}
