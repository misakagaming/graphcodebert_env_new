// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2024 CA Technologies. All rights reserved.
//
//    Name: CYY1S411_IA                      Date: 2024/01/09
//    User: AliAl                            Time: 13:41:23
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// using Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
using System;
using com.ca.gen.vwrt;
using com.ca.gen.vwrt.types;
using com.ca.gen.vwrt.vdf;
using com.ca.gen.csu.exception;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF IMPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
namespace GEN.ORT.YYY
{
  /// <summary>
  /// Internal data view storage for: CYY1S411_IA
  /// </summary>
  [Serializable]
  public class CYY1S411_IA : ViewBase, IImportView
  {
    static VDF localVdf = null;
    
    private static CYY1S411_IA[] freeArray = new CYY1S411_IA[30];
    private static int countFree = 0;
    
    // Entity View: IMP_COMMAND
    //        Type: IYY1_COMPONENT
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpCommandIyy1ComponentSendCommand
    /// </summary>
    private char _ImpCommandIyy1ComponentSendCommand_AS;
    /// <summary>
    /// Attribute missing flag for: ImpCommandIyy1ComponentSendCommand
    /// </summary>
    public char ImpCommandIyy1ComponentSendCommand_AS {
      get {
        return(_ImpCommandIyy1ComponentSendCommand_AS);
      }
      set {
        _ImpCommandIyy1ComponentSendCommand_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpCommandIyy1ComponentSendCommand
    /// Domain: Text
    /// Length: 8
    /// Varying Length: N
    /// </summary>
    private string _ImpCommandIyy1ComponentSendCommand;
    /// <summary>
    /// Attribute for: ImpCommandIyy1ComponentSendCommand
    /// </summary>
    public string ImpCommandIyy1ComponentSendCommand {
      get {
        return(_ImpCommandIyy1ComponentSendCommand);
      }
      set {
        _ImpCommandIyy1ComponentSendCommand = value;
      }
    }
    // Entity View: IMP_DIALECT
    //        Type: IYY1_COMPONENT
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpDialectIyy1ComponentDialectCd
    /// </summary>
    private char _ImpDialectIyy1ComponentDialectCd_AS;
    /// <summary>
    /// Attribute missing flag for: ImpDialectIyy1ComponentDialectCd
    /// </summary>
    public char ImpDialectIyy1ComponentDialectCd_AS {
      get {
        return(_ImpDialectIyy1ComponentDialectCd_AS);
      }
      set {
        _ImpDialectIyy1ComponentDialectCd_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpDialectIyy1ComponentDialectCd
    /// Domain: Text
    /// Length: 2
    /// Varying Length: N
    /// </summary>
    private string _ImpDialectIyy1ComponentDialectCd;
    /// <summary>
    /// Attribute for: ImpDialectIyy1ComponentDialectCd
    /// </summary>
    public string ImpDialectIyy1ComponentDialectCd {
      get {
        return(_ImpDialectIyy1ComponentDialectCd);
      }
      set {
        _ImpDialectIyy1ComponentDialectCd = value;
      }
    }
    // Entity View: IMP
    //        Type: ISC1_AUTHORIZATION_INFO
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpIsc1AuthorizationInfoUserid
    /// </summary>
    private char _ImpIsc1AuthorizationInfoUserid_AS;
    /// <summary>
    /// Attribute missing flag for: ImpIsc1AuthorizationInfoUserid
    /// </summary>
    public char ImpIsc1AuthorizationInfoUserid_AS {
      get {
        return(_ImpIsc1AuthorizationInfoUserid_AS);
      }
      set {
        _ImpIsc1AuthorizationInfoUserid_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpIsc1AuthorizationInfoUserid
    /// Domain: Text
    /// Length: 20
    /// Varying Length: N
    /// </summary>
    private string _ImpIsc1AuthorizationInfoUserid;
    /// <summary>
    /// Attribute for: ImpIsc1AuthorizationInfoUserid
    /// </summary>
    public string ImpIsc1AuthorizationInfoUserid {
      get {
        return(_ImpIsc1AuthorizationInfoUserid);
      }
      set {
        _ImpIsc1AuthorizationInfoUserid = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpIsc1AuthorizationInfoTokenId
    /// </summary>
    private char _ImpIsc1AuthorizationInfoTokenId_AS;
    /// <summary>
    /// Attribute missing flag for: ImpIsc1AuthorizationInfoTokenId
    /// </summary>
    public char ImpIsc1AuthorizationInfoTokenId_AS {
      get {
        return(_ImpIsc1AuthorizationInfoTokenId_AS);
      }
      set {
        _ImpIsc1AuthorizationInfoTokenId_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpIsc1AuthorizationInfoTokenId
    /// Domain: Text
    /// Length: 32
    /// Varying Length: N
    /// </summary>
    private string _ImpIsc1AuthorizationInfoTokenId;
    /// <summary>
    /// Attribute for: ImpIsc1AuthorizationInfoTokenId
    /// </summary>
    public string ImpIsc1AuthorizationInfoTokenId {
      get {
        return(_ImpIsc1AuthorizationInfoTokenId);
      }
      set {
        _ImpIsc1AuthorizationInfoTokenId = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpIsc1AuthorizationInfoModuleId
    /// </summary>
    private char _ImpIsc1AuthorizationInfoModuleId_AS;
    /// <summary>
    /// Attribute missing flag for: ImpIsc1AuthorizationInfoModuleId
    /// </summary>
    public char ImpIsc1AuthorizationInfoModuleId_AS {
      get {
        return(_ImpIsc1AuthorizationInfoModuleId_AS);
      }
      set {
        _ImpIsc1AuthorizationInfoModuleId_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpIsc1AuthorizationInfoModuleId
    /// Domain: Text
    /// Length: 20
    /// Varying Length: N
    /// </summary>
    private string _ImpIsc1AuthorizationInfoModuleId;
    /// <summary>
    /// Attribute for: ImpIsc1AuthorizationInfoModuleId
    /// </summary>
    public string ImpIsc1AuthorizationInfoModuleId {
      get {
        return(_ImpIsc1AuthorizationInfoModuleId);
      }
      set {
        _ImpIsc1AuthorizationInfoModuleId = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpIsc1AuthorizationInfoAuthorityObjectId
    /// </summary>
    private char _ImpIsc1AuthorizationInfoAuthorityObjectId_AS;
    /// <summary>
    /// Attribute missing flag for: ImpIsc1AuthorizationInfoAuthorityObjectId
    /// </summary>
    public char ImpIsc1AuthorizationInfoAuthorityObjectId_AS {
      get {
        return(_ImpIsc1AuthorizationInfoAuthorityObjectId_AS);
      }
      set {
        _ImpIsc1AuthorizationInfoAuthorityObjectId_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpIsc1AuthorizationInfoAuthorityObjectId
    /// Domain: Text
    /// Length: 20
    /// Varying Length: N
    /// </summary>
    private string _ImpIsc1AuthorizationInfoAuthorityObjectId;
    /// <summary>
    /// Attribute for: ImpIsc1AuthorizationInfoAuthorityObjectId
    /// </summary>
    public string ImpIsc1AuthorizationInfoAuthorityObjectId {
      get {
        return(_ImpIsc1AuthorizationInfoAuthorityObjectId);
      }
      set {
        _ImpIsc1AuthorizationInfoAuthorityObjectId = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpIsc1AuthorizationInfoVersion
    /// </summary>
    private char _ImpIsc1AuthorizationInfoVersion_AS;
    /// <summary>
    /// Attribute missing flag for: ImpIsc1AuthorizationInfoVersion
    /// </summary>
    public char ImpIsc1AuthorizationInfoVersion_AS {
      get {
        return(_ImpIsc1AuthorizationInfoVersion_AS);
      }
      set {
        _ImpIsc1AuthorizationInfoVersion_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpIsc1AuthorizationInfoVersion
    /// Domain: Text
    /// Length: 4
    /// Varying Length: N
    /// </summary>
    private string _ImpIsc1AuthorizationInfoVersion;
    /// <summary>
    /// Attribute for: ImpIsc1AuthorizationInfoVersion
    /// </summary>
    public string ImpIsc1AuthorizationInfoVersion {
      get {
        return(_ImpIsc1AuthorizationInfoVersion);
      }
      set {
        _ImpIsc1AuthorizationInfoVersion = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpIsc1AuthorizationInfoWorkingUnitNum
    /// </summary>
    private char _ImpIsc1AuthorizationInfoWorkingUnitNum_AS;
    /// <summary>
    /// Attribute missing flag for: ImpIsc1AuthorizationInfoWorkingUnitNum
    /// </summary>
    public char ImpIsc1AuthorizationInfoWorkingUnitNum_AS {
      get {
        return(_ImpIsc1AuthorizationInfoWorkingUnitNum_AS);
      }
      set {
        _ImpIsc1AuthorizationInfoWorkingUnitNum_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpIsc1AuthorizationInfoWorkingUnitNum
    /// Domain: Number
    /// Length: 5
    /// Decimal Places: 0
    /// Decimal Precision: N
    /// </summary>
    private int _ImpIsc1AuthorizationInfoWorkingUnitNum;
    /// <summary>
    /// Attribute for: ImpIsc1AuthorizationInfoWorkingUnitNum
    /// </summary>
    public int ImpIsc1AuthorizationInfoWorkingUnitNum {
      get {
        return(_ImpIsc1AuthorizationInfoWorkingUnitNum);
      }
      set {
        _ImpIsc1AuthorizationInfoWorkingUnitNum = value;
      }
    }
    // Entity View: IMP
    //        Type: TYPE
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpTypeTinstanceId
    /// </summary>
    private char _ImpTypeTinstanceId_AS;
    /// <summary>
    /// Attribute missing flag for: ImpTypeTinstanceId
    /// </summary>
    public char ImpTypeTinstanceId_AS {
      get {
        return(_ImpTypeTinstanceId_AS);
      }
      set {
        _ImpTypeTinstanceId_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpTypeTinstanceId
    /// Domain: Timestamp
    /// Length: 20
    /// </summary>
    private string _ImpTypeTinstanceId;
    /// <summary>
    /// Attribute for: ImpTypeTinstanceId
    /// </summary>
    public string ImpTypeTinstanceId {
      get {
        return(_ImpTypeTinstanceId);
      }
      set {
        _ImpTypeTinstanceId = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpTypeTreferenceId
    /// </summary>
    private char _ImpTypeTreferenceId_AS;
    /// <summary>
    /// Attribute missing flag for: ImpTypeTreferenceId
    /// </summary>
    public char ImpTypeTreferenceId_AS {
      get {
        return(_ImpTypeTreferenceId_AS);
      }
      set {
        _ImpTypeTreferenceId_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpTypeTreferenceId
    /// Domain: Timestamp
    /// Length: 20
    /// </summary>
    private string _ImpTypeTreferenceId;
    /// <summary>
    /// Attribute for: ImpTypeTreferenceId
    /// </summary>
    public string ImpTypeTreferenceId {
      get {
        return(_ImpTypeTreferenceId);
      }
      set {
        _ImpTypeTreferenceId = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpTypeTcreateUserId
    /// </summary>
    private char _ImpTypeTcreateUserId_AS;
    /// <summary>
    /// Attribute missing flag for: ImpTypeTcreateUserId
    /// </summary>
    public char ImpTypeTcreateUserId_AS {
      get {
        return(_ImpTypeTcreateUserId_AS);
      }
      set {
        _ImpTypeTcreateUserId_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpTypeTcreateUserId
    /// Domain: Text
    /// Length: 8
    /// Varying Length: N
    /// </summary>
    private string _ImpTypeTcreateUserId;
    /// <summary>
    /// Attribute for: ImpTypeTcreateUserId
    /// </summary>
    public string ImpTypeTcreateUserId {
      get {
        return(_ImpTypeTcreateUserId);
      }
      set {
        _ImpTypeTcreateUserId = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpTypeTupdateUserId
    /// </summary>
    private char _ImpTypeTupdateUserId_AS;
    /// <summary>
    /// Attribute missing flag for: ImpTypeTupdateUserId
    /// </summary>
    public char ImpTypeTupdateUserId_AS {
      get {
        return(_ImpTypeTupdateUserId_AS);
      }
      set {
        _ImpTypeTupdateUserId_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpTypeTupdateUserId
    /// Domain: Text
    /// Length: 8
    /// Varying Length: N
    /// </summary>
    private string _ImpTypeTupdateUserId;
    /// <summary>
    /// Attribute for: ImpTypeTupdateUserId
    /// </summary>
    public string ImpTypeTupdateUserId {
      get {
        return(_ImpTypeTupdateUserId);
      }
      set {
        _ImpTypeTupdateUserId = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpTypeTkeyAttrText
    /// </summary>
    private char _ImpTypeTkeyAttrText_AS;
    /// <summary>
    /// Attribute missing flag for: ImpTypeTkeyAttrText
    /// </summary>
    public char ImpTypeTkeyAttrText_AS {
      get {
        return(_ImpTypeTkeyAttrText_AS);
      }
      set {
        _ImpTypeTkeyAttrText_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpTypeTkeyAttrText
    /// Domain: Text
    /// Length: 4
    /// Varying Length: N
    /// </summary>
    private string _ImpTypeTkeyAttrText;
    /// <summary>
    /// Attribute for: ImpTypeTkeyAttrText
    /// </summary>
    public string ImpTypeTkeyAttrText {
      get {
        return(_ImpTypeTkeyAttrText);
      }
      set {
        _ImpTypeTkeyAttrText = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpTypeTsearchAttrText
    /// </summary>
    private char _ImpTypeTsearchAttrText_AS;
    /// <summary>
    /// Attribute missing flag for: ImpTypeTsearchAttrText
    /// </summary>
    public char ImpTypeTsearchAttrText_AS {
      get {
        return(_ImpTypeTsearchAttrText_AS);
      }
      set {
        _ImpTypeTsearchAttrText_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpTypeTsearchAttrText
    /// Domain: Text
    /// Length: 20
    /// Varying Length: N
    /// </summary>
    private string _ImpTypeTsearchAttrText;
    /// <summary>
    /// Attribute for: ImpTypeTsearchAttrText
    /// </summary>
    public string ImpTypeTsearchAttrText {
      get {
        return(_ImpTypeTsearchAttrText);
      }
      set {
        _ImpTypeTsearchAttrText = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpTypeTotherAttrText
    /// </summary>
    private char _ImpTypeTotherAttrText_AS;
    /// <summary>
    /// Attribute missing flag for: ImpTypeTotherAttrText
    /// </summary>
    public char ImpTypeTotherAttrText_AS {
      get {
        return(_ImpTypeTotherAttrText_AS);
      }
      set {
        _ImpTypeTotherAttrText_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpTypeTotherAttrText
    /// Domain: Text
    /// Length: 2
    /// Varying Length: N
    /// </summary>
    private string _ImpTypeTotherAttrText;
    /// <summary>
    /// Attribute for: ImpTypeTotherAttrText
    /// </summary>
    public string ImpTypeTotherAttrText {
      get {
        return(_ImpTypeTotherAttrText);
      }
      set {
        _ImpTypeTotherAttrText = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpTypeTotherAttrDate
    /// </summary>
    private char _ImpTypeTotherAttrDate_AS;
    /// <summary>
    /// Attribute missing flag for: ImpTypeTotherAttrDate
    /// </summary>
    public char ImpTypeTotherAttrDate_AS {
      get {
        return(_ImpTypeTotherAttrDate_AS);
      }
      set {
        _ImpTypeTotherAttrDate_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpTypeTotherAttrDate
    /// Domain: Date
    /// Length: 8
    /// </summary>
    private int _ImpTypeTotherAttrDate;
    /// <summary>
    /// Attribute for: ImpTypeTotherAttrDate
    /// </summary>
    public int ImpTypeTotherAttrDate {
      get {
        return(_ImpTypeTotherAttrDate);
      }
      set {
        _ImpTypeTotherAttrDate = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpTypeTotherAttrTime
    /// </summary>
    private char _ImpTypeTotherAttrTime_AS;
    /// <summary>
    /// Attribute missing flag for: ImpTypeTotherAttrTime
    /// </summary>
    public char ImpTypeTotherAttrTime_AS {
      get {
        return(_ImpTypeTotherAttrTime_AS);
      }
      set {
        _ImpTypeTotherAttrTime_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpTypeTotherAttrTime
    /// Domain: Time
    /// Length: 6
    /// </summary>
    private int _ImpTypeTotherAttrTime;
    /// <summary>
    /// Attribute for: ImpTypeTotherAttrTime
    /// </summary>
    public int ImpTypeTotherAttrTime {
      get {
        return(_ImpTypeTotherAttrTime);
      }
      set {
        _ImpTypeTotherAttrTime = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpTypeTotherAttrAmount
    /// </summary>
    private char _ImpTypeTotherAttrAmount_AS;
    /// <summary>
    /// Attribute missing flag for: ImpTypeTotherAttrAmount
    /// </summary>
    public char ImpTypeTotherAttrAmount_AS {
      get {
        return(_ImpTypeTotherAttrAmount_AS);
      }
      set {
        _ImpTypeTotherAttrAmount_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpTypeTotherAttrAmount
    /// Domain: Number
    /// Length: 17
    /// Decimal Places: 2
    /// Decimal Precision: Y
    /// </summary>
    private decimal _ImpTypeTotherAttrAmount;
    /// <summary>
    /// Attribute for: ImpTypeTotherAttrAmount
    /// </summary>
    public decimal ImpTypeTotherAttrAmount {
      get {
        return(_ImpTypeTotherAttrAmount);
      }
      set {
        _ImpTypeTotherAttrAmount = value;
      }
    }
    // Repeating GV:  IMP_GROUP
    //     Repeats: 48 times
    /// <summary>
    /// Internal storage, repeating group view count
    /// </summary>
    private int _ImpGroup_MA;
    /// <summary>
    /// Repeating group view count
    /// </summary>
    public int ImpGroup_MA {
      get {
        return(_ImpGroup_MA);
      }
      set {
        _ImpGroup_MA = value;
      }
    }
    /// <summary>
    /// Internal storage, repeating group view occurrance array
    /// </summary>
    private char[] _ImpGroup_AC = new char[48];
    /// <summary>
    /// Repeating group view occurrance array
    /// </summary>
    public char[] ImpGroup_AC {
      get {
        return(_ImpGroup_AC);
      }
      set {
        _ImpGroup_AC = value;
      }
    }
    // Entity View: IMP_G
    //        Type: TYPE
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpGTypeTinstanceId
    /// </summary>
    private char[] _ImpGTypeTinstanceId_AS = new char[48];
    /// <summary>
    /// Attribute missing flag for: ImpGTypeTinstanceId
    /// </summary>
    public char[] ImpGTypeTinstanceId_AS {
      get {
        return(_ImpGTypeTinstanceId_AS);
      }
      set {
        _ImpGTypeTinstanceId_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpGTypeTinstanceId
    /// Domain: Timestamp
    /// Length: 20
    /// </summary>
    private string[] _ImpGTypeTinstanceId = new string[48];
    /// <summary>
    /// Attribute for: ImpGTypeTinstanceId
    /// </summary>
    public string[] ImpGTypeTinstanceId {
      get {
        return(_ImpGTypeTinstanceId);
      }
      set {
        _ImpGTypeTinstanceId = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpGTypeTsearchAttrText
    /// </summary>
    private char[] _ImpGTypeTsearchAttrText_AS = new char[48];
    /// <summary>
    /// Attribute missing flag for: ImpGTypeTsearchAttrText
    /// </summary>
    public char[] ImpGTypeTsearchAttrText_AS {
      get {
        return(_ImpGTypeTsearchAttrText_AS);
      }
      set {
        _ImpGTypeTsearchAttrText_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpGTypeTsearchAttrText
    /// Domain: Text
    /// Length: 20
    /// Varying Length: N
    /// </summary>
    private string[] _ImpGTypeTsearchAttrText = new string[48];
    /// <summary>
    /// Attribute for: ImpGTypeTsearchAttrText
    /// </summary>
    public string[] ImpGTypeTsearchAttrText {
      get {
        return(_ImpGTypeTsearchAttrText);
      }
      set {
        _ImpGTypeTsearchAttrText = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpGTypeTotherAttrDate
    /// </summary>
    private char[] _ImpGTypeTotherAttrDate_AS = new char[48];
    /// <summary>
    /// Attribute missing flag for: ImpGTypeTotherAttrDate
    /// </summary>
    public char[] ImpGTypeTotherAttrDate_AS {
      get {
        return(_ImpGTypeTotherAttrDate_AS);
      }
      set {
        _ImpGTypeTotherAttrDate_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpGTypeTotherAttrDate
    /// Domain: Date
    /// Length: 8
    /// </summary>
    private int[] _ImpGTypeTotherAttrDate = new int[48];
    /// <summary>
    /// Attribute for: ImpGTypeTotherAttrDate
    /// </summary>
    public int[] ImpGTypeTotherAttrDate {
      get {
        return(_ImpGTypeTotherAttrDate);
      }
      set {
        _ImpGTypeTotherAttrDate = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpGTypeTotherAttrTime
    /// </summary>
    private char[] _ImpGTypeTotherAttrTime_AS = new char[48];
    /// <summary>
    /// Attribute missing flag for: ImpGTypeTotherAttrTime
    /// </summary>
    public char[] ImpGTypeTotherAttrTime_AS {
      get {
        return(_ImpGTypeTotherAttrTime_AS);
      }
      set {
        _ImpGTypeTotherAttrTime_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpGTypeTotherAttrTime
    /// Domain: Time
    /// Length: 6
    /// </summary>
    private int[] _ImpGTypeTotherAttrTime = new int[48];
    /// <summary>
    /// Attribute for: ImpGTypeTotherAttrTime
    /// </summary>
    public int[] ImpGTypeTotherAttrTime {
      get {
        return(_ImpGTypeTotherAttrTime);
      }
      set {
        _ImpGTypeTotherAttrTime = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpGTypeTotherAttrAmount
    /// </summary>
    private char[] _ImpGTypeTotherAttrAmount_AS = new char[48];
    /// <summary>
    /// Attribute missing flag for: ImpGTypeTotherAttrAmount
    /// </summary>
    public char[] ImpGTypeTotherAttrAmount_AS {
      get {
        return(_ImpGTypeTotherAttrAmount_AS);
      }
      set {
        _ImpGTypeTotherAttrAmount_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpGTypeTotherAttrAmount
    /// Domain: Number
    /// Length: 17
    /// Decimal Places: 2
    /// Decimal Precision: Y
    /// </summary>
    private decimal[] _ImpGTypeTotherAttrAmount = new decimal[48];
    /// <summary>
    /// Attribute for: ImpGTypeTotherAttrAmount
    /// </summary>
    public decimal[] ImpGTypeTotherAttrAmount {
      get {
        return(_ImpGTypeTotherAttrAmount);
      }
      set {
        _ImpGTypeTotherAttrAmount = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpGTypeTreferenceId
    /// </summary>
    private char[] _ImpGTypeTreferenceId_AS = new char[48];
    /// <summary>
    /// Attribute missing flag for: ImpGTypeTreferenceId
    /// </summary>
    public char[] ImpGTypeTreferenceId_AS {
      get {
        return(_ImpGTypeTreferenceId_AS);
      }
      set {
        _ImpGTypeTreferenceId_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpGTypeTreferenceId
    /// Domain: Timestamp
    /// Length: 20
    /// </summary>
    private string[] _ImpGTypeTreferenceId = new string[48];
    /// <summary>
    /// Attribute for: ImpGTypeTreferenceId
    /// </summary>
    public string[] ImpGTypeTreferenceId {
      get {
        return(_ImpGTypeTreferenceId);
      }
      set {
        _ImpGTypeTreferenceId = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpGTypeTcreateUserId
    /// </summary>
    private char[] _ImpGTypeTcreateUserId_AS = new char[48];
    /// <summary>
    /// Attribute missing flag for: ImpGTypeTcreateUserId
    /// </summary>
    public char[] ImpGTypeTcreateUserId_AS {
      get {
        return(_ImpGTypeTcreateUserId_AS);
      }
      set {
        _ImpGTypeTcreateUserId_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpGTypeTcreateUserId
    /// Domain: Text
    /// Length: 8
    /// Varying Length: N
    /// </summary>
    private string[] _ImpGTypeTcreateUserId = new string[48];
    /// <summary>
    /// Attribute for: ImpGTypeTcreateUserId
    /// </summary>
    public string[] ImpGTypeTcreateUserId {
      get {
        return(_ImpGTypeTcreateUserId);
      }
      set {
        _ImpGTypeTcreateUserId = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpGTypeTupdateUserId
    /// </summary>
    private char[] _ImpGTypeTupdateUserId_AS = new char[48];
    /// <summary>
    /// Attribute missing flag for: ImpGTypeTupdateUserId
    /// </summary>
    public char[] ImpGTypeTupdateUserId_AS {
      get {
        return(_ImpGTypeTupdateUserId_AS);
      }
      set {
        _ImpGTypeTupdateUserId_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpGTypeTupdateUserId
    /// Domain: Text
    /// Length: 8
    /// Varying Length: N
    /// </summary>
    private string[] _ImpGTypeTupdateUserId = new string[48];
    /// <summary>
    /// Attribute for: ImpGTypeTupdateUserId
    /// </summary>
    public string[] ImpGTypeTupdateUserId {
      get {
        return(_ImpGTypeTupdateUserId);
      }
      set {
        _ImpGTypeTupdateUserId = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpGTypeTkeyAttrText
    /// </summary>
    private char[] _ImpGTypeTkeyAttrText_AS = new char[48];
    /// <summary>
    /// Attribute missing flag for: ImpGTypeTkeyAttrText
    /// </summary>
    public char[] ImpGTypeTkeyAttrText_AS {
      get {
        return(_ImpGTypeTkeyAttrText_AS);
      }
      set {
        _ImpGTypeTkeyAttrText_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpGTypeTkeyAttrText
    /// Domain: Text
    /// Length: 4
    /// Varying Length: N
    /// </summary>
    private string[] _ImpGTypeTkeyAttrText = new string[48];
    /// <summary>
    /// Attribute for: ImpGTypeTkeyAttrText
    /// </summary>
    public string[] ImpGTypeTkeyAttrText {
      get {
        return(_ImpGTypeTkeyAttrText);
      }
      set {
        _ImpGTypeTkeyAttrText = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpGTypeTotherAttrText
    /// </summary>
    private char[] _ImpGTypeTotherAttrText_AS = new char[48];
    /// <summary>
    /// Attribute missing flag for: ImpGTypeTotherAttrText
    /// </summary>
    public char[] ImpGTypeTotherAttrText_AS {
      get {
        return(_ImpGTypeTotherAttrText_AS);
      }
      set {
        _ImpGTypeTotherAttrText_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpGTypeTotherAttrText
    /// Domain: Text
    /// Length: 2
    /// Varying Length: N
    /// </summary>
    private string[] _ImpGTypeTotherAttrText = new string[48];
    /// <summary>
    /// Attribute for: ImpGTypeTotherAttrText
    /// </summary>
    public string[] ImpGTypeTotherAttrText {
      get {
        return(_ImpGTypeTotherAttrText);
      }
      set {
        _ImpGTypeTotherAttrText = value;
      }
    }
    // Entity View: IMP
    //        Type: CANAM_XML
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpCanamXmlXmlReturnCode
    /// </summary>
    private char _ImpCanamXmlXmlReturnCode_AS;
    /// <summary>
    /// Attribute missing flag for: ImpCanamXmlXmlReturnCode
    /// </summary>
    public char ImpCanamXmlXmlReturnCode_AS {
      get {
        return(_ImpCanamXmlXmlReturnCode_AS);
      }
      set {
        _ImpCanamXmlXmlReturnCode_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpCanamXmlXmlReturnCode
    /// Domain: Text
    /// Length: 2
    /// Varying Length: N
    /// </summary>
    private string _ImpCanamXmlXmlReturnCode;
    /// <summary>
    /// Attribute for: ImpCanamXmlXmlReturnCode
    /// </summary>
    public string ImpCanamXmlXmlReturnCode {
      get {
        return(_ImpCanamXmlXmlReturnCode);
      }
      set {
        _ImpCanamXmlXmlReturnCode = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpCanamXmlXmlMessage
    /// </summary>
    private char _ImpCanamXmlXmlMessage_AS;
    /// <summary>
    /// Attribute missing flag for: ImpCanamXmlXmlMessage
    /// </summary>
    public char ImpCanamXmlXmlMessage_AS {
      get {
        return(_ImpCanamXmlXmlMessage_AS);
      }
      set {
        _ImpCanamXmlXmlMessage_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpCanamXmlXmlMessage
    /// Domain: Text
    /// Length: 80
    /// Varying Length: N
    /// </summary>
    private string _ImpCanamXmlXmlMessage;
    /// <summary>
    /// Attribute for: ImpCanamXmlXmlMessage
    /// </summary>
    public string ImpCanamXmlXmlMessage {
      get {
        return(_ImpCanamXmlXmlMessage);
      }
      set {
        _ImpCanamXmlXmlMessage = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpCanamXmlXmlPosition
    /// </summary>
    private char _ImpCanamXmlXmlPosition_AS;
    /// <summary>
    /// Attribute missing flag for: ImpCanamXmlXmlPosition
    /// </summary>
    public char ImpCanamXmlXmlPosition_AS {
      get {
        return(_ImpCanamXmlXmlPosition_AS);
      }
      set {
        _ImpCanamXmlXmlPosition_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpCanamXmlXmlPosition
    /// Domain: Number
    /// Length: 15
    /// Decimal Places: 0
    /// Decimal Precision: N
    /// </summary>
    private double _ImpCanamXmlXmlPosition;
    /// <summary>
    /// Attribute for: ImpCanamXmlXmlPosition
    /// </summary>
    public double ImpCanamXmlXmlPosition {
      get {
        return(_ImpCanamXmlXmlPosition);
      }
      set {
        _ImpCanamXmlXmlPosition = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpCanamXmlXmlSource
    /// </summary>
    private char _ImpCanamXmlXmlSource_AS;
    /// <summary>
    /// Attribute missing flag for: ImpCanamXmlXmlSource
    /// </summary>
    public char ImpCanamXmlXmlSource_AS {
      get {
        return(_ImpCanamXmlXmlSource_AS);
      }
      set {
        _ImpCanamXmlXmlSource_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpCanamXmlXmlSource
    /// Domain: Text
    /// Length: 120
    /// Varying Length: N
    /// </summary>
    private string _ImpCanamXmlXmlSource;
    /// <summary>
    /// Attribute for: ImpCanamXmlXmlSource
    /// </summary>
    public string ImpCanamXmlXmlSource {
      get {
        return(_ImpCanamXmlXmlSource);
      }
      set {
        _ImpCanamXmlXmlSource = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpCanamXmlXmlBuffer
    /// </summary>
    private char _ImpCanamXmlXmlBuffer_AS;
    /// <summary>
    /// Attribute missing flag for: ImpCanamXmlXmlBuffer
    /// </summary>
    public char ImpCanamXmlXmlBuffer_AS {
      get {
        return(_ImpCanamXmlXmlBuffer_AS);
      }
      set {
        _ImpCanamXmlXmlBuffer_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpCanamXmlXmlBuffer
    /// Domain: Text
    /// Length: 4094
    /// Varying Length: Y
    /// </summary>
    private string _ImpCanamXmlXmlBuffer;
    /// <summary>
    /// Attribute for: ImpCanamXmlXmlBuffer
    /// </summary>
    public string ImpCanamXmlXmlBuffer {
      get {
        return(_ImpCanamXmlXmlBuffer);
      }
      set {
        _ImpCanamXmlXmlBuffer = value;
      }
    }
    /// <summary>
    /// Default Constructor
    /// </summary>
    
    public CYY1S411_IA(  )
    {
      Reset(  );
    }
    /// <summary>
    /// Copy Constructor
    /// </summary>
    
    public CYY1S411_IA( CYY1S411_IA orig )
    {
      ImpCommandIyy1ComponentSendCommand_AS = orig.ImpCommandIyy1ComponentSendCommand_AS;
      ImpCommandIyy1ComponentSendCommand = orig.ImpCommandIyy1ComponentSendCommand;
      ImpDialectIyy1ComponentDialectCd_AS = orig.ImpDialectIyy1ComponentDialectCd_AS;
      ImpDialectIyy1ComponentDialectCd = orig.ImpDialectIyy1ComponentDialectCd;
      ImpIsc1AuthorizationInfoUserid_AS = orig.ImpIsc1AuthorizationInfoUserid_AS;
      ImpIsc1AuthorizationInfoUserid = orig.ImpIsc1AuthorizationInfoUserid;
      ImpIsc1AuthorizationInfoTokenId_AS = orig.ImpIsc1AuthorizationInfoTokenId_AS;
      ImpIsc1AuthorizationInfoTokenId = orig.ImpIsc1AuthorizationInfoTokenId;
      ImpIsc1AuthorizationInfoModuleId_AS = orig.ImpIsc1AuthorizationInfoModuleId_AS;
      ImpIsc1AuthorizationInfoModuleId = orig.ImpIsc1AuthorizationInfoModuleId;
      ImpIsc1AuthorizationInfoAuthorityObjectId_AS = orig.ImpIsc1AuthorizationInfoAuthorityObjectId_AS;
      ImpIsc1AuthorizationInfoAuthorityObjectId = orig.ImpIsc1AuthorizationInfoAuthorityObjectId;
      ImpIsc1AuthorizationInfoVersion_AS = orig.ImpIsc1AuthorizationInfoVersion_AS;
      ImpIsc1AuthorizationInfoVersion = orig.ImpIsc1AuthorizationInfoVersion;
      ImpIsc1AuthorizationInfoWorkingUnitNum_AS = orig.ImpIsc1AuthorizationInfoWorkingUnitNum_AS;
      ImpIsc1AuthorizationInfoWorkingUnitNum = orig.ImpIsc1AuthorizationInfoWorkingUnitNum;
      ImpTypeTinstanceId_AS = orig.ImpTypeTinstanceId_AS;
      ImpTypeTinstanceId = orig.ImpTypeTinstanceId;
      ImpTypeTreferenceId_AS = orig.ImpTypeTreferenceId_AS;
      ImpTypeTreferenceId = orig.ImpTypeTreferenceId;
      ImpTypeTcreateUserId_AS = orig.ImpTypeTcreateUserId_AS;
      ImpTypeTcreateUserId = orig.ImpTypeTcreateUserId;
      ImpTypeTupdateUserId_AS = orig.ImpTypeTupdateUserId_AS;
      ImpTypeTupdateUserId = orig.ImpTypeTupdateUserId;
      ImpTypeTkeyAttrText_AS = orig.ImpTypeTkeyAttrText_AS;
      ImpTypeTkeyAttrText = orig.ImpTypeTkeyAttrText;
      ImpTypeTsearchAttrText_AS = orig.ImpTypeTsearchAttrText_AS;
      ImpTypeTsearchAttrText = orig.ImpTypeTsearchAttrText;
      ImpTypeTotherAttrText_AS = orig.ImpTypeTotherAttrText_AS;
      ImpTypeTotherAttrText = orig.ImpTypeTotherAttrText;
      ImpTypeTotherAttrDate_AS = orig.ImpTypeTotherAttrDate_AS;
      ImpTypeTotherAttrDate = orig.ImpTypeTotherAttrDate;
      ImpTypeTotherAttrTime_AS = orig.ImpTypeTotherAttrTime_AS;
      ImpTypeTotherAttrTime = orig.ImpTypeTotherAttrTime;
      ImpTypeTotherAttrAmount_AS = orig.ImpTypeTotherAttrAmount_AS;
      ImpTypeTotherAttrAmount = orig.ImpTypeTotherAttrAmount;
      ImpGroup_MA = orig.ImpGroup_MA;
      Array.Copy( orig._ImpGroup_AC,
      	ImpGroup_AC,
      	ImpGroup_AC.Length );
      Array.Copy( orig._ImpGTypeTinstanceId_AS,
      	ImpGTypeTinstanceId_AS,
      	ImpGTypeTinstanceId_AS.Length );
      Array.Copy( orig._ImpGTypeTinstanceId,
      	ImpGTypeTinstanceId,
      	ImpGTypeTinstanceId.Length );
      Array.Copy( orig._ImpGTypeTsearchAttrText_AS,
      	ImpGTypeTsearchAttrText_AS,
      	ImpGTypeTsearchAttrText_AS.Length );
      Array.Copy( orig._ImpGTypeTsearchAttrText,
      	ImpGTypeTsearchAttrText,
      	ImpGTypeTsearchAttrText.Length );
      Array.Copy( orig._ImpGTypeTotherAttrDate_AS,
      	ImpGTypeTotherAttrDate_AS,
      	ImpGTypeTotherAttrDate_AS.Length );
      Array.Copy( orig._ImpGTypeTotherAttrDate,
      	ImpGTypeTotherAttrDate,
      	ImpGTypeTotherAttrDate.Length );
      Array.Copy( orig._ImpGTypeTotherAttrTime_AS,
      	ImpGTypeTotherAttrTime_AS,
      	ImpGTypeTotherAttrTime_AS.Length );
      Array.Copy( orig._ImpGTypeTotherAttrTime,
      	ImpGTypeTotherAttrTime,
      	ImpGTypeTotherAttrTime.Length );
      Array.Copy( orig._ImpGTypeTotherAttrAmount_AS,
      	ImpGTypeTotherAttrAmount_AS,
      	ImpGTypeTotherAttrAmount_AS.Length );
      Array.Copy( orig._ImpGTypeTotherAttrAmount,
      	ImpGTypeTotherAttrAmount,
      	ImpGTypeTotherAttrAmount.Length );
      Array.Copy( orig._ImpGTypeTreferenceId_AS,
      	ImpGTypeTreferenceId_AS,
      	ImpGTypeTreferenceId_AS.Length );
      Array.Copy( orig._ImpGTypeTreferenceId,
      	ImpGTypeTreferenceId,
      	ImpGTypeTreferenceId.Length );
      Array.Copy( orig._ImpGTypeTcreateUserId_AS,
      	ImpGTypeTcreateUserId_AS,
      	ImpGTypeTcreateUserId_AS.Length );
      Array.Copy( orig._ImpGTypeTcreateUserId,
      	ImpGTypeTcreateUserId,
      	ImpGTypeTcreateUserId.Length );
      Array.Copy( orig._ImpGTypeTupdateUserId_AS,
      	ImpGTypeTupdateUserId_AS,
      	ImpGTypeTupdateUserId_AS.Length );
      Array.Copy( orig._ImpGTypeTupdateUserId,
      	ImpGTypeTupdateUserId,
      	ImpGTypeTupdateUserId.Length );
      Array.Copy( orig._ImpGTypeTkeyAttrText_AS,
      	ImpGTypeTkeyAttrText_AS,
      	ImpGTypeTkeyAttrText_AS.Length );
      Array.Copy( orig._ImpGTypeTkeyAttrText,
      	ImpGTypeTkeyAttrText,
      	ImpGTypeTkeyAttrText.Length );
      Array.Copy( orig._ImpGTypeTotherAttrText_AS,
      	ImpGTypeTotherAttrText_AS,
      	ImpGTypeTotherAttrText_AS.Length );
      Array.Copy( orig._ImpGTypeTotherAttrText,
      	ImpGTypeTotherAttrText,
      	ImpGTypeTotherAttrText.Length );
      ImpCanamXmlXmlReturnCode_AS = orig.ImpCanamXmlXmlReturnCode_AS;
      ImpCanamXmlXmlReturnCode = orig.ImpCanamXmlXmlReturnCode;
      ImpCanamXmlXmlMessage_AS = orig.ImpCanamXmlXmlMessage_AS;
      ImpCanamXmlXmlMessage = orig.ImpCanamXmlXmlMessage;
      ImpCanamXmlXmlPosition_AS = orig.ImpCanamXmlXmlPosition_AS;
      ImpCanamXmlXmlPosition = orig.ImpCanamXmlXmlPosition;
      ImpCanamXmlXmlSource_AS = orig.ImpCanamXmlXmlSource_AS;
      ImpCanamXmlXmlSource = orig.ImpCanamXmlXmlSource;
      ImpCanamXmlXmlBuffer_AS = orig.ImpCanamXmlXmlBuffer_AS;
      ImpCanamXmlXmlBuffer = orig.ImpCanamXmlXmlBuffer;
    }
    /// <summary>
    /// Static instance creator function
    /// </summary>
    
    public static CYY1S411_IA GetInstance(  )
    {
      if ( countFree == 0 )
      {
        return(new CYY1S411_IA());
      }
      else 
      {
        lock (freeArray)
        {
          if ( countFree == 0 )
          {
            return(new CYY1S411_IA());
          }
          else 
          {
            CYY1S411_IA result = freeArray[--countFree];
            freeArray[countFree] = null;
            result.Reset(  );
            return(result);
          }
        }
      }
    }
    /// <summary>
    /// Static free instance method
    /// </summary>
    
    public void FreeInstance(  )
    {
      lock (freeArray)
      {
        if ( countFree < freeArray.Length )
        {
          freeArray[countFree++] = this;
        }
      }
    }
    /// <summary>
    /// clone constructor
    /// </summary>
    
    public override Object Clone(  )
    {
      return(new CYY1S411_IA(this));
    }
    /// <summary>
    /// Resets all properties to the defaults.
    /// </summary>
    
    public void Reset(  )
    {
      ImpCommandIyy1ComponentSendCommand_AS = ' ';
      ImpCommandIyy1ComponentSendCommand = "        ";
      ImpDialectIyy1ComponentDialectCd_AS = ' ';
      ImpDialectIyy1ComponentDialectCd = "  ";
      ImpIsc1AuthorizationInfoUserid_AS = ' ';
      ImpIsc1AuthorizationInfoUserid = "                    ";
      ImpIsc1AuthorizationInfoTokenId_AS = ' ';
      ImpIsc1AuthorizationInfoTokenId = "                                ";
      ImpIsc1AuthorizationInfoModuleId_AS = ' ';
      ImpIsc1AuthorizationInfoModuleId = "                    ";
      ImpIsc1AuthorizationInfoAuthorityObjectId_AS = ' ';
      ImpIsc1AuthorizationInfoAuthorityObjectId = "                    ";
      ImpIsc1AuthorizationInfoVersion_AS = ' ';
      ImpIsc1AuthorizationInfoVersion = "    ";
      ImpIsc1AuthorizationInfoWorkingUnitNum_AS = ' ';
      ImpIsc1AuthorizationInfoWorkingUnitNum = 0;
      ImpTypeTinstanceId_AS = ' ';
      ImpTypeTinstanceId = "00000000000000000000";
      ImpTypeTreferenceId_AS = ' ';
      ImpTypeTreferenceId = "00000000000000000000";
      ImpTypeTcreateUserId_AS = ' ';
      ImpTypeTcreateUserId = "        ";
      ImpTypeTupdateUserId_AS = ' ';
      ImpTypeTupdateUserId = "        ";
      ImpTypeTkeyAttrText_AS = ' ';
      ImpTypeTkeyAttrText = "    ";
      ImpTypeTsearchAttrText_AS = ' ';
      ImpTypeTsearchAttrText = "                    ";
      ImpTypeTotherAttrText_AS = ' ';
      ImpTypeTotherAttrText = "  ";
      ImpTypeTotherAttrDate_AS = ' ';
      ImpTypeTotherAttrDate = 00000000;
      ImpTypeTotherAttrTime_AS = ' ';
      ImpTypeTotherAttrTime = 00000000;
      ImpTypeTotherAttrAmount_AS = ' ';
      ImpTypeTotherAttrAmount = DecimalAttr.GetDefaultValue();
      ImpGroup_MA = 0;
      for(int a = 0; a < 48; a++)
      {
        ImpGroup_AC[ a] = ' ';
        ImpGTypeTinstanceId_AS[ a] = ' ';
        ImpGTypeTinstanceId[ a] = "00000000000000000000";
        ImpGTypeTsearchAttrText_AS[ a] = ' ';
        ImpGTypeTsearchAttrText[ a] = "                    ";
        ImpGTypeTotherAttrDate_AS[ a] = ' ';
        ImpGTypeTotherAttrDate[ a] = 00000000;
        ImpGTypeTotherAttrTime_AS[ a] = ' ';
        ImpGTypeTotherAttrTime[ a] = 00000000;
        ImpGTypeTotherAttrAmount_AS[ a] = ' ';
        ImpGTypeTotherAttrAmount[ a] = DecimalAttr.GetDefaultValue();
        ImpGTypeTreferenceId_AS[ a] = ' ';
        ImpGTypeTreferenceId[ a] = "00000000000000000000";
        ImpGTypeTcreateUserId_AS[ a] = ' ';
        ImpGTypeTcreateUserId[ a] = "        ";
        ImpGTypeTupdateUserId_AS[ a] = ' ';
        ImpGTypeTupdateUserId[ a] = "        ";
        ImpGTypeTkeyAttrText_AS[ a] = ' ';
        ImpGTypeTkeyAttrText[ a] = "    ";
        ImpGTypeTotherAttrText_AS[ a] = ' ';
        ImpGTypeTotherAttrText[ a] = "  ";
      }
      ImpCanamXmlXmlReturnCode_AS = ' ';
      ImpCanamXmlXmlReturnCode = "  ";
      ImpCanamXmlXmlMessage_AS = ' ';
      ImpCanamXmlXmlMessage = "                                                                                ";
      ImpCanamXmlXmlPosition_AS = ' ';
      ImpCanamXmlXmlPosition = 0.0;
      ImpCanamXmlXmlSource_AS = ' ';
      ImpCanamXmlXmlSource = 
        "                                                                                                                        ";
      ImpCanamXmlXmlBuffer_AS = ' ';
      ImpCanamXmlXmlBuffer = "";
    }
    /// <summary>
    /// Gets the VDF array for the instance, initialized.
    /// </summary>
    
    public static VDF GetViewDefinition()
    {
      if ( localVdf == null )
      {
        VDFEntry [] vdfEntries = {
          new VDFEntry( (int)1,
          	"",
          	"ImpCommandIyy1Component",
          	"Iyy1Component",
          	"SendCommand",
          	VDFDataType.String,
          	(short)1,
          	(short)0,
          	8,
          	(short)0,
          	null ), 
          new VDFEntry( (int)2,
          	"",
          	"ImpDialectIyy1Component",
          	"Iyy1Component",
          	"DialectCd",
          	VDFDataType.String,
          	(short)1,
          	(short)0,
          	2,
          	(short)0,
          	null ), 
          new VDFEntry( (int)3,
          	"",
          	"ImpIsc1AuthorizationInfo",
          	"Isc1AuthorizationInfo",
          	"Userid",
          	VDFDataType.String,
          	(short)1,
          	(short)0,
          	20,
          	(short)0,
          	null ), 
          new VDFEntry( (int)4,
          	"",
          	"ImpIsc1AuthorizationInfo",
          	"Isc1AuthorizationInfo",
          	"TokenId",
          	VDFDataType.String,
          	(short)1,
          	(short)0,
          	32,
          	(short)0,
          	null ), 
          new VDFEntry( (int)5,
          	"",
          	"ImpIsc1AuthorizationInfo",
          	"Isc1AuthorizationInfo",
          	"ModuleId",
          	VDFDataType.String,
          	(short)1,
          	(short)0,
          	20,
          	(short)0,
          	null ), 
          new VDFEntry( (int)6,
          	"",
          	"ImpIsc1AuthorizationInfo",
          	"Isc1AuthorizationInfo",
          	"AuthorityObjectId",
          	VDFDataType.String,
          	(short)1,
          	(short)0,
          	20,
          	(short)0,
          	null ), 
          new VDFEntry( (int)7,
          	"",
          	"ImpIsc1AuthorizationInfo",
          	"Isc1AuthorizationInfo",
          	"Version",
          	VDFDataType.String,
          	(short)1,
          	(short)0,
          	4,
          	(short)0,
          	null ), 
          new VDFEntry( (int)8,
          	"",
          	"ImpIsc1AuthorizationInfo",
          	"Isc1AuthorizationInfo",
          	"WorkingUnitNum",
          	VDFDataType.Int,
          	(short)1,
          	(short)0,
          	8,
          	(short)0,
          	null ), 
          new VDFEntry( (int)9,
          	"",
          	"ImpType",
          	"Type",
          	"TinstanceId",
          	VDFDataType.Timestamp,
          	(short)1,
          	(short)0,
          	20,
          	(short)0,
          	null ), 
          new VDFEntry( (int)10,
          	"",
          	"ImpType",
          	"Type",
          	"TreferenceId",
          	VDFDataType.Timestamp,
          	(short)1,
          	(short)0,
          	20,
          	(short)0,
          	null ), 
          new VDFEntry( (int)11,
          	"",
          	"ImpType",
          	"Type",
          	"TcreateUserId",
          	VDFDataType.String,
          	(short)1,
          	(short)0,
          	8,
          	(short)0,
          	null ), 
          new VDFEntry( (int)12,
          	"",
          	"ImpType",
          	"Type",
          	"TupdateUserId",
          	VDFDataType.String,
          	(short)1,
          	(short)0,
          	8,
          	(short)0,
          	null ), 
          new VDFEntry( (int)13,
          	"",
          	"ImpType",
          	"Type",
          	"TkeyAttrText",
          	VDFDataType.String,
          	(short)1,
          	(short)0,
          	4,
          	(short)0,
          	null ), 
          new VDFEntry( (int)14,
          	"",
          	"ImpType",
          	"Type",
          	"TsearchAttrText",
          	VDFDataType.String,
          	(short)1,
          	(short)0,
          	20,
          	(short)0,
          	null ), 
          new VDFEntry( (int)15,
          	"",
          	"ImpType",
          	"Type",
          	"TotherAttrText",
          	VDFDataType.String,
          	(short)1,
          	(short)0,
          	2,
          	(short)0,
          	null ), 
          new VDFEntry( (int)16,
          	"",
          	"ImpType",
          	"Type",
          	"TotherAttrDate",
          	VDFDataType.Date,
          	(short)1,
          	(short)0,
          	8,
          	(short)0,
          	null ), 
          new VDFEntry( (int)17,
          	"",
          	"ImpType",
          	"Type",
          	"TotherAttrTime",
          	VDFDataType.Time,
          	(short)1,
          	(short)0,
          	6,
          	(short)0,
          	null ), 
          new VDFEntry( (int)18,
          	"",
          	"ImpType",
          	"Type",
          	"TotherAttrAmount",
          	VDFDataType.Fixed,
          	(short)1,
          	(short)0,
          	17,
          	(short)2,
          	null ), 
          new VDFEntry( (int)19,
          	"ImpGroup",
          	"",
          	"",
          	"MA",
          	VDFDataType.Int,
          	(short)1,
          	(short)0,
          	4,
          	(short)0,
          	null ), 
          new VDFEntry( (int)20,
          	"ImpGroup",
          	"",
          	"",
          	"AC",
          	VDFDataType.Char,
          	(short)48,
          	(short)0,
          	1,
          	(short)0,
          	null ), 
          new VDFEntry( (int)21,
          	"ImpGroup",
          	"ImpGType",
          	"Type",
          	"TinstanceId",
          	VDFDataType.Timestamp,
          	(short)48,
          	(short)0,
          	20,
          	(short)0,
          	null ), 
          new VDFEntry( (int)22,
          	"ImpGroup",
          	"ImpGType",
          	"Type",
          	"TsearchAttrText",
          	VDFDataType.String,
          	(short)48,
          	(short)0,
          	20,
          	(short)0,
          	null ), 
          new VDFEntry( (int)23,
          	"ImpGroup",
          	"ImpGType",
          	"Type",
          	"TotherAttrDate",
          	VDFDataType.Date,
          	(short)48,
          	(short)0,
          	8,
          	(short)0,
          	null ), 
          new VDFEntry( (int)24,
          	"ImpGroup",
          	"ImpGType",
          	"Type",
          	"TotherAttrTime",
          	VDFDataType.Time,
          	(short)48,
          	(short)0,
          	6,
          	(short)0,
          	null ), 
          new VDFEntry( (int)25,
          	"ImpGroup",
          	"ImpGType",
          	"Type",
          	"TotherAttrAmount",
          	VDFDataType.Fixed,
          	(short)48,
          	(short)0,
          	17,
          	(short)2,
          	null ), 
          new VDFEntry( (int)26,
          	"ImpGroup",
          	"ImpGType",
          	"Type",
          	"TreferenceId",
          	VDFDataType.Timestamp,
          	(short)48,
          	(short)0,
          	20,
          	(short)0,
          	null ), 
          new VDFEntry( (int)27,
          	"ImpGroup",
          	"ImpGType",
          	"Type",
          	"TcreateUserId",
          	VDFDataType.String,
          	(short)48,
          	(short)0,
          	8,
          	(short)0,
          	null ), 
          new VDFEntry( (int)28,
          	"ImpGroup",
          	"ImpGType",
          	"Type",
          	"TupdateUserId",
          	VDFDataType.String,
          	(short)48,
          	(short)0,
          	8,
          	(short)0,
          	null ), 
          new VDFEntry( (int)29,
          	"ImpGroup",
          	"ImpGType",
          	"Type",
          	"TkeyAttrText",
          	VDFDataType.String,
          	(short)48,
          	(short)0,
          	4,
          	(short)0,
          	null ), 
          new VDFEntry( (int)30,
          	"ImpGroup",
          	"ImpGType",
          	"Type",
          	"TotherAttrText",
          	VDFDataType.String,
          	(short)48,
          	(short)0,
          	2,
          	(short)0,
          	null ), 
          new VDFEntry( (int)31,
          	"",
          	"ImpCanamXml",
          	"CanamXml",
          	"XmlReturnCode",
          	VDFDataType.String,
          	(short)1,
          	(short)0,
          	2,
          	(short)0,
          	null ), 
          new VDFEntry( (int)32,
          	"",
          	"ImpCanamXml",
          	"CanamXml",
          	"XmlMessage",
          	VDFDataType.String,
          	(short)1,
          	(short)0,
          	80,
          	(short)0,
          	null ), 
          new VDFEntry( (int)33,
          	"",
          	"ImpCanamXml",
          	"CanamXml",
          	"XmlPosition",
          	VDFDataType.Double,
          	(short)1,
          	(short)0,
          	15,
          	(short)0,
          	null ), 
          new VDFEntry( (int)34,
          	"",
          	"ImpCanamXml",
          	"CanamXml",
          	"XmlSource",
          	VDFDataType.String,
          	(short)1,
          	(short)0,
          	120,
          	(short)0,
          	null ), 
          new VDFEntry( (int)35,
          	"",
          	"ImpCanamXml",
          	"CanamXml",
          	"XmlBuffer",
          	VDFDataType.String,
          	(short)1,
          	(short)0,
          	4094,
          	(short)0,
          	null ), 
        };
        localVdf = new VDF(vdfEntries);
      }
      try {
        VDF result = (VDF)localVdf.Clone();
        result.InitViewData();
        return result;
      } catch( Exception e ) {
        throw new GenException(e.GetType().Name + " caught, Clone is not supported in VDF");;
        
      }
    }
    
    /// <summary>
    /// Gets the VDF version of the current state of the instance.
    /// </summary>
    public VDF GetVDF(  )
    {
      VDF vdf = GetViewDefinition(  );
      // predicate view item
      vdf.Entries[0].DataValue.Data = _ImpCommandIyy1ComponentSendCommand;
      // predicate view item
      vdf.Entries[1].DataValue.Data = _ImpDialectIyy1ComponentDialectCd;
      // predicate view item
      vdf.Entries[2].DataValue.Data = _ImpIsc1AuthorizationInfoUserid;
      // predicate view item
      vdf.Entries[3].DataValue.Data = _ImpIsc1AuthorizationInfoTokenId;
      // predicate view item
      vdf.Entries[4].DataValue.Data = _ImpIsc1AuthorizationInfoModuleId;
      // predicate view item
      vdf.Entries[5].DataValue.Data = _ImpIsc1AuthorizationInfoAuthorityObjectId;
      // predicate view item
      vdf.Entries[6].DataValue.Data = _ImpIsc1AuthorizationInfoVersion;
      // predicate view item
      vdf.Entries[7].DataValue.Data = _ImpIsc1AuthorizationInfoWorkingUnitNum;
      // predicate view item
      vdf.Entries[8].DataValue.Data = _ImpTypeTinstanceId;
      // predicate view item
      vdf.Entries[9].DataValue.Data = _ImpTypeTreferenceId;
      // predicate view item
      vdf.Entries[10].DataValue.Data = _ImpTypeTcreateUserId;
      // predicate view item
      vdf.Entries[11].DataValue.Data = _ImpTypeTupdateUserId;
      // predicate view item
      vdf.Entries[12].DataValue.Data = _ImpTypeTkeyAttrText;
      // predicate view item
      vdf.Entries[13].DataValue.Data = _ImpTypeTsearchAttrText;
      // predicate view item
      vdf.Entries[14].DataValue.Data = _ImpTypeTotherAttrText;
      // predicate view item
      vdf.Entries[15].DataValue.Data = _ImpTypeTotherAttrDate;
      // predicate view item
      vdf.Entries[16].DataValue.Data = _ImpTypeTotherAttrTime;
      // predicate view item
      vdf.Entries[17].DataValue.Data = _ImpTypeTotherAttrAmount;
      // group view current cardinality
      vdf.Entries[18].DataValue.Data = _ImpGroup_MA;
      // group view active flags
      for(int Adim0 = 0; Adim0 < 48; Adim0++)
      {
        if ( Adim0 < _ImpGroup_MA )
        {
          ((VDFEntryObject [])vdf.Entries[19].DataValue.Data)[Adim0].Data = 'Y';
        }
        else 
        {
          ((VDFEntryObject [])vdf.Entries[19].DataValue.Data)[Adim0].Data = 'N';
        }
      }
      vdf.Entries[19].CountUsed = (short)_ImpGroup_MA;
      // current cardinality group view items
      for(int Adim0 = 0; Adim0 < 48; Adim0++)
      {
        ((VDFEntryObject [])vdf.Entries[20].DataValue.Data)[Adim0].Data = _ImpGTypeTinstanceId[Adim0];
      }
      vdf.Entries[20].CountUsed = (short)_ImpGroup_MA;
      // current cardinality group view items
      for(int Adim0 = 0; Adim0 < 48; Adim0++)
      {
        ((VDFEntryObject [])vdf.Entries[21].DataValue.Data)[Adim0].Data = _ImpGTypeTsearchAttrText[Adim0];
      }
      vdf.Entries[21].CountUsed = (short)_ImpGroup_MA;
      // current cardinality group view items
      for(int Adim0 = 0; Adim0 < 48; Adim0++)
      {
        ((VDFEntryObject [])vdf.Entries[22].DataValue.Data)[Adim0].Data = _ImpGTypeTotherAttrDate[Adim0];
      }
      vdf.Entries[22].CountUsed = (short)_ImpGroup_MA;
      // current cardinality group view items
      for(int Adim0 = 0; Adim0 < 48; Adim0++)
      {
        ((VDFEntryObject [])vdf.Entries[23].DataValue.Data)[Adim0].Data = _ImpGTypeTotherAttrTime[Adim0];
      }
      vdf.Entries[23].CountUsed = (short)_ImpGroup_MA;
      // current cardinality group view items
      for(int Adim0 = 0; Adim0 < 48; Adim0++)
      {
        ((VDFEntryObject [])vdf.Entries[24].DataValue.Data)[Adim0].Data = _ImpGTypeTotherAttrAmount[Adim0];
      }
      vdf.Entries[24].CountUsed = (short)_ImpGroup_MA;
      // current cardinality group view items
      for(int Adim0 = 0; Adim0 < 48; Adim0++)
      {
        ((VDFEntryObject [])vdf.Entries[25].DataValue.Data)[Adim0].Data = _ImpGTypeTreferenceId[Adim0];
      }
      vdf.Entries[25].CountUsed = (short)_ImpGroup_MA;
      // current cardinality group view items
      for(int Adim0 = 0; Adim0 < 48; Adim0++)
      {
        ((VDFEntryObject [])vdf.Entries[26].DataValue.Data)[Adim0].Data = _ImpGTypeTcreateUserId[Adim0];
      }
      vdf.Entries[26].CountUsed = (short)_ImpGroup_MA;
      // current cardinality group view items
      for(int Adim0 = 0; Adim0 < 48; Adim0++)
      {
        ((VDFEntryObject [])vdf.Entries[27].DataValue.Data)[Adim0].Data = _ImpGTypeTupdateUserId[Adim0];
      }
      vdf.Entries[27].CountUsed = (short)_ImpGroup_MA;
      // current cardinality group view items
      for(int Adim0 = 0; Adim0 < 48; Adim0++)
      {
        ((VDFEntryObject [])vdf.Entries[28].DataValue.Data)[Adim0].Data = _ImpGTypeTkeyAttrText[Adim0];
      }
      vdf.Entries[28].CountUsed = (short)_ImpGroup_MA;
      // current cardinality group view items
      for(int Adim0 = 0; Adim0 < 48; Adim0++)
      {
        ((VDFEntryObject [])vdf.Entries[29].DataValue.Data)[Adim0].Data = _ImpGTypeTotherAttrText[Adim0];
      }
      vdf.Entries[29].CountUsed = (short)_ImpGroup_MA;
      // predicate view item
      vdf.Entries[30].DataValue.Data = _ImpCanamXmlXmlReturnCode;
      // predicate view item
      vdf.Entries[31].DataValue.Data = _ImpCanamXmlXmlMessage;
      // predicate view item
      vdf.Entries[32].DataValue.Data = _ImpCanamXmlXmlPosition;
      // predicate view item
      vdf.Entries[33].DataValue.Data = _ImpCanamXmlXmlSource;
      // predicate view item
      vdf.Entries[34].DataValue.Data = _ImpCanamXmlXmlBuffer;
      return(vdf);
    }
    
    /// <summary>
    /// Sets the current state of the instance to the VDF version.
    /// </summary>
    public void SetFromVDF( VDF vdf )
    {
      // predicate view item
      if ( vdf.Entries[0].DataValue.Data != null )
      {
        _ImpCommandIyy1ComponentSendCommand = (string)vdf.Entries[0].DataValue.Data;
      }
      else 
      {
        _ImpCommandIyy1ComponentSendCommand = FixedStringAttr.GetDefaultValue(8);
      }
      // predicate view item
      if ( vdf.Entries[1].DataValue.Data != null )
      {
        _ImpDialectIyy1ComponentDialectCd = (string)vdf.Entries[1].DataValue.Data;
      }
      else 
      {
        _ImpDialectIyy1ComponentDialectCd = FixedStringAttr.GetDefaultValue(2);
      }
      // predicate view item
      if ( vdf.Entries[2].DataValue.Data != null )
      {
        _ImpIsc1AuthorizationInfoUserid = (string)vdf.Entries[2].DataValue.Data;
      }
      else 
      {
        _ImpIsc1AuthorizationInfoUserid = FixedStringAttr.GetDefaultValue(20);
      }
      // predicate view item
      if ( vdf.Entries[3].DataValue.Data != null )
      {
        _ImpIsc1AuthorizationInfoTokenId = (string)vdf.Entries[3].DataValue.Data;
      }
      else 
      {
        _ImpIsc1AuthorizationInfoTokenId = FixedStringAttr.GetDefaultValue(32);
      }
      // predicate view item
      if ( vdf.Entries[4].DataValue.Data != null )
      {
        _ImpIsc1AuthorizationInfoModuleId = (string)vdf.Entries[4].DataValue.Data;
      }
      else 
      {
        _ImpIsc1AuthorizationInfoModuleId = FixedStringAttr.GetDefaultValue(20);
      }
      // predicate view item
      if ( vdf.Entries[5].DataValue.Data != null )
      {
        _ImpIsc1AuthorizationInfoAuthorityObjectId = (string)vdf.Entries[5].DataValue.Data;
      }
      else 
      {
        _ImpIsc1AuthorizationInfoAuthorityObjectId = FixedStringAttr.GetDefaultValue(20);
      }
      // predicate view item
      if ( vdf.Entries[6].DataValue.Data != null )
      {
        _ImpIsc1AuthorizationInfoVersion = (string)vdf.Entries[6].DataValue.Data;
      }
      else 
      {
        _ImpIsc1AuthorizationInfoVersion = FixedStringAttr.GetDefaultValue(4);
      }
      // predicate view item
      if ( vdf.Entries[7].DataValue.Data != null )
      {
        _ImpIsc1AuthorizationInfoWorkingUnitNum = (int)vdf.Entries[7].DataValue.Data;
      }
      else 
      {
        _ImpIsc1AuthorizationInfoWorkingUnitNum = IntAttr.GetDefaultValue();
      }
      // predicate view item
      if ( vdf.Entries[8].DataValue.Data != null )
      {
        _ImpTypeTinstanceId = (string)vdf.Entries[8].DataValue.Data;
      }
      else 
      {
        _ImpTypeTinstanceId = TimestampAttr.GetDefaultValue();
      }
      // predicate view item
      if ( vdf.Entries[9].DataValue.Data != null )
      {
        _ImpTypeTreferenceId = (string)vdf.Entries[9].DataValue.Data;
      }
      else 
      {
        _ImpTypeTreferenceId = TimestampAttr.GetDefaultValue();
      }
      // predicate view item
      if ( vdf.Entries[10].DataValue.Data != null )
      {
        _ImpTypeTcreateUserId = (string)vdf.Entries[10].DataValue.Data;
      }
      else 
      {
        _ImpTypeTcreateUserId = FixedStringAttr.GetDefaultValue(8);
      }
      // predicate view item
      if ( vdf.Entries[11].DataValue.Data != null )
      {
        _ImpTypeTupdateUserId = (string)vdf.Entries[11].DataValue.Data;
      }
      else 
      {
        _ImpTypeTupdateUserId = FixedStringAttr.GetDefaultValue(8);
      }
      // predicate view item
      if ( vdf.Entries[12].DataValue.Data != null )
      {
        _ImpTypeTkeyAttrText = (string)vdf.Entries[12].DataValue.Data;
      }
      else 
      {
        _ImpTypeTkeyAttrText = FixedStringAttr.GetDefaultValue(4);
      }
      // predicate view item
      if ( vdf.Entries[13].DataValue.Data != null )
      {
        _ImpTypeTsearchAttrText = (string)vdf.Entries[13].DataValue.Data;
      }
      else 
      {
        _ImpTypeTsearchAttrText = FixedStringAttr.GetDefaultValue(20);
      }
      // predicate view item
      if ( vdf.Entries[14].DataValue.Data != null )
      {
        _ImpTypeTotherAttrText = (string)vdf.Entries[14].DataValue.Data;
      }
      else 
      {
        _ImpTypeTotherAttrText = FixedStringAttr.GetDefaultValue(2);
      }
      // predicate view item
      if ( vdf.Entries[15].DataValue.Data != null )
      {
        _ImpTypeTotherAttrDate = (int)vdf.Entries[15].DataValue.Data;
      }
      else 
      {
        _ImpTypeTotherAttrDate = DateAttr.GetDefaultValue();
      }
      // predicate view item
      if ( vdf.Entries[16].DataValue.Data != null )
      {
        _ImpTypeTotherAttrTime = (int)vdf.Entries[16].DataValue.Data;
      }
      else 
      {
        _ImpTypeTotherAttrTime = TimeAttr.GetDefaultValue();
      }
      // predicate view item
      if ( vdf.Entries[17].DataValue.Data != null )
      {
        _ImpTypeTotherAttrAmount = (decimal)vdf.Entries[17].DataValue.Data;
      }
      else 
      {
        _ImpTypeTotherAttrAmount = DecimalAttr.GetDefaultValue();
      }
      // group view current cardinality
      if ( vdf.Entries[18].DataValue.Data != null )
      {
        _ImpGroup_MA = (int)vdf.Entries[18].DataValue.Data;
      }
      else 
      {
        _ImpGroup_MA = 0;
      }
      // group view active flags
      for(int Adim0 = 0; Adim0 < _ImpGroup_MA; Adim0++)
      {
        if ( ((VDFEntryObject [])vdf.Entries[19].DataValue.Data)[Adim0].Data != null )
        {
          _ImpGroup_AC[Adim0] = (char)((VDFEntryObject [])vdf.Entries[19].DataValue.Data)[Adim0].Data;
        }
        else 
        {
          _ImpGroup_AC[Adim0] = CharAttr.GetDefaultValue();
        }
      }
      // current cardinality group view items
      for(int Adim0 = 0; Adim0 < _ImpGroup_MA; Adim0++)
      {
        if ( ((VDFEntryObject [])vdf.Entries[20].DataValue.Data)[Adim0].Data != null )
        {
          _ImpGTypeTinstanceId[Adim0] = (string)((VDFEntryObject [])vdf.Entries[20].DataValue.Data)[Adim0].Data;
        }
        else 
        {
          _ImpGTypeTinstanceId[Adim0] = TimestampAttr.GetDefaultValue();
        }
      }
      // current cardinality group view items
      for(int Adim0 = 0; Adim0 < _ImpGroup_MA; Adim0++)
      {
        if ( ((VDFEntryObject [])vdf.Entries[21].DataValue.Data)[Adim0].Data != null )
        {
          _ImpGTypeTsearchAttrText[Adim0] = (string)((VDFEntryObject [])vdf.Entries[21].DataValue.Data)[Adim0].Data;
        }
        else 
        {
          _ImpGTypeTsearchAttrText[Adim0] = FixedStringAttr.GetDefaultValue(20);
        }
      }
      // current cardinality group view items
      for(int Adim0 = 0; Adim0 < _ImpGroup_MA; Adim0++)
      {
        if ( ((VDFEntryObject [])vdf.Entries[22].DataValue.Data)[Adim0].Data != null )
        {
          _ImpGTypeTotherAttrDate[Adim0] = (int)((VDFEntryObject [])vdf.Entries[22].DataValue.Data)[Adim0].Data;
        }
        else 
        {
          _ImpGTypeTotherAttrDate[Adim0] = DateAttr.GetDefaultValue();
        }
      }
      // current cardinality group view items
      for(int Adim0 = 0; Adim0 < _ImpGroup_MA; Adim0++)
      {
        if ( ((VDFEntryObject [])vdf.Entries[23].DataValue.Data)[Adim0].Data != null )
        {
          _ImpGTypeTotherAttrTime[Adim0] = (int)((VDFEntryObject [])vdf.Entries[23].DataValue.Data)[Adim0].Data;
        }
        else 
        {
          _ImpGTypeTotherAttrTime[Adim0] = TimeAttr.GetDefaultValue();
        }
      }
      // current cardinality group view items
      for(int Adim0 = 0; Adim0 < _ImpGroup_MA; Adim0++)
      {
        if ( ((VDFEntryObject [])vdf.Entries[24].DataValue.Data)[Adim0].Data != null )
        {
          _ImpGTypeTotherAttrAmount[Adim0] = (decimal)((VDFEntryObject [])vdf.Entries[24].DataValue.Data)[Adim0].Data;
        }
        else 
        {
          _ImpGTypeTotherAttrAmount[Adim0] = DecimalAttr.GetDefaultValue();
        }
      }
      // current cardinality group view items
      for(int Adim0 = 0; Adim0 < _ImpGroup_MA; Adim0++)
      {
        if ( ((VDFEntryObject [])vdf.Entries[25].DataValue.Data)[Adim0].Data != null )
        {
          _ImpGTypeTreferenceId[Adim0] = (string)((VDFEntryObject [])vdf.Entries[25].DataValue.Data)[Adim0].Data;
        }
        else 
        {
          _ImpGTypeTreferenceId[Adim0] = TimestampAttr.GetDefaultValue();
        }
      }
      // current cardinality group view items
      for(int Adim0 = 0; Adim0 < _ImpGroup_MA; Adim0++)
      {
        if ( ((VDFEntryObject [])vdf.Entries[26].DataValue.Data)[Adim0].Data != null )
        {
          _ImpGTypeTcreateUserId[Adim0] = (string)((VDFEntryObject [])vdf.Entries[26].DataValue.Data)[Adim0].Data;
        }
        else 
        {
          _ImpGTypeTcreateUserId[Adim0] = FixedStringAttr.GetDefaultValue(8);
        }
      }
      // current cardinality group view items
      for(int Adim0 = 0; Adim0 < _ImpGroup_MA; Adim0++)
      {
        if ( ((VDFEntryObject [])vdf.Entries[27].DataValue.Data)[Adim0].Data != null )
        {
          _ImpGTypeTupdateUserId[Adim0] = (string)((VDFEntryObject [])vdf.Entries[27].DataValue.Data)[Adim0].Data;
        }
        else 
        {
          _ImpGTypeTupdateUserId[Adim0] = FixedStringAttr.GetDefaultValue(8);
        }
      }
      // current cardinality group view items
      for(int Adim0 = 0; Adim0 < _ImpGroup_MA; Adim0++)
      {
        if ( ((VDFEntryObject [])vdf.Entries[28].DataValue.Data)[Adim0].Data != null )
        {
          _ImpGTypeTkeyAttrText[Adim0] = (string)((VDFEntryObject [])vdf.Entries[28].DataValue.Data)[Adim0].Data;
        }
        else 
        {
          _ImpGTypeTkeyAttrText[Adim0] = FixedStringAttr.GetDefaultValue(4);
        }
      }
      // current cardinality group view items
      for(int Adim0 = 0; Adim0 < _ImpGroup_MA; Adim0++)
      {
        if ( ((VDFEntryObject [])vdf.Entries[29].DataValue.Data)[Adim0].Data != null )
        {
          _ImpGTypeTotherAttrText[Adim0] = (string)((VDFEntryObject [])vdf.Entries[29].DataValue.Data)[Adim0].Data;
        }
        else 
        {
          _ImpGTypeTotherAttrText[Adim0] = FixedStringAttr.GetDefaultValue(2);
        }
      }
      // predicate view item
      if ( vdf.Entries[30].DataValue.Data != null )
      {
        _ImpCanamXmlXmlReturnCode = (string)vdf.Entries[30].DataValue.Data;
      }
      else 
      {
        _ImpCanamXmlXmlReturnCode = FixedStringAttr.GetDefaultValue(2);
      }
      // predicate view item
      if ( vdf.Entries[31].DataValue.Data != null )
      {
        _ImpCanamXmlXmlMessage = (string)vdf.Entries[31].DataValue.Data;
      }
      else 
      {
        _ImpCanamXmlXmlMessage = FixedStringAttr.GetDefaultValue(80);
      }
      // predicate view item
      if ( vdf.Entries[32].DataValue.Data != null )
      {
        _ImpCanamXmlXmlPosition = (double)vdf.Entries[32].DataValue.Data;
      }
      else 
      {
        _ImpCanamXmlXmlPosition = DoubleAttr.GetDefaultValue();
      }
      // predicate view item
      if ( vdf.Entries[33].DataValue.Data != null )
      {
        _ImpCanamXmlXmlSource = (string)vdf.Entries[33].DataValue.Data;
      }
      else 
      {
        _ImpCanamXmlXmlSource = FixedStringAttr.GetDefaultValue(120);
      }
      // predicate view item
      if ( vdf.Entries[34].DataValue.Data != null )
      {
        _ImpCanamXmlXmlBuffer = (string)vdf.Entries[34].DataValue.Data;
      }
      else 
      {
        _ImpCanamXmlXmlBuffer = StringAttr.GetDefaultValue();
      }
    }
    
    /// <summary>
    /// Sets the current instance based on the passed view.
    /// </summary>
    public void CopyFrom( IImportView orig )
    {
      this.CopyFrom((CYY1S411_IA) orig);
    }
    
    /// <summary>
    /// Sets the current instance based on the passed view.
    /// </summary>
    public void CopyFrom( CYY1S411_IA orig )
    {
      ImpCommandIyy1ComponentSendCommand_AS = orig.ImpCommandIyy1ComponentSendCommand_AS;
      ImpCommandIyy1ComponentSendCommand = orig.ImpCommandIyy1ComponentSendCommand;
      ImpDialectIyy1ComponentDialectCd_AS = orig.ImpDialectIyy1ComponentDialectCd_AS;
      ImpDialectIyy1ComponentDialectCd = orig.ImpDialectIyy1ComponentDialectCd;
      ImpIsc1AuthorizationInfoUserid_AS = orig.ImpIsc1AuthorizationInfoUserid_AS;
      ImpIsc1AuthorizationInfoUserid = orig.ImpIsc1AuthorizationInfoUserid;
      ImpIsc1AuthorizationInfoTokenId_AS = orig.ImpIsc1AuthorizationInfoTokenId_AS;
      ImpIsc1AuthorizationInfoTokenId = orig.ImpIsc1AuthorizationInfoTokenId;
      ImpIsc1AuthorizationInfoModuleId_AS = orig.ImpIsc1AuthorizationInfoModuleId_AS;
      ImpIsc1AuthorizationInfoModuleId = orig.ImpIsc1AuthorizationInfoModuleId;
      ImpIsc1AuthorizationInfoAuthorityObjectId_AS = orig.ImpIsc1AuthorizationInfoAuthorityObjectId_AS;
      ImpIsc1AuthorizationInfoAuthorityObjectId = orig.ImpIsc1AuthorizationInfoAuthorityObjectId;
      ImpIsc1AuthorizationInfoVersion_AS = orig.ImpIsc1AuthorizationInfoVersion_AS;
      ImpIsc1AuthorizationInfoVersion = orig.ImpIsc1AuthorizationInfoVersion;
      ImpIsc1AuthorizationInfoWorkingUnitNum_AS = orig.ImpIsc1AuthorizationInfoWorkingUnitNum_AS;
      ImpIsc1AuthorizationInfoWorkingUnitNum = orig.ImpIsc1AuthorizationInfoWorkingUnitNum;
      ImpTypeTinstanceId_AS = orig.ImpTypeTinstanceId_AS;
      ImpTypeTinstanceId = orig.ImpTypeTinstanceId;
      ImpTypeTreferenceId_AS = orig.ImpTypeTreferenceId_AS;
      ImpTypeTreferenceId = orig.ImpTypeTreferenceId;
      ImpTypeTcreateUserId_AS = orig.ImpTypeTcreateUserId_AS;
      ImpTypeTcreateUserId = orig.ImpTypeTcreateUserId;
      ImpTypeTupdateUserId_AS = orig.ImpTypeTupdateUserId_AS;
      ImpTypeTupdateUserId = orig.ImpTypeTupdateUserId;
      ImpTypeTkeyAttrText_AS = orig.ImpTypeTkeyAttrText_AS;
      ImpTypeTkeyAttrText = orig.ImpTypeTkeyAttrText;
      ImpTypeTsearchAttrText_AS = orig.ImpTypeTsearchAttrText_AS;
      ImpTypeTsearchAttrText = orig.ImpTypeTsearchAttrText;
      ImpTypeTotherAttrText_AS = orig.ImpTypeTotherAttrText_AS;
      ImpTypeTotherAttrText = orig.ImpTypeTotherAttrText;
      ImpTypeTotherAttrDate_AS = orig.ImpTypeTotherAttrDate_AS;
      ImpTypeTotherAttrDate = orig.ImpTypeTotherAttrDate;
      ImpTypeTotherAttrTime_AS = orig.ImpTypeTotherAttrTime_AS;
      ImpTypeTotherAttrTime = orig.ImpTypeTotherAttrTime;
      ImpTypeTotherAttrAmount_AS = orig.ImpTypeTotherAttrAmount_AS;
      ImpTypeTotherAttrAmount = orig.ImpTypeTotherAttrAmount;
      ImpGroup_MA = orig.ImpGroup_MA;
      for(int a = 0; a < 48; a++)
      {
        ImpGroup_AC[ a] = orig.ImpGroup_AC[ a];
        ImpGTypeTinstanceId_AS[ a] = orig.ImpGTypeTinstanceId_AS[ a];
        ImpGTypeTinstanceId[ a] = orig.ImpGTypeTinstanceId[ a];
        ImpGTypeTsearchAttrText_AS[ a] = orig.ImpGTypeTsearchAttrText_AS[ a];
        ImpGTypeTsearchAttrText[ a] = orig.ImpGTypeTsearchAttrText[ a];
        ImpGTypeTotherAttrDate_AS[ a] = orig.ImpGTypeTotherAttrDate_AS[ a];
        ImpGTypeTotherAttrDate[ a] = orig.ImpGTypeTotherAttrDate[ a];
        ImpGTypeTotherAttrTime_AS[ a] = orig.ImpGTypeTotherAttrTime_AS[ a];
        ImpGTypeTotherAttrTime[ a] = orig.ImpGTypeTotherAttrTime[ a];
        ImpGTypeTotherAttrAmount_AS[ a] = orig.ImpGTypeTotherAttrAmount_AS[ a];
        ImpGTypeTotherAttrAmount[ a] = orig.ImpGTypeTotherAttrAmount[ a];
        ImpGTypeTreferenceId_AS[ a] = orig.ImpGTypeTreferenceId_AS[ a];
        ImpGTypeTreferenceId[ a] = orig.ImpGTypeTreferenceId[ a];
        ImpGTypeTcreateUserId_AS[ a] = orig.ImpGTypeTcreateUserId_AS[ a];
        ImpGTypeTcreateUserId[ a] = orig.ImpGTypeTcreateUserId[ a];
        ImpGTypeTupdateUserId_AS[ a] = orig.ImpGTypeTupdateUserId_AS[ a];
        ImpGTypeTupdateUserId[ a] = orig.ImpGTypeTupdateUserId[ a];
        ImpGTypeTkeyAttrText_AS[ a] = orig.ImpGTypeTkeyAttrText_AS[ a];
        ImpGTypeTkeyAttrText[ a] = orig.ImpGTypeTkeyAttrText[ a];
        ImpGTypeTotherAttrText_AS[ a] = orig.ImpGTypeTotherAttrText_AS[ a];
        ImpGTypeTotherAttrText[ a] = orig.ImpGTypeTotherAttrText[ a];
      }
      ImpCanamXmlXmlReturnCode_AS = orig.ImpCanamXmlXmlReturnCode_AS;
      ImpCanamXmlXmlReturnCode = orig.ImpCanamXmlXmlReturnCode;
      ImpCanamXmlXmlMessage_AS = orig.ImpCanamXmlXmlMessage_AS;
      ImpCanamXmlXmlMessage = orig.ImpCanamXmlXmlMessage;
      ImpCanamXmlXmlPosition_AS = orig.ImpCanamXmlXmlPosition_AS;
      ImpCanamXmlXmlPosition = orig.ImpCanamXmlXmlPosition;
      ImpCanamXmlXmlSource_AS = orig.ImpCanamXmlXmlSource_AS;
      ImpCanamXmlXmlSource = orig.ImpCanamXmlXmlSource;
      ImpCanamXmlXmlBuffer_AS = orig.ImpCanamXmlXmlBuffer_AS;
      ImpCanamXmlXmlBuffer = orig.ImpCanamXmlXmlBuffer;
    }
  }
}
