// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2024 CA Technologies. All rights reserved.
//
//    Name: CYYY0121_IA                      Date: 2024/01/09
//    User: AliAl                            Time: 13:40:49
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// using Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
using System;
using com.ca.gen.vwrt;
using com.ca.gen.vwrt.types;
using com.ca.gen.vwrt.vdf;
using com.ca.gen.csu.exception;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF IMPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
namespace GEN.ORT.YYY
{
  /// <summary>
  /// Internal data view storage for: CYYY0121_IA
  /// </summary>
  [Serializable]
  public class CYYY0121_IA : ViewBase, IImportView
  {
    private static CYYY0121_IA[] freeArray = new CYYY0121_IA[30];
    private static int countFree = 0;
    
    // Entity View: IMP
    //        Type: PARENT
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpParentPinstanceId
    /// </summary>
    private char _ImpParentPinstanceId_AS;
    /// <summary>
    /// Attribute missing flag for: ImpParentPinstanceId
    /// </summary>
    public char ImpParentPinstanceId_AS {
      get {
        return(_ImpParentPinstanceId_AS);
      }
      set {
        _ImpParentPinstanceId_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpParentPinstanceId
    /// Domain: Timestamp
    /// Length: 20
    /// </summary>
    private string _ImpParentPinstanceId;
    /// <summary>
    /// Attribute for: ImpParentPinstanceId
    /// </summary>
    public string ImpParentPinstanceId {
      get {
        return(_ImpParentPinstanceId);
      }
      set {
        _ImpParentPinstanceId = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpParentPkeyAttrText
    /// </summary>
    private char _ImpParentPkeyAttrText_AS;
    /// <summary>
    /// Attribute missing flag for: ImpParentPkeyAttrText
    /// </summary>
    public char ImpParentPkeyAttrText_AS {
      get {
        return(_ImpParentPkeyAttrText_AS);
      }
      set {
        _ImpParentPkeyAttrText_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpParentPkeyAttrText
    /// Domain: Text
    /// Length: 5
    /// Varying Length: N
    /// </summary>
    private string _ImpParentPkeyAttrText;
    /// <summary>
    /// Attribute for: ImpParentPkeyAttrText
    /// </summary>
    public string ImpParentPkeyAttrText {
      get {
        return(_ImpParentPkeyAttrText);
      }
      set {
        _ImpParentPkeyAttrText = value;
      }
    }
    /// <summary>
    /// Default Constructor
    /// </summary>
    
    public CYYY0121_IA(  )
    {
      Reset(  );
    }
    /// <summary>
    /// Copy Constructor
    /// </summary>
    
    public CYYY0121_IA( CYYY0121_IA orig )
    {
      ImpParentPinstanceId_AS = orig.ImpParentPinstanceId_AS;
      ImpParentPinstanceId = orig.ImpParentPinstanceId;
      ImpParentPkeyAttrText_AS = orig.ImpParentPkeyAttrText_AS;
      ImpParentPkeyAttrText = orig.ImpParentPkeyAttrText;
    }
    /// <summary>
    /// Static instance creator function
    /// </summary>
    
    public static CYYY0121_IA GetInstance(  )
    {
      if ( countFree == 0 )
      {
        return(new CYYY0121_IA());
      }
      else 
      {
        lock (freeArray)
        {
          if ( countFree == 0 )
          {
            return(new CYYY0121_IA());
          }
          else 
          {
            CYYY0121_IA result = freeArray[--countFree];
            freeArray[countFree] = null;
            result.Reset(  );
            return(result);
          }
        }
      }
    }
    /// <summary>
    /// Static free instance method
    /// </summary>
    
    public void FreeInstance(  )
    {
      lock (freeArray)
      {
        if ( countFree < freeArray.Length )
        {
          freeArray[countFree++] = this;
        }
      }
    }
    /// <summary>
    /// clone constructor
    /// </summary>
    
    public override Object Clone(  )
    {
      return(new CYYY0121_IA(this));
    }
    /// <summary>
    /// Resets all properties to the defaults.
    /// </summary>
    
    public void Reset(  )
    {
      ImpParentPinstanceId_AS = ' ';
      ImpParentPinstanceId = "00000000000000000000";
      ImpParentPkeyAttrText_AS = ' ';
      ImpParentPkeyAttrText = "     ";
    }
    /// <summary>
    /// Gets the VDF version of the current state of the instance.
    /// </summary>
    public VDF GetVDF(  )
    {
      throw new Exception("can only execute GetVDF for a Procedure Step.");
    }
    
    /// <summary>
    /// Sets the current state of the instance to the VDF version.
    /// </summary>
    public void SetFromVDF( VDF vdf )
    {
      throw new Exception("can only execute SetFromVDF for a Procedure Step.");
    }
    
    /// <summary>
    /// Sets the current instance based on the passed view.
    /// </summary>
    public void CopyFrom( IImportView orig )
    {
      this.CopyFrom((CYYY0121_IA) orig);
    }
    
    /// <summary>
    /// Sets the current instance based on the passed view.
    /// </summary>
    public void CopyFrom( CYYY0121_IA orig )
    {
      ImpParentPinstanceId_AS = orig.ImpParentPinstanceId_AS;
      ImpParentPinstanceId = orig.ImpParentPinstanceId;
      ImpParentPkeyAttrText_AS = orig.ImpParentPkeyAttrText_AS;
      ImpParentPkeyAttrText = orig.ImpParentPkeyAttrText;
    }
  }
}
