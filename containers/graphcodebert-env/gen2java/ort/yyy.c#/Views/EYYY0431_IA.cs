// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2024 CA Technologies. All rights reserved.
//
//    Name: EYYY0431_IA                      Date: 2024/01/09
//    User: AliAl                            Time: 13:41:28
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// using Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
using System;
using com.ca.gen.vwrt;
using com.ca.gen.vwrt.types;
using com.ca.gen.vwrt.vdf;
using com.ca.gen.csu.exception;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF IMPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
namespace GEN.ORT.YYY
{
  /// <summary>
  /// Internal data view storage for: EYYY0431_IA
  /// </summary>
  [Serializable]
  public class EYYY0431_IA : ViewBase, IImportView
  {
    private static EYYY0431_IA[] freeArray = new EYYY0431_IA[30];
    private static int countFree = 0;
    
    // Repeating GV:  IMP_GROUP
    //     Repeats: 48 times
    /// <summary>
    /// Internal storage, repeating group view count
    /// </summary>
    private int _ImpGroup_MA;
    /// <summary>
    /// Repeating group view count
    /// </summary>
    public int ImpGroup_MA {
      get {
        return(_ImpGroup_MA);
      }
      set {
        _ImpGroup_MA = value;
      }
    }
    /// <summary>
    /// Internal storage, repeating group view occurrance array
    /// </summary>
    private char[] _ImpGroup_AC = new char[48];
    /// <summary>
    /// Repeating group view occurrance array
    /// </summary>
    public char[] ImpGroup_AC {
      get {
        return(_ImpGroup_AC);
      }
      set {
        _ImpGroup_AC = value;
      }
    }
    // Entity View: IMP_G
    //        Type: TYPE
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpGTypeTinstanceId
    /// </summary>
    private char[] _ImpGTypeTinstanceId_AS = new char[48];
    /// <summary>
    /// Attribute missing flag for: ImpGTypeTinstanceId
    /// </summary>
    public char[] ImpGTypeTinstanceId_AS {
      get {
        return(_ImpGTypeTinstanceId_AS);
      }
      set {
        _ImpGTypeTinstanceId_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpGTypeTinstanceId
    /// Domain: Timestamp
    /// Length: 20
    /// </summary>
    private string[] _ImpGTypeTinstanceId = new string[48];
    /// <summary>
    /// Attribute for: ImpGTypeTinstanceId
    /// </summary>
    public string[] ImpGTypeTinstanceId {
      get {
        return(_ImpGTypeTinstanceId);
      }
      set {
        _ImpGTypeTinstanceId = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpGTypeTreferenceId
    /// </summary>
    private char[] _ImpGTypeTreferenceId_AS = new char[48];
    /// <summary>
    /// Attribute missing flag for: ImpGTypeTreferenceId
    /// </summary>
    public char[] ImpGTypeTreferenceId_AS {
      get {
        return(_ImpGTypeTreferenceId_AS);
      }
      set {
        _ImpGTypeTreferenceId_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpGTypeTreferenceId
    /// Domain: Timestamp
    /// Length: 20
    /// </summary>
    private string[] _ImpGTypeTreferenceId = new string[48];
    /// <summary>
    /// Attribute for: ImpGTypeTreferenceId
    /// </summary>
    public string[] ImpGTypeTreferenceId {
      get {
        return(_ImpGTypeTreferenceId);
      }
      set {
        _ImpGTypeTreferenceId = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpGTypeTcreateUserId
    /// </summary>
    private char[] _ImpGTypeTcreateUserId_AS = new char[48];
    /// <summary>
    /// Attribute missing flag for: ImpGTypeTcreateUserId
    /// </summary>
    public char[] ImpGTypeTcreateUserId_AS {
      get {
        return(_ImpGTypeTcreateUserId_AS);
      }
      set {
        _ImpGTypeTcreateUserId_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpGTypeTcreateUserId
    /// Domain: Text
    /// Length: 8
    /// Varying Length: N
    /// </summary>
    private string[] _ImpGTypeTcreateUserId = new string[48];
    /// <summary>
    /// Attribute for: ImpGTypeTcreateUserId
    /// </summary>
    public string[] ImpGTypeTcreateUserId {
      get {
        return(_ImpGTypeTcreateUserId);
      }
      set {
        _ImpGTypeTcreateUserId = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpGTypeTupdateUserId
    /// </summary>
    private char[] _ImpGTypeTupdateUserId_AS = new char[48];
    /// <summary>
    /// Attribute missing flag for: ImpGTypeTupdateUserId
    /// </summary>
    public char[] ImpGTypeTupdateUserId_AS {
      get {
        return(_ImpGTypeTupdateUserId_AS);
      }
      set {
        _ImpGTypeTupdateUserId_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpGTypeTupdateUserId
    /// Domain: Text
    /// Length: 8
    /// Varying Length: N
    /// </summary>
    private string[] _ImpGTypeTupdateUserId = new string[48];
    /// <summary>
    /// Attribute for: ImpGTypeTupdateUserId
    /// </summary>
    public string[] ImpGTypeTupdateUserId {
      get {
        return(_ImpGTypeTupdateUserId);
      }
      set {
        _ImpGTypeTupdateUserId = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpGTypeTkeyAttrText
    /// </summary>
    private char[] _ImpGTypeTkeyAttrText_AS = new char[48];
    /// <summary>
    /// Attribute missing flag for: ImpGTypeTkeyAttrText
    /// </summary>
    public char[] ImpGTypeTkeyAttrText_AS {
      get {
        return(_ImpGTypeTkeyAttrText_AS);
      }
      set {
        _ImpGTypeTkeyAttrText_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpGTypeTkeyAttrText
    /// Domain: Text
    /// Length: 4
    /// Varying Length: N
    /// </summary>
    private string[] _ImpGTypeTkeyAttrText = new string[48];
    /// <summary>
    /// Attribute for: ImpGTypeTkeyAttrText
    /// </summary>
    public string[] ImpGTypeTkeyAttrText {
      get {
        return(_ImpGTypeTkeyAttrText);
      }
      set {
        _ImpGTypeTkeyAttrText = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpGTypeTsearchAttrText
    /// </summary>
    private char[] _ImpGTypeTsearchAttrText_AS = new char[48];
    /// <summary>
    /// Attribute missing flag for: ImpGTypeTsearchAttrText
    /// </summary>
    public char[] ImpGTypeTsearchAttrText_AS {
      get {
        return(_ImpGTypeTsearchAttrText_AS);
      }
      set {
        _ImpGTypeTsearchAttrText_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpGTypeTsearchAttrText
    /// Domain: Text
    /// Length: 20
    /// Varying Length: N
    /// </summary>
    private string[] _ImpGTypeTsearchAttrText = new string[48];
    /// <summary>
    /// Attribute for: ImpGTypeTsearchAttrText
    /// </summary>
    public string[] ImpGTypeTsearchAttrText {
      get {
        return(_ImpGTypeTsearchAttrText);
      }
      set {
        _ImpGTypeTsearchAttrText = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpGTypeTotherAttrText
    /// </summary>
    private char[] _ImpGTypeTotherAttrText_AS = new char[48];
    /// <summary>
    /// Attribute missing flag for: ImpGTypeTotherAttrText
    /// </summary>
    public char[] ImpGTypeTotherAttrText_AS {
      get {
        return(_ImpGTypeTotherAttrText_AS);
      }
      set {
        _ImpGTypeTotherAttrText_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpGTypeTotherAttrText
    /// Domain: Text
    /// Length: 2
    /// Varying Length: N
    /// </summary>
    private string[] _ImpGTypeTotherAttrText = new string[48];
    /// <summary>
    /// Attribute for: ImpGTypeTotherAttrText
    /// </summary>
    public string[] ImpGTypeTotherAttrText {
      get {
        return(_ImpGTypeTotherAttrText);
      }
      set {
        _ImpGTypeTotherAttrText = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpGTypeTotherAttrDate
    /// </summary>
    private char[] _ImpGTypeTotherAttrDate_AS = new char[48];
    /// <summary>
    /// Attribute missing flag for: ImpGTypeTotherAttrDate
    /// </summary>
    public char[] ImpGTypeTotherAttrDate_AS {
      get {
        return(_ImpGTypeTotherAttrDate_AS);
      }
      set {
        _ImpGTypeTotherAttrDate_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpGTypeTotherAttrDate
    /// Domain: Date
    /// Length: 8
    /// </summary>
    private int[] _ImpGTypeTotherAttrDate = new int[48];
    /// <summary>
    /// Attribute for: ImpGTypeTotherAttrDate
    /// </summary>
    public int[] ImpGTypeTotherAttrDate {
      get {
        return(_ImpGTypeTotherAttrDate);
      }
      set {
        _ImpGTypeTotherAttrDate = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpGTypeTotherAttrTime
    /// </summary>
    private char[] _ImpGTypeTotherAttrTime_AS = new char[48];
    /// <summary>
    /// Attribute missing flag for: ImpGTypeTotherAttrTime
    /// </summary>
    public char[] ImpGTypeTotherAttrTime_AS {
      get {
        return(_ImpGTypeTotherAttrTime_AS);
      }
      set {
        _ImpGTypeTotherAttrTime_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpGTypeTotherAttrTime
    /// Domain: Time
    /// Length: 6
    /// </summary>
    private int[] _ImpGTypeTotherAttrTime = new int[48];
    /// <summary>
    /// Attribute for: ImpGTypeTotherAttrTime
    /// </summary>
    public int[] ImpGTypeTotherAttrTime {
      get {
        return(_ImpGTypeTotherAttrTime);
      }
      set {
        _ImpGTypeTotherAttrTime = value;
      }
    }
    /// <summary>
    /// Internal storage for attribute missing flag for: ImpGTypeTotherAttrAmount
    /// </summary>
    private char[] _ImpGTypeTotherAttrAmount_AS = new char[48];
    /// <summary>
    /// Attribute missing flag for: ImpGTypeTotherAttrAmount
    /// </summary>
    public char[] ImpGTypeTotherAttrAmount_AS {
      get {
        return(_ImpGTypeTotherAttrAmount_AS);
      }
      set {
        _ImpGTypeTotherAttrAmount_AS = value;
      }
    }
    /// <summary>
    /// Internal storage, attribute for: ImpGTypeTotherAttrAmount
    /// Domain: Number
    /// Length: 17
    /// Decimal Places: 2
    /// Decimal Precision: Y
    /// </summary>
    private decimal[] _ImpGTypeTotherAttrAmount = new decimal[48];
    /// <summary>
    /// Attribute for: ImpGTypeTotherAttrAmount
    /// </summary>
    public decimal[] ImpGTypeTotherAttrAmount {
      get {
        return(_ImpGTypeTotherAttrAmount);
      }
      set {
        _ImpGTypeTotherAttrAmount = value;
      }
    }
    /// <summary>
    /// Default Constructor
    /// </summary>
    
    public EYYY0431_IA(  )
    {
      Reset(  );
    }
    /// <summary>
    /// Copy Constructor
    /// </summary>
    
    public EYYY0431_IA( EYYY0431_IA orig )
    {
      ImpGroup_MA = orig.ImpGroup_MA;
      Array.Copy( orig._ImpGroup_AC,
      	ImpGroup_AC,
      	ImpGroup_AC.Length );
      Array.Copy( orig._ImpGTypeTinstanceId_AS,
      	ImpGTypeTinstanceId_AS,
      	ImpGTypeTinstanceId_AS.Length );
      Array.Copy( orig._ImpGTypeTinstanceId,
      	ImpGTypeTinstanceId,
      	ImpGTypeTinstanceId.Length );
      Array.Copy( orig._ImpGTypeTreferenceId_AS,
      	ImpGTypeTreferenceId_AS,
      	ImpGTypeTreferenceId_AS.Length );
      Array.Copy( orig._ImpGTypeTreferenceId,
      	ImpGTypeTreferenceId,
      	ImpGTypeTreferenceId.Length );
      Array.Copy( orig._ImpGTypeTcreateUserId_AS,
      	ImpGTypeTcreateUserId_AS,
      	ImpGTypeTcreateUserId_AS.Length );
      Array.Copy( orig._ImpGTypeTcreateUserId,
      	ImpGTypeTcreateUserId,
      	ImpGTypeTcreateUserId.Length );
      Array.Copy( orig._ImpGTypeTupdateUserId_AS,
      	ImpGTypeTupdateUserId_AS,
      	ImpGTypeTupdateUserId_AS.Length );
      Array.Copy( orig._ImpGTypeTupdateUserId,
      	ImpGTypeTupdateUserId,
      	ImpGTypeTupdateUserId.Length );
      Array.Copy( orig._ImpGTypeTkeyAttrText_AS,
      	ImpGTypeTkeyAttrText_AS,
      	ImpGTypeTkeyAttrText_AS.Length );
      Array.Copy( orig._ImpGTypeTkeyAttrText,
      	ImpGTypeTkeyAttrText,
      	ImpGTypeTkeyAttrText.Length );
      Array.Copy( orig._ImpGTypeTsearchAttrText_AS,
      	ImpGTypeTsearchAttrText_AS,
      	ImpGTypeTsearchAttrText_AS.Length );
      Array.Copy( orig._ImpGTypeTsearchAttrText,
      	ImpGTypeTsearchAttrText,
      	ImpGTypeTsearchAttrText.Length );
      Array.Copy( orig._ImpGTypeTotherAttrText_AS,
      	ImpGTypeTotherAttrText_AS,
      	ImpGTypeTotherAttrText_AS.Length );
      Array.Copy( orig._ImpGTypeTotherAttrText,
      	ImpGTypeTotherAttrText,
      	ImpGTypeTotherAttrText.Length );
      Array.Copy( orig._ImpGTypeTotherAttrDate_AS,
      	ImpGTypeTotherAttrDate_AS,
      	ImpGTypeTotherAttrDate_AS.Length );
      Array.Copy( orig._ImpGTypeTotherAttrDate,
      	ImpGTypeTotherAttrDate,
      	ImpGTypeTotherAttrDate.Length );
      Array.Copy( orig._ImpGTypeTotherAttrTime_AS,
      	ImpGTypeTotherAttrTime_AS,
      	ImpGTypeTotherAttrTime_AS.Length );
      Array.Copy( orig._ImpGTypeTotherAttrTime,
      	ImpGTypeTotherAttrTime,
      	ImpGTypeTotherAttrTime.Length );
      Array.Copy( orig._ImpGTypeTotherAttrAmount_AS,
      	ImpGTypeTotherAttrAmount_AS,
      	ImpGTypeTotherAttrAmount_AS.Length );
      Array.Copy( orig._ImpGTypeTotherAttrAmount,
      	ImpGTypeTotherAttrAmount,
      	ImpGTypeTotherAttrAmount.Length );
    }
    /// <summary>
    /// Static instance creator function
    /// </summary>
    
    public static EYYY0431_IA GetInstance(  )
    {
      if ( countFree == 0 )
      {
        return(new EYYY0431_IA());
      }
      else 
      {
        lock (freeArray)
        {
          if ( countFree == 0 )
          {
            return(new EYYY0431_IA());
          }
          else 
          {
            EYYY0431_IA result = freeArray[--countFree];
            freeArray[countFree] = null;
            result.Reset(  );
            return(result);
          }
        }
      }
    }
    /// <summary>
    /// Static free instance method
    /// </summary>
    
    public void FreeInstance(  )
    {
      lock (freeArray)
      {
        if ( countFree < freeArray.Length )
        {
          freeArray[countFree++] = this;
        }
      }
    }
    /// <summary>
    /// clone constructor
    /// </summary>
    
    public override Object Clone(  )
    {
      return(new EYYY0431_IA(this));
    }
    /// <summary>
    /// Resets all properties to the defaults.
    /// </summary>
    
    public void Reset(  )
    {
      ImpGroup_MA = 0;
      for(int a = 0; a < 48; a++)
      {
        ImpGroup_AC[ a] = ' ';
        ImpGTypeTinstanceId_AS[ a] = ' ';
        ImpGTypeTinstanceId[ a] = "00000000000000000000";
        ImpGTypeTreferenceId_AS[ a] = ' ';
        ImpGTypeTreferenceId[ a] = "00000000000000000000";
        ImpGTypeTcreateUserId_AS[ a] = ' ';
        ImpGTypeTcreateUserId[ a] = "        ";
        ImpGTypeTupdateUserId_AS[ a] = ' ';
        ImpGTypeTupdateUserId[ a] = "        ";
        ImpGTypeTkeyAttrText_AS[ a] = ' ';
        ImpGTypeTkeyAttrText[ a] = "    ";
        ImpGTypeTsearchAttrText_AS[ a] = ' ';
        ImpGTypeTsearchAttrText[ a] = "                    ";
        ImpGTypeTotherAttrText_AS[ a] = ' ';
        ImpGTypeTotherAttrText[ a] = "  ";
        ImpGTypeTotherAttrDate_AS[ a] = ' ';
        ImpGTypeTotherAttrDate[ a] = 00000000;
        ImpGTypeTotherAttrTime_AS[ a] = ' ';
        ImpGTypeTotherAttrTime[ a] = 00000000;
        ImpGTypeTotherAttrAmount_AS[ a] = ' ';
        ImpGTypeTotherAttrAmount[ a] = DecimalAttr.GetDefaultValue();
      }
    }
    /// <summary>
    /// Gets the VDF version of the current state of the instance.
    /// </summary>
    public VDF GetVDF(  )
    {
      throw new Exception("can only execute GetVDF for a Procedure Step.");
    }
    
    /// <summary>
    /// Sets the current state of the instance to the VDF version.
    /// </summary>
    public void SetFromVDF( VDF vdf )
    {
      throw new Exception("can only execute SetFromVDF for a Procedure Step.");
    }
    
    /// <summary>
    /// Sets the current instance based on the passed view.
    /// </summary>
    public void CopyFrom( IImportView orig )
    {
      this.CopyFrom((EYYY0431_IA) orig);
    }
    
    /// <summary>
    /// Sets the current instance based on the passed view.
    /// </summary>
    public void CopyFrom( EYYY0431_IA orig )
    {
      ImpGroup_MA = orig.ImpGroup_MA;
      for(int a = 0; a < 48; a++)
      {
        ImpGroup_AC[ a] = orig.ImpGroup_AC[ a];
        ImpGTypeTinstanceId_AS[ a] = orig.ImpGTypeTinstanceId_AS[ a];
        ImpGTypeTinstanceId[ a] = orig.ImpGTypeTinstanceId[ a];
        ImpGTypeTreferenceId_AS[ a] = orig.ImpGTypeTreferenceId_AS[ a];
        ImpGTypeTreferenceId[ a] = orig.ImpGTypeTreferenceId[ a];
        ImpGTypeTcreateUserId_AS[ a] = orig.ImpGTypeTcreateUserId_AS[ a];
        ImpGTypeTcreateUserId[ a] = orig.ImpGTypeTcreateUserId[ a];
        ImpGTypeTupdateUserId_AS[ a] = orig.ImpGTypeTupdateUserId_AS[ a];
        ImpGTypeTupdateUserId[ a] = orig.ImpGTypeTupdateUserId[ a];
        ImpGTypeTkeyAttrText_AS[ a] = orig.ImpGTypeTkeyAttrText_AS[ a];
        ImpGTypeTkeyAttrText[ a] = orig.ImpGTypeTkeyAttrText[ a];
        ImpGTypeTsearchAttrText_AS[ a] = orig.ImpGTypeTsearchAttrText_AS[ a];
        ImpGTypeTsearchAttrText[ a] = orig.ImpGTypeTsearchAttrText[ a];
        ImpGTypeTotherAttrText_AS[ a] = orig.ImpGTypeTotherAttrText_AS[ a];
        ImpGTypeTotherAttrText[ a] = orig.ImpGTypeTotherAttrText[ a];
        ImpGTypeTotherAttrDate_AS[ a] = orig.ImpGTypeTotherAttrDate_AS[ a];
        ImpGTypeTotherAttrDate[ a] = orig.ImpGTypeTotherAttrDate[ a];
        ImpGTypeTotherAttrTime_AS[ a] = orig.ImpGTypeTotherAttrTime_AS[ a];
        ImpGTypeTotherAttrTime[ a] = orig.ImpGTypeTotherAttrTime[ a];
        ImpGTypeTotherAttrAmount_AS[ a] = orig.ImpGTypeTotherAttrAmount_AS[ a];
        ImpGTypeTotherAttrAmount[ a] = orig.ImpGTypeTotherAttrAmount[ a];
      }
    }
  }
}
