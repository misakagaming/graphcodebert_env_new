namespace GEN.ORT.YYY
{
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  //
  //                    Source Code Generated by
  //                           CA Gen 8.6
  //
  //    Copyright (c) 2024 CA Technologies. All rights reserved.
  //
  //    Name: DYYY0241_CHILD_DELETE            Date: 2024/01/09
  //    Target OS:   CLR                       Time: 13:41:07
  //    Target DBMS: ODBC/ADO.NET              User: AliAl
  //    Access Method: <NONE>         
  //
  //    Generation options:
  //    Debug trace option not selected
  //    Data modeling constraint enforcement not selected
  //    Optimized import view initialization not selected
  //    Enforce default values with DBMS not selected
  //    Init unspecified optional fields to NULL not selected
  //
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // using Statements
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  using System;
  using com.ca.gen.vwrt;
  using com.ca.gen.vwrt.types;
  using com.ca.gen.vwrt.vdf;
  using com.ca.gen.csu.exception;
  
  using com.ca.gen.abrt;
  using com.ca.gen.abrt.functions;
  using com.ca.gen.abrt.cascade;
  using com.ca.gen.abrt.manager;
  using com.ca.gen.abrt.trace;
  using com.ca.gen.exits.common;
  using com.ca.gen.odc;
  using System.Data;
  using System.Collections;
  
  public class DYYY0241 : ABBase
  {
    // * * * * * * * * * * * * * * * * * * *
    // ENTITY ACTION STATEMENT STATUS FLAGS 
    // ENTITY VIEW STATUS FLAGS AND         
    // LAST COMMAND FOR EACH ENTITY VIEW    
    // * * * * * * * * * * * * * * * * * * *
    string sl_29360192 = ErrorData.LastStatusNone;
    string dl_28311557 = ErrorData.LastStatusNone;
    string Child_es;
    string Child_001cd;
    string Child_lk;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // IMPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    DYYY0241_IA WIa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // EXPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    DYYY0241_OA WOa;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // START OF ENTITY ACTION VIEW
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    /// <summary>
    /// Internal data view storage for: DYYY0241_EA
    /// </summary>
    [Serializable]
    public class DYYY0241_EA : ViewBase, IEntityActionView
    {
      // Entity View: 
      //        Type: CHILD
      /// <summary>
      /// Internal storage for attribute missing flag for: ChildCinstanceId
      /// </summary>
      private char _ChildCinstanceId_AS;
      /// <summary>
      /// Attribute missing flag for: ChildCinstanceId
      /// </summary>
      public char ChildCinstanceId_AS {
        get {
          return(_ChildCinstanceId_AS);
        }
        set {
          _ChildCinstanceId_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: ChildCinstanceId
      /// Domain: Timestamp
      /// Length: 20
      /// </summary>
      private string _ChildCinstanceId;
      /// <summary>
      /// Attribute for: ChildCinstanceId
      /// </summary>
      public string ChildCinstanceId {
        get {
          return(_ChildCinstanceId);
        }
        set {
          _ChildCinstanceId = value;
        }
      }
      /// <summary>
      /// Internal storage for attribute missing flag for: ChildCreferenceId
      /// </summary>
      private char _ChildCreferenceId_AS;
      /// <summary>
      /// Attribute missing flag for: ChildCreferenceId
      /// </summary>
      public char ChildCreferenceId_AS {
        get {
          return(_ChildCreferenceId_AS);
        }
        set {
          _ChildCreferenceId_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: ChildCreferenceId
      /// Domain: Timestamp
      /// Length: 20
      /// </summary>
      private string _ChildCreferenceId;
      /// <summary>
      /// Attribute for: ChildCreferenceId
      /// </summary>
      public string ChildCreferenceId {
        get {
          return(_ChildCreferenceId);
        }
        set {
          _ChildCreferenceId = value;
        }
      }
      /// <summary>
      /// Internal storage for attribute missing flag for: ChildCparentPkeyAttrText
      /// </summary>
      private char _ChildCparentPkeyAttrText_AS;
      /// <summary>
      /// Attribute missing flag for: ChildCparentPkeyAttrText
      /// </summary>
      public char ChildCparentPkeyAttrText_AS {
        get {
          return(_ChildCparentPkeyAttrText_AS);
        }
        set {
          _ChildCparentPkeyAttrText_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: ChildCparentPkeyAttrText
      /// Domain: Text
      /// Length: 5
      /// Varying Length: N
      /// </summary>
      private string _ChildCparentPkeyAttrText;
      /// <summary>
      /// Attribute for: ChildCparentPkeyAttrText
      /// </summary>
      public string ChildCparentPkeyAttrText {
        get {
          return(_ChildCparentPkeyAttrText);
        }
        set {
          _ChildCparentPkeyAttrText = value;
        }
      }
      /// <summary>
      /// Internal storage for attribute missing flag for: ChildCkeyAttrNum
      /// </summary>
      private char _ChildCkeyAttrNum_AS;
      /// <summary>
      /// Attribute missing flag for: ChildCkeyAttrNum
      /// </summary>
      public char ChildCkeyAttrNum_AS {
        get {
          return(_ChildCkeyAttrNum_AS);
        }
        set {
          _ChildCkeyAttrNum_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: ChildCkeyAttrNum
      /// Domain: Number
      /// Length: 6
      /// Decimal Places: 0
      /// Decimal Precision: N
      /// </summary>
      private int _ChildCkeyAttrNum;
      /// <summary>
      /// Attribute for: ChildCkeyAttrNum
      /// </summary>
      public int ChildCkeyAttrNum {
        get {
          return(_ChildCkeyAttrNum);
        }
        set {
          _ChildCkeyAttrNum = value;
        }
      }
      /// <summary>
      /// Internal storage for attribute missing flag for: ChildCupdateUserId
      /// </summary>
      private char _ChildCupdateUserId_AS;
      /// <summary>
      /// Attribute missing flag for: ChildCupdateUserId
      /// </summary>
      public char ChildCupdateUserId_AS {
        get {
          return(_ChildCupdateUserId_AS);
        }
        set {
          _ChildCupdateUserId_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: ChildCupdateUserId
      /// Domain: Text
      /// Length: 8
      /// Varying Length: N
      /// </summary>
      private string _ChildCupdateUserId;
      /// <summary>
      /// Attribute for: ChildCupdateUserId
      /// </summary>
      public string ChildCupdateUserId {
        get {
          return(_ChildCupdateUserId);
        }
        set {
          _ChildCupdateUserId = value;
        }
      }
      /// <summary>
      /// Default Constructor
      /// </summary>
      
      public DYYY0241_EA(  )
      {
        Reset(  );
      }
      /// <summary>
      /// Copy Constructor
      /// </summary>
      
      public DYYY0241_EA( DYYY0241_EA orig )
      {
        ChildCinstanceId_AS = orig.ChildCinstanceId_AS;
        ChildCinstanceId = orig.ChildCinstanceId;
        ChildCreferenceId_AS = orig.ChildCreferenceId_AS;
        ChildCreferenceId = orig.ChildCreferenceId;
        ChildCparentPkeyAttrText_AS = orig.ChildCparentPkeyAttrText_AS;
        ChildCparentPkeyAttrText = orig.ChildCparentPkeyAttrText;
        ChildCkeyAttrNum_AS = orig.ChildCkeyAttrNum_AS;
        ChildCkeyAttrNum = orig.ChildCkeyAttrNum;
        ChildCupdateUserId_AS = orig.ChildCupdateUserId_AS;
        ChildCupdateUserId = orig.ChildCupdateUserId;
      }
      /// <summary>
      /// clone constructor
      /// </summary>
      
      public override Object Clone(  )
      {
        return(new DYYY0241_EA(this));
      }
      /// <summary>
      /// Resets all properties to the defaults.
      /// </summary>
      
      public void Reset(  )
      {
        ChildCinstanceId_AS = ' ';
        ChildCinstanceId = "00000000000000000000";
        ChildCreferenceId_AS = ' ';
        ChildCreferenceId = "00000000000000000000";
        ChildCparentPkeyAttrText_AS = ' ';
        ChildCparentPkeyAttrText = "     ";
        ChildCkeyAttrNum_AS = ' ';
        ChildCkeyAttrNum = 0;
        ChildCupdateUserId_AS = ' ';
        ChildCupdateUserId = "        ";
      }
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ENTITY ACTION VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    DYYY0241_EA WEa = new DYYY0241_EA();
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // LOCAL VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    DYYY0241_LA WLa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // CURSOR OPEN FLAGS
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    bool curs_open_0029360192 = false;
    
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // HOST VARIABLES FOR TABLE: VDVYYYC
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    int CkeyAttr_003EF;
    int CkeyAttr_002EN;
    string CupdateUserid_005EF;
    string CupdateUserid_004EN;
    DateTime CinstanceId_007EF;
    DateTime CinstanceId_006EN;
    DateTime CreferenceId_009EF;
    DateTime CreferenceId_008EN;
    string FkVdvyyyppkeyAtt_011EF;
    string FkVdvyyyppkeyAtt_010EN;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // TEMPORARY HOST VARIABLES 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    string CparentPkeyAttrText_001TP;
    int CkeyAttrNum_002TP;
    
    
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // MISC DECLARATIONS AND PROTOTYPES 
    //    FOLLOW AS NEEDED:             
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    bool func_0022020317_esc_flag;
    IAbstractCommand hstmt_0037935666_1_cmd;
    IAbstractResultSet hstmt_0037935666_1_rs;
    bool func_0020972310_esc_flag;
    bool func_0020973074_esc_flag;
    //       +->   DYYY0241_CHILD_DELETE             01/09/2024  13:41
    //       !       IMPORTS:
    //       !         Work View imp_error iyy1_component (Transient,
    //       !                     Mandatory, Import only)
    //       !           severity_code
    //       !           rollback_indicator
    //       !           origin_servid
    //       !           context_string
    //       !           return_code
    //       !           reason_code
    //       !           checksum
    //       !         Work View imp_reference iyy1_server_data (Transient,
    //       !                     Mandatory, Import only)
    //       !           userid
    //       !           reference_id
    //       !         Entity View imp child (Transient, Mandatory, Import
    //       !                     only)
    //       !           cinstance_id
    //       !           creference_id
    //       !           cparent_pkey_attr_text
    //       !           ckey_attr_num
    //       !       EXPORTS:
    //       !         Work View exp_error iyy1_component (Transient, Export
    //       !                     only)
    //       !           severity_code
    //       !           rollback_indicator
    //       !           origin_servid
    //       !           context_string
    //       !           return_code
    //       !           reason_code
    //       !           checksum
    //       !       ENTITY ACTIONS:
    //       !         Entity View child
    //       !           cinstance_id
    //       !           creference_id
    //       !           cparent_pkey_attr_text
    //       !           ckey_attr_num
    //       !           cupdate_user_id
    //       !       LOCALS:
    //       !         Work View loc dont_change_return_codes
    //       !           1_ok
    //       !           n10_obj_not_found
    //       !           n43_obj_not_deleted
    //       !         Work View loc dont_change_reason_codes
    //       !           1_default
    //       !           121_child_not_found
    //       !           132_child_concurrency_error
    //       !
    //       !     PROCEDURE STATEMENTS
    //       !
    //     1 !  NOTE: 
    //     1 !  See the description for the purpose
    //     1 !  
    //     2 !  NOTE: 
    //     2 !  RELEASE HISTORY
    //     2 !  01_00 23-02-1998 New release
    //     2 !  
    //     3 !  MOVE imp_error iyy1_component TO exp_error iyy1_component
    //     4 !   
    //     5 !  NOTE: 
    //     5 !  ****************************************************************
    //     5 !  The used ReturnCode/ReasonCode values
    //     5 !  
    //     6 !  NOTE: 
    //     6 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //     6 !  Set the return and reason codes below
    //     6 !  
    //     7 !  SET loc dont_change_return_codes 1_ok TO 1 
    //     8 !  SET loc dont_change_return_codes n10_obj_not_found TO -10 
    //     9 !  SET loc dont_change_return_codes n43_obj_not_deleted TO -43 
    //    10 !   
    //    11 !  SET loc dont_change_reason_codes 1_default TO 1 
    //    12 !  SET loc dont_change_reason_codes 121_child_not_found TO 121 
    //    13 !  SET loc dont_change_reason_codes 132_child_concurrency_error
    //    13 !              TO 132 
    //    14 !   
    //    15 !  NOTE: 
    //    15 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //    15 !  !!!!!!!!!!!!!!!!!!!!!
    //    15 !  If Instance_id is being used, reading must be operated
    //    15 !  according to this section, instead of 
    //    15 !  business_key(s).
    //    15 !  
    //    16 !  NOTE: 
    //    16 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //    16 !  !!!!!!!!!!!!!!!!!!!!!
    //    16 !  Choose Control of Cursor Generation property as "Select
    //    16 !  only". 
    //    16 !  
    //    17 !  +=>READ (Select Only) child
    //    17 !  !        WHERE DESIRED child cparent_pkey_attr_text = imp
    //    17 !  !              child cparent_pkey_attr_text  
    //    17 !  !              AND  DESIRED child ckey_attr_num = imp child
    //    17 !  !              ckey_attr_num
    //    17 !  +> WHEN successful
    //    18 !  !  +->IF child creference_id ^= imp child creference_id
    //    19 !  !  !  SET exp_error iyy1_component return_code TO loc
    //    19 !  !  !              dont_change_return_codes n43_obj_not_deleted
    //    20 !  !  !  SET exp_error iyy1_component reason_code TO loc
    //    20 !  !  !              dont_change_reason_codes
    //    20 !  !  !              132_child_concurrency_error 
    //    21 ! <------ESCAPE
    //    18 !  !  +--
    //    22 !  !  DELETE child
    //    17 !  +> WHEN not found
    //    23 !  !  SET exp_error iyy1_component return_code TO loc
    //    23 !  !              dont_change_return_codes n10_obj_not_found 
    //    24 !  !  SET exp_error iyy1_component reason_code TO loc
    //    24 !  !              dont_change_reason_codes 121_child_not_found 
    //    17 !  +--
    //       +---
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //  CONSTRUCTOR FOR THE CLASS       
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    public DYYY0241(  )
    {
      IefCGenRlse = "CA Gen 8.6";
      IsCopyright = "Copyright (c) 2024 CA Technologies. All rights reserved.";
      IefCGenDate = "2024/01/09";
      IefCGenTime = "13:41:07";
      IefCGenEncy = "9.2.A6";
      IefCGenUserId = "AliAl";
      IefCGenModel = "N8I_ORT_YYY_0112_TEMPLATE";
      IefCGenSubset = "ALL";
      IefCGenName = "DYYY0241_CHILD_DELETE";
      NestingLevel = 0;
      ValChkDeadlockTimeout = false;
      ValChkDBError = false;
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ACTION BLOCK FUNCTION DECLARATIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void Execute( Object in_runtime_parm1, 
    	IRuntimePStepContext in_runtime_parm2, 
    	GlobData in_globdata, 
    	DYYY0241_IA import_view, 
    	DYYY0241_OA export_view )
    {
      IefRuntimeParm1 = in_runtime_parm1;
      IefRuntimeParm2 = in_runtime_parm2;
      Globdata = in_globdata;
      WIa = import_view;
      WOa = export_view;
      _Execute();
    }
    
    private void _Execute()
    {
      
      f_22020317_localAlloc( "DYYY0241_CHILD_DELETE" );
      if ( Globdata.GetErrorData().GetLastStatus() == ErrorData.LastStatusIefAllocationError )
      	return;
      
      ++(NestingLevel);
      try {
        f_22020317_init(  );
        f_22020317(  );
      } catch( Exception e ) {
        if ( ((Globdata.GetErrorData().GetStatus() == ErrorData.StatusNone) && (Globdata.GetErrorData().GetErrorEncountered() == 
          ErrorData.ErrorEncounteredNoErrorFound)) && (Globdata.GetErrorData().GetViewOverflow() == 
          ErrorData.ErrorEncounteredNoErrorFound) )
        {
          Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
          Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusUnexpectedExceptionError );
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
          Globdata.GetErrorData(  ).SetErrorMessage( e );
        }
      }
      --(NestingLevel);
    }
    public void f_22020317(  )
    {
      func_0022020317_esc_flag = false;
      Globdata.GetStateData().SetCurrentABId( "0022020317" );
      Globdata.GetStateData().SetCurrentABName( "DYYY0241_CHILD_DELETE" );
      {
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        //    See the description for the purpose                             
        //                                                                    
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        //    RELEASE HISTORY                                                 
        //    01_00 23-02-1998 New release                                    
        //                                                                    
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        Globdata.GetStateData().SetLastStatementNumber( "0000000003" );
        WOa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(WIa.ImpErrorIyy1ComponentSeverityCode, 1);
        WOa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.ValueOf(WIa.ImpErrorIyy1ComponentRollbackIndicator, 1);
        WOa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(WIa.ImpErrorIyy1ComponentOriginServid);
        WOa.ExpErrorIyy1ComponentContextString = StringAttr.ValueOf(WIa.ImpErrorIyy1ComponentContextString, 512);
        WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf(WIa.ImpErrorIyy1ComponentReturnCode);
        WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf(WIa.ImpErrorIyy1ComponentReasonCode);
        WOa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.ValueOf(WIa.ImpErrorIyy1ComponentChecksum, 15);
        
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        //    **************************************************************  
        //    **                                                              
        //    The used ReturnCode/ReasonCode values                           
        //                                                                    
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
        //    !!                                                              
        //    Set the return and reason codes below                           
        //                                                                    
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        Globdata.GetStateData().SetLastStatementNumber( "0000000007" );
        WLa.LocDontChangeReturnCodesQ1Ok = IntAttr.ValueOf((int)TIRD2DEC.Execute1(1, 0, TIRD2DEC.ROUND_NONE, 5));
        Globdata.GetStateData().SetLastStatementNumber( "0000000008" );
        WLa.LocDontChangeReturnCodesN10ObjNotFound = IntAttr.ValueOf((int)TIRD2DEC.Execute1(-10, 0, TIRD2DEC.ROUND_NONE, 5));
        Globdata.GetStateData().SetLastStatementNumber( "0000000009" );
        WLa.LocDontChangeReturnCodesN43ObjNotDeleted = IntAttr.ValueOf((int)TIRD2DEC.Execute1(-43, 0, TIRD2DEC.ROUND_NONE, 5));
        
        Globdata.GetStateData().SetLastStatementNumber( "0000000011" );
        WLa.LocDontChangeReasonCodesQ1Default = IntAttr.ValueOf((int)TIRD2DEC.Execute1(1, 0, TIRD2DEC.ROUND_NONE, 5));
        Globdata.GetStateData().SetLastStatementNumber( "0000000012" );
        WLa.LocDontChangeReasonCodesQ121ChildNotFound = IntAttr.ValueOf((int)TIRD2DEC.Execute1(121, 0, TIRD2DEC.ROUND_NONE, 5));
        Globdata.GetStateData().SetLastStatementNumber( "0000000013" );
        WLa.LocDontChangeReasonCodesQ132ChildConcurrencyError = IntAttr.ValueOf((int)TIRD2DEC.Execute1(132, 0, TIRD2DEC.ROUND_NONE, 
          5));
        
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
        //    !!!!!!!!!!!!!!!!!!!!!                                           
        //    If Instance_id is being used, reading must be operated          
        //    according to this section, instead of                           
        //    business_key(s).                                                
        //                                                                    
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
        //    !!!!!!!!!!!!!!!!!!!!!                                           
        //    Choose Control of Cursor Generation property as "Select         
        //    only".                                                          
        //                                                                    
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        Globdata.GetStateData().SetLastStatementNumber( "0000000017" );
        f_29360192(  );
        if ( sl_29360192 == ErrorData.LastStatusSucceeds )
        {
          Globdata.GetStateData().SetLastSubStatementNumber( "1" );
          {
            f_20972310(  );
          }
        }
        else if ( sl_29360192 == ErrorData.LastStatusNotFound )
        {
          Globdata.GetStateData().SetLastSubStatementNumber( "2" );
          {
            Globdata.GetStateData().SetLastStatementNumber( "0000000023" );
            WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
              WLa.LocDontChangeReturnCodesN10ObjNotFound, 0, TIRD2DEC.ROUND_NONE, 5));
            Globdata.GetStateData().SetLastStatementNumber( "0000000024" );
            WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
              WLa.LocDontChangeReasonCodesQ121ChildNotFound, 0, TIRD2DEC.ROUND_NONE, 5));
          }
        }
        else {
          Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
          Globdata.GetErrorData().SetLastStatus( sl_29360192 );
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
          throw new ABException();
        }
      }
      f_0022020317_esctag: 
      ;
      return;
    }
    
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // SUBORDINATE FUNCTIONS
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    
    public void f_20972310(  )
    {
      func_0020972310_esc_flag = false;
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000018" );
        if ( CompareExit.CompareTo(WEa.ChildCreferenceId, WIa.ImpChildCreferenceId) != 0 )
        {
          f_20973074(  );
        }
        
        if ( func_0020972310_esc_flag )
        {
          goto f_0020972310_esctag;
        }
        Globdata.GetStateData().SetLastStatementNumber( "0000000022" );
        ValChkDeadlockTimeout = false;
        ValChkDBError = false;
        f_28311557(  );
        if ( dl_28311557 == ErrorData.LastStatusSucceeds )
        {
        }
        else if ( dl_28311557 == ErrorData.LastStatusNotFound )
        {
          Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
          Globdata.GetDBMSData().SetActionId( 22 );
          Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusNotFound );
          throw new ABException();
        }
        else {
          Globdata.GetErrorData().SetStatus( ErrorData.LastStatusDbError );
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
          throw new ABException();
        }
      }
      f_0020972310_esctag: 
      ;
      return;
    }
    
    public void f_20973074(  )
    {
      func_0020973074_esc_flag = false;
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000019" );
        WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
          WLa.LocDontChangeReturnCodesN43ObjNotDeleted, 0, TIRD2DEC.ROUND_NONE, 5));
        Globdata.GetStateData().SetLastStatementNumber( "0000000020" );
        WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
          WLa.LocDontChangeReasonCodesQ132ChildConcurrencyError, 0, TIRD2DEC.ROUND_NONE, 5));
        Globdata.GetStateData().SetLastStatementNumber( "0000000021" );
        func_0020973074_esc_flag = true;
        func_0020972310_esc_flag = true;
      }
      f_0020973074_esctag: 
      ;
      return;
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // INITIALIZATION UTILITY FUNCTIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void f_22020317_localAlloc( String abname )
    {
      // Request localview allocation 
      WLa = (GEN.ORT.YYY.DYYY0241_LA)(IefRuntimeParm2.GetInstance( GetType().Assembly,
      	"GEN.ORT.YYY.DYYY0241_LA" ));
      if ( WLa == null )
      {
        Globdata.GetStateData().SetCurrentABId( "0022020317" );
        Globdata.GetStateData().SetCurrentABName( abname );
        Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
        Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusIefAllocationError );
      }
    }
    
    public void f_22020317_init(  )
    {
      
      CkeyAttr_003EF = 0;
      CkeyAttr_002EN = 0;
      CupdateUserid_005EF = Spaces;
      CupdateUserid_004EN = Spaces;
      CinstanceId_007EF = TIRVW2S.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	"00010101000000000000" );
      CinstanceId_006EN = TIRVW2S.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	"00010101000000000000" );
      CreferenceId_009EF = TIRVW2S.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	"00010101000000000000" );
      CreferenceId_008EN = TIRVW2S.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	"00010101000000000000" );
      FkVdvyyyppkeyAtt_011EF = Spaces;
      FkVdvyyyppkeyAtt_010EN = Spaces;
      if ( NestingLevel < 2 )
      {
        WLa.Reset();
      }
      WEa.Reset();
      WOa.ExpErrorIyy1ComponentSeverityCode = " ";
      WOa.ExpErrorIyy1ComponentRollbackIndicator = " ";
      WOa.ExpErrorIyy1ComponentOriginServid = 0.0;
      WOa.ExpErrorIyy1ComponentContextString = "";
      WOa.ExpErrorIyy1ComponentReturnCode = 0;
      WOa.ExpErrorIyy1ComponentReasonCode = 0;
      WOa.ExpErrorIyy1ComponentChecksum = "               ";
      Child_es = ABBase.EvUnusable;
      Child_lk = ABBase.EvwUnlocked;
      WEa.ChildCinstanceId = "00000000000000000000";
      WEa.ChildCreferenceId = "00000000000000000000";
    }
    public void f_22020317_procq(  )
    {
    }
    public void f_29360192(  )
    {
      sl_29360192 = ErrorData.LastStatusSucceeds;
      Child_001cd = ABBase.PvSelect;
      Child_lk = ABBase.EvwUnlocked;
      f_29360192_moveb(  );
      
      if ( sl_29360192 == ErrorData.LastStatusSucceeds )
      {
        ValChkDeadlockTimeout = false;
        ValChkDBError = false;
        Child_es = ABBase.EvUsable;
        DataException = null;
        try {
          if ( hstmt_0037935666_1_cmd == null )
          {
            SQLStatement.Length = 0;
            
            SQLStatement.Append("SELECT ");
            SQLStatement.Append("VDVYYYC01.`CINSTANCE_ID`,");
            SQLStatement.Append("VDVYYYC01.`CREFERENCE_ID`,");
            SQLStatement.Append("VDVYYYC01.`FK_VDVYYYPPKEY_ATT`,");
            SQLStatement.Append("VDVYYYC01.`CKEY_ATTR`,");
            SQLStatement.Append("VDVYYYC01.`CUPDATE_USERID`");
            SQLStatement.Append(" FROM ");
            SQLStatement.Append("`VDVYYYC` VDVYYYC01");
            SQLStatement.Append(" WHERE ");
            SQLStatement.Append("(");
            SQLStatement.Append("VDVYYYC01.`FK_VDVYYYPPKEY_ATT` = ? AND VDVYYYC01.`CKEY_ATTR` = ?");
            SQLStatement.Append(")");
            hstmt_0037935666_1_cmd = Globdata.GetDBMSData().GetDBMSManager().GetCommand(Globdata, IefRuntimeParm2, "IEFDB", 
              SQLStatement.ToString());
            hstmt_0037935666_1_cmd.InsertParameter();
            hstmt_0037935666_1_cmd.InsertParameter();
          }
          hstmt_0037935666_1_cmd.BindParameter(0, CparentPkeyAttrText_001TP);
          hstmt_0037935666_1_cmd.BindParameter(1, CkeyAttrNum_002TP);
          hstmt_0037935666_1_rs = hstmt_0037935666_1_cmd.ExecuteQuery(  );
          if ( hstmt_0037935666_1_rs.MoveNext(  ) == false )
          {
            throw new Exception("No data found");
          }
          CinstanceId_007EF = Globdata.GetDBMSData().GetDBMSManager().GetDateTime(IefRuntimeParm2, "IEFDB", 
            hstmt_0037935666_1_rs.GetValue(0));
          CreferenceId_009EF = Globdata.GetDBMSData().GetDBMSManager().GetDateTime(IefRuntimeParm2, "IEFDB", 
            hstmt_0037935666_1_rs.GetValue(1));
          FkVdvyyyppkeyAtt_011EF = Globdata.GetDBMSData().GetDBMSManager().GetString(IefRuntimeParm2, "IEFDB", 
            hstmt_0037935666_1_rs.GetValue(2));
          CkeyAttr_003EF = Globdata.GetDBMSData().GetDBMSManager().GetInt32(IefRuntimeParm2, "IEFDB", hstmt_0037935666_1_rs.GetValue(
            3));
          CupdateUserid_005EF = Globdata.GetDBMSData().GetDBMSManager().GetString(IefRuntimeParm2, "IEFDB", 
            hstmt_0037935666_1_rs.GetValue(4));
          if ( hstmt_0037935666_1_rs.MoveNext(  ) == true )
          {
            throw new Exception("READ statement with SELECT ONLY property returned more than 1 row");
          }
        } catch( Exception e ) {
          DataException = e;
        }
        if ( Globdata.GetDBMSData().GetDBMSManager().WasSuccessful(DataException) )
        {
          f_29360192_movea(  );
          if ( sl_29360192 == ErrorData.LastStatusSucceeds )
          {
            Child_es = ABBase.EvUsable;
          }
          else {
            Child_es = ABBase.EvUnusable;
          }
          try {
            if ( hstmt_0037935666_1_rs != null )
            {
              hstmt_0037935666_1_rs.Close(  );
              hstmt_0037935666_1_rs = null;
            }
            if ( hstmt_0037935666_1_cmd != null )
            {
              hstmt_0037935666_1_cmd.Close(  );
              hstmt_0037935666_1_cmd = null;
            }
          } catch( Exception e ) {
            if ( Globdata.GetDBMSData().GetDBMSManager().WasSuccessful(e) == false )
            {
              DataException = e;
              f_29360192_adonet_dberror(  );
            }
          }
        }
        else if ( Globdata.GetDBMSData().GetDBMSManager().WasNoDataFound(DataException) )
        {
          sl_29360192 = ErrorData.LastStatusNotFound;
          Child_es = ABBase.EvUnusable;
          try {
            if ( hstmt_0037935666_1_rs != null )
            {
              hstmt_0037935666_1_rs.Close(  );
              hstmt_0037935666_1_rs = null;
            }
            if ( hstmt_0037935666_1_cmd != null )
            {
              hstmt_0037935666_1_cmd.Close(  );
              hstmt_0037935666_1_cmd = null;
            }
          } catch( Exception e ) {
            if ( Globdata.GetDBMSData().GetDBMSManager().WasSuccessful(e) == false )
            {
              DataException = e;
              f_29360192_adonet_dberror(  );
            }
          }
        }
        else {
          f_29360192_adonet_dberror(  );
        }
      }
    }
    
    public void f_29360192_adonet_dberror(  )
    {
      Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
      Globdata.GetDBMSData().SetActionId( 17 );
      if ( DataException != null )
      {
        Globdata.GetErrorData(  ).SetErrorMessage( DataException );
      }
      Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusDbError );
      sl_29360192 = Globdata.GetErrorData().GetLastStatus();
      throw new ABException();
    }
    
    public void f_29360192_moveb(  )
    {
      CparentPkeyAttrText_001TP = WIa.ImpChildCparentPkeyAttrText;
      CkeyAttrNum_002TP = WIa.ImpChildCkeyAttrNum;
    }
    
    public void f_29360192_movea(  )
    {
      WEa.ChildCinstanceId = TimestampAttr.ValueOf(TIRS2VW.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	CinstanceId_007EF ));
      WEa.ChildCreferenceId = TimestampAttr.ValueOf(TIRS2VW.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	CreferenceId_009EF ));
      WEa.ChildCupdateUserId = FixedStringAttr.ValueOf(CupdateUserid_005EF, 8);
      WEa.ChildCparentPkeyAttrText = FixedStringAttr.ValueOf(FkVdvyyyppkeyAtt_011EF, 5);
      WEa.ChildCkeyAttrNum = IntAttr.ValueOf(CkeyAttr_003EF);
    }
    
    
    public void f_28311557(  )
    {
      if ( Child_es == ABBase.EvUnusable )
      {
        dl_28311557 = ABBase.EvUnusable;
        Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
        Globdata.GetDBMSData().SetActionId( 22 );
        Globdata.GetErrorData().SetLastStatus( dl_28311557 );
        throw new ABException();
      }
      else {
        dl_28311557 = ErrorData.LastStatusSucceeds;
        Child_001cd = ABBase.PvDelete;
        Globdata.GetErrorData().SetStatus( ErrorData.StatusNone );
        Child_es = ABBase.EvUnusable;
        Child_lk = ABBase.EvwUnlocked;
        Globdata.GetDBMSData().SetProcessQueue( true );
        if ( PdaQueueCMCB == null )
        {
          PdaQueueCMCB = DAQueue.GetInstance(  );
        }
        PdaQueueCMCB.Reset();
        GEN.ORT.YYY.YYZCHLD1.Execute( IefRuntimeParm1,
        	IefRuntimeParm2,
        	Globdata,
        	PdaQueueCMCB,
        	0,
        	CkeyAttr_003EF,
        	FkVdvyyyppkeyAtt_011EF );
        if ( Globdata.GetErrorData().GetStatus() == ErrorData.StatusNone )
        {
          f_22020317_procq(  );
          Globdata.GetStateData().SetCurrentABId( "0022020317" );
          Globdata.GetStateData().SetCurrentABName( "DYYY0241_CHILD_DELETE" );
        }
        if ( Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone )
        {
          dl_28311557 = ErrorData.LastStatusFatalError;
          throw new ABException();
        }
      }
    }
  }// end class
  
}

