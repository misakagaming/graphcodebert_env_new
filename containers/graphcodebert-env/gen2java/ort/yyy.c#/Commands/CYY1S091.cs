namespace GEN.ORT.YYY
{
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  //
  //                    Source Code Generated by
  //                           CA Gen 8.6
  //
  //    Copyright (c) 2024 CA Technologies. All rights reserved.
  //
  //    Name: CYY1S091_PARENT_CHILD_DBL_LIST   Date: 2024/01/09
  //    Target OS:   CLR                       Time: 13:41:20
  //    Target DBMS: ODBC/ADO.NET              User: AliAl
  //    Access Method: <NONE>         
  //
  //    Generation options:
  //    Debug trace option not selected
  //    Data modeling constraint enforcement not selected
  //    Optimized import view initialization not selected
  //    Enforce default values with DBMS not selected
  //    Init unspecified optional fields to NULL not selected
  //
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // using Statements
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  using System;
  using com.ca.gen.vwrt;
  using com.ca.gen.vwrt.types;
  using com.ca.gen.vwrt.vdf;
  using com.ca.gen.csu.exception;
  
  using com.ca.gen.abrt;
  using com.ca.gen.abrt.functions;
  using com.ca.gen.abrt.cascade;
  using com.ca.gen.abrt.manager;
  using com.ca.gen.abrt.trace;
  using com.ca.gen.exits.common;
  using com.ca.gen.odc;
  using System.Data;
  using System.Collections;
  
  public class CYY1S091 : ABBase
  {
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // IMPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    CYY1S091_IA WIa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // EXPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    CYY1S091_OA WOa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // LOCAL VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    CYY1S091_LA WLa;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ACTION BLOCK IMPORT/EXPORT VIEWS CLASS VARIABLES
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    GEN.ORT.YYY.CYYY9001_OA Cyyy9001Oa;
    GEN.ORT.YYY.CYYY9831_IA Cyyy9831Ia;
    GEN.ORT.YYY.CYYY9831_OA Cyyy9831Oa;
    GEN.ORT.YYY.CYYY9141_IA Cyyy9141Ia;
    GEN.ORT.YYY.CYYY9141_OA Cyyy9141Oa;
    GEN.ORT.YYY.ISC1Z021_IA Isc1z021Ia;
    GEN.ORT.YYY.ISC1Z021_OA Isc1z021Oa;
    GEN.ORT.YYY.CYY1A121_IA Cyy1a121Ia;
    GEN.ORT.YYY.CYY1A121_OA Cyy1a121Oa;
    GEN.ORT.YYY.CYY1A131_OA Cyy1a131Oa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // REPEATING GROUP VIEW STATUS FIELDS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    bool LocGroupContext_FL_001;
    int LocGroupContext_PS_001;
    bool LocGroupContext_RF_001;
    public const int LocGroupContext_MM_001 = 9;
    bool ImpGroupContext_FL_002;
    int ImpGroupContext_PS_002;
    bool ImpGroupContext_RF_002;
    public const int ImpGroupContext_MM_002 = 9;
    bool ImpGroupTrans_FL_003;
    int ImpGroupTrans_PS_003;
    bool ImpGroupTrans_RF_003;
    public const int ImpGroupTrans_MM_003 = 30;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // MISC DECLARATIONS AND PROTOTYPES 
    //    FOLLOW AS NEEDED:             
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    bool func_0022020104_esc_flag;
    bool func_0020973096_esc_flag;
    bool func_0020971623_esc_flag;
    //       +->   CYY1S091_PARENT_CHILD_DBL_LIST    01/09/2024  13:41
    //       !       IMPORTS:
    //       !         Work View imp_command iyy1_component (Transient,
    //       !                     Mandatory, Import only)
    //       !           send_command
    //       !         Work View imp_dialect iyy1_component (Transient,
    //       !                     Mandatory, Import only)
    //       !           dialect_cd
    //       !         Entity View imp isc1_authorization_info (Transient,
    //       !                     Mandatory, Import only)
    //       !           userid
    //       !           token_id
    //       !           module_id
    //       !           authority_object_id
    //       !           version
    //       !           working_unit_num
    //       !       EXPORTS:
    //       !         Work View exp_reference iyy1_server_data (Transient,
    //       !                     Export only)
    //       !           server_date
    //       !           server_time
    //       !           reference_id
    //       !         Entity View exp isc1_authorization_info (Transient,
    //       !                     Export only)
    //       !           token_id
    //       !           authority_ind
    //       !           authority_status_r
    //       !           authority_status_u
    //       !           authority_status_d
    //       !           authority_status_l
    //       !         Work View exp_msg iyy1_component (Transient, Export
    //       !                     only)
    //       !           severity_code
    //       !           message_tx
    //       !         Work View exp_error iyy1_component (Transient, Export
    //       !                     only)
    //       !           severity_code
    //       !           rollback_indicator
    //       !           origin_servid
    //       !           context_string
    //       !           return_code
    //       !           reason_code
    //       !           checksum
    //       !       LOCALS:
    //       !         Work View loc_reference iyy1_server_data
    //       !           userid
    //       !           server_date
    //       !           server_time
    //       !           reference_id
    //       !           server_timestamp
    //       !         Work View loc_error isc1_component
    //       !           severity_code
    //       !           rollback_indicator
    //       !           origin_servid
    //       !           context_string
    //       !           return_code
    //       !           reason_code
    //       !           checksum
    //       !         Group View (9) loc_group_context
    //       !           Work View loc_g_context dont_change_text
    //       !             text_150
    //       !         Work View loc_error iyy1_component
    //       !           severity_code
    //       !           rollback_indicator
    //       !           origin_servid
    //       !           context_string
    //       !           return_code
    //       !           reason_code
    //       !           checksum
    //       !         Work View loc_context iyy1_component
    //       !           context_string
    //       !         Work View loc dont_change_return_codes
    //       !           1_ok
    //       !           n1120_invalid_command
    //       !         Work View loc dont_change_reason_codes
    //       !           1_default
    //       !
    //       !     PROCEDURE STATEMENTS
    //       !
    //     1 !  NOTE: 
    //     1 !  PURPOSE(CONTINUED)
    //     2 !   
    //     3 !  NOTE: 
    //     3 !  PRE-CONDITION:
    //     3 !  INIT command, user info is given.
    //     3 !  POST-CONDITION:
    //     3 !  Security check results are generated.
    //     3 !  RETURN CODE = 1, REASON CODE = 1
    //     4 !   
    //     5 !  NOTE: 
    //     5 !  PRE-CONDITION:
    //     5 !  An invalid operation code is given.
    //     5 !  POST-CONDITION:
    //     5 !  No result is generated.
    //     5 !  RETURN CODE = -1120, REASON CODE = 1
    //     5 !  
    //     6 !  NOTE: 
    //     6 !  RETURN / REASON  CODES
    //     6 !  +1/1 Normal
    //     6 !  -1120/1 Erronous command
    //     7 !   
    //     8 !  NOTE: 
    //     8 !  RELEASE HISTORY
    //     8 !  01_00 23-02-1998 New release
    //     9 !   
    //    10 !  USE cyyy9001_exception_hndlng_dflt
    //    10 !     WHICH EXPORTS: Work View exp_error iyy1_component FROM Work
    //    10 !              View exp_error iyy1_component
    //    11 !   
    //    12 !  NOTE: 
    //    12 !  **************************************************************
    //    12 !  Return/Reason code values
    //    12 !  
    //    13 !  NOTE: 
    //    13 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //    13 !  Set the values of the return code/reason codes used
    //    13 !  
    //    14 !  SET loc dont_change_return_codes 1_ok TO 1 
    //    15 !  SET loc dont_change_return_codes n1120_invalid_command TO
    //    15 !              -1120 
    //    16 !   
    //    17 !  SET loc dont_change_reason_codes 1_default TO 1 
    //    18 !   
    //    19 !  NOTE: 
    //    19 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //    19 !  Name the procedure below
    //    19 !  
    //    20 !  SET SUBSCRIPT OF loc_group_context TO 1 
    //    21 !  SET loc_g_context dont_change_text text_150 TO "CYY1S091" 
    //    22 !  SET SUBSCRIPT OF loc_group_context TO 2 
    //    23 !  SET loc_g_context dont_change_text text_150 TO imp_command
    //    23 !              iyy1_component send_command 
    //    24 !   
    //    25 !  USE cyy1a131_server_init
    //    25 !     WHICH EXPORTS: Work View loc_reference iyy1_server_data
    //    25 !              FROM Work View exp_reference iyy1_server_data
    //    26 !  MOVE loc_reference iyy1_server_data TO exp_reference
    //    26 !              iyy1_server_data
    //    27 !   
    //    28 !  NOTE: 
    //    28 !  ****************************************************************
    //    28 !  Security check
    //    28 !  
    //    29 !  USE isc1z021_o_authorization_check_s
    //    29 !     WHICH IMPORTS: Entity View imp isc1_authorization_info TO
    //    29 !              Entity View imp isc1_authorization_info
    //    29 !     WHICH EXPORTS: Work View loc_error isc1_component FROM Work
    //    29 !              View exp_error isc1_component
    //    29 !                    Entity View exp isc1_authorization_info FROM
    //    29 !              Entity View exp isc1_authorization_info
    //    30 !   
    //    31 !  +->IF loc_error isc1_component return_code < loc
    //    31 !  !        dont_change_return_codes 1_ok
    //    32 !  !  USE cyyy9831_mv_sc1_to_yy1
    //    32 !  !     WHICH IMPORTS: Work View loc_error isc1_component TO
    //    32 !  !              Work View imp_error isc1_component
    //    32 !  !     WHICH EXPORTS: Work View exp_error iyy1_component FROM
    //    32 !  !              Work View exp_error iyy1_component
    //    31 !  +--
    //    33 !   
    //    34 !  NOTE: 
    //    34 !  ****************************************************************
    //    34 !  All essential Server controls are being made...
    //    34 !  
    //    35 !  +->IF exp_error iyy1_component return_code = loc
    //    35 !  !        dont_change_return_codes 1_ok
    //    36 !  !   
    //    37 !  !  NOTE: 
    //    37 ...**************************************************************
    //    37 ...**
    //    37 ...Check the operation wanted.
    //    37 ...
    //    38 !  !  SET loc_reference iyy1_server_data userid TO imp
    //    38 !  !              isc1_authorization_info userid 
    //    39 !  !   
    //    40 !  !  +->CASE OF imp_command iyy1_component send_command
    //    40 !  !  +> CASE "INIT"
    //    40 !  !  +> OTHERWISE
    //    41 !  !  !  SET exp_error iyy1_component return_code TO loc
    //    41 !  !  !              dont_change_return_codes
    //    41 !  !  !              n1120_invalid_command 
    //    42 !  !  !  SET exp_error iyy1_component reason_code TO loc
    //    42 !  !  !              dont_change_reason_codes 1_default 
    //    43 !  !  !  SET SUBSCRIPT OF loc_group_context TO 3 
    //    44 !  !  !  SET loc_g_context dont_change_text text_150 TO
    //    44 !  !  !              imp_command iyy1_component send_command 
    //    40 !  !  +--
    //    45 !  !   
    //    46 !  !  NOTE: 
    //    46 ...**************************************************************
    //    46 ...**
    //    46 ...OK. Nothing left to control. Let' s build Context string.
    //    46 ...
    //    47 !  !  NOTE: 
    //    47 ...**************************************************************
    //    47 ...**
    //    47 ...Generate Context string whether there is an error or not.
    //    47 ...There' s message to return in error-free condition.
    //    47 ...
    //    48 !  !  USE cyyy9141_context_string_set
    //    48 !  !     WHICH IMPORTS: Group View  loc_group_context TO Group
    //    48 !  !              View imp_group_context
    //    48 !  !     WHICH EXPORTS: Work View loc_context iyy1_component FROM
    //    48 !  !              Work View exp_context iyy1_component
    //    48 !  !                    Work View loc_error iyy1_component FROM
    //    48 !  !              Work View exp_error iyy1_component
    //    49 !  !  +->IF loc_error iyy1_component return_code < loc
    //    49 !  !  !        dont_change_return_codes 1_ok
    //    50 !  !  !  MOVE loc_error iyy1_component TO exp_error
    //    50 !  !  !              iyy1_component
    //    49 !  !  +> ELSE
    //    51 !  !  !  SET exp_error iyy1_component context_string TO
    //    51 !  !  !              loc_context iyy1_component context_string 
    //    49 !  !  +--
    //    35 !  +--
    //    52 !   
    //    53 !  NOTE: 
    //    53 !  ****************************************************************
    //    53 !  Everything' s OK. Nothing left to control.
    //    53 !  
    //    54 !  +->IF exp_error iyy1_component return_code = loc
    //    54 !  !        dont_change_return_codes 1_ok
    //    55 !  !   
    //    56 !  !  +->CASE OF imp_command iyy1_component send_command
    //    56 !  !  +> CASE "INIT"
    //    57 !  !  !   
    //    58 !  !  !  NOTE: 
    //    58 ...**************************************************************
    //    58 ...**
    //    58 ...Things to be done when the Server is initially called.
    //    58 ...
    //    59 !  !  !  NOTE: 
    //    59 ...!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //    59 ...!!
    //    59 ...Encode the Things to be done when the Server is initially
    //    59 ...called.
    //    59 ...
    //    56 !  !  +--
    //    54 !  +--
    //    60 !   
    //    61 !  USE cyy1a121_server_termination
    //    61 !     WHICH IMPORTS: Work View exp_error iyy1_component TO Work
    //    61 !              View imp_error iyy1_component
    //    61 !                    Work View imp_dialect iyy1_component TO Work
    //    61 !              View imp_dialect iyy1_component
    //    61 !     WHICH EXPORTS: Work View exp_msg iyy1_component FROM Work
    //    61 !              View exp_error_msg iyy1_component
    //    61 !                    Work View exp_error iyy1_component FROM Work
    //    61 !              View exp_error iyy1_component
    //       +---
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //  CONSTRUCTOR FOR THE CLASS       
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    public CYY1S091(  )
    {
      IefCGenRlse = "CA Gen 8.6";
      IsCopyright = "Copyright (c) 2024 CA Technologies. All rights reserved.";
      IefCGenDate = "2024/01/09";
      IefCGenTime = "13:41:20";
      IefCGenEncy = "9.2.A6";
      IefCGenUserId = "AliAl";
      IefCGenModel = "N8I_ORT_YYY_0112_TEMPLATE";
      IefCGenSubset = "ALL";
      IefCGenName = "CYY1S091_PARENT_CHILD_DBL_LIST";
      NestingLevel = 0;
      ValChkDeadlockTimeout = false;
      ValChkDBError = false;
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ACTION BLOCK FUNCTION DECLARATIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void Execute( Object in_runtime_parm1, 
    	IRuntimePStepContext in_runtime_parm2, 
    	GlobData in_globdata, 
    	CYY1S091_IA import_view, 
    	CYY1S091_OA export_view )
    {
      IefRuntimeParm1 = in_runtime_parm1;
      IefRuntimeParm2 = in_runtime_parm2;
      Globdata = in_globdata;
      WIa = import_view;
      WOa = export_view;
      _Execute();
    }
    
    private void _Execute()
    {
      
      f_22020104_localAlloc( "CYY1S091_PARENT_CHILD_DBL_LIST" );
      if ( Globdata.GetErrorData().GetLastStatus() == ErrorData.LastStatusIefAllocationError )
      	return;
      
      ++(NestingLevel);
      try {
        f_22020104_init(  );
        f_22020104(  );
      } catch( Exception e ) {
        if ( ((Globdata.GetErrorData().GetStatus() == ErrorData.StatusNone) && (Globdata.GetErrorData().GetErrorEncountered() == 
          ErrorData.ErrorEncounteredNoErrorFound)) && (Globdata.GetErrorData().GetViewOverflow() == 
          ErrorData.ErrorEncounteredNoErrorFound) )
        {
          Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
          Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusUnexpectedExceptionError );
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
          Globdata.GetErrorData(  ).SetErrorMessage( e );
        }
      }
      --(NestingLevel);
    }
    public void f_22020104(  )
    {
      func_0022020104_esc_flag = false;
      Globdata.GetStateData().SetCurrentABId( "0022020104" );
      Globdata.GetStateData().SetCurrentABName( "CYY1S091_PARENT_CHILD_DBL_LIST" );
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    PURPOSE(CONTINUED)                                              
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    PRE-CONDITION:                                                  
      //    INIT command, user info is given.                               
      //    POST-CONDITION:                                                 
      //    Security check results are generated.                           
      //    RETURN CODE = 1, REASON CODE = 1                                
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    PRE-CONDITION:                                                  
      //    An invalid operation code is given.                             
      //    POST-CONDITION:                                                 
      //    No result is generated.                                         
      //    RETURN CODE = -1120, REASON CODE = 1                            
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    RETURN / REASON  CODES                                          
      //    +1/1 Normal                                                     
      //    -1120/1 Erronous command                                        
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    RELEASE HISTORY                                                 
      //    01_00 23-02-1998 New release                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000010" );
      
      Cyyy9001Oa = (GEN.ORT.YYY.CYYY9001_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYYY9001).Assembly,
      	"GEN.ORT.YYY.CYYY9001_OA" ));
      Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
      IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.CYYY9001).Assembly,
      	"GEN.ORT.YYY.CYYY9001",
      	"Execute",
      	null,
      	Cyyy9001Oa );
      if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
        ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
        ErrorData.ErrorEncounteredNoErrorFound) )
      {
        throw new ABException();
      }
      Globdata.GetStateData().SetCurrentABId( "0022020104" );
      Globdata.GetStateData().SetCurrentABName( "CYY1S091_PARENT_CHILD_DBL_LIST" );
      Globdata.GetStateData().SetLastStatementNumber( "0000000010" );
      WOa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(Cyyy9001Oa.ExpErrorIyy1ComponentSeverityCode, 1);
      WOa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.ValueOf(Cyyy9001Oa.ExpErrorIyy1ComponentRollbackIndicator, 1);
      WOa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(Cyyy9001Oa.ExpErrorIyy1ComponentOriginServid);
      WOa.ExpErrorIyy1ComponentContextString = StringAttr.ValueOf(Cyyy9001Oa.ExpErrorIyy1ComponentContextString, 512);
      WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf(Cyyy9001Oa.ExpErrorIyy1ComponentReturnCode);
      WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf(Cyyy9001Oa.ExpErrorIyy1ComponentReasonCode);
      WOa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.ValueOf(Cyyy9001Oa.ExpErrorIyy1ComponentChecksum, 15);
      Cyyy9001Oa.FreeInstance(  );
      Cyyy9001Oa = null;
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    Return/Reason code values                                       
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!     
      //    Set the values of the return code/reason codes used             
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000014" );
      WLa.LocDontChangeReturnCodesQ1Ok = IntAttr.ValueOf((int)TIRD2DEC.Execute1(1, 0, TIRD2DEC.ROUND_NONE, 5));
      Globdata.GetStateData().SetLastStatementNumber( "0000000015" );
      WLa.LocDontChangeReturnCodesN1120InvalidCommand = IntAttr.ValueOf((int)TIRD2DEC.Execute1(-1120, 0, TIRD2DEC.ROUND_NONE, 5));
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000017" );
      WLa.LocDontChangeReasonCodesQ1Default = IntAttr.ValueOf((int)TIRD2DEC.Execute1(1, 0, TIRD2DEC.ROUND_NONE, 5));
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!                      
      //    Name the procedure below                                        
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000020" );
      LocGroupContext_PS_001 = (int)TIRD2DEC.Execute1(1, 0, TIRD2DEC.ROUND_NONE, 0);
      if ( (LocGroupContext_PS_001 > WLa.LocGroupContext_MA) && (LocGroupContext_PS_001 <= 9) )
      WLa.LocGroupContext_MA = IntAttr.ValueOf(LocGroupContext_PS_001);
      Globdata.GetStateData().SetLastStatementNumber( "0000000021" );
      WLa.LocGContextDontChangeTextText150[LocGroupContext_PS_001-1] = FixedStringAttr.ValueOf("CYY1S091", 150);
      f_173015108_rgvc(  );
      Globdata.GetStateData().SetLastStatementNumber( "0000000022" );
      LocGroupContext_PS_001 = (int)TIRD2DEC.Execute1(2, 0, TIRD2DEC.ROUND_NONE, 0);
      if ( (LocGroupContext_PS_001 > WLa.LocGroupContext_MA) && (LocGroupContext_PS_001 <= 9) )
      WLa.LocGroupContext_MA = IntAttr.ValueOf(LocGroupContext_PS_001);
      Globdata.GetStateData().SetLastStatementNumber( "0000000023" );
      WLa.LocGContextDontChangeTextText150[LocGroupContext_PS_001-1] = FixedStringAttr.ValueOf(
        WIa.ImpCommandIyy1ComponentSendCommand, 150);
      f_173015108_rgvc(  );
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000025" );
      
      Cyy1a131Oa = (GEN.ORT.YYY.CYY1A131_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYY1A131).Assembly,
      	"GEN.ORT.YYY.CYY1A131_OA" ));
      Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
      IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.CYY1A131).Assembly,
      	"GEN.ORT.YYY.CYY1A131",
      	"Execute",
      	null,
      	Cyy1a131Oa );
      if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
        ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
        ErrorData.ErrorEncounteredNoErrorFound) )
      {
        throw new ABException();
      }
      Globdata.GetStateData().SetCurrentABId( "0022020104" );
      Globdata.GetStateData().SetCurrentABName( "CYY1S091_PARENT_CHILD_DBL_LIST" );
      Globdata.GetStateData().SetLastStatementNumber( "0000000025" );
      WLa.LocReferenceIyy1ServerDataServerDate = DateAttr.ValueOf(Cyy1a131Oa.ExpReferenceIyy1ServerDataServerDate);
      WLa.LocReferenceIyy1ServerDataServerTime = TimeAttr.ValueOf(Cyy1a131Oa.ExpReferenceIyy1ServerDataServerTime);
      WLa.LocReferenceIyy1ServerDataReferenceId = TimestampAttr.ValueOf(Cyy1a131Oa.ExpReferenceIyy1ServerDataReferenceId);
      WLa.LocReferenceIyy1ServerDataServerTimestamp = TimestampAttr.ValueOf(Cyy1a131Oa.ExpReferenceIyy1ServerDataServerTimestamp);
      Cyy1a131Oa.FreeInstance(  );
      Cyy1a131Oa = null;
      Globdata.GetStateData().SetLastStatementNumber( "0000000026" );
      WOa.ExpReferenceIyy1ServerDataServerDate = DateAttr.ValueOf(WLa.LocReferenceIyy1ServerDataServerDate);
      WOa.ExpReferenceIyy1ServerDataServerTime = TimeAttr.ValueOf(WLa.LocReferenceIyy1ServerDataServerTime);
      WOa.ExpReferenceIyy1ServerDataReferenceId = TimestampAttr.ValueOf(WLa.LocReferenceIyy1ServerDataReferenceId);
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    Security check                                                  
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000029" );
      
      Isc1z021Ia = (GEN.ORT.YYY.ISC1Z021_IA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.ISC1Z021).Assembly,
      	"GEN.ORT.YYY.ISC1Z021_IA" ));
      Isc1z021Oa = (GEN.ORT.YYY.ISC1Z021_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.ISC1Z021).Assembly,
      	"GEN.ORT.YYY.ISC1Z021_OA" ));
      Isc1z021Ia.ImpIsc1AuthorizationInfoUserid = FixedStringAttr.ValueOf(WIa.ImpIsc1AuthorizationInfoUserid, 20);
      Isc1z021Ia.ImpIsc1AuthorizationInfoTokenId = FixedStringAttr.ValueOf(WIa.ImpIsc1AuthorizationInfoTokenId, 32);
      Isc1z021Ia.ImpIsc1AuthorizationInfoModuleId = FixedStringAttr.ValueOf(WIa.ImpIsc1AuthorizationInfoModuleId, 20);
      Isc1z021Ia.ImpIsc1AuthorizationInfoAuthorityObjectId = FixedStringAttr.ValueOf(WIa.ImpIsc1AuthorizationInfoAuthorityObjectId, 
        20);
      Isc1z021Ia.ImpIsc1AuthorizationInfoVersion = FixedStringAttr.ValueOf(WIa.ImpIsc1AuthorizationInfoVersion, 4);
      Isc1z021Ia.ImpIsc1AuthorizationInfoWorkingUnitNum = IntAttr.ValueOf(WIa.ImpIsc1AuthorizationInfoWorkingUnitNum);
      Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
      IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.ISC1Z021).Assembly,
      	"GEN.ORT.YYY.ISC1Z021",
      	"Execute",
      	Isc1z021Ia,
      	Isc1z021Oa );
      if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
        ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
        ErrorData.ErrorEncounteredNoErrorFound) )
      {
        throw new ABException();
      }
      Globdata.GetStateData().SetCurrentABId( "0022020104" );
      Globdata.GetStateData().SetCurrentABName( "CYY1S091_PARENT_CHILD_DBL_LIST" );
      Globdata.GetStateData().SetLastStatementNumber( "0000000029" );
      WOa.ExpIsc1AuthorizationInfoTokenId = FixedStringAttr.ValueOf(Isc1z021Oa.ExpIsc1AuthorizationInfoTokenId, 32);
      WOa.ExpIsc1AuthorizationInfoAuthorityInd = FixedStringAttr.ValueOf(Isc1z021Oa.ExpIsc1AuthorizationInfoAuthorityInd, 1);
      WOa.ExpIsc1AuthorizationInfoAuthorityStatusR = FixedStringAttr.ValueOf(Isc1z021Oa.ExpIsc1AuthorizationInfoAuthorityStatusR, 1)
        ;
      WOa.ExpIsc1AuthorizationInfoAuthorityStatusU = FixedStringAttr.ValueOf(Isc1z021Oa.ExpIsc1AuthorizationInfoAuthorityStatusU, 1)
        ;
      WOa.ExpIsc1AuthorizationInfoAuthorityStatusD = FixedStringAttr.ValueOf(Isc1z021Oa.ExpIsc1AuthorizationInfoAuthorityStatusD, 1)
        ;
      WOa.ExpIsc1AuthorizationInfoAuthorityStatusL = FixedStringAttr.ValueOf(Isc1z021Oa.ExpIsc1AuthorizationInfoAuthorityStatusL, 1)
        ;
      WLa.LocErrorIsc1ComponentSeverityCode = FixedStringAttr.ValueOf(Isc1z021Oa.ExpErrorIsc1ComponentSeverityCode, 1);
      WLa.LocErrorIsc1ComponentRollbackIndicator = FixedStringAttr.ValueOf(Isc1z021Oa.ExpErrorIsc1ComponentRollbackIndicator, 1);
      WLa.LocErrorIsc1ComponentOriginServid = DoubleAttr.ValueOf(Isc1z021Oa.ExpErrorIsc1ComponentOriginServid);
      WLa.LocErrorIsc1ComponentContextString = StringAttr.ValueOf(Isc1z021Oa.ExpErrorIsc1ComponentContextString, 512);
      WLa.LocErrorIsc1ComponentReturnCode = IntAttr.ValueOf(Isc1z021Oa.ExpErrorIsc1ComponentReturnCode);
      WLa.LocErrorIsc1ComponentReasonCode = IntAttr.ValueOf(Isc1z021Oa.ExpErrorIsc1ComponentReasonCode);
      WLa.LocErrorIsc1ComponentChecksum = FixedStringAttr.ValueOf(Isc1z021Oa.ExpErrorIsc1ComponentChecksum, 15);
      Isc1z021Ia.FreeInstance(  );
      Isc1z021Ia = null;
      Isc1z021Oa.FreeInstance(  );
      Isc1z021Oa = null;
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000031" );
      if ( ((double) WLa.LocErrorIsc1ComponentReturnCode < (double) WLa.LocDontChangeReturnCodesQ1Ok) )
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000032" );
        
        Cyyy9831Ia = (GEN.ORT.YYY.CYYY9831_IA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYYY9831).Assembly,
        	"GEN.ORT.YYY.CYYY9831_IA" ));
        Cyyy9831Oa = (GEN.ORT.YYY.CYYY9831_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYYY9831).Assembly,
        	"GEN.ORT.YYY.CYYY9831_OA" ));
        Cyyy9831Ia.ImpErrorIsc1ComponentSeverityCode = FixedStringAttr.ValueOf(WLa.LocErrorIsc1ComponentSeverityCode, 1);
        Cyyy9831Ia.ImpErrorIsc1ComponentRollbackIndicator = FixedStringAttr.ValueOf(WLa.LocErrorIsc1ComponentRollbackIndicator, 1);
        Cyyy9831Ia.ImpErrorIsc1ComponentOriginServid = DoubleAttr.ValueOf(WLa.LocErrorIsc1ComponentOriginServid);
        Cyyy9831Ia.ImpErrorIsc1ComponentContextString = StringAttr.ValueOf(WLa.LocErrorIsc1ComponentContextString, 512);
        Cyyy9831Ia.ImpErrorIsc1ComponentReturnCode = IntAttr.ValueOf(WLa.LocErrorIsc1ComponentReturnCode);
        Cyyy9831Ia.ImpErrorIsc1ComponentReasonCode = IntAttr.ValueOf(WLa.LocErrorIsc1ComponentReasonCode);
        Cyyy9831Ia.ImpErrorIsc1ComponentChecksum = FixedStringAttr.ValueOf(WLa.LocErrorIsc1ComponentChecksum, 15);
        Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
        IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.CYYY9831).Assembly,
        	"GEN.ORT.YYY.CYYY9831",
        	"Execute",
        	Cyyy9831Ia,
        	Cyyy9831Oa );
        if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
          ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
          ErrorData.ErrorEncounteredNoErrorFound) )
        {
          throw new ABException();
        }
        Globdata.GetStateData().SetCurrentABId( "0022020104" );
        Globdata.GetStateData().SetCurrentABName( "CYY1S091_PARENT_CHILD_DBL_LIST" );
        Globdata.GetStateData().SetLastStatementNumber( "0000000032" );
        WOa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(Cyyy9831Oa.ExpErrorIyy1ComponentSeverityCode, 1);
        WOa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.ValueOf(Cyyy9831Oa.ExpErrorIyy1ComponentRollbackIndicator, 1);
        WOa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(Cyyy9831Oa.ExpErrorIyy1ComponentOriginServid);
        WOa.ExpErrorIyy1ComponentContextString = StringAttr.ValueOf(Cyyy9831Oa.ExpErrorIyy1ComponentContextString, 512);
        WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf(Cyyy9831Oa.ExpErrorIyy1ComponentReturnCode);
        WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf(Cyyy9831Oa.ExpErrorIyy1ComponentReasonCode);
        WOa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.ValueOf(Cyyy9831Oa.ExpErrorIyy1ComponentChecksum, 15);
        Cyyy9831Ia.FreeInstance(  );
        Cyyy9831Ia = null;
        Cyyy9831Oa.FreeInstance(  );
        Cyyy9831Oa = null;
      }
      
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    All essential Server controls are being made...                 
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000035" );
      if ( ((double) WOa.ExpErrorIyy1ComponentReturnCode == (double) WLa.LocDontChangeReturnCodesQ1Ok) )
      {
        f_20973096(  );
      }
      
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    Everything' s OK. Nothing left to control.                      
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000054" );
      if ( ((double) WOa.ExpErrorIyy1ComponentReturnCode == (double) WLa.LocDontChangeReturnCodesQ1Ok) )
      {
        f_20971623(  );
      }
      
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000061" );
      
      Cyy1a121Ia = (GEN.ORT.YYY.CYY1A121_IA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYY1A121).Assembly,
      	"GEN.ORT.YYY.CYY1A121_IA" ));
      Cyy1a121Oa = (GEN.ORT.YYY.CYY1A121_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYY1A121).Assembly,
      	"GEN.ORT.YYY.CYY1A121_OA" ));
      Cyy1a121Ia.ImpDialectIyy1ComponentDialectCd = FixedStringAttr.ValueOf(WIa.ImpDialectIyy1ComponentDialectCd, 2);
      Cyy1a121Ia.ImpErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(WOa.ExpErrorIyy1ComponentSeverityCode, 1);
      Cyy1a121Ia.ImpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.ValueOf(WOa.ExpErrorIyy1ComponentRollbackIndicator, 1);
      Cyy1a121Ia.ImpErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(WOa.ExpErrorIyy1ComponentOriginServid);
      Cyy1a121Ia.ImpErrorIyy1ComponentContextString = StringAttr.ValueOf(WOa.ExpErrorIyy1ComponentContextString, 512);
      Cyy1a121Ia.ImpErrorIyy1ComponentReturnCode = IntAttr.ValueOf(WOa.ExpErrorIyy1ComponentReturnCode);
      Cyy1a121Ia.ImpErrorIyy1ComponentReasonCode = IntAttr.ValueOf(WOa.ExpErrorIyy1ComponentReasonCode);
      Cyy1a121Ia.ImpErrorIyy1ComponentChecksum = FixedStringAttr.ValueOf(WOa.ExpErrorIyy1ComponentChecksum, 15);
      Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
      IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.CYY1A121).Assembly,
      	"GEN.ORT.YYY.CYY1A121",
      	"Execute",
      	Cyy1a121Ia,
      	Cyy1a121Oa );
      if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
        ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
        ErrorData.ErrorEncounteredNoErrorFound) )
      {
        throw new ABException();
      }
      Globdata.GetStateData().SetCurrentABId( "0022020104" );
      Globdata.GetStateData().SetCurrentABName( "CYY1S091_PARENT_CHILD_DBL_LIST" );
      Globdata.GetStateData().SetLastStatementNumber( "0000000061" );
      WOa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(Cyy1a121Oa.ExpErrorIyy1ComponentSeverityCode, 1);
      WOa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.ValueOf(Cyy1a121Oa.ExpErrorIyy1ComponentRollbackIndicator, 1);
      WOa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(Cyy1a121Oa.ExpErrorIyy1ComponentOriginServid);
      WOa.ExpErrorIyy1ComponentContextString = StringAttr.ValueOf(Cyy1a121Oa.ExpErrorIyy1ComponentContextString, 512);
      WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf(Cyy1a121Oa.ExpErrorIyy1ComponentReturnCode);
      WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf(Cyy1a121Oa.ExpErrorIyy1ComponentReasonCode);
      WOa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.ValueOf(Cyy1a121Oa.ExpErrorIyy1ComponentChecksum, 15);
      WOa.ExpMsgIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(Cyy1a121Oa.ExpErrorMsgIyy1ComponentSeverityCode, 1);
      WOa.ExpMsgIyy1ComponentMessageTx = StringAttr.ValueOf(Cyy1a121Oa.ExpErrorMsgIyy1ComponentMessageTx, 512);
      Cyy1a121Ia.FreeInstance(  );
      Cyy1a121Ia = null;
      Cyy1a121Oa.FreeInstance(  );
      Cyy1a121Oa = null;
      return;
    }
    
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // SUBORDINATE FUNCTIONS
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    
    public void f_20973096(  )
    {
      func_0020973096_esc_flag = false;
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    Check the operation wanted.                                     
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000038" );
      WLa.LocReferenceIyy1ServerDataUserid = FixedStringAttr.ValueOf(WIa.ImpIsc1AuthorizationInfoUserid, 8);
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000040" );
      if ( CompareExit.CompareTo(WIa.ImpCommandIyy1ComponentSendCommand, "INIT") == 0 )
      {
        Globdata.GetStateData().SetLastSubStatementNumber( "1" );
        {
          // Empty statement here.
          ;
        }
      }
      else {
        Globdata.GetStateData().SetLastSubStatementNumber( "2" );
        {
          Globdata.GetStateData().SetLastStatementNumber( "0000000041" );
          WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
            WLa.LocDontChangeReturnCodesN1120InvalidCommand, 0, TIRD2DEC.ROUND_NONE, 5));
          Globdata.GetStateData().SetLastStatementNumber( "0000000042" );
          WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
            WLa.LocDontChangeReasonCodesQ1Default, 0, TIRD2DEC.ROUND_NONE, 5));
          Globdata.GetStateData().SetLastStatementNumber( "0000000043" );
          LocGroupContext_PS_001 = (int)TIRD2DEC.Execute1(3, 0, TIRD2DEC.ROUND_NONE, 0);
          if ( (LocGroupContext_PS_001 > WLa.LocGroupContext_MA) && (LocGroupContext_PS_001 <= 9) )
          WLa.LocGroupContext_MA = IntAttr.ValueOf(LocGroupContext_PS_001);
          Globdata.GetStateData().SetLastStatementNumber( "0000000044" );
          WLa.LocGContextDontChangeTextText150[LocGroupContext_PS_001-1] = FixedStringAttr.ValueOf(
            WIa.ImpCommandIyy1ComponentSendCommand, 150);
          f_173015108_rgvc(  );
        }
      }
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    OK. Nothing left to control. Let' s build Context string.       
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    Generate Context string whether there is an error or not.       
      //    There' s message to return in error-free condition.             
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000048" );
      
      Cyyy9141Ia = (GEN.ORT.YYY.CYYY9141_IA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYYY9141).Assembly,
      	"GEN.ORT.YYY.CYYY9141_IA" ));
      Cyyy9141Oa = (GEN.ORT.YYY.CYYY9141_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYYY9141).Assembly,
      	"GEN.ORT.YYY.CYYY9141_OA" ));
      Cyyy9141Ia.ImpGroupContext_MA = IntAttr.ValueOf(WLa.LocGroupContext_MA);
      for(Adim1 = 1; Adim1 <= WLa.LocGroupContext_MA; ++(Adim1))
      {
        Cyyy9141Ia.ImpGContextDontChangeTextText150[Adim1-1] = FixedStringAttr.ValueOf(WLa.LocGContextDontChangeTextText150[Adim1-1],
           150);
      }
      for(Adim1 = WLa.LocGroupContext_MA + 1; Adim1 <= 9; ++(Adim1))
      {
        Cyyy9141Ia.ImpGContextDontChangeTextText150[Adim1-1] = 
"                                                                                                                                                      "
          ;
      }
      Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
      IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.CYYY9141).Assembly,
      	"GEN.ORT.YYY.CYYY9141",
      	"Execute",
      	Cyyy9141Ia,
      	Cyyy9141Oa );
      if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
        ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
        ErrorData.ErrorEncounteredNoErrorFound) )
      {
        throw new ABException();
      }
      Globdata.GetStateData().SetCurrentABId( "0022020104" );
      Globdata.GetStateData().SetCurrentABName( "CYY1S091_PARENT_CHILD_DBL_LIST" );
      Globdata.GetStateData().SetLastStatementNumber( "0000000048" );
      WLa.LocErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(Cyyy9141Oa.ExpErrorIyy1ComponentSeverityCode, 1);
      WLa.LocErrorIyy1ComponentRollbackIndicator = FixedStringAttr.ValueOf(Cyyy9141Oa.ExpErrorIyy1ComponentRollbackIndicator, 1);
      WLa.LocErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(Cyyy9141Oa.ExpErrorIyy1ComponentOriginServid);
      WLa.LocErrorIyy1ComponentContextString = StringAttr.ValueOf(Cyyy9141Oa.ExpErrorIyy1ComponentContextString, 512);
      WLa.LocErrorIyy1ComponentReturnCode = IntAttr.ValueOf(Cyyy9141Oa.ExpErrorIyy1ComponentReturnCode);
      WLa.LocErrorIyy1ComponentReasonCode = IntAttr.ValueOf(Cyyy9141Oa.ExpErrorIyy1ComponentReasonCode);
      WLa.LocErrorIyy1ComponentChecksum = FixedStringAttr.ValueOf(Cyyy9141Oa.ExpErrorIyy1ComponentChecksum, 15);
      WLa.LocContextIyy1ComponentContextString = StringAttr.ValueOf(Cyyy9141Oa.ExpContextIyy1ComponentContextString, 512);
      Cyyy9141Ia.FreeInstance(  );
      Cyyy9141Ia = null;
      Cyyy9141Oa.FreeInstance(  );
      Cyyy9141Oa = null;
      Globdata.GetStateData().SetLastStatementNumber( "0000000049" );
      if ( ((double) WLa.LocErrorIyy1ComponentReturnCode < (double) WLa.LocDontChangeReturnCodesQ1Ok) )
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000050" );
        WOa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(WLa.LocErrorIyy1ComponentSeverityCode, 1);
        WOa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.ValueOf(WLa.LocErrorIyy1ComponentRollbackIndicator, 1);
        WOa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(WLa.LocErrorIyy1ComponentOriginServid);
        WOa.ExpErrorIyy1ComponentContextString = StringAttr.ValueOf(WLa.LocErrorIyy1ComponentContextString, 512);
        WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf(WLa.LocErrorIyy1ComponentReturnCode);
        WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf(WLa.LocErrorIyy1ComponentReasonCode);
        WOa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.ValueOf(WLa.LocErrorIyy1ComponentChecksum, 15);
      }
      else 
      {
        Globdata.GetStateData().SetLastSubStatementNumber( "1" );
        {
          Globdata.GetStateData().SetLastStatementNumber( "0000000051" );
          WOa.ExpErrorIyy1ComponentContextString = StringAttr.ValueOf(WLa.LocContextIyy1ComponentContextString, 512);
        }
      }
      
      return;
    }
    
    public void f_20971623(  )
    {
      func_0020971623_esc_flag = false;
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000056" );
      if ( CompareExit.CompareTo(WIa.ImpCommandIyy1ComponentSendCommand, "INIT") == 0 )
      {
        Globdata.GetStateData().SetLastSubStatementNumber( "1" );
        {
          
          // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
          //    **************************************************************  
          //    **                                                              
          //    Things to be done when the Server is initially called.          
          //                                                                    
          // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
          // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
          //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
          //    !!                                                              
          //    Encode the Things to be done when the Server is initially       
          //    called.                                                         
          //                                                                    
          // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        }
      }
      return;
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // INITIALIZATION UTILITY FUNCTIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void f_22020104_localAlloc( String abname )
    {
      // Request localview allocation 
      WLa = (GEN.ORT.YYY.CYY1S091_LA)(IefRuntimeParm2.GetInstance( GetType().Assembly,
      	"GEN.ORT.YYY.CYY1S091_LA" ));
      if ( WLa == null )
      {
        Globdata.GetStateData().SetCurrentABId( "0022020104" );
        Globdata.GetStateData().SetCurrentABName( abname );
        Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
        Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusIefAllocationError );
      }
    }
    
    public void f_22020104_init(  )
    {
      if ( NestingLevel < 2 )
      {
        WLa.Reset();
      }
      WLa.LocGroupContext_MA = 0;
      for(LocGroupContext_PS_001 = 1; LocGroupContext_PS_001 <= 9; ++(LocGroupContext_PS_001))
      {
      }
      WOa.ExpReferenceIyy1ServerDataServerDate = 00000000;
      WOa.ExpReferenceIyy1ServerDataServerTime = 00000000;
      WOa.ExpReferenceIyy1ServerDataReferenceId = "00000000000000000000";
      WOa.ExpIsc1AuthorizationInfoTokenId = "                                ";
      WOa.ExpIsc1AuthorizationInfoAuthorityInd = " ";
      WOa.ExpIsc1AuthorizationInfoAuthorityStatusR = " ";
      WOa.ExpIsc1AuthorizationInfoAuthorityStatusU = " ";
      WOa.ExpIsc1AuthorizationInfoAuthorityStatusD = " ";
      WOa.ExpIsc1AuthorizationInfoAuthorityStatusL = " ";
      WOa.ExpMsgIyy1ComponentSeverityCode = " ";
      WOa.ExpMsgIyy1ComponentMessageTx = "";
      WOa.ExpErrorIyy1ComponentSeverityCode = " ";
      WOa.ExpErrorIyy1ComponentRollbackIndicator = " ";
      WOa.ExpErrorIyy1ComponentOriginServid = 0.0;
      WOa.ExpErrorIyy1ComponentContextString = "";
      WOa.ExpErrorIyy1ComponentReturnCode = 0;
      WOa.ExpErrorIyy1ComponentReasonCode = 0;
      WOa.ExpErrorIyy1ComponentChecksum = "               ";
      LocGroupContext_PS_001 = 1;
    }
    public void f_173015108_rgvc(  )
    {
      if ( (LocGroupContext_PS_001 > 9) || (LocGroupContext_PS_001 < 1) )
      {
        Globdata.GetErrorData().SetViewOverflow( ErrorData.ErrorEncounteredErrorFound );
        {
          throw new ABException();
        }
      }
    }
  }// end class
  
}

