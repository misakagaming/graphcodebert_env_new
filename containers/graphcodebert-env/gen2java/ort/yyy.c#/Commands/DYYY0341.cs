namespace GEN.ORT.YYY
{
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  //
  //                    Source Code Generated by
  //                           CA Gen 8.6
  //
  //    Copyright (c) 2024 CA Technologies. All rights reserved.
  //
  //    Name: DYYY0341_TYPE_DELETE             Date: 2024/01/09
  //    Target OS:   CLR                       Time: 13:40:35
  //    Target DBMS: ODBC/ADO.NET              User: AliAl
  //    Access Method: <NONE>         
  //
  //    Generation options:
  //    Debug trace option not selected
  //    Data modeling constraint enforcement not selected
  //    Optimized import view initialization not selected
  //    Enforce default values with DBMS not selected
  //    Init unspecified optional fields to NULL not selected
  //
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // using Statements
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  using System;
  using com.ca.gen.vwrt;
  using com.ca.gen.vwrt.types;
  using com.ca.gen.vwrt.vdf;
  using com.ca.gen.csu.exception;
  
  using com.ca.gen.abrt;
  using com.ca.gen.abrt.functions;
  using com.ca.gen.abrt.cascade;
  using com.ca.gen.abrt.manager;
  using com.ca.gen.abrt.trace;
  using com.ca.gen.exits.common;
  using com.ca.gen.odc;
  using System.Data;
  using System.Collections;
  
  public class DYYY0341 : ABBase
  {
    // * * * * * * * * * * * * * * * * * * *
    // ENTITY ACTION STATEMENT STATUS FLAGS 
    // ENTITY VIEW STATUS FLAGS AND         
    // LAST COMMAND FOR EACH ENTITY VIEW    
    // * * * * * * * * * * * * * * * * * * *
    string sl_29360138 = ErrorData.LastStatusNone;
    string sl_29360185 = ErrorData.LastStatusNone;
    string dl_28311569 = ErrorData.LastStatusNone;
    string Parent_es;
    string Parent_001cd;
    string Parent_lk;
    string Type_es;
    string Type_003cd;
    string Type_lk;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // IMPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    DYYY0341_IA WIa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // EXPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    DYYY0341_OA WOa;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // START OF ENTITY ACTION VIEW
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    /// <summary>
    /// Internal data view storage for: DYYY0341_EA
    /// </summary>
    [Serializable]
    public class DYYY0341_EA : ViewBase, IEntityActionView
    {
      // Entity View: 
      //        Type: PARENT
      /// <summary>
      /// Internal storage for attribute missing flag for: ParentPkeyAttrText
      /// </summary>
      private char _ParentPkeyAttrText_AS;
      /// <summary>
      /// Attribute missing flag for: ParentPkeyAttrText
      /// </summary>
      public char ParentPkeyAttrText_AS {
        get {
          return(_ParentPkeyAttrText_AS);
        }
        set {
          _ParentPkeyAttrText_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: ParentPkeyAttrText
      /// Domain: Text
      /// Length: 5
      /// Varying Length: N
      /// </summary>
      private string _ParentPkeyAttrText;
      /// <summary>
      /// Attribute for: ParentPkeyAttrText
      /// </summary>
      public string ParentPkeyAttrText {
        get {
          return(_ParentPkeyAttrText);
        }
        set {
          _ParentPkeyAttrText = value;
        }
      }
      /// <summary>
      /// Internal storage for attribute missing flag for: ParentPtypeTkeyAttrText
      /// </summary>
      private char _ParentPtypeTkeyAttrText_AS;
      /// <summary>
      /// Attribute missing flag for: ParentPtypeTkeyAttrText
      /// </summary>
      public char ParentPtypeTkeyAttrText_AS {
        get {
          return(_ParentPtypeTkeyAttrText_AS);
        }
        set {
          _ParentPtypeTkeyAttrText_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: ParentPtypeTkeyAttrText
      /// Domain: Text
      /// Length: 4
      /// Varying Length: N
      /// </summary>
      private string _ParentPtypeTkeyAttrText;
      /// <summary>
      /// Attribute for: ParentPtypeTkeyAttrText
      /// </summary>
      public string ParentPtypeTkeyAttrText {
        get {
          return(_ParentPtypeTkeyAttrText);
        }
        set {
          _ParentPtypeTkeyAttrText = value;
        }
      }
      // Entity View: 
      //        Type: TYPE
      /// <summary>
      /// Internal storage for attribute missing flag for: TypeTinstanceId
      /// </summary>
      private char _TypeTinstanceId_AS;
      /// <summary>
      /// Attribute missing flag for: TypeTinstanceId
      /// </summary>
      public char TypeTinstanceId_AS {
        get {
          return(_TypeTinstanceId_AS);
        }
        set {
          _TypeTinstanceId_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: TypeTinstanceId
      /// Domain: Timestamp
      /// Length: 20
      /// </summary>
      private string _TypeTinstanceId;
      /// <summary>
      /// Attribute for: TypeTinstanceId
      /// </summary>
      public string TypeTinstanceId {
        get {
          return(_TypeTinstanceId);
        }
        set {
          _TypeTinstanceId = value;
        }
      }
      /// <summary>
      /// Internal storage for attribute missing flag for: TypeTreferenceId
      /// </summary>
      private char _TypeTreferenceId_AS;
      /// <summary>
      /// Attribute missing flag for: TypeTreferenceId
      /// </summary>
      public char TypeTreferenceId_AS {
        get {
          return(_TypeTreferenceId_AS);
        }
        set {
          _TypeTreferenceId_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: TypeTreferenceId
      /// Domain: Timestamp
      /// Length: 20
      /// </summary>
      private string _TypeTreferenceId;
      /// <summary>
      /// Attribute for: TypeTreferenceId
      /// </summary>
      public string TypeTreferenceId {
        get {
          return(_TypeTreferenceId);
        }
        set {
          _TypeTreferenceId = value;
        }
      }
      /// <summary>
      /// Internal storage for attribute missing flag for: TypeTupdateUserId
      /// </summary>
      private char _TypeTupdateUserId_AS;
      /// <summary>
      /// Attribute missing flag for: TypeTupdateUserId
      /// </summary>
      public char TypeTupdateUserId_AS {
        get {
          return(_TypeTupdateUserId_AS);
        }
        set {
          _TypeTupdateUserId_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: TypeTupdateUserId
      /// Domain: Text
      /// Length: 8
      /// Varying Length: N
      /// </summary>
      private string _TypeTupdateUserId;
      /// <summary>
      /// Attribute for: TypeTupdateUserId
      /// </summary>
      public string TypeTupdateUserId {
        get {
          return(_TypeTupdateUserId);
        }
        set {
          _TypeTupdateUserId = value;
        }
      }
      /// <summary>
      /// Internal storage for attribute missing flag for: TypeTkeyAttrText
      /// </summary>
      private char _TypeTkeyAttrText_AS;
      /// <summary>
      /// Attribute missing flag for: TypeTkeyAttrText
      /// </summary>
      public char TypeTkeyAttrText_AS {
        get {
          return(_TypeTkeyAttrText_AS);
        }
        set {
          _TypeTkeyAttrText_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: TypeTkeyAttrText
      /// Domain: Text
      /// Length: 4
      /// Varying Length: N
      /// </summary>
      private string _TypeTkeyAttrText;
      /// <summary>
      /// Attribute for: TypeTkeyAttrText
      /// </summary>
      public string TypeTkeyAttrText {
        get {
          return(_TypeTkeyAttrText);
        }
        set {
          _TypeTkeyAttrText = value;
        }
      }
      /// <summary>
      /// Default Constructor
      /// </summary>
      
      public DYYY0341_EA(  )
      {
        Reset(  );
      }
      /// <summary>
      /// Copy Constructor
      /// </summary>
      
      public DYYY0341_EA( DYYY0341_EA orig )
      {
        ParentPkeyAttrText_AS = orig.ParentPkeyAttrText_AS;
        ParentPkeyAttrText = orig.ParentPkeyAttrText;
        ParentPtypeTkeyAttrText_AS = orig.ParentPtypeTkeyAttrText_AS;
        ParentPtypeTkeyAttrText = orig.ParentPtypeTkeyAttrText;
        TypeTinstanceId_AS = orig.TypeTinstanceId_AS;
        TypeTinstanceId = orig.TypeTinstanceId;
        TypeTreferenceId_AS = orig.TypeTreferenceId_AS;
        TypeTreferenceId = orig.TypeTreferenceId;
        TypeTupdateUserId_AS = orig.TypeTupdateUserId_AS;
        TypeTupdateUserId = orig.TypeTupdateUserId;
        TypeTkeyAttrText_AS = orig.TypeTkeyAttrText_AS;
        TypeTkeyAttrText = orig.TypeTkeyAttrText;
      }
      /// <summary>
      /// clone constructor
      /// </summary>
      
      public override Object Clone(  )
      {
        return(new DYYY0341_EA(this));
      }
      /// <summary>
      /// Resets all properties to the defaults.
      /// </summary>
      
      public void Reset(  )
      {
        ParentPkeyAttrText_AS = ' ';
        ParentPkeyAttrText = "     ";
        ParentPtypeTkeyAttrText_AS = ' ';
        ParentPtypeTkeyAttrText = "    ";
        TypeTinstanceId_AS = ' ';
        TypeTinstanceId = "00000000000000000000";
        TypeTreferenceId_AS = ' ';
        TypeTreferenceId = "00000000000000000000";
        TypeTupdateUserId_AS = ' ';
        TypeTupdateUserId = "        ";
        TypeTkeyAttrText_AS = ' ';
        TypeTkeyAttrText = "    ";
      }
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ENTITY ACTION VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    DYYY0341_EA WEa = new DYYY0341_EA();
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // LOCAL VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    DYYY0341_LA WLa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // CURSOR OPEN FLAGS
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    bool curs_open_0029360138 = false;
    
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // HOST VARIABLES FOR TABLE: VDVYYYT
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    string TkeyAttr_002EF;
    string TkeyAttr_002EN;
    string TupdateUserid_004EF;
    string TupdateUserid_004EN;
    DateTime TinstanceId_006EF;
    DateTime TinstanceId_006EN;
    DateTime TreferenceId_008EF;
    DateTime TreferenceId_008EN;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // HOST VARIABLES FOR TABLE: VDVYYYP
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    string PkeyAttr_010EF;
    string PkeyAttr_010EN;
    string FkVdvyyyttkeyAtt_012EF;
    string FkVdvyyyttkeyAtt_012EN;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // TEMPORARY HOST VARIABLES 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    string TkeyAttrText_001TP;
    
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // REPEATING GROUP VIEW STATUS FIELDS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    bool LocGroupContext_FL_001;
    int LocGroupContext_PS_001;
    bool LocGroupContext_RF_001;
    public const int LocGroupContext_MM_001 = 9;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // MISC DECLARATIONS AND PROTOTYPES 
    //    FOLLOW AS NEEDED:             
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    bool func_0022020277_esc_flag;
    IAbstractCommand hstmt_0037955621_1_cmd;
    IAbstractResultSet hstmt_0037955621_1_rs;
    bool func_0020972526_esc_flag;
    bool read_each_0068158287_esc_flag;
    IAbstractCommand hstmt_0037821843_1_cmd;
    IAbstractResultSet hstmt_0037821843_1_rs;
    bool func_0020972909_esc_flag;
    bool func_0020973024_esc_flag;
    //       +->   DYYY0341_TYPE_DELETE              01/09/2024  13:40
    //       !       IMPORTS:
    //       !         Work View imp_error iyy1_component (Transient,
    //       !                     Mandatory, Import only)
    //       !           severity_code
    //       !           rollback_indicator
    //       !           origin_servid
    //       !           context_string
    //       !           return_code
    //       !           reason_code
    //       !           checksum
    //       !         Work View imp_reference iyy1_server_data (Transient,
    //       !                     Mandatory, Import only)
    //       !           userid
    //       !           reference_id
    //       !         Entity View imp type (Transient, Mandatory, Import
    //       !                     only)
    //       !           tinstance_id
    //       !           treference_id
    //       !           tkey_attr_text
    //       !       EXPORTS:
    //       !         Work View exp_error iyy1_component (Transient, Export
    //       !                     only)
    //       !           severity_code
    //       !           rollback_indicator
    //       !           origin_servid
    //       !           context_string
    //       !           return_code
    //       !           reason_code
    //       !           checksum
    //       !       ENTITY ACTIONS:
    //       !         Entity View parent
    //       !           pkey_attr_text
    //       !           ptype_tkey_attr_text
    //       !         Entity View type
    //       !           tinstance_id
    //       !           treference_id
    //       !           tupdate_user_id
    //       !           tkey_attr_text
    //       !       LOCALS:
    //       !         Group View (9) loc_group_context
    //       !           Work View loc_g_context dont_change_text
    //       !             text_150
    //       !         Work View loc_error iyy1_component
    //       !           severity_code
    //       !           rollback_indicator
    //       !           origin_servid
    //       !           context_string
    //       !           return_code
    //       !           reason_code
    //       !           checksum
    //       !         Work View loc dont_change_return_codes
    //       !           1_ok
    //       !           n10_obj_not_found
    //       !           n43_obj_not_deleted
    //       !         Work View loc dont_change_reason_codes
    //       !           1_default
    //       !           141_type_not_found
    //       !           152_type_concurrency_error
    //       !           153_type_integrity_error
    //       !
    //       !     PROCEDURE STATEMENTS
    //       !
    //     1 !  NOTE: 
    //     1 !  Please review explanation for purpose.
    //     1 !  
    //     2 !  NOTE: 
    //     2 !  RELEASE HISTORY
    //     2 !  01_00 23-02-1998 New release
    //     2 !  
    //     3 !  MOVE imp_error iyy1_component TO exp_error iyy1_component
    //     4 !   
    //     5 !  NOTE: 
    //     5 !  ****************************************************************
    //     5 !  Values of the ReturnCode/ReasonCode used.
    //     5 !  
    //     6 !  NOTE: 
    //     6 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //     6 !  Please set the return ve reason code values below.
    //     6 !  
    //     7 !  SET loc dont_change_return_codes 1_ok TO 1 
    //     8 !  SET loc dont_change_return_codes n10_obj_not_found TO -10 
    //     9 !  SET loc dont_change_return_codes n43_obj_not_deleted TO -43 
    //    10 !   
    //    11 !  SET loc dont_change_reason_codes 1_default TO 1 
    //    12 !  SET loc dont_change_reason_codes 141_type_not_found TO 141 
    //    13 !  SET loc dont_change_reason_codes 152_type_concurrency_error TO
    //    13 !              152 
    //    14 !  SET loc dont_change_reason_codes 153_type_integrity_error TO
    //    14 !              153 
    //    15 !   
    //    16 !  NOTE: 
    //    16 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //    16 !  !!!!!!!!!!!!!!!!!!!!!
    //    16 !  Please select "Control of Cursor Generation" property as
    //    16 !  "Select only". 
    //    16 !  
    //    17 !  +=>READ (Select Only) type
    //    17 !  !        WHERE DESIRED type tkey_attr_text = imp type
    //    17 !  !              tkey_attr_text
    //    17 !  +> WHEN successful
    //    18 !  !  +->IF type treference_id ^= imp type treference_id
    //    19 !  !  !  SET exp_error iyy1_component return_code TO loc
    //    19 !  !  !              dont_change_return_codes n43_obj_not_deleted
    //    20 !  !  !  SET exp_error iyy1_component reason_code TO loc
    //    20 !  !  !              dont_change_reason_codes
    //    20 !  !  !              152_type_concurrency_error 
    //    21 ! <------ESCAPE
    //    18 !  !  +--
    //    22 !  !  NOTE: 
    //    22 ...!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //    22 ...!!!!!!!!!!!!!!
    //    22 ...If operation is dependent to 'parent' data type, preserve the
    //    22 ...PARENT READ process below, otherwise delete it.
    //    22 ...
    //    23 !  !  NOTE: 
    //    23 ...!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //    23 ...!!!!!!!!!!!!!!!!!!!!!
    //    23 ...Please set "General->Select Clause Isolation Level" property
    //    23 ...to "Uncomitted / Browse" 
    //    23 ..."DB2 MVS (XDB)->Optimize for N rows" property to "Use the
    //    23 ...value: 1". 
    //    23 ...
    //    23 ...
    //    24 !  !  +=>READ EACH (Optimize 1, Isolation UR) parent
    //    24 !  !  !        WHERE DESIRED parent ptype_tkey_attr_text =
    //    24 !  !  !              CURRENT type tkey_attr_text
    //    25 !  !  !  SET exp_error iyy1_component return_code TO loc
    //    25 !  !  !              dont_change_return_codes n43_obj_not_deleted
    //    26 !  !  !  SET exp_error iyy1_component reason_code TO loc
    //    26 !  !  !              dont_change_reason_codes
    //    26 !  !  !              153_type_integrity_error 
    //    27 ! <------ESCAPE
    //    24 !  !  +--
    //    28 !  !  DELETE type
    //    17 !  +> WHEN not found
    //    29 !  !  SET exp_error iyy1_component return_code TO loc
    //    29 !  !              dont_change_return_codes n10_obj_not_found 
    //    30 !  !  SET exp_error iyy1_component reason_code TO loc
    //    30 !  !              dont_change_reason_codes 141_type_not_found 
    //    17 !  +--
    //       +---
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //  CONSTRUCTOR FOR THE CLASS       
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    public DYYY0341(  )
    {
      IefCGenRlse = "CA Gen 8.6";
      IsCopyright = "Copyright (c) 2024 CA Technologies. All rights reserved.";
      IefCGenDate = "2024/01/09";
      IefCGenTime = "13:40:35";
      IefCGenEncy = "9.2.A6";
      IefCGenUserId = "AliAl";
      IefCGenModel = "N8I_ORT_YYY_0112_TEMPLATE";
      IefCGenSubset = "ALL";
      IefCGenName = "DYYY0341_TYPE_DELETE";
      NestingLevel = 0;
      ValChkDeadlockTimeout = false;
      ValChkDBError = false;
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ACTION BLOCK FUNCTION DECLARATIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void Execute( Object in_runtime_parm1, 
    	IRuntimePStepContext in_runtime_parm2, 
    	GlobData in_globdata, 
    	DYYY0341_IA import_view, 
    	DYYY0341_OA export_view )
    {
      IefRuntimeParm1 = in_runtime_parm1;
      IefRuntimeParm2 = in_runtime_parm2;
      Globdata = in_globdata;
      WIa = import_view;
      WOa = export_view;
      _Execute();
    }
    
    private void _Execute()
    {
      
      f_22020277_localAlloc( "DYYY0341_TYPE_DELETE" );
      if ( Globdata.GetErrorData().GetLastStatus() == ErrorData.LastStatusIefAllocationError )
      	return;
      
      ++(NestingLevel);
      try {
        f_22020277_init(  );
        f_22020277(  );
      } catch( Exception e ) {
        if ( ((Globdata.GetErrorData().GetStatus() == ErrorData.StatusNone) && (Globdata.GetErrorData().GetErrorEncountered() == 
          ErrorData.ErrorEncounteredNoErrorFound)) && (Globdata.GetErrorData().GetViewOverflow() == 
          ErrorData.ErrorEncounteredNoErrorFound) )
        {
          Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
          Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusUnexpectedExceptionError );
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
          Globdata.GetErrorData(  ).SetErrorMessage( e );
        }
      }
      --(NestingLevel);
    }
    public void f_22020277(  )
    {
      func_0022020277_esc_flag = false;
      Globdata.GetStateData().SetCurrentABId( "0022020277" );
      Globdata.GetStateData().SetCurrentABName( "DYYY0341_TYPE_DELETE" );
      {
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        //    Please review explanation for purpose.                          
        //                                                                    
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        //    RELEASE HISTORY                                                 
        //    01_00 23-02-1998 New release                                    
        //                                                                    
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        Globdata.GetStateData().SetLastStatementNumber( "0000000003" );
        WOa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(WIa.ImpErrorIyy1ComponentSeverityCode, 1);
        WOa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.ValueOf(WIa.ImpErrorIyy1ComponentRollbackIndicator, 1);
        WOa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(WIa.ImpErrorIyy1ComponentOriginServid);
        WOa.ExpErrorIyy1ComponentContextString = StringAttr.ValueOf(WIa.ImpErrorIyy1ComponentContextString, 512);
        WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf(WIa.ImpErrorIyy1ComponentReturnCode);
        WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf(WIa.ImpErrorIyy1ComponentReasonCode);
        WOa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.ValueOf(WIa.ImpErrorIyy1ComponentChecksum, 15);
        
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        //    **************************************************************  
        //    **                                                              
        //    Values of the ReturnCode/ReasonCode used.                       
        //                                                                    
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
        //    !!                                                              
        //    Please set the return ve reason code values below.              
        //                                                                    
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        Globdata.GetStateData().SetLastStatementNumber( "0000000007" );
        WLa.LocDontChangeReturnCodesQ1Ok = IntAttr.ValueOf((int)TIRD2DEC.Execute1(1, 0, TIRD2DEC.ROUND_NONE, 5));
        Globdata.GetStateData().SetLastStatementNumber( "0000000008" );
        WLa.LocDontChangeReturnCodesN10ObjNotFound = IntAttr.ValueOf((int)TIRD2DEC.Execute1(-10, 0, TIRD2DEC.ROUND_NONE, 5));
        Globdata.GetStateData().SetLastStatementNumber( "0000000009" );
        WLa.LocDontChangeReturnCodesN43ObjNotDeleted = IntAttr.ValueOf((int)TIRD2DEC.Execute1(-43, 0, TIRD2DEC.ROUND_NONE, 5));
        
        Globdata.GetStateData().SetLastStatementNumber( "0000000011" );
        WLa.LocDontChangeReasonCodesQ1Default = IntAttr.ValueOf((int)TIRD2DEC.Execute1(1, 0, TIRD2DEC.ROUND_NONE, 5));
        Globdata.GetStateData().SetLastStatementNumber( "0000000012" );
        WLa.LocDontChangeReasonCodesQ141TypeNotFound = IntAttr.ValueOf((int)TIRD2DEC.Execute1(141, 0, TIRD2DEC.ROUND_NONE, 5));
        Globdata.GetStateData().SetLastStatementNumber( "0000000013" );
        WLa.LocDontChangeReasonCodesQ152TypeConcurrencyError = IntAttr.ValueOf((int)TIRD2DEC.Execute1(152, 0, TIRD2DEC.ROUND_NONE, 5)
          );
        Globdata.GetStateData().SetLastStatementNumber( "0000000014" );
        WLa.LocDontChangeReasonCodesQ153TypeIntegrityError = IntAttr.ValueOf((int)TIRD2DEC.Execute1(153, 0, TIRD2DEC.ROUND_NONE, 5))
          ;
        
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
        //    !!!!!!!!!!!!!!!!!!!!!                                           
        //    Please select "Control of Cursor Generation" property as        
        //    "Select only".                                                  
        //                                                                    
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        Globdata.GetStateData().SetLastStatementNumber( "0000000017" );
        f_29360138(  );
        if ( sl_29360138 == ErrorData.LastStatusSucceeds )
        {
          Globdata.GetStateData().SetLastSubStatementNumber( "1" );
          {
            f_20972526(  );
          }
        }
        else if ( sl_29360138 == ErrorData.LastStatusNotFound )
        {
          Globdata.GetStateData().SetLastSubStatementNumber( "2" );
          {
            Globdata.GetStateData().SetLastStatementNumber( "0000000029" );
            WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
              WLa.LocDontChangeReturnCodesN10ObjNotFound, 0, TIRD2DEC.ROUND_NONE, 5));
            Globdata.GetStateData().SetLastStatementNumber( "0000000030" );
            WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
              WLa.LocDontChangeReasonCodesQ141TypeNotFound, 0, TIRD2DEC.ROUND_NONE, 5));
          }
        }
        else {
          Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
          Globdata.GetErrorData().SetLastStatus( sl_29360138 );
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
          throw new ABException();
        }
      }
      f_0022020277_esctag: 
      ;
      return;
    }
    
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // SUBORDINATE FUNCTIONS
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    
    public void f_20972526(  )
    {
      func_0020972526_esc_flag = false;
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000018" );
        if ( CompareExit.CompareTo(WEa.TypeTreferenceId, WIa.ImpTypeTreferenceId) != 0 )
        {
          f_20972909(  );
        }
        
        if ( func_0020972526_esc_flag )
        {
          goto f_0020972526_esctag;
        }
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
        //    !!!!!!!!!!!!!!                                                  
        //    If operation is dependent to 'parent' data type, preserve the   
        //    PARENT READ process below, otherwise delete it.                 
        //                                                                    
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
        //    !!!!!!!!!!!!!!!!!!!!!                                           
        //    Please set "General->Select Clause Isolation Level" property    
        //    to "Uncomitted / Browse"                                        
        //    "DB2 MVS (XDB)->Optimize for N rows" property to "Use the       
        //    value: 1".                                                      
        //                                                                    
        //                                                                    
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        sl_29360185 = ErrorData.LastStatusNotFound;
        Globdata.GetStateData().SetLastStatementNumber( "0000000024" );
        read_each_0068158287_esc_flag = false;
        f_29360185_open(  );
        if ( sl_29360185 == ErrorData.LastStatusSucceeds )
        {
          f_29360185_fetch(  );
          while ((sl_29360185 == ErrorData.LastStatusSucceeds == true) && (read_each_0068158287_esc_flag != true))
          {
            {
              f_20973024(  );
            }
            Globdata.GetStateData().SetLastStatementNumber( "0000000024" );
            if ( read_each_0068158287_esc_flag != true )
            f_29360185_fetch(  );
          }
          if ( read_each_0068158287_esc_flag != true )
          {
            if ( !((sl_29360185 == ErrorData.LastStatusSucceeds == false) && (sl_29360185 == ErrorData.LastStatusNotFound == false)) 
              )
            {
              f_29360185_esc_close(  );
            }
            f_29360185_close(  );
          }
        }
        if ( (sl_29360185 == ErrorData.LastStatusSucceeds == false) && (sl_29360185 == ErrorData.LastStatusNotFound == false) )
        {
          Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
          Globdata.GetErrorData().SetLastStatus( sl_29360185 );
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
          throw new ABException();
        }
        if ( func_0020972526_esc_flag )
        {
          goto f_0020972526_esctag;
        }
        Globdata.GetStateData().SetLastStatementNumber( "0000000028" );
        ValChkDeadlockTimeout = false;
        ValChkDBError = false;
        f_28311569(  );
        if ( dl_28311569 == ErrorData.LastStatusSucceeds )
        {
        }
        else if ( dl_28311569 == ErrorData.LastStatusNotFound )
        {
          Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
          Globdata.GetDBMSData().SetActionId( 28 );
          Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusNotFound );
          throw new ABException();
        }
        else {
          Globdata.GetErrorData().SetStatus( ErrorData.LastStatusDbError );
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
          throw new ABException();
        }
      }
      f_0020972526_esctag: 
      ;
      return;
    }
    
    public void f_20972909(  )
    {
      func_0020972909_esc_flag = false;
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000019" );
        WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
          WLa.LocDontChangeReturnCodesN43ObjNotDeleted, 0, TIRD2DEC.ROUND_NONE, 5));
        Globdata.GetStateData().SetLastStatementNumber( "0000000020" );
        WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
          WLa.LocDontChangeReasonCodesQ152TypeConcurrencyError, 0, TIRD2DEC.ROUND_NONE, 5));
        Globdata.GetStateData().SetLastStatementNumber( "0000000021" );
        func_0020972909_esc_flag = true;
        func_0020972526_esc_flag = true;
      }
      f_0020972909_esctag: 
      ;
      return;
    }
    
    public void f_20973024(  )
    {
      func_0020973024_esc_flag = false;
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000025" );
        WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
          WLa.LocDontChangeReturnCodesN43ObjNotDeleted, 0, TIRD2DEC.ROUND_NONE, 5));
        Globdata.GetStateData().SetLastStatementNumber( "0000000026" );
        WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
          WLa.LocDontChangeReasonCodesQ153TypeIntegrityError, 0, TIRD2DEC.ROUND_NONE, 5));
        Globdata.GetStateData().SetLastStatementNumber( "0000000027" );
        func_0020973024_esc_flag = true;
        f_29360185_esc_close(  );
        read_each_0068158287_esc_flag = true;
        func_0020972526_esc_flag = true;
      }
      f_0020973024_esctag: 
      ;
      return;
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // INITIALIZATION UTILITY FUNCTIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void f_22020277_localAlloc( String abname )
    {
      // Request localview allocation 
      WLa = (GEN.ORT.YYY.DYYY0341_LA)(IefRuntimeParm2.GetInstance( GetType().Assembly,
      	"GEN.ORT.YYY.DYYY0341_LA" ));
      if ( WLa == null )
      {
        Globdata.GetStateData().SetCurrentABId( "0022020277" );
        Globdata.GetStateData().SetCurrentABName( abname );
        Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
        Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusIefAllocationError );
      }
    }
    
    public void f_22020277_init(  )
    {
      
      TkeyAttr_002EF = Spaces;
      TkeyAttr_002EN = Spaces;
      TupdateUserid_004EF = Spaces;
      TupdateUserid_004EN = Spaces;
      TinstanceId_006EF = TIRVW2S.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	"00010101000000000000" );
      TinstanceId_006EN = TIRVW2S.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	"00010101000000000000" );
      TreferenceId_008EF = TIRVW2S.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	"00010101000000000000" );
      TreferenceId_008EN = TIRVW2S.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	"00010101000000000000" );
      
      PkeyAttr_010EF = Spaces;
      PkeyAttr_010EN = Spaces;
      FkVdvyyyttkeyAtt_012EF = Spaces;
      FkVdvyyyttkeyAtt_012EN = Spaces;
      if ( NestingLevel < 2 )
      {
        WLa.Reset();
      }
      WLa.LocGroupContext_MA = 0;
      for(LocGroupContext_PS_001 = 1; LocGroupContext_PS_001 <= 9; ++(LocGroupContext_PS_001))
      {
      }
      WEa.Reset();
      WOa.ExpErrorIyy1ComponentSeverityCode = " ";
      WOa.ExpErrorIyy1ComponentRollbackIndicator = " ";
      WOa.ExpErrorIyy1ComponentOriginServid = 0.0;
      WOa.ExpErrorIyy1ComponentContextString = "";
      WOa.ExpErrorIyy1ComponentReturnCode = 0;
      WOa.ExpErrorIyy1ComponentReasonCode = 0;
      WOa.ExpErrorIyy1ComponentChecksum = "               ";
      Parent_es = ABBase.EvUnusable;
      Parent_lk = ABBase.EvwUnlocked;
      Type_es = ABBase.EvUnusable;
      Type_lk = ABBase.EvwUnlocked;
      WEa.TypeTinstanceId = "00000000000000000000";
      WEa.TypeTreferenceId = "00000000000000000000";
      LocGroupContext_PS_001 = 1;
    }
    public void f_22020277_procq(  )
    {
    }
    public void f_29360138(  )
    {
      sl_29360138 = ErrorData.LastStatusSucceeds;
      Type_003cd = ABBase.PvSelect;
      Type_lk = ABBase.EvwUnlocked;
      f_29360138_moveb(  );
      
      if ( sl_29360138 == ErrorData.LastStatusSucceeds )
      {
        ValChkDeadlockTimeout = false;
        ValChkDBError = false;
        Type_es = ABBase.EvUsable;
        DataException = null;
        try {
          if ( hstmt_0037955621_1_cmd == null )
          {
            SQLStatement.Length = 0;
            
            SQLStatement.Append("SELECT ");
            SQLStatement.Append("VDVYYYT01.`TINSTANCE_ID`,");
            SQLStatement.Append("VDVYYYT01.`TREFERENCE_ID`,");
            SQLStatement.Append("VDVYYYT01.`TUPDATE_USERID`,");
            SQLStatement.Append("VDVYYYT01.`TKEY_ATTR`");
            SQLStatement.Append(" FROM ");
            SQLStatement.Append("`VDVYYYT` VDVYYYT01");
            SQLStatement.Append(" WHERE ");
            SQLStatement.Append("(");
            SQLStatement.Append("VDVYYYT01.`TKEY_ATTR` = ?");
            SQLStatement.Append(")");
            hstmt_0037955621_1_cmd = Globdata.GetDBMSData().GetDBMSManager().GetCommand(Globdata, IefRuntimeParm2, "IEFDB", 
              SQLStatement.ToString());
            hstmt_0037955621_1_cmd.InsertParameter();
          }
          hstmt_0037955621_1_cmd.BindParameter(0, TkeyAttrText_001TP);
          hstmt_0037955621_1_rs = hstmt_0037955621_1_cmd.ExecuteQuery(  );
          if ( hstmt_0037955621_1_rs.MoveNext(  ) == false )
          {
            throw new Exception("No data found");
          }
          TinstanceId_006EF = Globdata.GetDBMSData().GetDBMSManager().GetDateTime(IefRuntimeParm2, "IEFDB", 
            hstmt_0037955621_1_rs.GetValue(0));
          TreferenceId_008EF = Globdata.GetDBMSData().GetDBMSManager().GetDateTime(IefRuntimeParm2, "IEFDB", 
            hstmt_0037955621_1_rs.GetValue(1));
          TupdateUserid_004EF = Globdata.GetDBMSData().GetDBMSManager().GetString(IefRuntimeParm2, "IEFDB", 
            hstmt_0037955621_1_rs.GetValue(2));
          TkeyAttr_002EF = Globdata.GetDBMSData().GetDBMSManager().GetString(IefRuntimeParm2, "IEFDB", 
            hstmt_0037955621_1_rs.GetValue(3));
          if ( hstmt_0037955621_1_rs.MoveNext(  ) == true )
          {
            throw new Exception("READ statement with SELECT ONLY property returned more than 1 row");
          }
        } catch( Exception e ) {
          DataException = e;
        }
        if ( Globdata.GetDBMSData().GetDBMSManager().WasSuccessful(DataException) )
        {
          f_29360138_movea(  );
          if ( sl_29360138 == ErrorData.LastStatusSucceeds )
          {
            Type_es = ABBase.EvUsable;
          }
          else {
            Type_es = ABBase.EvUnusable;
          }
          try {
            if ( hstmt_0037955621_1_rs != null )
            {
              hstmt_0037955621_1_rs.Close(  );
              hstmt_0037955621_1_rs = null;
            }
            if ( hstmt_0037955621_1_cmd != null )
            {
              hstmt_0037955621_1_cmd.Close(  );
              hstmt_0037955621_1_cmd = null;
            }
          } catch( Exception e ) {
            if ( Globdata.GetDBMSData().GetDBMSManager().WasSuccessful(e) == false )
            {
              DataException = e;
              f_29360138_adonet_dberror(  );
            }
          }
        }
        else if ( Globdata.GetDBMSData().GetDBMSManager().WasNoDataFound(DataException) )
        {
          sl_29360138 = ErrorData.LastStatusNotFound;
          Type_es = ABBase.EvUnusable;
          try {
            if ( hstmt_0037955621_1_rs != null )
            {
              hstmt_0037955621_1_rs.Close(  );
              hstmt_0037955621_1_rs = null;
            }
            if ( hstmt_0037955621_1_cmd != null )
            {
              hstmt_0037955621_1_cmd.Close(  );
              hstmt_0037955621_1_cmd = null;
            }
          } catch( Exception e ) {
            if ( Globdata.GetDBMSData().GetDBMSManager().WasSuccessful(e) == false )
            {
              DataException = e;
              f_29360138_adonet_dberror(  );
            }
          }
        }
        else {
          f_29360138_adonet_dberror(  );
        }
      }
    }
    
    public void f_29360138_adonet_dberror(  )
    {
      Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
      Globdata.GetDBMSData().SetActionId( 17 );
      if ( DataException != null )
      {
        Globdata.GetErrorData(  ).SetErrorMessage( DataException );
      }
      Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusDbError );
      sl_29360138 = Globdata.GetErrorData().GetLastStatus();
      throw new ABException();
    }
    
    public void f_29360138_moveb(  )
    {
      TkeyAttrText_001TP = WIa.ImpTypeTkeyAttrText;
    }
    
    public void f_29360138_movea(  )
    {
      WEa.TypeTinstanceId = TimestampAttr.ValueOf(TIRS2VW.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	TinstanceId_006EF ));
      WEa.TypeTreferenceId = TimestampAttr.ValueOf(TIRS2VW.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	TreferenceId_008EF ));
      WEa.TypeTupdateUserId = FixedStringAttr.ValueOf(TupdateUserid_004EF, 8);
      WEa.TypeTkeyAttrText = FixedStringAttr.ValueOf(TkeyAttr_002EF, 4);
    }
    public void f_29360185_open(  )
    {
      sl_29360185 = ErrorData.LastStatusSucceeds;
      Parent_001cd = ABBase.PvSelect;
      Parent_lk = ABBase.EvwUnlocked;
      f_29360185_moveb(  );
      
      if ( sl_29360185 == ErrorData.LastStatusSucceeds )
      {
        ValChkDeadlockTimeout = false;
        ValChkDBError = false;
        Parent_es = ABBase.EvUsable;
        DataException = null;
        try {
          if ( hstmt_0037821843_1_cmd == null )
          {
            SQLStatement.Length = 0;
            
            SQLStatement.Append("SELECT ");
            SQLStatement.Append("VDVYYYP01.`PKEY_ATTR`,");
            SQLStatement.Append("VDVYYYP01.`FK_VDVYYYTTKEY_ATT`");
            SQLStatement.Append(" FROM ");
            SQLStatement.Append("`VDVYYYP` VDVYYYP01");
            SQLStatement.Append(" WHERE ");
            SQLStatement.Append("(");
            SQLStatement.Append("VDVYYYP01.`FK_VDVYYYTTKEY_ATT` = ?");
            SQLStatement.Append(")");
            if ( Globdata.GetDBMSData().GetDBMSManager().IsDBMS(IefRuntimeParm2, "IEFDB", "DB2") )
            {
              SQLStatement.Append(" WITH UR ");
            }
            hstmt_0037821843_1_cmd = Globdata.GetDBMSData().GetDBMSManager().GetCommand(Globdata, IefRuntimeParm2, "IEFDB", 
              SQLStatement.ToString());
            hstmt_0037821843_1_cmd.InsertParameter();
          }
          hstmt_0037821843_1_cmd.BindParameter(0, TkeyAttr_002EF);
          hstmt_0037821843_1_rs = hstmt_0037821843_1_cmd.ExecuteQuery(  );
        } catch( Exception e ) {
          DataException = e;
        }
        if ( !((Globdata.GetDBMSData().GetDBMSManager().WasSuccessful(DataException))) )
        {
             f_29360185_adonet_dberror(  );
        }
      }
    }
    
    public void f_29360185_fetch(  )
    {
      DataException = null;
      try {
        if ( hstmt_0037821843_1_rs.MoveNext(  ) == false )
        {
          throw new Exception("No data found");
        }
        PkeyAttr_010EF = Globdata.GetDBMSData().GetDBMSManager().GetString(IefRuntimeParm2, "IEFDB", hstmt_0037821843_1_rs.GetValue(
          0));
        FkVdvyyyttkeyAtt_012EF = Globdata.GetDBMSData().GetDBMSManager().GetString(IefRuntimeParm2, "IEFDB", 
          hstmt_0037821843_1_rs.GetValue(1));
      } catch( Exception e ) {
        DataException = e;
      }
      
      if ( Globdata.GetDBMSData().GetDBMSManager().WasSuccessful(DataException) )
      {
        f_29360185_movea(  );
        if ( sl_29360185 == ErrorData.LastStatusSucceeds )
        {
          Parent_es = ABBase.EvUsable;
        }
        else {
          Parent_es = ABBase.EvUnusable;
        }
      }
      else if ( Globdata.GetDBMSData().GetDBMSManager().WasNoDataFound(DataException) )
      {
        sl_29360185 = ErrorData.LastStatusNotFound;
        Parent_es = ABBase.EvUnusable;
      }
      else {
        f_29360185_adonet_dberror(  );
      }
    }
    
    public void f_29360185_esc_close(  )
    {
      try {
        if ( hstmt_0037821843_1_rs != null )
        {
          hstmt_0037821843_1_rs.Close(  );
          hstmt_0037821843_1_rs = null;
        }
        if ( hstmt_0037821843_1_cmd != null )
        {
          hstmt_0037821843_1_cmd.Close(  );
          hstmt_0037821843_1_cmd = null;
        }
      } catch( Exception e ) {
        if ( Globdata.GetDBMSData().GetDBMSManager().WasSuccessful(e) == false )
        {
          DataException = e;
          f_29360185_adonet_dberror(  );
        }
      }
    }
    public void f_29360185_close(  )
    {
      Parent_es = ABBase.EvUnusable;
    }
    
    public void f_29360185_adonet_dberror(  )
    {
      Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
      Globdata.GetDBMSData().SetActionId( 24 );
      if ( DataException != null )
      {
        Globdata.GetErrorData(  ).SetErrorMessage( DataException );
      }
      Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusDbError );
      sl_29360185 = Globdata.GetErrorData().GetLastStatus();
      throw new ABException();
    }
    
    public void f_29360185_moveb(  )
    {
      if ( Type_es == ABBase.EvUnusable )
      {
        sl_29360185 = ABBase.EvUnusable;
        return;
      }
      TkeyAttr_002EF = WEa.TypeTkeyAttrText;
    }
    
    public void f_29360185_movea(  )
    {
      WEa.ParentPkeyAttrText = FixedStringAttr.ValueOf(PkeyAttr_010EF, 5);
      WEa.ParentPtypeTkeyAttrText = FixedStringAttr.ValueOf(FkVdvyyyttkeyAtt_012EF, 4);
    }
    
    
    public void f_28311569(  )
    {
      if ( Type_es == ABBase.EvUnusable )
      {
        dl_28311569 = ABBase.EvUnusable;
        Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
        Globdata.GetDBMSData().SetActionId( 28 );
        Globdata.GetErrorData().SetLastStatus( dl_28311569 );
        throw new ABException();
      }
      else {
        dl_28311569 = ErrorData.LastStatusSucceeds;
        Type_003cd = ABBase.PvDelete;
        Globdata.GetErrorData().SetStatus( ErrorData.StatusNone );
        Type_es = ABBase.EvUnusable;
        Type_lk = ABBase.EvwUnlocked;
        Globdata.GetDBMSData().SetProcessQueue( true );
        if ( PdaQueueCMCB == null )
        {
          PdaQueueCMCB = DAQueue.GetInstance(  );
        }
        PdaQueueCMCB.Reset();
        GEN.ORT.YYY.YYZTYPE1.Execute( IefRuntimeParm1,
        	IefRuntimeParm2,
        	Globdata,
        	PdaQueueCMCB,
        	0,
        	TkeyAttr_002EF );
        if ( Globdata.GetErrorData().GetStatus() == ErrorData.StatusNone )
        {
          f_22020277_procq(  );
          Globdata.GetStateData().SetCurrentABId( "0022020277" );
          Globdata.GetStateData().SetCurrentABName( "DYYY0341_TYPE_DELETE" );
        }
        if ( Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone )
        {
          dl_28311569 = ErrorData.LastStatusFatalError;
          throw new ABException();
        }
      }
    }
  }// end class
  
}

