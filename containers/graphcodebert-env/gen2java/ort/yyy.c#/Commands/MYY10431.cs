namespace GEN.ORT.YYY
{
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  //
  //                    Source Code Generated by
  //                           CA Gen 8.6
  //
  //    Copyright (c) 2024 CA Technologies. All rights reserved.
  //
  //    Name: MYY10431_XML_GROUP_CREATE        Date: 2024/01/09
  //    Target OS:   CLR                       Time: 13:41:32
  //    Target DBMS: ODBC/ADO.NET              User: AliAl
  //    Access Method: <NONE>         
  //
  //    Generation options:
  //    Debug trace option not selected
  //    Data modeling constraint enforcement not selected
  //    Optimized import view initialization not selected
  //    Enforce default values with DBMS not selected
  //    Init unspecified optional fields to NULL not selected
  //
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // using Statements
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  using System;
  using com.ca.gen.vwrt;
  using com.ca.gen.vwrt.types;
  using com.ca.gen.vwrt.vdf;
  using com.ca.gen.csu.exception;
  
  using com.ca.gen.abrt;
  using com.ca.gen.abrt.functions;
  using com.ca.gen.abrt.cascade;
  using com.ca.gen.abrt.manager;
  using com.ca.gen.abrt.trace;
  using com.ca.gen.exits.common;
  using com.ca.gen.odc;
  using System.Data;
  using System.Collections;
  
  public class MYY10431 : ABBase
  {
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // IMPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    MYY10431_IA WIa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // EXPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    MYY10431_OA WOa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // LOCAL VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    MYY10431_LA WLa;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ACTION BLOCK IMPORT/EXPORT VIEWS CLASS VARIABLES
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    GEN.ORT.YYY.CYYY0431_IA Cyyy0431Ia;
    GEN.ORT.YYY.CYYY0431_OA Cyyy0431Oa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // REPEATING GROUP VIEW STATUS FIELDS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    bool ImpGroup_FL_001;
    int ImpGroup_PS_001;
    bool ImpGroup_RF_001;
    public const int ImpGroup_MM_001 = 10;
    bool LocImpGroup_FL_002;
    int LocImpGroup_PS_002;
    bool LocImpGroup_RF_002;
    public const int LocImpGroup_MM_002 = 10;
    bool ImpGroup_FL_003;
    int ImpGroup_PS_003;
    bool ImpGroup_RF_003;
    public const int ImpGroup_MM_003 = 48;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // FOR-LOOP CONTROL TEMPORARY VARIABLES 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    int by___0070254956;
    int limit___0070254956;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // MISC DECLARATIONS AND PROTOTYPES 
    //    FOLLOW AS NEEDED:             
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    bool func_0022020169_esc_flag;
    bool while_0070254956_esc_flag;
    //       +->   MYY10431_XML_GROUP_CREATE         01/09/2024  13:41
    //       !       IMPORTS:
    //       !         Group View (10) imp_group
    //       !           Entity View imp_g iyy1_type (Transient, Optional,
    //       !                       Import only)
    //       !             tinstance_id
    //       !             treference_id
    //       !             tcreate_user_id
    //       !             tupdate_user_id
    //       !             tkey_attr_text
    //       !             tsearch_attr_text
    //       !             tother_attr_text
    //       !             tother_attr_date
    //       !             tother_attr_time
    //       !             tother_attr_amount
    //       !       EXPORTS:
    //       !         Work View exp canam_xml (Transient, Export only)
    //       !           xml_buffer
    //       !         Work View exp_error canam_xml (Transient, Export only)
    //       !           xml_return_code
    //       !           xml_message
    //       !           xml_position
    //       !           xml_source
    //       !         Work View exp_error iyy1_component (Transient, Export
    //       !                     only)
    //       !           severity_code
    //       !           rollback_indicator
    //       !           origin_servid
    //       !           context_string
    //       !           return_code
    //       !           reason_code
    //       !           checksum
    //       !       LOCALS:
    //       !         Group View (10) loc_imp_group
    //       !           Entity View loc_imp_g type
    //       !             tinstance_id
    //       !             treference_id
    //       !             tcreate_user_id
    //       !             tupdate_user_id
    //       !             tkey_attr_text
    //       !             tsearch_attr_text
    //       !             tother_attr_text
    //       !             tother_attr_date
    //       !             tother_attr_time
    //       !             tother_attr_amount
    //       !
    //       !     PROCEDURE STATEMENTS
    //       !
    //     1 !  NOTE: 
    //     1 !  Check description for porpose
    //     1 !  
    //     2 !  NOTE: 
    //     2 !  RELEASE HISTORY
    //     2 !  01_00 01-10-2009 New Release
    //     2 !  
    //     3 !  NOTE: 
    //     3 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //     3 !  !!!!!!!!!!!!
    //     3 !  SET <loc imp*> TO <imp*>
    //     3 !  
    //     4 !   
    //     5 !  +=>FOR SUBSCRIPT OF imp_group FROM 1 TO LAST OF imp_group BY 1
    //     6 !  !  SET SUBSCRIPT OF loc_imp_group TO SUBSCRIPT OF imp_group 
    //     7 !  !  SET loc_imp_g type tcreate_user_id TO imp_g iyy1_type
    //     7 !  !              tcreate_user_id 
    //     8 !  !  SET loc_imp_g type tkey_attr_text TO imp_g iyy1_type
    //     8 !  !              tkey_attr_text 
    //     9 !  !  SET loc_imp_g type tother_attr_text TO imp_g iyy1_type
    //     9 !  !              tother_attr_text 
    //    10 !  !  SET loc_imp_g type tsearch_attr_text TO imp_g iyy1_type
    //    10 !  !              tsearch_attr_text 
    //    11 !  !  SET loc_imp_g type tupdate_user_id TO imp_g iyy1_type
    //    11 !  !              tupdate_user_id 
    //    12 !  !  SET loc_imp_g type tinstance_id TO imp_g iyy1_type
    //    12 !  !              tinstance_id 
    //    13 !  !  SET loc_imp_g type treference_id TO imp_g iyy1_type
    //    13 !  !              treference_id 
    //    14 !  !  SET loc_imp_g type tother_attr_date TO imp_g iyy1_type
    //    14 !  !              tother_attr_date 
    //    15 !  !  SET loc_imp_g type tother_attr_time TO imp_g iyy1_type
    //    15 !  !              tother_attr_time 
    //    16 !  !  SET loc_imp_g type tother_attr_amount TO imp_g iyy1_type
    //    16 !  !              tother_attr_amount 
    //     5 !  +--
    //    17 !  USE cyyy0431_xml_group_create
    //    17 !     WHICH IMPORTS: Group View  loc_imp_group TO Group View
    //    17 !              imp_group
    //    17 !     WHICH EXPORTS: Work View exp canam_xml FROM Work View
    //    17 !              exp_error canam_xml
    //    17 !                    Work View exp canam_xml FROM Work View
    //    17 !              exp_error canam_xml
    //    17 !                    Work View exp_error iyy1_component FROM Work
    //    17 !              View exp_error iyy1_component
    //       +---
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //  CONSTRUCTOR FOR THE CLASS       
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    public MYY10431(  )
    {
      IefCGenRlse = "CA Gen 8.6";
      IsCopyright = "Copyright (c) 2024 CA Technologies. All rights reserved.";
      IefCGenDate = "2024/01/09";
      IefCGenTime = "13:41:32";
      IefCGenEncy = "9.2.A6";
      IefCGenUserId = "AliAl";
      IefCGenModel = "N8I_ORT_YYY_0112_TEMPLATE";
      IefCGenSubset = "ALL";
      IefCGenName = "MYY10431_XML_GROUP_CREATE";
      NestingLevel = 0;
      ValChkDeadlockTimeout = false;
      ValChkDBError = false;
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ACTION BLOCK FUNCTION DECLARATIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void Execute( Object in_runtime_parm1, 
    	IRuntimePStepContext in_runtime_parm2, 
    	GlobData in_globdata, 
    	MYY10431_IA import_view, 
    	MYY10431_OA export_view )
    {
      IefRuntimeParm1 = in_runtime_parm1;
      IefRuntimeParm2 = in_runtime_parm2;
      Globdata = in_globdata;
      WIa = import_view;
      WOa = export_view;
      _Execute();
    }
    
    private void _Execute()
    {
      
      f_22020169_localAlloc( "MYY10431_XML_GROUP_CREATE" );
      if ( Globdata.GetErrorData().GetLastStatus() == ErrorData.LastStatusIefAllocationError )
      	return;
      
      ++(NestingLevel);
      try {
        f_22020169_init(  );
        f_22020169(  );
      } catch( Exception e ) {
        if ( ((Globdata.GetErrorData().GetStatus() == ErrorData.StatusNone) && (Globdata.GetErrorData().GetErrorEncountered() == 
          ErrorData.ErrorEncounteredNoErrorFound)) && (Globdata.GetErrorData().GetViewOverflow() == 
          ErrorData.ErrorEncounteredNoErrorFound) )
        {
          Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
          Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusUnexpectedExceptionError );
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
          Globdata.GetErrorData(  ).SetErrorMessage( e );
        }
      }
      --(NestingLevel);
    }
    public void f_22020169(  )
    {
      func_0022020169_esc_flag = false;
      Globdata.GetStateData().SetCurrentABId( "0022020169" );
      Globdata.GetStateData().SetCurrentABName( "MYY10431_XML_GROUP_CREATE" );
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    Check description for porpose                                   
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    RELEASE HISTORY                                                 
      //    01_00 01-10-2009 New Release                                    
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
      //    !!!!!!!!!!!!                                                    
      //    SET <loc imp*> TO <imp*>                                        
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000005" );
      while_0070254956_esc_flag = false;
      ImpGroup_PS_001 = (int)1;
      limit___0070254956 = WIa.ImpGroup_MA;
      by___0070254956 = 1;
      while ((ImpGroup_PS_001 <= limit___0070254956) && (while_0070254956_esc_flag != true))
      {
        if ( (ImpGroup_PS_001 > 10) || (ImpGroup_PS_001 < 1) )
        break;
        if ( (ImpGroup_PS_001 > WIa.ImpGroup_MA) && (ImpGroup_PS_001 <= 10) )
        WIa.ImpGroup_MA = IntAttr.ValueOf(ImpGroup_PS_001);
        {
          Globdata.GetStateData().SetLastStatementNumber( "0000000006" );
          LocImpGroup_PS_002 = (int)TIRD2DEC.Execute1(ImpGroup_PS_001, 0, TIRD2DEC.ROUND_NONE, 0);
          if ( (LocImpGroup_PS_002 > WLa.LocImpGroup_MA) && (LocImpGroup_PS_002 <= 10) )
          WLa.LocImpGroup_MA = IntAttr.ValueOf(LocImpGroup_PS_002);
          Globdata.GetStateData().SetLastStatementNumber( "0000000007" );
          WLa.LocImpGTypeTcreateUserId[LocImpGroup_PS_002-1] = FixedStringAttr.ValueOf(WIa.ImpGIyy1TypeTcreateUserId[
            ImpGroup_PS_001-1], 8);
          f_173015098_rgvc(  );
          Globdata.GetStateData().SetLastStatementNumber( "0000000008" );
          WLa.LocImpGTypeTkeyAttrText[LocImpGroup_PS_002-1] = FixedStringAttr.ValueOf(WIa.ImpGIyy1TypeTkeyAttrText[ImpGroup_PS_001-1]
            , 4);
          f_173015098_rgvc(  );
          Globdata.GetStateData().SetLastStatementNumber( "0000000009" );
          WLa.LocImpGTypeTotherAttrText[LocImpGroup_PS_002-1] = FixedStringAttr.ValueOf(WIa.ImpGIyy1TypeTotherAttrText[
            ImpGroup_PS_001-1], 2);
          f_173015098_rgvc(  );
          Globdata.GetStateData().SetLastStatementNumber( "0000000010" );
          WLa.LocImpGTypeTsearchAttrText[LocImpGroup_PS_002-1] = FixedStringAttr.ValueOf(WIa.ImpGIyy1TypeTsearchAttrText[
            ImpGroup_PS_001-1], 20);
          f_173015098_rgvc(  );
          Globdata.GetStateData().SetLastStatementNumber( "0000000011" );
          WLa.LocImpGTypeTupdateUserId[LocImpGroup_PS_002-1] = FixedStringAttr.ValueOf(WIa.ImpGIyy1TypeTupdateUserId[
            ImpGroup_PS_001-1], 8);
          f_173015098_rgvc(  );
          Globdata.GetStateData().SetLastStatementNumber( "0000000012" );
          WLa.LocImpGTypeTinstanceId[LocImpGroup_PS_002-1] = TimestampAttr.ValueOf(WIa.ImpGIyy1TypeTinstanceId[ImpGroup_PS_001-1]);
          f_173015098_rgvc(  );
          Globdata.GetStateData().SetLastStatementNumber( "0000000013" );
          WLa.LocImpGTypeTreferenceId[LocImpGroup_PS_002-1] = TimestampAttr.ValueOf(WIa.ImpGIyy1TypeTreferenceId[ImpGroup_PS_001-1])
            ;
          f_173015098_rgvc(  );
          Globdata.GetStateData().SetLastStatementNumber( "0000000014" );
          WLa.LocImpGTypeTotherAttrDate[LocImpGroup_PS_002-1] = DateAttr.ValueOf(WIa.ImpGIyy1TypeTotherAttrDate[ImpGroup_PS_001-1]);
          f_173015098_rgvc(  );
          Globdata.GetStateData().SetLastStatementNumber( "0000000015" );
          WLa.LocImpGTypeTotherAttrTime[LocImpGroup_PS_002-1] = TimeAttr.ValueOf(WIa.ImpGIyy1TypeTotherAttrTime[ImpGroup_PS_001-1]);
          f_173015098_rgvc(  );
          Globdata.GetStateData().SetLastStatementNumber( "0000000016" );
          WLa.LocImpGTypeTotherAttrAmount[LocImpGroup_PS_002-1] = DecimalAttr.ValueOf(TIRBDTRU.TruncateToDecimal( 
            WIa.ImpGIyy1TypeTotherAttrAmount[ImpGroup_PS_001-1], 2));
          f_173015098_rgvc(  );
        }
        Globdata.GetStateData().SetLastStatementNumber( "0000000005" );
        ImpGroup_PS_001 = (int)(ImpGroup_PS_001 + by___0070254956);
        Globdata.GetStateData().SetLastStatementNumber( "0000000005" );
      }
      if ( ImpGroup_PS_001 > 10 )
      ImpGroup_PS_001 = 10;
      Globdata.GetStateData().SetLastStatementNumber( "0000000017" );
      
      Cyyy0431Ia = (GEN.ORT.YYY.CYYY0431_IA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYYY0431).Assembly,
      	"GEN.ORT.YYY.CYYY0431_IA" ));
      Cyyy0431Oa = (GEN.ORT.YYY.CYYY0431_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYYY0431).Assembly,
      	"GEN.ORT.YYY.CYYY0431_OA" ));
      Cyyy0431Ia.ImpGroup_MA = IntAttr.ValueOf(WLa.LocImpGroup_MA);
      for(Adim1 = 1; Adim1 <= WLa.LocImpGroup_MA; ++(Adim1))
      {
        Cyyy0431Ia.ImpGTypeTinstanceId[Adim1-1] = TimestampAttr.ValueOf(WLa.LocImpGTypeTinstanceId[Adim1-1]);
        Cyyy0431Ia.ImpGTypeTreferenceId[Adim1-1] = TimestampAttr.ValueOf(WLa.LocImpGTypeTreferenceId[Adim1-1]);
        Cyyy0431Ia.ImpGTypeTcreateUserId[Adim1-1] = FixedStringAttr.ValueOf(WLa.LocImpGTypeTcreateUserId[Adim1-1], 8);
        Cyyy0431Ia.ImpGTypeTupdateUserId[Adim1-1] = FixedStringAttr.ValueOf(WLa.LocImpGTypeTupdateUserId[Adim1-1], 8);
        Cyyy0431Ia.ImpGTypeTkeyAttrText[Adim1-1] = FixedStringAttr.ValueOf(WLa.LocImpGTypeTkeyAttrText[Adim1-1], 4);
        Cyyy0431Ia.ImpGTypeTsearchAttrText[Adim1-1] = FixedStringAttr.ValueOf(WLa.LocImpGTypeTsearchAttrText[Adim1-1], 20);
        Cyyy0431Ia.ImpGTypeTotherAttrText[Adim1-1] = FixedStringAttr.ValueOf(WLa.LocImpGTypeTotherAttrText[Adim1-1], 2);
        Cyyy0431Ia.ImpGTypeTotherAttrDate[Adim1-1] = DateAttr.ValueOf(WLa.LocImpGTypeTotherAttrDate[Adim1-1]);
        Cyyy0431Ia.ImpGTypeTotherAttrTime[Adim1-1] = TimeAttr.ValueOf(WLa.LocImpGTypeTotherAttrTime[Adim1-1]);
        Cyyy0431Ia.ImpGTypeTotherAttrAmount[Adim1-1] = DecimalAttr.ValueOf(WLa.LocImpGTypeTotherAttrAmount[Adim1-1]);
      }
      for(Adim1 = WLa.LocImpGroup_MA + 1; Adim1 <= 48; ++(Adim1))
      {
        Cyyy0431Ia.ImpGTypeTinstanceId[Adim1-1] = "00000000000000000000";
        Cyyy0431Ia.ImpGTypeTreferenceId[Adim1-1] = "00000000000000000000";
        Cyyy0431Ia.ImpGTypeTcreateUserId[Adim1-1] = "        ";
        Cyyy0431Ia.ImpGTypeTupdateUserId[Adim1-1] = "        ";
        Cyyy0431Ia.ImpGTypeTkeyAttrText[Adim1-1] = "    ";
        Cyyy0431Ia.ImpGTypeTsearchAttrText[Adim1-1] = "                    ";
        Cyyy0431Ia.ImpGTypeTotherAttrText[Adim1-1] = "  ";
        Cyyy0431Ia.ImpGTypeTotherAttrDate[Adim1-1] = 00000000;
        Cyyy0431Ia.ImpGTypeTotherAttrTime[Adim1-1] = 00000000;
        Cyyy0431Ia.ImpGTypeTotherAttrAmount[Adim1-1] = DecimalAttr.GetDefaultValue();
      }
      Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
      IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.CYYY0431).Assembly,
      	"GEN.ORT.YYY.CYYY0431",
      	"Execute",
      	Cyyy0431Ia,
      	Cyyy0431Oa );
      if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
        ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
        ErrorData.ErrorEncounteredNoErrorFound) )
      {
        throw new ABException();
      }
      Globdata.GetStateData().SetCurrentABId( "0022020169" );
      Globdata.GetStateData().SetCurrentABName( "MYY10431_XML_GROUP_CREATE" );
      Globdata.GetStateData().SetLastStatementNumber( "0000000017" );
      WOa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(Cyyy0431Oa.ExpErrorIyy1ComponentSeverityCode, 1);
      WOa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.ValueOf(Cyyy0431Oa.ExpErrorIyy1ComponentRollbackIndicator, 1);
      WOa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(Cyyy0431Oa.ExpErrorIyy1ComponentOriginServid);
      WOa.ExpErrorIyy1ComponentContextString = StringAttr.ValueOf(Cyyy0431Oa.ExpErrorIyy1ComponentContextString, 512);
      WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf(Cyyy0431Oa.ExpErrorIyy1ComponentReturnCode);
      WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf(Cyyy0431Oa.ExpErrorIyy1ComponentReasonCode);
      WOa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.ValueOf(Cyyy0431Oa.ExpErrorIyy1ComponentChecksum, 15);
      WOa.ExpCanamXmlXmlBuffer = StringAttr.ValueOf(Cyyy0431Oa.ExpCanamXmlXmlBuffer, 4094);
      Cyyy0431Ia.FreeInstance(  );
      Cyyy0431Ia = null;
      Cyyy0431Oa.FreeInstance(  );
      Cyyy0431Oa = null;
      return;
    }
    
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // SUBORDINATE FUNCTIONS
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // INITIALIZATION UTILITY FUNCTIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void f_22020169_localAlloc( String abname )
    {
      // Request localview allocation 
      WLa = (GEN.ORT.YYY.MYY10431_LA)(IefRuntimeParm2.GetInstance( GetType().Assembly,
      	"GEN.ORT.YYY.MYY10431_LA" ));
      if ( WLa == null )
      {
        Globdata.GetStateData().SetCurrentABId( "0022020169" );
        Globdata.GetStateData().SetCurrentABName( abname );
        Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
        Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusIefAllocationError );
      }
    }
    
    public void f_22020169_init(  )
    {
      if ( NestingLevel < 2 )
      {
        WLa.Reset();
      }
      WLa.LocImpGroup_MA = 0;
      for(LocImpGroup_PS_002 = 1; LocImpGroup_PS_002 <= 10; ++(LocImpGroup_PS_002))
      {
      }
      WOa.ExpCanamXmlXmlBuffer = "";
      WOa.ExpErrorCanamXmlXmlReturnCode = "  ";
      WOa.ExpErrorCanamXmlXmlMessage = "                                                                                ";
      WOa.ExpErrorCanamXmlXmlPosition = 0.0;
      WOa.ExpErrorCanamXmlXmlSource = 
        "                                                                                                                        ";
      WOa.ExpErrorIyy1ComponentSeverityCode = " ";
      WOa.ExpErrorIyy1ComponentRollbackIndicator = " ";
      WOa.ExpErrorIyy1ComponentOriginServid = 0.0;
      WOa.ExpErrorIyy1ComponentContextString = "";
      WOa.ExpErrorIyy1ComponentReturnCode = 0;
      WOa.ExpErrorIyy1ComponentReasonCode = 0;
      WOa.ExpErrorIyy1ComponentChecksum = "               ";
      for(ImpGroup_PS_001 = 1; ImpGroup_PS_001 <= 10; ++(ImpGroup_PS_001))
      {
      }
      ImpGroup_PS_001 = 1;
      LocImpGroup_PS_002 = 1;
    }
    public void f_173015098_rgvc(  )
    {
      if ( (LocImpGroup_PS_002 > 10) || (LocImpGroup_PS_002 < 1) )
      {
        Globdata.GetErrorData().SetViewOverflow( ErrorData.ErrorEncounteredErrorFound );
        {
          throw new ABException();
        }
      }
    }
  }// end class
  
}

