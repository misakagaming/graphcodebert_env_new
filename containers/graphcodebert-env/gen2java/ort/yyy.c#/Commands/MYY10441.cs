namespace GEN.ORT.YYY
{
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  //
  //                    Source Code Generated by
  //                           CA Gen 8.6
  //
  //    Copyright (c) 2024 CA Technologies. All rights reserved.
  //
  //    Name: MYY10441_XML_GROUP_PARSE         Date: 2024/01/09
  //    Target OS:   CLR                       Time: 13:41:33
  //    Target DBMS: ODBC/ADO.NET              User: AliAl
  //    Access Method: <NONE>         
  //
  //    Generation options:
  //    Debug trace option not selected
  //    Data modeling constraint enforcement not selected
  //    Optimized import view initialization not selected
  //    Enforce default values with DBMS not selected
  //    Init unspecified optional fields to NULL not selected
  //
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // using Statements
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  using System;
  using com.ca.gen.vwrt;
  using com.ca.gen.vwrt.types;
  using com.ca.gen.vwrt.vdf;
  using com.ca.gen.csu.exception;
  
  using com.ca.gen.abrt;
  using com.ca.gen.abrt.functions;
  using com.ca.gen.abrt.cascade;
  using com.ca.gen.abrt.manager;
  using com.ca.gen.abrt.trace;
  using com.ca.gen.exits.common;
  using com.ca.gen.odc;
  using System.Data;
  using System.Collections;
  
  public class MYY10441 : ABBase
  {
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // IMPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    MYY10441_IA WIa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // EXPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    MYY10441_OA WOa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // LOCAL VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    MYY10441_LA WLa;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ACTION BLOCK IMPORT/EXPORT VIEWS CLASS VARIABLES
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    GEN.ORT.YYY.CYYY0441_IA Cyyy0441Ia;
    GEN.ORT.YYY.CYYY0441_OA Cyyy0441Oa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // REPEATING GROUP VIEW STATUS FIELDS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    bool ExpGroupList_FL_001;
    int ExpGroupList_PS_001;
    bool ExpGroupList_RF_001;
    public const int ExpGroupList_MM_001 = 10;
    bool LocExpGroupList_FL_002;
    int LocExpGroupList_PS_002;
    bool LocExpGroupList_RF_002;
    public const int LocExpGroupList_MM_002 = 10;
    bool ExpGroup_FL_003;
    int ExpGroup_PS_003;
    bool ExpGroup_RF_003;
    public const int ExpGroup_MM_003 = 48;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // FOR-LOOP CONTROL TEMPORARY VARIABLES 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    int by___0070254972;
    int limit___0070254972;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // MISC DECLARATIONS AND PROTOTYPES 
    //    FOLLOW AS NEEDED:             
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    bool func_0022020174_esc_flag;
    bool while_0070254972_esc_flag;
    //       +->   MYY10441_XML_GROUP_PARSE          01/09/2024  13:41
    //       !       IMPORTS:
    //       !         Work View imp canam_xml (Transient, Optional, Import
    //       !                     only)
    //       !           xml_buffer
    //       !       EXPORTS:
    //       !         Work View exp_error canam_xml (Transient, Export only)
    //       !           xml_return_code
    //       !           xml_message
    //       !           xml_position
    //       !           xml_source
    //       !         Work View exp_error iyy1_component (Transient, Export
    //       !                     only)
    //       !           severity_code
    //       !           rollback_indicator
    //       !           origin_servid
    //       !           context_string
    //       !           return_code
    //       !           reason_code
    //       !           checksum
    //       !         Group View (10) exp_group_list
    //       !           Entity View exp_g_list iyy1_type (Transient, Export
    //       !                       only)
    //       !             tinstance_id
    //       !             treference_id
    //       !             tcreate_user_id
    //       !             tupdate_user_id
    //       !             tkey_attr_text
    //       !             tsearch_attr_text
    //       !             tother_attr_text
    //       !             tother_attr_date
    //       !             tother_attr_time
    //       !             tother_attr_amount
    //       !       LOCALS:
    //       !         Group View (10) loc_exp_group_list
    //       !           Entity View loc_exp_g_list type
    //       !             tinstance_id
    //       !             treference_id
    //       !             tcreate_user_id
    //       !             tupdate_user_id
    //       !             tkey_attr_text
    //       !             tsearch_attr_text
    //       !             tother_attr_text
    //       !             tother_attr_date
    //       !             tother_attr_time
    //       !             tother_attr_amount
    //       !
    //       !     PROCEDURE STATEMENTS
    //       !
    //     1 !  NOTE: 
    //     1 !  Check description for porpose
    //     1 !  
    //     2 !  NOTE: 
    //     2 !  RELEASE HISTORY
    //     2 !  01_00 01-10-2009 New Release
    //     2 !  
    //     3 !  NOTE: 
    //     3 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //     3 !  !!!!!!!!!!!!
    //     3 !  SET <loc imp*> TO <imp*>
    //     3 !  
    //     4 !  USE cyyy0441_xml_group_parse
    //     4 !     WHICH IMPORTS: Work View imp canam_xml TO Work View imp
    //     4 !              canam_xml
    //     4 !     WHICH EXPORTS: Work View exp_error canam_xml FROM Work View
    //     4 !              exp_error canam_xml
    //     4 !                    Work View exp_error iyy1_component FROM Work
    //     4 !              View exp_error iyy1_component
    //     4 !                    Group View  loc_exp_group_list FROM Group
    //     4 !              View exp_group
    //     5 !   
    //     6 !  NOTE: 
    //     6 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //     6 !  !!!!!!!!!!!!
    //     6 !  SET <exp*> TO <loc exp*>
    //     6 !  
    //     7 !  +=>FOR SUBSCRIPT OF loc_exp_group_list FROM 1 TO LAST OF
    //     7 !  !        loc_exp_group_list BY 1
    //     8 !  !  SET SUBSCRIPT OF exp_group_list TO SUBSCRIPT OF
    //     8 !  !              loc_exp_group_list 
    //     9 !  !  SET exp_g_list iyy1_type tinstance_id TO loc_exp_g_list
    //     9 !  !              type tinstance_id 
    //    10 !  !  SET exp_g_list iyy1_type treference_id TO loc_exp_g_list
    //    10 !  !              type treference_id 
    //    11 !  !  SET exp_g_list iyy1_type tcreate_user_id TO loc_exp_g_list
    //    11 !  !              type tcreate_user_id 
    //    12 !  !  SET exp_g_list iyy1_type tupdate_user_id TO loc_exp_g_list
    //    12 !  !              type tupdate_user_id 
    //    13 !  !  SET exp_g_list iyy1_type tkey_attr_text TO loc_exp_g_list
    //    13 !  !              type tkey_attr_text 
    //    14 !  !  SET exp_g_list iyy1_type tsearch_attr_text TO
    //    14 !  !              loc_exp_g_list type tsearch_attr_text 
    //    15 !  !  SET exp_g_list iyy1_type tother_attr_text TO loc_exp_g_list
    //    15 !  !              type tother_attr_text 
    //    16 !  !  SET exp_g_list iyy1_type tother_attr_date TO loc_exp_g_list
    //    16 !  !              type tother_attr_date 
    //    17 !  !  SET exp_g_list iyy1_type tother_attr_time TO loc_exp_g_list
    //    17 !  !              type tother_attr_time 
    //    18 !  !  SET exp_g_list iyy1_type tother_attr_amount TO
    //    18 !  !              loc_exp_g_list type tother_attr_amount 
    //     7 !  +--
    //       +---
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //  CONSTRUCTOR FOR THE CLASS       
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    public MYY10441(  )
    {
      IefCGenRlse = "CA Gen 8.6";
      IsCopyright = "Copyright (c) 2024 CA Technologies. All rights reserved.";
      IefCGenDate = "2024/01/09";
      IefCGenTime = "13:41:33";
      IefCGenEncy = "9.2.A6";
      IefCGenUserId = "AliAl";
      IefCGenModel = "N8I_ORT_YYY_0112_TEMPLATE";
      IefCGenSubset = "ALL";
      IefCGenName = "MYY10441_XML_GROUP_PARSE";
      NestingLevel = 0;
      ValChkDeadlockTimeout = false;
      ValChkDBError = false;
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ACTION BLOCK FUNCTION DECLARATIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void Execute( Object in_runtime_parm1, 
    	IRuntimePStepContext in_runtime_parm2, 
    	GlobData in_globdata, 
    	MYY10441_IA import_view, 
    	MYY10441_OA export_view )
    {
      IefRuntimeParm1 = in_runtime_parm1;
      IefRuntimeParm2 = in_runtime_parm2;
      Globdata = in_globdata;
      WIa = import_view;
      WOa = export_view;
      _Execute();
    }
    
    private void _Execute()
    {
      
      f_22020174_localAlloc( "MYY10441_XML_GROUP_PARSE" );
      if ( Globdata.GetErrorData().GetLastStatus() == ErrorData.LastStatusIefAllocationError )
      	return;
      
      ++(NestingLevel);
      try {
        f_22020174_init(  );
        f_22020174(  );
      } catch( Exception e ) {
        if ( ((Globdata.GetErrorData().GetStatus() == ErrorData.StatusNone) && (Globdata.GetErrorData().GetErrorEncountered() == 
          ErrorData.ErrorEncounteredNoErrorFound)) && (Globdata.GetErrorData().GetViewOverflow() == 
          ErrorData.ErrorEncounteredNoErrorFound) )
        {
          Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
          Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusUnexpectedExceptionError );
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
          Globdata.GetErrorData(  ).SetErrorMessage( e );
        }
      }
      --(NestingLevel);
    }
    public void f_22020174(  )
    {
      func_0022020174_esc_flag = false;
      Globdata.GetStateData().SetCurrentABId( "0022020174" );
      Globdata.GetStateData().SetCurrentABName( "MYY10441_XML_GROUP_PARSE" );
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    Check description for porpose                                   
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    RELEASE HISTORY                                                 
      //    01_00 01-10-2009 New Release                                    
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
      //    !!!!!!!!!!!!                                                    
      //    SET <loc imp*> TO <imp*>                                        
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000004" );
      
      Cyyy0441Ia = (GEN.ORT.YYY.CYYY0441_IA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYYY0441).Assembly,
      	"GEN.ORT.YYY.CYYY0441_IA" ));
      Cyyy0441Oa = (GEN.ORT.YYY.CYYY0441_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYYY0441).Assembly,
      	"GEN.ORT.YYY.CYYY0441_OA" ));
      Cyyy0441Ia.ImpCanamXmlXmlBuffer = StringAttr.ValueOf(WIa.ImpCanamXmlXmlBuffer, 4094);
      Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
      IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.CYYY0441).Assembly,
      	"GEN.ORT.YYY.CYYY0441",
      	"Execute",
      	Cyyy0441Ia,
      	Cyyy0441Oa );
      if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
        ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
        ErrorData.ErrorEncounteredNoErrorFound) )
      {
        throw new ABException();
      }
      Globdata.GetStateData().SetCurrentABId( "0022020174" );
      Globdata.GetStateData().SetCurrentABName( "MYY10441_XML_GROUP_PARSE" );
      Globdata.GetStateData().SetLastStatementNumber( "0000000004" );
      WLa.LocExpGroupList_MA = IntAttr.ValueOf(Cyyy0441Oa.ExpGroup_MA);
      for(Adim1 = 1; Adim1 <= WLa.LocExpGroupList_MA; ++(Adim1))
      {
        WLa.LocExpGListTypeTinstanceId[Adim1-1] = TimestampAttr.ValueOf(Cyyy0441Oa.ExpGTypeTinstanceId[Adim1-1]);
        WLa.LocExpGListTypeTreferenceId[Adim1-1] = TimestampAttr.ValueOf(Cyyy0441Oa.ExpGTypeTreferenceId[Adim1-1]);
        WLa.LocExpGListTypeTcreateUserId[Adim1-1] = FixedStringAttr.ValueOf(Cyyy0441Oa.ExpGTypeTcreateUserId[Adim1-1], 8);
        WLa.LocExpGListTypeTupdateUserId[Adim1-1] = FixedStringAttr.ValueOf(Cyyy0441Oa.ExpGTypeTupdateUserId[Adim1-1], 8);
        WLa.LocExpGListTypeTkeyAttrText[Adim1-1] = FixedStringAttr.ValueOf(Cyyy0441Oa.ExpGTypeTkeyAttrText[Adim1-1], 4);
        WLa.LocExpGListTypeTsearchAttrText[Adim1-1] = FixedStringAttr.ValueOf(Cyyy0441Oa.ExpGTypeTsearchAttrText[Adim1-1], 20);
        WLa.LocExpGListTypeTotherAttrText[Adim1-1] = FixedStringAttr.ValueOf(Cyyy0441Oa.ExpGTypeTotherAttrText[Adim1-1], 2);
        WLa.LocExpGListTypeTotherAttrDate[Adim1-1] = DateAttr.ValueOf(Cyyy0441Oa.ExpGTypeTotherAttrDate[Adim1-1]);
        WLa.LocExpGListTypeTotherAttrTime[Adim1-1] = TimeAttr.ValueOf(Cyyy0441Oa.ExpGTypeTotherAttrTime[Adim1-1]);
        WLa.LocExpGListTypeTotherAttrAmount[Adim1-1] = DecimalAttr.ValueOf(Cyyy0441Oa.ExpGTypeTotherAttrAmount[Adim1-1]);
      }
      WOa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(Cyyy0441Oa.ExpErrorIyy1ComponentSeverityCode, 1);
      WOa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.ValueOf(Cyyy0441Oa.ExpErrorIyy1ComponentRollbackIndicator, 1);
      WOa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(Cyyy0441Oa.ExpErrorIyy1ComponentOriginServid);
      WOa.ExpErrorIyy1ComponentContextString = StringAttr.ValueOf(Cyyy0441Oa.ExpErrorIyy1ComponentContextString, 512);
      WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf(Cyyy0441Oa.ExpErrorIyy1ComponentReturnCode);
      WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf(Cyyy0441Oa.ExpErrorIyy1ComponentReasonCode);
      WOa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.ValueOf(Cyyy0441Oa.ExpErrorIyy1ComponentChecksum, 15);
      WOa.ExpErrorCanamXmlXmlReturnCode = FixedStringAttr.ValueOf(Cyyy0441Oa.ExpErrorCanamXmlXmlReturnCode, 2);
      WOa.ExpErrorCanamXmlXmlMessage = FixedStringAttr.ValueOf(Cyyy0441Oa.ExpErrorCanamXmlXmlMessage, 80);
      WOa.ExpErrorCanamXmlXmlPosition = DoubleAttr.ValueOf(Cyyy0441Oa.ExpErrorCanamXmlXmlPosition);
      WOa.ExpErrorCanamXmlXmlSource = FixedStringAttr.ValueOf(Cyyy0441Oa.ExpErrorCanamXmlXmlSource, 120);
      Cyyy0441Ia.FreeInstance(  );
      Cyyy0441Ia = null;
      Cyyy0441Oa.FreeInstance(  );
      Cyyy0441Oa = null;
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
      //    !!!!!!!!!!!!                                                    
      //    SET <exp*> TO <loc exp*>                                        
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000007" );
      while_0070254972_esc_flag = false;
      LocExpGroupList_PS_002 = (int)1;
      limit___0070254972 = WLa.LocExpGroupList_MA;
      by___0070254972 = 1;
      while ((LocExpGroupList_PS_002 <= limit___0070254972) && (while_0070254972_esc_flag != true))
      {
        if ( (LocExpGroupList_PS_002 > 10) || (LocExpGroupList_PS_002 < 1) )
        break;
        if ( (LocExpGroupList_PS_002 > WLa.LocExpGroupList_MA) && (LocExpGroupList_PS_002 <= 10) )
        WLa.LocExpGroupList_MA = IntAttr.ValueOf(LocExpGroupList_PS_002);
        {
          Globdata.GetStateData().SetLastStatementNumber( "0000000008" );
          ExpGroupList_PS_001 = (int)TIRD2DEC.Execute1(LocExpGroupList_PS_002, 0, TIRD2DEC.ROUND_NONE, 0);
          if ( (ExpGroupList_PS_001 > WOa.ExpGroupList_MA) && (ExpGroupList_PS_001 <= 10) )
          WOa.ExpGroupList_MA = IntAttr.ValueOf(ExpGroupList_PS_001);
          Globdata.GetStateData().SetLastStatementNumber( "0000000009" );
          WOa.ExpGListIyy1TypeTinstanceId[ExpGroupList_PS_001-1] = TimestampAttr.ValueOf(WLa.LocExpGListTypeTinstanceId[
            LocExpGroupList_PS_002-1]);
          f_173015102_rgvc(  );
          Globdata.GetStateData().SetLastStatementNumber( "0000000010" );
          WOa.ExpGListIyy1TypeTreferenceId[ExpGroupList_PS_001-1] = TimestampAttr.ValueOf(WLa.LocExpGListTypeTreferenceId[
            LocExpGroupList_PS_002-1]);
          f_173015102_rgvc(  );
          Globdata.GetStateData().SetLastStatementNumber( "0000000011" );
          WOa.ExpGListIyy1TypeTcreateUserId[ExpGroupList_PS_001-1] = FixedStringAttr.ValueOf(WLa.LocExpGListTypeTcreateUserId[
            LocExpGroupList_PS_002-1], 8);
          f_173015102_rgvc(  );
          Globdata.GetStateData().SetLastStatementNumber( "0000000012" );
          WOa.ExpGListIyy1TypeTupdateUserId[ExpGroupList_PS_001-1] = FixedStringAttr.ValueOf(WLa.LocExpGListTypeTupdateUserId[
            LocExpGroupList_PS_002-1], 8);
          f_173015102_rgvc(  );
          Globdata.GetStateData().SetLastStatementNumber( "0000000013" );
          WOa.ExpGListIyy1TypeTkeyAttrText[ExpGroupList_PS_001-1] = FixedStringAttr.ValueOf(WLa.LocExpGListTypeTkeyAttrText[
            LocExpGroupList_PS_002-1], 4);
          f_173015102_rgvc(  );
          Globdata.GetStateData().SetLastStatementNumber( "0000000014" );
          WOa.ExpGListIyy1TypeTsearchAttrText[ExpGroupList_PS_001-1] = FixedStringAttr.ValueOf(WLa.LocExpGListTypeTsearchAttrText[
            LocExpGroupList_PS_002-1], 20);
          f_173015102_rgvc(  );
          Globdata.GetStateData().SetLastStatementNumber( "0000000015" );
          WOa.ExpGListIyy1TypeTotherAttrText[ExpGroupList_PS_001-1] = FixedStringAttr.ValueOf(WLa.LocExpGListTypeTotherAttrText[
            LocExpGroupList_PS_002-1], 2);
          f_173015102_rgvc(  );
          Globdata.GetStateData().SetLastStatementNumber( "0000000016" );
          WOa.ExpGListIyy1TypeTotherAttrDate[ExpGroupList_PS_001-1] = DateAttr.ValueOf(WLa.LocExpGListTypeTotherAttrDate[
            LocExpGroupList_PS_002-1]);
          f_173015102_rgvc(  );
          Globdata.GetStateData().SetLastStatementNumber( "0000000017" );
          WOa.ExpGListIyy1TypeTotherAttrTime[ExpGroupList_PS_001-1] = TimeAttr.ValueOf(WLa.LocExpGListTypeTotherAttrTime[
            LocExpGroupList_PS_002-1]);
          f_173015102_rgvc(  );
          Globdata.GetStateData().SetLastStatementNumber( "0000000018" );
          WOa.ExpGListIyy1TypeTotherAttrAmount[ExpGroupList_PS_001-1] = DecimalAttr.ValueOf(TIRBDTRU.TruncateToDecimal( 
            WLa.LocExpGListTypeTotherAttrAmount[LocExpGroupList_PS_002-1], 2));
          f_173015102_rgvc(  );
        }
        Globdata.GetStateData().SetLastStatementNumber( "0000000007" );
        LocExpGroupList_PS_002 = (int)(LocExpGroupList_PS_002 + by___0070254972);
        Globdata.GetStateData().SetLastStatementNumber( "0000000007" );
      }
      if ( LocExpGroupList_PS_002 > 10 )
      LocExpGroupList_PS_002 = 10;
      return;
    }
    
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // SUBORDINATE FUNCTIONS
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // INITIALIZATION UTILITY FUNCTIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void f_22020174_localAlloc( String abname )
    {
      // Request localview allocation 
      WLa = (GEN.ORT.YYY.MYY10441_LA)(IefRuntimeParm2.GetInstance( GetType().Assembly,
      	"GEN.ORT.YYY.MYY10441_LA" ));
      if ( WLa == null )
      {
        Globdata.GetStateData().SetCurrentABId( "0022020174" );
        Globdata.GetStateData().SetCurrentABName( abname );
        Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
        Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusIefAllocationError );
      }
    }
    
    public void f_22020174_init(  )
    {
      if ( NestingLevel < 2 )
      {
        WLa.Reset();
      }
      WLa.LocExpGroupList_MA = 0;
      for(LocExpGroupList_PS_002 = 1; LocExpGroupList_PS_002 <= 10; ++(LocExpGroupList_PS_002))
      {
      }
      WOa.ExpErrorCanamXmlXmlReturnCode = "  ";
      WOa.ExpErrorCanamXmlXmlMessage = "                                                                                ";
      WOa.ExpErrorCanamXmlXmlPosition = 0.0;
      WOa.ExpErrorCanamXmlXmlSource = 
        "                                                                                                                        ";
      WOa.ExpErrorIyy1ComponentSeverityCode = " ";
      WOa.ExpErrorIyy1ComponentRollbackIndicator = " ";
      WOa.ExpErrorIyy1ComponentOriginServid = 0.0;
      WOa.ExpErrorIyy1ComponentContextString = "";
      WOa.ExpErrorIyy1ComponentReturnCode = 0;
      WOa.ExpErrorIyy1ComponentReasonCode = 0;
      WOa.ExpErrorIyy1ComponentChecksum = "               ";
      WOa.ExpGroupList_MA = 0;
      for(ExpGroupList_PS_001 = 1; ExpGroupList_PS_001 <= 10; ++(ExpGroupList_PS_001))
      {
        WOa.ExpGListIyy1TypeTinstanceId[ExpGroupList_PS_001-1] = "00000000000000000000";
        WOa.ExpGListIyy1TypeTreferenceId[ExpGroupList_PS_001-1] = "00000000000000000000";
        WOa.ExpGListIyy1TypeTcreateUserId[ExpGroupList_PS_001-1] = "        ";
        WOa.ExpGListIyy1TypeTupdateUserId[ExpGroupList_PS_001-1] = "        ";
        WOa.ExpGListIyy1TypeTkeyAttrText[ExpGroupList_PS_001-1] = "    ";
        WOa.ExpGListIyy1TypeTsearchAttrText[ExpGroupList_PS_001-1] = "                    ";
        WOa.ExpGListIyy1TypeTotherAttrText[ExpGroupList_PS_001-1] = "  ";
        WOa.ExpGListIyy1TypeTotherAttrDate[ExpGroupList_PS_001-1] = 00000000;
        WOa.ExpGListIyy1TypeTotherAttrTime[ExpGroupList_PS_001-1] = 00000000;
        WOa.ExpGListIyy1TypeTotherAttrAmount[ExpGroupList_PS_001-1] = DecimalAttr.GetDefaultValue();
      }
      ExpGroupList_PS_001 = 1;
      LocExpGroupList_PS_002 = 1;
    }
    public void f_173015102_rgvc(  )
    {
      if ( (ExpGroupList_PS_001 > 10) || (ExpGroupList_PS_001 < 1) )
      {
        Globdata.GetErrorData().SetViewOverflow( ErrorData.ErrorEncounteredErrorFound );
        {
          throw new ABException();
        }
      }
    }
  }// end class
  
}

