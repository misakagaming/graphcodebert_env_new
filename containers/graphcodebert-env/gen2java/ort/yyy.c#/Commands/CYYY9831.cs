namespace GEN.ORT.YYY
{
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  //
  //                    Source Code Generated by
  //                           CA Gen 8.6
  //
  //    Copyright (c) 2024 CA Technologies. All rights reserved.
  //
  //    Name: CYYY9831_MV_SC1_TO_YY1           Date: 2024/01/09
  //    Target OS:   CLR                       Time: 13:40:32
  //    Target DBMS: ODBC/ADO.NET              User: AliAl
  //    Access Method: <NONE>         
  //
  //    Generation options:
  //    Debug trace option not selected
  //    Data modeling constraint enforcement not selected
  //    Optimized import view initialization not selected
  //    Enforce default values with DBMS not selected
  //    Init unspecified optional fields to NULL not selected
  //
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // using Statements
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  using System;
  using com.ca.gen.vwrt;
  using com.ca.gen.vwrt.types;
  using com.ca.gen.vwrt.vdf;
  using com.ca.gen.csu.exception;
  
  using com.ca.gen.abrt;
  using com.ca.gen.abrt.functions;
  using com.ca.gen.abrt.cascade;
  using com.ca.gen.abrt.manager;
  using com.ca.gen.abrt.trace;
  using com.ca.gen.exits.common;
  using com.ca.gen.odc;
  using System.Data;
  using System.Collections;
  
  public class CYYY9831 : ABBase
  {
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // IMPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    CYYY9831_IA WIa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // EXPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    CYYY9831_OA WOa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // LOCAL VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    CYYY9831_LA WLa;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ACTION BLOCK IMPORT/EXPORT VIEWS CLASS VARIABLES
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    GEN.ORT.YYY.ISC19041_IA Isc19041Ia;
    GEN.ORT.YYY.ISC19041_OA Isc19041Oa;
    GEN.ORT.YYY.ISC19051_OA Isc19051Oa;
    GEN.ORT.YYY.CYYY9991_OA Cyyy9991Oa;
    GEN.ORT.YYY.CYYY9811_OA Cyyy9811Oa;
    GEN.ORT.YYY.CYYY9801_OA Cyyy9801Oa;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // MISC DECLARATIONS AND PROTOTYPES 
    //    FOLLOW AS NEEDED:             
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    bool func_0022020291_esc_flag;
    //       +->   CYYY9831_MV_SC1_TO_YY1            01/09/2024  13:40
    //       !       IMPORTS:
    //       !         Work View imp_error isc1_component (Transient,
    //       !                     Optional, Import only)
    //       !           severity_code
    //       !           rollback_indicator
    //       !           origin_servid
    //       !           context_string
    //       !           return_code
    //       !           reason_code
    //       !           dialect_cd
    //       !           checksum
    //       !       EXPORTS:
    //       !         Work View exp_error iyy1_component (Transient, Export
    //       !                     only)
    //       !           severity_code
    //       !           rollback_indicator
    //       !           origin_servid
    //       !           context_string
    //       !           return_code
    //       !           reason_code
    //       !           checksum
    //       !       LOCALS:
    //       !         Work View loc_imp_error isc1_component
    //       !           severity_code
    //       !           rollback_indicator
    //       !           origin_servid
    //       !           context_string
    //       !           return_code
    //       !           reason_code
    //       !           implementation_id
    //       !           specification_id
    //       !           dialect_cd
    //       !           checksum
    //       !         Work View loc_error_msg isc1_component
    //       !           severity_code
    //       !           message_tx
    //       !         Work View loc_error isc1_component
    //       !           severity_code
    //       !           rollback_indicator
    //       !           origin_servid
    //       !           context_string
    //       !           return_code
    //       !           reason_code
    //       !           checksum
    //       !
    //       !     PROCEDURE STATEMENTS
    //       !
    //     1 !  NOTE: 
    //     1 !  Please review explanation for purpose.
    //     1 !  
    //     2 !  NOTE: 
    //     2 !  RELEASE HISTORY
    //     2 !  01_00 23-02-1998 New release
    //     2 !  
    //     3 !  NOTE: 
    //     3 !  ****************************************************************
    //     3 !  Please format the error message.
    //     3 !  
    //     4 !  MOVE imp_error isc1_component TO loc_imp_error isc1_component
    //     5 !   
    //     6 !  NOTE: 
    //     6 !  ****************************************************************
    //     6 !  This component is which spec + impl + serv ?
    //     6 !  
    //     7 !  USE isc19051_cmpnt_identifiers_get_s
    //     7 !     WHICH EXPORTS: Work View loc_error isc1_component FROM Work
    //     7 !              View exp_error isc1_component
    //     7 !                    Work View loc_imp_error isc1_component FROM
    //     7 !              Work View exp_identifiers isc1_component
    //     8 !  +->IF loc_error isc1_component return_code < 1
    //     9 !  !  MOVE loc_error isc1_component TO loc_imp_error
    //     9 !  !              isc1_component
    //     8 !  +--
    //    10 !   
    //    11 !  NOTE: 
    //    11 !  ****************************************************************
    //    11 !  Convert the error data to message.
    //    11 !  
    //    12 !  USE isc19041_excptn_msg_fmt_as_str_s
    //    12 !     WHICH IMPORTS: Work View loc_imp_error isc1_component TO
    //    12 !              Work View imp_error isc1_component
    //    12 !     WHICH EXPORTS: Work View loc_error isc1_component FROM Work
    //    12 !              View exp_error isc1_component
    //    12 !                    Work View loc_error_msg isc1_component FROM
    //    12 !              Work View exp_error_msg isc1_component
    //    13 !  +->IF loc_error isc1_component return_code < 1
    //    14 !  !  MOVE loc_error isc1_component TO loc_imp_error
    //    14 !  !              isc1_component
    //    13 !  +--
    //    15 !   
    //    16 !  NOTE: 
    //    16 !  ****************************************************************
    //    16 !  If message is not formatted, use the available data.
    //    16 !  
    //    17 !  +->IF loc_error_msg isc1_component message_tx <= SPACES
    //    18 !  !  SET loc_error_msg isc1_component message_tx TO
    //    18 !  !              loc_imp_error isc1_component context_string 
    //    17 !  +--
    //    19 !  +->IF loc_error_msg isc1_component severity_code <= SPACES
    //    20 !  !  SET loc_error_msg isc1_component severity_code TO
    //    20 !  !              loc_imp_error isc1_component severity_code 
    //    19 !  +--
    //    21 !  +->IF loc_error_msg isc1_component severity_code <= SPACES
    //    22 !  !  SET loc_error_msg isc1_component severity_code TO "E" 
    //    21 !  +--
    //    23 !  NOTE: 
    //    23 !  **************************************************************
    //    23 !  **
    //    23 !  The error message obtained from the other component is
    //    23 !  transferred to the string and it is customized by this way.
    //    23 !  
    //    24 !  USE cyyy9991_setservid
    //    24 !     WHICH EXPORTS: Work View exp_error iyy1_component FROM Work
    //    24 !              View exp_servid iyy1_component
    //    25 !  +->IF loc_imp_error isc1_component return_code < 1
    //    26 !  !  USE cyyy9811_set_excptn_other_error
    //    26 !  !     WHICH EXPORTS: Work View exp_error iyy1_component FROM
    //    26 !  !              Work View exp_other_error iyy1_component
    //    25 !  +> ELSE
    //    27 !  !  USE cyyy9801_set_excptn_other_info
    //    27 !  !     WHICH EXPORTS: Work View exp_error iyy1_component FROM
    //    27 !  !              Work View exp_other_error iyy1_component
    //    25 !  +--
    //    28 !  SET exp_error iyy1_component context_string TO loc_error_msg
    //    28 !              isc1_component message_tx 
    //    29 !   
    //    30 !  NOTE: 
    //    30 !  ****************************************************************
    //    30 !  
    //    31 !  SET exp_error iyy1_component severity_code TO loc_error_msg
    //    31 !              isc1_component severity_code 
    //    32 !  SET exp_error iyy1_component rollback_indicator TO
    //    32 !              loc_imp_error isc1_component rollback_indicator 
    //    33 !  SET exp_error iyy1_component checksum TO loc_imp_error
    //    33 !              isc1_component checksum 
    //       +---
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //  CONSTRUCTOR FOR THE CLASS       
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    public CYYY9831(  )
    {
      IefCGenRlse = "CA Gen 8.6";
      IsCopyright = "Copyright (c) 2024 CA Technologies. All rights reserved.";
      IefCGenDate = "2024/01/09";
      IefCGenTime = "13:40:32";
      IefCGenEncy = "9.2.A6";
      IefCGenUserId = "AliAl";
      IefCGenModel = "N8I_ORT_YYY_0112_TEMPLATE";
      IefCGenSubset = "ALL";
      IefCGenName = "CYYY9831_MV_SC1_TO_YY1";
      NestingLevel = 0;
      ValChkDeadlockTimeout = false;
      ValChkDBError = false;
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ACTION BLOCK FUNCTION DECLARATIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void Execute( Object in_runtime_parm1, 
    	IRuntimePStepContext in_runtime_parm2, 
    	GlobData in_globdata, 
    	CYYY9831_IA import_view, 
    	CYYY9831_OA export_view )
    {
      IefRuntimeParm1 = in_runtime_parm1;
      IefRuntimeParm2 = in_runtime_parm2;
      Globdata = in_globdata;
      WIa = import_view;
      WOa = export_view;
      _Execute();
    }
    
    private void _Execute()
    {
      
      f_22020291_localAlloc( "CYYY9831_MV_SC1_TO_YY1" );
      if ( Globdata.GetErrorData().GetLastStatus() == ErrorData.LastStatusIefAllocationError )
      	return;
      
      ++(NestingLevel);
      try {
        f_22020291_init(  );
        f_22020291(  );
      } catch( Exception e ) {
        if ( ((Globdata.GetErrorData().GetStatus() == ErrorData.StatusNone) && (Globdata.GetErrorData().GetErrorEncountered() == 
          ErrorData.ErrorEncounteredNoErrorFound)) && (Globdata.GetErrorData().GetViewOverflow() == 
          ErrorData.ErrorEncounteredNoErrorFound) )
        {
          Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
          Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusUnexpectedExceptionError );
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
          Globdata.GetErrorData(  ).SetErrorMessage( e );
        }
      }
      --(NestingLevel);
    }
    public void f_22020291(  )
    {
      func_0022020291_esc_flag = false;
      Globdata.GetStateData().SetCurrentABId( "0022020291" );
      Globdata.GetStateData().SetCurrentABName( "CYYY9831_MV_SC1_TO_YY1" );
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    Please review explanation for purpose.                          
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    RELEASE HISTORY                                                 
      //    01_00 23-02-1998 New release                                    
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    Please format the error message.                                
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000004" );
      WLa.LocImpErrorIsc1ComponentSeverityCode = FixedStringAttr.ValueOf(WIa.ImpErrorIsc1ComponentSeverityCode, 1);
      WLa.LocImpErrorIsc1ComponentRollbackIndicator = FixedStringAttr.ValueOf(WIa.ImpErrorIsc1ComponentRollbackIndicator, 1);
      WLa.LocImpErrorIsc1ComponentOriginServid = DoubleAttr.ValueOf(WIa.ImpErrorIsc1ComponentOriginServid);
      WLa.LocImpErrorIsc1ComponentContextString = StringAttr.ValueOf(WIa.ImpErrorIsc1ComponentContextString, 512);
      WLa.LocImpErrorIsc1ComponentReturnCode = IntAttr.ValueOf(WIa.ImpErrorIsc1ComponentReturnCode);
      WLa.LocImpErrorIsc1ComponentReasonCode = IntAttr.ValueOf(WIa.ImpErrorIsc1ComponentReasonCode);
      WLa.LocImpErrorIsc1ComponentDialectCd = FixedStringAttr.ValueOf(WIa.ImpErrorIsc1ComponentDialectCd, 2);
      WLa.LocImpErrorIsc1ComponentChecksum = FixedStringAttr.ValueOf(WIa.ImpErrorIsc1ComponentChecksum, 15);
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    This component is which spec + impl + serv ?                    
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000007" );
      
      Isc19051Oa = (GEN.ORT.YYY.ISC19051_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.ISC19051).Assembly,
      	"GEN.ORT.YYY.ISC19051_OA" ));
      Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
      IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.ISC19051).Assembly,
      	"GEN.ORT.YYY.ISC19051",
      	"Execute",
      	null,
      	Isc19051Oa );
      if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
        ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
        ErrorData.ErrorEncounteredNoErrorFound) )
      {
        throw new ABException();
      }
      Globdata.GetStateData().SetCurrentABId( "0022020291" );
      Globdata.GetStateData().SetCurrentABName( "CYYY9831_MV_SC1_TO_YY1" );
      Globdata.GetStateData().SetLastStatementNumber( "0000000007" );
      WLa.LocImpErrorIsc1ComponentOriginServid = DoubleAttr.ValueOf(Isc19051Oa.ExpIdentifiersIsc1ComponentOriginServid);
      WLa.LocImpErrorIsc1ComponentImplementationId = DoubleAttr.ValueOf(Isc19051Oa.ExpIdentifiersIsc1ComponentImplementationId);
      WLa.LocImpErrorIsc1ComponentSpecificationId = DoubleAttr.ValueOf(Isc19051Oa.ExpIdentifiersIsc1ComponentSpecificationId);
      WLa.LocErrorIsc1ComponentSeverityCode = FixedStringAttr.ValueOf(Isc19051Oa.ExpErrorIsc1ComponentSeverityCode, 1);
      WLa.LocErrorIsc1ComponentRollbackIndicator = FixedStringAttr.ValueOf(Isc19051Oa.ExpErrorIsc1ComponentRollbackIndicator, 1);
      WLa.LocErrorIsc1ComponentOriginServid = DoubleAttr.ValueOf(Isc19051Oa.ExpErrorIsc1ComponentOriginServid);
      WLa.LocErrorIsc1ComponentContextString = StringAttr.ValueOf(Isc19051Oa.ExpErrorIsc1ComponentContextString, 512);
      WLa.LocErrorIsc1ComponentReturnCode = IntAttr.ValueOf(Isc19051Oa.ExpErrorIsc1ComponentReturnCode);
      WLa.LocErrorIsc1ComponentReasonCode = IntAttr.ValueOf(Isc19051Oa.ExpErrorIsc1ComponentReasonCode);
      WLa.LocErrorIsc1ComponentChecksum = FixedStringAttr.ValueOf(Isc19051Oa.ExpErrorIsc1ComponentChecksum, 15);
      Isc19051Oa.FreeInstance(  );
      Isc19051Oa = null;
      Globdata.GetStateData().SetLastStatementNumber( "0000000008" );
      if ( ((double) WLa.LocErrorIsc1ComponentReturnCode < 1) )
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000009" );
        WLa.LocImpErrorIsc1ComponentSeverityCode = FixedStringAttr.ValueOf(WLa.LocErrorIsc1ComponentSeverityCode, 1);
        WLa.LocImpErrorIsc1ComponentRollbackIndicator = FixedStringAttr.ValueOf(WLa.LocErrorIsc1ComponentRollbackIndicator, 1);
        WLa.LocImpErrorIsc1ComponentOriginServid = DoubleAttr.ValueOf(WLa.LocErrorIsc1ComponentOriginServid);
        WLa.LocImpErrorIsc1ComponentContextString = StringAttr.ValueOf(WLa.LocErrorIsc1ComponentContextString, 512);
        WLa.LocImpErrorIsc1ComponentReturnCode = IntAttr.ValueOf(WLa.LocErrorIsc1ComponentReturnCode);
        WLa.LocImpErrorIsc1ComponentReasonCode = IntAttr.ValueOf(WLa.LocErrorIsc1ComponentReasonCode);
        WLa.LocImpErrorIsc1ComponentChecksum = FixedStringAttr.ValueOf(WLa.LocErrorIsc1ComponentChecksum, 15);
      }
      
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    Convert the error data to message.                              
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000012" );
      
      Isc19041Ia = (GEN.ORT.YYY.ISC19041_IA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.ISC19041).Assembly,
      	"GEN.ORT.YYY.ISC19041_IA" ));
      Isc19041Oa = (GEN.ORT.YYY.ISC19041_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.ISC19041).Assembly,
      	"GEN.ORT.YYY.ISC19041_OA" ));
      Isc19041Ia.ImpErrorIsc1ComponentOriginServid = DoubleAttr.ValueOf(WLa.LocImpErrorIsc1ComponentOriginServid);
      Isc19041Ia.ImpErrorIsc1ComponentContextString = StringAttr.ValueOf(WLa.LocImpErrorIsc1ComponentContextString, 512);
      Isc19041Ia.ImpErrorIsc1ComponentReturnCode = IntAttr.ValueOf(WLa.LocImpErrorIsc1ComponentReturnCode);
      Isc19041Ia.ImpErrorIsc1ComponentReasonCode = IntAttr.ValueOf(WLa.LocImpErrorIsc1ComponentReasonCode);
      Isc19041Ia.ImpErrorIsc1ComponentImplementationId = DoubleAttr.ValueOf(WLa.LocImpErrorIsc1ComponentImplementationId);
      Isc19041Ia.ImpErrorIsc1ComponentSpecificationId = DoubleAttr.ValueOf(WLa.LocImpErrorIsc1ComponentSpecificationId);
      Isc19041Ia.ImpErrorIsc1ComponentDialectCd = FixedStringAttr.ValueOf(WLa.LocImpErrorIsc1ComponentDialectCd, 2);
      Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
      IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.ISC19041).Assembly,
      	"GEN.ORT.YYY.ISC19041",
      	"Execute",
      	Isc19041Ia,
      	Isc19041Oa );
      if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
        ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
        ErrorData.ErrorEncounteredNoErrorFound) )
      {
        throw new ABException();
      }
      Globdata.GetStateData().SetCurrentABId( "0022020291" );
      Globdata.GetStateData().SetCurrentABName( "CYYY9831_MV_SC1_TO_YY1" );
      Globdata.GetStateData().SetLastStatementNumber( "0000000012" );
      WLa.LocErrorMsgIsc1ComponentSeverityCode = FixedStringAttr.ValueOf(Isc19041Oa.ExpErrorMsgIsc1ComponentSeverityCode, 1);
      WLa.LocErrorMsgIsc1ComponentMessageTx = StringAttr.ValueOf(Isc19041Oa.ExpErrorMsgIsc1ComponentMessageTx, 512);
      WLa.LocErrorIsc1ComponentSeverityCode = FixedStringAttr.ValueOf(Isc19041Oa.ExpErrorIsc1ComponentSeverityCode, 1);
      WLa.LocErrorIsc1ComponentRollbackIndicator = FixedStringAttr.ValueOf(Isc19041Oa.ExpErrorIsc1ComponentRollbackIndicator, 1);
      WLa.LocErrorIsc1ComponentOriginServid = DoubleAttr.ValueOf(Isc19041Oa.ExpErrorIsc1ComponentOriginServid);
      WLa.LocErrorIsc1ComponentContextString = StringAttr.ValueOf(Isc19041Oa.ExpErrorIsc1ComponentContextString, 512);
      WLa.LocErrorIsc1ComponentReturnCode = IntAttr.ValueOf(Isc19041Oa.ExpErrorIsc1ComponentReturnCode);
      WLa.LocErrorIsc1ComponentReasonCode = IntAttr.ValueOf(Isc19041Oa.ExpErrorIsc1ComponentReasonCode);
      WLa.LocErrorIsc1ComponentChecksum = FixedStringAttr.ValueOf(Isc19041Oa.ExpErrorIsc1ComponentChecksum, 15);
      Isc19041Ia.FreeInstance(  );
      Isc19041Ia = null;
      Isc19041Oa.FreeInstance(  );
      Isc19041Oa = null;
      Globdata.GetStateData().SetLastStatementNumber( "0000000013" );
      if ( ((double) WLa.LocErrorIsc1ComponentReturnCode < 1) )
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000014" );
        WLa.LocImpErrorIsc1ComponentSeverityCode = FixedStringAttr.ValueOf(WLa.LocErrorIsc1ComponentSeverityCode, 1);
        WLa.LocImpErrorIsc1ComponentRollbackIndicator = FixedStringAttr.ValueOf(WLa.LocErrorIsc1ComponentRollbackIndicator, 1);
        WLa.LocImpErrorIsc1ComponentOriginServid = DoubleAttr.ValueOf(WLa.LocErrorIsc1ComponentOriginServid);
        WLa.LocImpErrorIsc1ComponentContextString = StringAttr.ValueOf(WLa.LocErrorIsc1ComponentContextString, 512);
        WLa.LocImpErrorIsc1ComponentReturnCode = IntAttr.ValueOf(WLa.LocErrorIsc1ComponentReturnCode);
        WLa.LocImpErrorIsc1ComponentReasonCode = IntAttr.ValueOf(WLa.LocErrorIsc1ComponentReasonCode);
        WLa.LocImpErrorIsc1ComponentChecksum = FixedStringAttr.ValueOf(WLa.LocErrorIsc1ComponentChecksum, 15);
      }
      
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    If message is not formatted, use the available data.            
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000017" );
      if ( CompareExit.CompareTo(WLa.LocErrorMsgIsc1ComponentMessageTx, Spaces) <= 0 )
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000018" );
        WLa.LocErrorMsgIsc1ComponentMessageTx = StringAttr.ValueOf(WLa.LocImpErrorIsc1ComponentContextString, 512);
      }
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000019" );
      if ( CompareExit.CompareTo(WLa.LocErrorMsgIsc1ComponentSeverityCode, Spaces) <= 0 )
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000020" );
        WLa.LocErrorMsgIsc1ComponentSeverityCode = FixedStringAttr.ValueOf(WLa.LocImpErrorIsc1ComponentSeverityCode, 1);
      }
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000021" );
      if ( CompareExit.CompareTo(WLa.LocErrorMsgIsc1ComponentSeverityCode, Spaces) <= 0 )
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000022" );
        WLa.LocErrorMsgIsc1ComponentSeverityCode = FixedStringAttr.ValueOf("E", 1);
      }
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    The error message obtained from the other component is          
      //    transferred to the string and it is customized by this way.     
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000024" );
      
      Cyyy9991Oa = (GEN.ORT.YYY.CYYY9991_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYYY9991).Assembly,
      	"GEN.ORT.YYY.CYYY9991_OA" ));
      Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
      IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.CYYY9991).Assembly,
      	"GEN.ORT.YYY.CYYY9991",
      	"Execute",
      	null,
      	Cyyy9991Oa );
      if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
        ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
        ErrorData.ErrorEncounteredNoErrorFound) )
      {
        throw new ABException();
      }
      Globdata.GetStateData().SetCurrentABId( "0022020291" );
      Globdata.GetStateData().SetCurrentABName( "CYYY9831_MV_SC1_TO_YY1" );
      Globdata.GetStateData().SetLastStatementNumber( "0000000024" );
      WOa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(Cyyy9991Oa.ExpServidIyy1ComponentOriginServid);
      Cyyy9991Oa.FreeInstance(  );
      Cyyy9991Oa = null;
      Globdata.GetStateData().SetLastStatementNumber( "0000000025" );
      if ( ((double) WLa.LocImpErrorIsc1ComponentReturnCode < 1) )
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000026" );
        
        Cyyy9811Oa = (GEN.ORT.YYY.CYYY9811_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYYY9811).Assembly,
        	"GEN.ORT.YYY.CYYY9811_OA" ));
        Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
        IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.CYYY9811).Assembly,
        	"GEN.ORT.YYY.CYYY9811",
        	"Execute",
        	null,
        	Cyyy9811Oa );
        if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
          ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
          ErrorData.ErrorEncounteredNoErrorFound) )
        {
          throw new ABException();
        }
        Globdata.GetStateData().SetCurrentABId( "0022020291" );
        Globdata.GetStateData().SetCurrentABName( "CYYY9831_MV_SC1_TO_YY1" );
        Globdata.GetStateData().SetLastStatementNumber( "0000000026" );
        WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf(Cyyy9811Oa.ExpOtherErrorIyy1ComponentReturnCode);
        WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf(Cyyy9811Oa.ExpOtherErrorIyy1ComponentReasonCode);
        Cyyy9811Oa.FreeInstance(  );
        Cyyy9811Oa = null;
      }
      else 
      {
        Globdata.GetStateData().SetLastSubStatementNumber( "1" );
        {
          Globdata.GetStateData().SetLastStatementNumber( "0000000027" );
          
          Cyyy9801Oa = (GEN.ORT.YYY.CYYY9801_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYYY9801).Assembly,
          	"GEN.ORT.YYY.CYYY9801_OA" ));
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
          IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.CYYY9801).Assembly,
          	"GEN.ORT.YYY.CYYY9801",
          	"Execute",
          	null,
          	Cyyy9801Oa );
          if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
            ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
            ErrorData.ErrorEncounteredNoErrorFound) )
          {
            throw new ABException();
          }
          Globdata.GetStateData().SetCurrentABId( "0022020291" );
          Globdata.GetStateData().SetCurrentABName( "CYYY9831_MV_SC1_TO_YY1" );
          Globdata.GetStateData().SetLastStatementNumber( "0000000027" );
          WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf(Cyyy9801Oa.ExpOtherErrorIyy1ComponentReturnCode);
          WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf(Cyyy9801Oa.ExpOtherErrorIyy1ComponentReasonCode);
          Cyyy9801Oa.FreeInstance(  );
          Cyyy9801Oa = null;
        }
      }
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000028" );
      WOa.ExpErrorIyy1ComponentContextString = StringAttr.ValueOf(WLa.LocErrorMsgIsc1ComponentMessageTx, 512);
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000031" );
      WOa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(WLa.LocErrorMsgIsc1ComponentSeverityCode, 1);
      Globdata.GetStateData().SetLastStatementNumber( "0000000032" );
      WOa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.ValueOf(WLa.LocImpErrorIsc1ComponentRollbackIndicator, 1);
      Globdata.GetStateData().SetLastStatementNumber( "0000000033" );
      WOa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.ValueOf(WLa.LocImpErrorIsc1ComponentChecksum, 15);
      return;
    }
    
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // SUBORDINATE FUNCTIONS
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // INITIALIZATION UTILITY FUNCTIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void f_22020291_localAlloc( String abname )
    {
      // Request localview allocation 
      WLa = (GEN.ORT.YYY.CYYY9831_LA)(IefRuntimeParm2.GetInstance( GetType().Assembly,
      	"GEN.ORT.YYY.CYYY9831_LA" ));
      if ( WLa == null )
      {
        Globdata.GetStateData().SetCurrentABId( "0022020291" );
        Globdata.GetStateData().SetCurrentABName( abname );
        Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
        Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusIefAllocationError );
      }
    }
    
    public void f_22020291_init(  )
    {
      if ( NestingLevel < 2 )
      {
        WLa.Reset();
      }
      WOa.ExpErrorIyy1ComponentSeverityCode = " ";
      WOa.ExpErrorIyy1ComponentRollbackIndicator = " ";
      WOa.ExpErrorIyy1ComponentOriginServid = 0.0;
      WOa.ExpErrorIyy1ComponentContextString = "";
      WOa.ExpErrorIyy1ComponentReturnCode = 0;
      WOa.ExpErrorIyy1ComponentReasonCode = 0;
      WOa.ExpErrorIyy1ComponentChecksum = "               ";
    }
  }// end class
  
}

