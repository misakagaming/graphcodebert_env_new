namespace GEN.ORT.YYY
{
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  //
  //                    Source Code Generated by
  //                           CA Gen 8.6
  //
  //    Copyright (c) 2024 CA Technologies. All rights reserved.
  //
  //    Name: SYYY0341_TYPE_DELETE             Date: 2024/01/09
  //    Target OS:   CLR                       Time: 13:40:22
  //    Target DBMS: ODBC/ADO.NET              User: AliAl
  //    Access Method: <NONE>         
  //
  //    Generation options:
  //    Debug trace option not selected
  //    Data modeling constraint enforcement not selected
  //    Optimized import view initialization not selected
  //    Enforce default values with DBMS not selected
  //    Init unspecified optional fields to NULL not selected
  //
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // using Statements
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  using System;
  using com.ca.gen.vwrt;
  using com.ca.gen.vwrt.types;
  using com.ca.gen.vwrt.vdf;
  using com.ca.gen.csu.exception;
  
  using com.ca.gen.abrt;
  using com.ca.gen.abrt.functions;
  using com.ca.gen.abrt.cascade;
  using com.ca.gen.abrt.manager;
  using com.ca.gen.abrt.trace;
  using com.ca.gen.exits.common;
  using com.ca.gen.odc;
  using System.Data;
  using System.Collections;
  
  public class SYYY0341 : ABBase
  {
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // IMPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    SYYY0341_IA WIa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // EXPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    SYYY0341_OA WOa;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // MISC DECLARATIONS AND PROTOTYPES 
    //    FOLLOW AS NEEDED:             
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    bool func_0022020233_esc_flag;
    //       +->   SYYY0341_TYPE_DELETE              01/09/2024  13:40
    //       !       IMPORTS:
    //       !         Work View imp_reference iyy1_server_data (Transient,
    //       !                     Mandatory, Import only)
    //       !           userid
    //       !           reference_id
    //       !         Entity View imp type (Transient, Mandatory, Import
    //       !                     only)
    //       !           tinstance_id
    //       !           treference_id
    //       !           tkey_attr_text
    //       !       EXPORTS:
    //       !         Work View exp_error dont_change_text (Transient, Export
    //       !                     only)
    //       !           text_2
    //       !
    //       !     PROCEDURE STATEMENTS
    //       !
    //     1 !  NOTE: 
    //     1 !  See the description for the purpose
    //     1 !  
    //     2 !  NOTE: 
    //     2 !  RELEASE HISTORY
    //     2 !  01_00 23-02-1998 New release
    //     2 !  
    //     3 !  NOTE: 
    //     3 !  **************************************************************
    //     3 !  *
    //     3 !  WARNING ! Before GENERATION EXECUTE STATEMENT NUMBER flag
    //     3 !  must be unchecked.
    //     3 !  
    //     4 !  NOTE: 
    //     4 !  **************************************************************
    //     4 !  *
    //     4 !  SIMULATION and EXTERNAL APPLICATION
    //     4 !  The preparation purposes of external AB s, Server test for
    //     4 !  Local tests and Simulation for real time 
    //     4 !  conditions, to-do list and the things to be taken into
    //     4 !  consideration during the preparation, what 
    //     4 !  should be done during the usage are explained in the related
    //     4 !  documents.
    //     4 !  
    //     5 !  SET exp_error dont_change_text text_2 TO "OK" 
    //     6 !   
    //     7 !  +->IF imp type tkey_attr_text >= "9000"
    //     8 !  !  SET exp_error dont_change_text text_2 TO "XX" 
    //     7 !  +> ELSE IF imp type tkey_attr_text >= "8000"
    //     9 !  !  SET exp_error dont_change_text text_2 TO "NF" 
    //     7 !  +> ELSE IF imp type tkey_attr_text >= "7000"
    //    10 !  !  SET exp_error dont_change_text text_2 TO "CC" 
    //     7 !  +> ELSE IF imp type tkey_attr_text >= "6000"
    //    11 !  !  SET exp_error dont_change_text text_2 TO "IN" 
    //     7 !  +--
    //       +---
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //  CONSTRUCTOR FOR THE CLASS       
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    public SYYY0341(  )
    {
      IefCGenRlse = "CA Gen 8.6";
      IsCopyright = "Copyright (c) 2024 CA Technologies. All rights reserved.";
      IefCGenDate = "2024/01/09";
      IefCGenTime = "13:40:22";
      IefCGenEncy = "9.2.A6";
      IefCGenUserId = "AliAl";
      IefCGenModel = "N8I_ORT_YYY_0112_TEMPLATE";
      IefCGenSubset = "ALL";
      IefCGenName = "SYYY0341_TYPE_DELETE";
      NestingLevel = 0;
      ValChkDeadlockTimeout = false;
      ValChkDBError = false;
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ACTION BLOCK FUNCTION DECLARATIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void Execute( Object in_runtime_parm1, 
    	IRuntimePStepContext in_runtime_parm2, 
    	GlobData in_globdata, 
    	SYYY0341_IA import_view, 
    	SYYY0341_OA export_view )
    {
      IefRuntimeParm1 = in_runtime_parm1;
      IefRuntimeParm2 = in_runtime_parm2;
      Globdata = in_globdata;
      WIa = import_view;
      WOa = export_view;
      _Execute();
    }
    
    private void _Execute()
    {
      
      ++(NestingLevel);
      try {
        f_22020233_init(  );
        f_22020233(  );
      } catch( Exception e ) {
        if ( ((Globdata.GetErrorData().GetStatus() == ErrorData.StatusNone) && (Globdata.GetErrorData().GetErrorEncountered() == 
          ErrorData.ErrorEncounteredNoErrorFound)) && (Globdata.GetErrorData().GetViewOverflow() == 
          ErrorData.ErrorEncounteredNoErrorFound) )
        {
          Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
          Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusUnexpectedExceptionError );
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
          Globdata.GetErrorData(  ).SetErrorMessage( e );
        }
      }
      --(NestingLevel);
    }
    public void f_22020233(  )
    {
      func_0022020233_esc_flag = false;
      Globdata.GetStateData().SetCurrentABId( "0022020233" );
      Globdata.GetStateData().SetCurrentABName( "SYYY0341_TYPE_DELETE" );
      Globdata.GetStateData().SetLastStatementNumber( "0000000000" );
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    See the description for the purpose                             
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    RELEASE HISTORY                                                 
      //    01_00 23-02-1998 New release                                    
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    *                                                               
      //    WARNING ! Before GENERATION EXECUTE STATEMENT NUMBER flag       
      //    must be unchecked.                                              
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    *                                                               
      //    SIMULATION and EXTERNAL APPLICATION                             
      //    The preparation purposes of external AB s, Server test for      
      //    Local tests and Simulation for real time                        
      //    conditions, to-do list and the things to be taken into          
      //    consideration during the preparation, what                      
      //    should be done during the usage are explained in the related    
      //    documents.                                                      
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // Globdata.GetStateData().SetLastStatementNumber( "0000000005" );
      WOa.ExpErrorDontChangeTextText2 = FixedStringAttr.ValueOf("OK", 2);
      
      // Globdata.GetStateData().SetLastStatementNumber( "0000000007" );
      if ( CompareExit.CompareTo(WIa.ImpTypeTkeyAttrText, "9000") >= 0 )
      {
        // Globdata.GetStateData().SetLastStatementNumber( "0000000008" );
        WOa.ExpErrorDontChangeTextText2 = FixedStringAttr.ValueOf("XX", 2);
      }
      else 
      {
        // Globdata.GetStateData().SetLastSubStatementNumber( "1" );
        if ( CompareExit.CompareTo(WIa.ImpTypeTkeyAttrText, "8000") >= 0 )
        {
          // Globdata.GetStateData().SetLastStatementNumber( "0000000009" );
          WOa.ExpErrorDontChangeTextText2 = FixedStringAttr.ValueOf("NF", 2);
        }
        else 
        {
          // Globdata.GetStateData().SetLastSubStatementNumber( "2" );
          if ( CompareExit.CompareTo(WIa.ImpTypeTkeyAttrText, "7000") >= 0 )
          {
            // Globdata.GetStateData().SetLastStatementNumber( "0000000010" );
            WOa.ExpErrorDontChangeTextText2 = FixedStringAttr.ValueOf("CC", 2);
          }
          else 
          {
            // Globdata.GetStateData().SetLastSubStatementNumber( "3" );
            if ( CompareExit.CompareTo(WIa.ImpTypeTkeyAttrText, "6000") >= 0 )
            {
              // Globdata.GetStateData().SetLastStatementNumber( "0000000011" );
              WOa.ExpErrorDontChangeTextText2 = FixedStringAttr.ValueOf("IN", 2);
            }
          }
        }
      }
      
      return;
    }
    
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // SUBORDINATE FUNCTIONS
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // INITIALIZATION UTILITY FUNCTIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void f_22020233_init(  )
    {
      if ( NestingLevel < 2 )
      {
      }
      WOa.ExpErrorDontChangeTextText2 = "  ";
    }
  }// end class
  
}

