namespace GEN.ORT.YYY
{
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  //
  //                    Source Code Generated by
  //                           CA Gen 8.6
  //
  //    Copyright (c) 2024 CA Technologies. All rights reserved.
  //
  //    Name: CYYY0311_TYPE_CREATE             Date: 2024/01/09
  //    Target OS:   CLR                       Time: 13:40:26
  //    Target DBMS: ODBC/ADO.NET              User: AliAl
  //    Access Method: <NONE>         
  //
  //    Generation options:
  //    Debug trace option not selected
  //    Data modeling constraint enforcement not selected
  //    Optimized import view initialization not selected
  //    Enforce default values with DBMS not selected
  //    Init unspecified optional fields to NULL not selected
  //
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // using Statements
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  using System;
  using com.ca.gen.vwrt;
  using com.ca.gen.vwrt.types;
  using com.ca.gen.vwrt.vdf;
  using com.ca.gen.csu.exception;
  
  using com.ca.gen.abrt;
  using com.ca.gen.abrt.functions;
  using com.ca.gen.abrt.cascade;
  using com.ca.gen.abrt.manager;
  using com.ca.gen.abrt.trace;
  using com.ca.gen.exits.common;
  using com.ca.gen.odc;
  using System.Data;
  using System.Collections;
  
  public class CYYY0311 : ABBase
  {
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // IMPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    CYYY0311_IA WIa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // EXPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    CYYY0311_OA WOa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // LOCAL VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    CYYY0311_LA WLa;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ACTION BLOCK IMPORT/EXPORT VIEWS CLASS VARIABLES
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    GEN.ORT.YYY.DYYY0311_IA Dyyy0311Ia;
    GEN.ORT.YYY.DYYY0311_OA Dyyy0311Oa;
    GEN.ORT.YYY.CYYY9001_OA Cyyy9001Oa;
    GEN.ORT.YYY.CYYY9141_IA Cyyy9141Ia;
    GEN.ORT.YYY.CYYY9141_OA Cyyy9141Oa;
    GEN.ORT.YYY.CYYY0361_OA Cyyy0361Oa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // REPEATING GROUP VIEW STATUS FIELDS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    bool LocGroupContext_FL_001;
    int LocGroupContext_PS_001;
    bool LocGroupContext_RF_001;
    public const int LocGroupContext_MM_001 = 9;
    bool ImpGroupContext_FL_002;
    int ImpGroupContext_PS_002;
    bool ImpGroupContext_RF_002;
    public const int ImpGroupContext_MM_002 = 9;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // MISC DECLARATIONS AND PROTOTYPES 
    //    FOLLOW AS NEEDED:             
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    bool func_0022020151_esc_flag;
    bool func_0020972846_esc_flag;
    bool func_0020972621_esc_flag;
    bool func_0020973068_esc_flag;
    bool func_0020972943_esc_flag;
    bool func_0020973008_esc_flag;
    bool func_0020972730_esc_flag;
    //       +->   CYYY0311_TYPE_CREATE              01/09/2024  13:40
    //       !       IMPORTS:
    //       !         Work View imp_reference iyy1_server_data (Transient,
    //       !                     Mandatory, Import only)
    //       !           userid
    //       !           reference_id
    //       !         Entity View imp type (Transient, Mandatory, Import
    //       !                     only)
    //       !           tkey_attr_text
    //       !           tsearch_attr_text
    //       !           tother_attr_text
    //       !           tother_attr_date
    //       !           tother_attr_time
    //       !           tother_attr_amount
    //       !       EXPORTS:
    //       !         Entity View exp type (Transient, Export only)
    //       !           tinstance_id
    //       !           treference_id
    //       !         Work View exp_error iyy1_component (Transient, Export
    //       !                     only)
    //       !           severity_code
    //       !           rollback_indicator
    //       !           origin_servid
    //       !           context_string
    //       !           return_code
    //       !           reason_code
    //       !           checksum
    //       !       LOCALS:
    //       !         Entity View loc_imp type
    //       !           tinstance_id
    //       !           tkey_attr_text
    //       !           tsearch_attr_text
    //       !           tother_attr_text
    //       !           tother_attr_date
    //       !           tother_attr_time
    //       !           tother_attr_amount
    //       !         Entity View loc_empty type
    //       !           tinstance_id
    //       !           tkey_attr_text
    //       !           tsearch_attr_text
    //       !           tother_attr_text
    //       !           tother_attr_date
    //       !           tother_attr_time
    //       !           tother_attr_amount
    //       !         Work View loc_error iyy1_component
    //       !           severity_code
    //       !           rollback_indicator
    //       !           origin_servid
    //       !           context_string
    //       !           return_code
    //       !           reason_code
    //       !           checksum
    //       !         Group View (9) loc_group_context
    //       !           Work View loc_g_context dont_change_text
    //       !             text_150
    //       !         Work View loc dont_change_return_codes
    //       !           1_ok
    //       !           n20_mandatory_import_missing
    //       !         Work View loc dont_change_reason_codes
    //       !           1_default
    //       !           145_type_key_attr_mand
    //       !           146_type_search_attr_mand
    //       !
    //       !     PROCEDURE STATEMENTS
    //       !
    //     1 !  NOTE: 
    //     1 !  Please review explanation for purpose.
    //     1 !  
    //     2 !  NOTE: 
    //     2 !  RELEASE HISTORY
    //     2 !  01_00 23-02-1998 New release
    //     2 !  
    //     3 !  USE cyyy9001_exception_hndlng_dflt
    //     3 !     WHICH EXPORTS: Work View exp_error iyy1_component FROM Work
    //     3 !              View exp_error iyy1_component
    //     4 !   
    //     5 !  NOTE: 
    //     5 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //     5 !  Please rename the procedure name below.
    //     5 !  
    //     6 !  SET SUBSCRIPT OF loc_group_context TO 1 
    //     7 !  SET loc_g_context dont_change_text text_150 TO "CYYY0311" 
    //     8 !  SET SUBSCRIPT OF loc_group_context TO 2 
    //     9 !  SET loc_g_context dont_change_text text_150 TO "CREATE" 
    //    10 !   
    //    11 !  NOTE: 
    //    11 !  ****************************************************************
    //    11 !  Values of the ReturnCode/ReasonCode used.
    //    11 !  
    //    12 !  NOTE: 
    //    12 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //    12 !  Please set the return ve reason code values below.
    //    12 !  
    //    13 !  SET loc dont_change_return_codes 1_ok TO 1 
    //    14 !  SET loc dont_change_return_codes n20_mandatory_import_missing
    //    14 !              TO -20 
    //    15 !   
    //    16 !  SET loc dont_change_reason_codes 1_default TO 1 
    //    17 !  SET loc dont_change_reason_codes 145_type_key_attr_mand TO 145
    //    18 !  SET loc dont_change_reason_codes 146_type_search_attr_mand TO
    //    18 !              146 
    //    19 !   
    //    20 !  NOTE: 
    //    20 !  ****************************************************************
    //    20 !  Instance id generate
    //    20 !  
    //    21 !  MOVE imp type TO loc_imp type
    //    22 !   
    //    23 !  USE cyyy0361_type_instance_id_gen
    //    23 !     WHICH EXPORTS: Entity View loc_imp type FROM Entity View
    //    23 !              exp type
    //    24 !   
    //    25 !  NOTE: 
    //    25 !  **************************************************************
    //    25 !  **
    //    25 !  Necessary or optional but the required fields for the
    //    25 !  operation is checked.
    //    25 !  
    //    26 !  +->IF exp_error iyy1_component return_code >= loc
    //    26 !  !        dont_change_return_codes 1_ok
    //    27 !  !  +->IF loc_imp type tkey_attr_text <= loc_empty type
    //    27 !  !  !        tkey_attr_text
    //    28 !  !  !  SET exp_error iyy1_component return_code TO loc
    //    28 !  !  !              dont_change_return_codes
    //    28 !  !  !              n20_mandatory_import_missing 
    //    29 !  !  !  SET exp_error iyy1_component reason_code TO loc
    //    29 !  !  !              dont_change_reason_codes
    //    29 !  !  !              145_type_key_attr_mand 
    //    30 ! <------ESCAPE
    //    27 !  !  +--
    //    31 !  !  +->IF loc_imp type tsearch_attr_text <= loc_empty type
    //    31 !  !  !        tsearch_attr_text
    //    32 !  !  !  SET exp_error iyy1_component return_code TO loc
    //    32 !  !  !              dont_change_return_codes
    //    32 !  !  !              n20_mandatory_import_missing 
    //    33 !  !  !  SET exp_error iyy1_component reason_code TO loc
    //    33 !  !  !              dont_change_reason_codes
    //    33 !  !  !              146_type_search_attr_mand 
    //    34 ! <------ESCAPE
    //    31 !  !  +--
    //    26 !  +--
    //    35 !   
    //    36 !  +->IF exp_error iyy1_component return_code >= loc
    //    36 !  !        dont_change_return_codes 1_ok
    //    37 !  !  USE dyyy0311_type_create
    //    37 !  !     WHICH IMPORTS: Work View exp_error iyy1_component TO
    //    37 !  !              Work View imp_error iyy1_component
    //    37 !  !                    Entity View loc_imp type TO Entity View
    //    37 !  !              imp type
    //    37 !  !                    Work View imp_reference iyy1_server_data
    //    37 !  !              TO Work View imp_reference iyy1_server_data
    //    37 !  !     WHICH EXPORTS: Entity View exp type FROM Entity View exp
    //    37 !  !              type
    //    37 !  !                    Work View loc_error iyy1_component FROM
    //    37 !  !              Work View exp_error iyy1_component
    //    38 !  !   
    //    39 !  !  NOTE: 
    //    39 ...**************************************************************
    //    39 ...**
    //    39 ...If External will be USEd the code sample replacement for
    //    39 ...above code:
    //    39 ...
    //    39 ...| USE eyyy0311_type_create
    //    39 ...|   WHICH IMPORTS: Work View   imp_reference iyy1_server_data
    //    39 ...TO Work View imp_reference iyy1_s.
    //    39 ...|                  Entity View loc_imp type TO Entity View
    //    39 ...imp type 
    //    39 ...|   WHICH EXPORTS: Entity View exp type FROM Entity View exp
    //    39 ...type 
    //    39 ...|                  Work View   loc_error d._c._text  FROM
    //    39 ...Work View   exp_error d._c._text 
    //    39 ...|
    //    39 ...| +- CASE OF loc_error dont_change_text text_2 
    //    39 ...| +- CASE "OK" 
    //    39 ...| +- CASE "AE" 
    //    39 ...| |  SET exp_error iyy1_com.. return_code TO loc
    //    39 ...d._c._return_codes n40_obj_create_failed 
    //    39 ...| |  SET exp_error iyy1_com.. reason_code TO loc
    //    39 ...d._c._reason_codes 142_type_already_exist
    //    39 ...| +- CASE "PV" 
    //    39 ...| |  SET exp_error iyy1_com.. return_code TO loc
    //    39 ...d._c._return_codes n40_obj_create_failed 
    //    39 ...| |  SET exp_error iyy1_com.. reason_code TO loc
    //    39 ...d._c._reason_codes 143_type_attr_value_invalid
    //    39 ...| +- OTHERWISE 
    //    39 ...| |  SET exp_error iyy1_com.. return_code TO loc
    //    39 ...d._c._return_codes n999_unexpected_exception 
    //    39 ...| |  SET exp_error iyy1_com.. reason_code TO loc
    //    39 ...d._c._reason_codes 1_default 
    //    39 ...| +--
    //    39 ...
    //    40 !  !  +->IF loc_error iyy1_component return_code < loc
    //    40 !  !  !        dont_change_return_codes 1_ok
    //    41 !  !  !  MOVE loc_error iyy1_component TO exp_error
    //    41 !  !  !              iyy1_component
    //    42 !  !  !  NOTE: 
    //    42 ...!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //    42 ...!!!!!!!!!!!
    //    42 ...!! ATTENTION : In D AB, if context string must be formed
    //    42 ...ESCAPE AB must be exited.
    //    42 ...
    //    43 ! <------ESCAPE
    //    40 !  !  +--
    //    44 !  !  SET exp type tinstance_id TO loc_imp type tinstance_id 
    //    36 !  +--
    //    45 !   
    //    46 !  +->IF exp_error iyy1_component return_code < loc
    //    46 !  !        dont_change_return_codes 1_ok
    //    47 !  !  USE cyyy9141_context_string_set
    //    47 !  !     WHICH IMPORTS: Group View  loc_group_context TO Group
    //    47 !  !              View imp_group_context
    //    47 !  !     WHICH EXPORTS: Work View loc_error iyy1_component FROM
    //    47 !  !              Work View exp_error iyy1_component
    //    47 !  !                    Work View exp_error iyy1_component FROM
    //    47 !  !              Work View exp_context iyy1_component
    //    48 !  !   
    //    49 !  !  +->IF loc_error iyy1_component return_code < loc
    //    49 !  !  !        dont_change_return_codes 1_ok
    //    50 !  !  !  MOVE loc_error iyy1_component TO exp_error
    //    50 !  !  !              iyy1_component
    //    49 !  !  +--
    //    51 !  !  SET exp_error iyy1_component severity_code TO "E" 
    //    46 !  +--
    //       +---
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //  CONSTRUCTOR FOR THE CLASS       
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    public CYYY0311(  )
    {
      IefCGenRlse = "CA Gen 8.6";
      IsCopyright = "Copyright (c) 2024 CA Technologies. All rights reserved.";
      IefCGenDate = "2024/01/09";
      IefCGenTime = "13:40:26";
      IefCGenEncy = "9.2.A6";
      IefCGenUserId = "AliAl";
      IefCGenModel = "N8I_ORT_YYY_0112_TEMPLATE";
      IefCGenSubset = "ALL";
      IefCGenName = "CYYY0311_TYPE_CREATE";
      NestingLevel = 0;
      ValChkDeadlockTimeout = false;
      ValChkDBError = false;
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ACTION BLOCK FUNCTION DECLARATIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void Execute( Object in_runtime_parm1, 
    	IRuntimePStepContext in_runtime_parm2, 
    	GlobData in_globdata, 
    	CYYY0311_IA import_view, 
    	CYYY0311_OA export_view )
    {
      IefRuntimeParm1 = in_runtime_parm1;
      IefRuntimeParm2 = in_runtime_parm2;
      Globdata = in_globdata;
      WIa = import_view;
      WOa = export_view;
      _Execute();
    }
    
    private void _Execute()
    {
      
      f_22020151_localAlloc( "CYYY0311_TYPE_CREATE" );
      if ( Globdata.GetErrorData().GetLastStatus() == ErrorData.LastStatusIefAllocationError )
      	return;
      
      ++(NestingLevel);
      try {
        f_22020151_init(  );
        f_22020151(  );
      } catch( Exception e ) {
        if ( ((Globdata.GetErrorData().GetStatus() == ErrorData.StatusNone) && (Globdata.GetErrorData().GetErrorEncountered() == 
          ErrorData.ErrorEncounteredNoErrorFound)) && (Globdata.GetErrorData().GetViewOverflow() == 
          ErrorData.ErrorEncounteredNoErrorFound) )
        {
          Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
          Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusUnexpectedExceptionError );
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
          Globdata.GetErrorData(  ).SetErrorMessage( e );
        }
      }
      --(NestingLevel);
    }
    public void f_22020151(  )
    {
      func_0022020151_esc_flag = false;
      Globdata.GetStateData().SetCurrentABId( "0022020151" );
      Globdata.GetStateData().SetCurrentABName( "CYYY0311_TYPE_CREATE" );
      {
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        //    Please review explanation for purpose.                          
        //                                                                    
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        //    RELEASE HISTORY                                                 
        //    01_00 23-02-1998 New release                                    
        //                                                                    
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        Globdata.GetStateData().SetLastStatementNumber( "0000000003" );
        
        Cyyy9001Oa = (GEN.ORT.YYY.CYYY9001_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYYY9001).Assembly,
        	"GEN.ORT.YYY.CYYY9001_OA" ));
        Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
        IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.CYYY9001).Assembly,
        	"GEN.ORT.YYY.CYYY9001",
        	"Execute",
        	null,
        	Cyyy9001Oa );
        if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
          ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
          ErrorData.ErrorEncounteredNoErrorFound) )
        {
          throw new ABException();
        }
        Globdata.GetStateData().SetCurrentABId( "0022020151" );
        Globdata.GetStateData().SetCurrentABName( "CYYY0311_TYPE_CREATE" );
        Globdata.GetStateData().SetLastStatementNumber( "0000000003" );
        WOa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(Cyyy9001Oa.ExpErrorIyy1ComponentSeverityCode, 1);
        WOa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.ValueOf(Cyyy9001Oa.ExpErrorIyy1ComponentRollbackIndicator, 1);
        WOa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(Cyyy9001Oa.ExpErrorIyy1ComponentOriginServid);
        WOa.ExpErrorIyy1ComponentContextString = StringAttr.ValueOf(Cyyy9001Oa.ExpErrorIyy1ComponentContextString, 512);
        WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf(Cyyy9001Oa.ExpErrorIyy1ComponentReturnCode);
        WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf(Cyyy9001Oa.ExpErrorIyy1ComponentReasonCode);
        WOa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.ValueOf(Cyyy9001Oa.ExpErrorIyy1ComponentChecksum, 15);
        Cyyy9001Oa.FreeInstance(  );
        Cyyy9001Oa = null;
        
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!                      
        //    Please rename the procedure name below.                         
        //                                                                    
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        Globdata.GetStateData().SetLastStatementNumber( "0000000006" );
        LocGroupContext_PS_001 = (int)TIRD2DEC.Execute1(1, 0, TIRD2DEC.ROUND_NONE, 0);
        if ( (LocGroupContext_PS_001 > WLa.LocGroupContext_MA) && (LocGroupContext_PS_001 <= 9) )
        WLa.LocGroupContext_MA = IntAttr.ValueOf(LocGroupContext_PS_001);
        Globdata.GetStateData().SetLastStatementNumber( "0000000007" );
        WLa.LocGContextDontChangeTextText150[LocGroupContext_PS_001-1] = FixedStringAttr.ValueOf("CYYY0311", 150);
        f_173015175_rgvc(  );
        Globdata.GetStateData().SetLastStatementNumber( "0000000008" );
        LocGroupContext_PS_001 = (int)TIRD2DEC.Execute1(2, 0, TIRD2DEC.ROUND_NONE, 0);
        if ( (LocGroupContext_PS_001 > WLa.LocGroupContext_MA) && (LocGroupContext_PS_001 <= 9) )
        WLa.LocGroupContext_MA = IntAttr.ValueOf(LocGroupContext_PS_001);
        Globdata.GetStateData().SetLastStatementNumber( "0000000009" );
        WLa.LocGContextDontChangeTextText150[LocGroupContext_PS_001-1] = FixedStringAttr.ValueOf("CREATE", 150);
        f_173015175_rgvc(  );
        
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        //    **************************************************************  
        //    **                                                              
        //    Values of the ReturnCode/ReasonCode used.                       
        //                                                                    
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
        //    !!                                                              
        //    Please set the return ve reason code values below.              
        //                                                                    
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        Globdata.GetStateData().SetLastStatementNumber( "0000000013" );
        WLa.LocDontChangeReturnCodesQ1Ok = IntAttr.ValueOf((int)TIRD2DEC.Execute1(1, 0, TIRD2DEC.ROUND_NONE, 5));
        Globdata.GetStateData().SetLastStatementNumber( "0000000014" );
        WLa.LocDontChangeReturnCodesN20MandatoryImportMissing = IntAttr.ValueOf((int)TIRD2DEC.Execute1(-20, 0, TIRD2DEC.ROUND_NONE, 
          5));
        
        Globdata.GetStateData().SetLastStatementNumber( "0000000016" );
        WLa.LocDontChangeReasonCodesQ1Default = IntAttr.ValueOf((int)TIRD2DEC.Execute1(1, 0, TIRD2DEC.ROUND_NONE, 5));
        Globdata.GetStateData().SetLastStatementNumber( "0000000017" );
        WLa.LocDontChangeReasonCodesQ145TypeKeyAttrMand = IntAttr.ValueOf((int)TIRD2DEC.Execute1(145, 0, TIRD2DEC.ROUND_NONE, 5));
        Globdata.GetStateData().SetLastStatementNumber( "0000000018" );
        WLa.LocDontChangeReasonCodesQ146TypeSearchAttrMand = IntAttr.ValueOf((int)TIRD2DEC.Execute1(146, 0, TIRD2DEC.ROUND_NONE, 5))
          ;
        
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        //    **************************************************************  
        //    **                                                              
        //    Instance id generate                                            
        //                                                                    
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        Globdata.GetStateData().SetLastStatementNumber( "0000000021" );
        WLa.LocImpTypeTkeyAttrText = FixedStringAttr.ValueOf(WIa.ImpTypeTkeyAttrText, 4);
        WLa.LocImpTypeTsearchAttrText = FixedStringAttr.ValueOf(WIa.ImpTypeTsearchAttrText, 20);
        WLa.LocImpTypeTotherAttrText = FixedStringAttr.ValueOf(WIa.ImpTypeTotherAttrText, 2);
        WLa.LocImpTypeTotherAttrDate = DateAttr.ValueOf(WIa.ImpTypeTotherAttrDate);
        WLa.LocImpTypeTotherAttrTime = TimeAttr.ValueOf(WIa.ImpTypeTotherAttrTime);
        WLa.LocImpTypeTotherAttrAmount = DecimalAttr.ValueOf(TIRBDTRU.TruncateToDecimal(WIa.ImpTypeTotherAttrAmount, 2));
        
        Globdata.GetStateData().SetLastStatementNumber( "0000000023" );
        
        Cyyy0361Oa = (GEN.ORT.YYY.CYYY0361_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYYY0361).Assembly,
        	"GEN.ORT.YYY.CYYY0361_OA" ));
        Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
        IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.CYYY0361).Assembly,
        	"GEN.ORT.YYY.CYYY0361",
        	"Execute",
        	null,
        	Cyyy0361Oa );
        if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
          ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
          ErrorData.ErrorEncounteredNoErrorFound) )
        {
          throw new ABException();
        }
        Globdata.GetStateData().SetCurrentABId( "0022020151" );
        Globdata.GetStateData().SetCurrentABName( "CYYY0311_TYPE_CREATE" );
        Globdata.GetStateData().SetLastStatementNumber( "0000000023" );
        WLa.LocImpTypeTinstanceId = TimestampAttr.ValueOf(Cyyy0361Oa.ExpTypeTinstanceId);
        Cyyy0361Oa.FreeInstance(  );
        Cyyy0361Oa = null;
        
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        //    **************************************************************  
        //    **                                                              
        //    Necessary or optional but the required fields for the           
        //    operation is checked.                                           
        //                                                                    
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        Globdata.GetStateData().SetLastStatementNumber( "0000000026" );
        if ( ((double) WOa.ExpErrorIyy1ComponentReturnCode >= (double) WLa.LocDontChangeReturnCodesQ1Ok) )
        {
          f_20972846(  );
        }
        
        if ( func_0022020151_esc_flag )
        {
          goto f_0022020151_esctag;
        }
        
        Globdata.GetStateData().SetLastStatementNumber( "0000000036" );
        if ( ((double) WOa.ExpErrorIyy1ComponentReturnCode >= (double) WLa.LocDontChangeReturnCodesQ1Ok) )
        {
          f_20972621(  );
        }
        
        if ( func_0022020151_esc_flag )
        {
          goto f_0022020151_esctag;
        }
        
        Globdata.GetStateData().SetLastStatementNumber( "0000000046" );
        if ( ((double) WOa.ExpErrorIyy1ComponentReturnCode < (double) WLa.LocDontChangeReturnCodesQ1Ok) )
        {
          f_20973068(  );
        }
        
      }
      f_0022020151_esctag: 
      ;
      return;
    }
    
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // SUBORDINATE FUNCTIONS
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    
    public void f_20972846(  )
    {
      func_0020972846_esc_flag = false;
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000027" );
        if ( CompareExit.CompareTo(WLa.LocImpTypeTkeyAttrText, WLa.LocEmptyTypeTkeyAttrText) <= 0 )
        {
          f_20972943(  );
        }
        
        if ( func_0020972846_esc_flag )
        {
          goto f_0020972846_esctag;
        }
        Globdata.GetStateData().SetLastStatementNumber( "0000000031" );
        if ( CompareExit.CompareTo(WLa.LocImpTypeTsearchAttrText, WLa.LocEmptyTypeTsearchAttrText) <= 0 )
        {
          f_20973008(  );
        }
        
      }
      f_0020972846_esctag: 
      ;
      return;
    }
    
    public void f_20972621(  )
    {
      func_0020972621_esc_flag = false;
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000037" );
        
        Dyyy0311Ia = (GEN.ORT.YYY.DYYY0311_IA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.DYYY0311).Assembly,
        	"GEN.ORT.YYY.DYYY0311_IA" ));
        Dyyy0311Oa = (GEN.ORT.YYY.DYYY0311_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.DYYY0311).Assembly,
        	"GEN.ORT.YYY.DYYY0311_OA" ));
        Dyyy0311Ia.ImpReferenceIyy1ServerDataUserid = FixedStringAttr.ValueOf(WIa.ImpReferenceIyy1ServerDataUserid, 8);
        Dyyy0311Ia.ImpReferenceIyy1ServerDataReferenceId = TimestampAttr.ValueOf(WIa.ImpReferenceIyy1ServerDataReferenceId);
        Dyyy0311Ia.ImpTypeTinstanceId = TimestampAttr.ValueOf(WLa.LocImpTypeTinstanceId);
        Dyyy0311Ia.ImpTypeTkeyAttrText = FixedStringAttr.ValueOf(WLa.LocImpTypeTkeyAttrText, 4);
        Dyyy0311Ia.ImpTypeTsearchAttrText = FixedStringAttr.ValueOf(WLa.LocImpTypeTsearchAttrText, 20);
        Dyyy0311Ia.ImpTypeTotherAttrText = FixedStringAttr.ValueOf(WLa.LocImpTypeTotherAttrText, 2);
        Dyyy0311Ia.ImpTypeTotherAttrDate = DateAttr.ValueOf(WLa.LocImpTypeTotherAttrDate);
        Dyyy0311Ia.ImpTypeTotherAttrTime = TimeAttr.ValueOf(WLa.LocImpTypeTotherAttrTime);
        Dyyy0311Ia.ImpTypeTotherAttrAmount = DecimalAttr.ValueOf(WLa.LocImpTypeTotherAttrAmount);
        Dyyy0311Ia.ImpErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(WOa.ExpErrorIyy1ComponentSeverityCode, 1);
        Dyyy0311Ia.ImpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.ValueOf(WOa.ExpErrorIyy1ComponentRollbackIndicator, 1);
        Dyyy0311Ia.ImpErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(WOa.ExpErrorIyy1ComponentOriginServid);
        Dyyy0311Ia.ImpErrorIyy1ComponentContextString = StringAttr.ValueOf(WOa.ExpErrorIyy1ComponentContextString, 512);
        Dyyy0311Ia.ImpErrorIyy1ComponentReturnCode = IntAttr.ValueOf(WOa.ExpErrorIyy1ComponentReturnCode);
        Dyyy0311Ia.ImpErrorIyy1ComponentReasonCode = IntAttr.ValueOf(WOa.ExpErrorIyy1ComponentReasonCode);
        Dyyy0311Ia.ImpErrorIyy1ComponentChecksum = FixedStringAttr.ValueOf(WOa.ExpErrorIyy1ComponentChecksum, 15);
        Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
        IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.DYYY0311).Assembly,
        	"GEN.ORT.YYY.DYYY0311",
        	"Execute",
        	Dyyy0311Ia,
        	Dyyy0311Oa );
        if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
          ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
          ErrorData.ErrorEncounteredNoErrorFound) )
        {
          throw new ABException();
        }
        Globdata.GetStateData().SetCurrentABId( "0022020151" );
        Globdata.GetStateData().SetCurrentABName( "CYYY0311_TYPE_CREATE" );
        Globdata.GetStateData().SetLastStatementNumber( "0000000037" );
        WLa.LocErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(Dyyy0311Oa.ExpErrorIyy1ComponentSeverityCode, 1);
        WLa.LocErrorIyy1ComponentRollbackIndicator = FixedStringAttr.ValueOf(Dyyy0311Oa.ExpErrorIyy1ComponentRollbackIndicator, 1);
        WLa.LocErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(Dyyy0311Oa.ExpErrorIyy1ComponentOriginServid);
        WLa.LocErrorIyy1ComponentContextString = StringAttr.ValueOf(Dyyy0311Oa.ExpErrorIyy1ComponentContextString, 512);
        WLa.LocErrorIyy1ComponentReturnCode = IntAttr.ValueOf(Dyyy0311Oa.ExpErrorIyy1ComponentReturnCode);
        WLa.LocErrorIyy1ComponentReasonCode = IntAttr.ValueOf(Dyyy0311Oa.ExpErrorIyy1ComponentReasonCode);
        WLa.LocErrorIyy1ComponentChecksum = FixedStringAttr.ValueOf(Dyyy0311Oa.ExpErrorIyy1ComponentChecksum, 15);
        WOa.ExpTypeTreferenceId = TimestampAttr.ValueOf(Dyyy0311Oa.ExpTypeTreferenceId);
        Dyyy0311Ia.FreeInstance(  );
        Dyyy0311Ia = null;
        Dyyy0311Oa.FreeInstance(  );
        Dyyy0311Oa = null;
        
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        //    **************************************************************  
        //    **                                                              
        //    If External will be USEd the code sample replacement for        
        //    above code:                                                     
        //                                                                    
        //    | USE eyyy0311_type_create                                      
        //    |   WHICH IMPORTS: Work View   imp_reference iyy1_server_data   
        //    TO Work View imp_reference iyy1_s.                              
        //    |                  Entity View loc_imp type TO Entity View      
        //    imp type                                                        
        //    |   WHICH EXPORTS: Entity View exp type FROM Entity View exp    
        //    type                                                            
        //    |                  Work View   loc_error d._c._text  FROM       
        //    Work View   exp_error d._c._text                                
        //    |                                                               
        //    | +- CASE OF loc_error dont_change_text text_2                  
        //    | +- CASE "OK"                                                  
        //    | +- CASE "AE"                                                  
        //    | |  SET exp_error iyy1_com.. return_code TO loc                
        //    d._c._return_codes n40_obj_create_failed                        
        //    | |  SET exp_error iyy1_com.. reason_code TO loc                
        //    d._c._reason_codes 142_type_already_exist                       
        //    | +- CASE "PV"                                                  
        //    | |  SET exp_error iyy1_com.. return_code TO loc                
        //    d._c._return_codes n40_obj_create_failed                        
        //    | |  SET exp_error iyy1_com.. reason_code TO loc                
        //    d._c._reason_codes 143_type_attr_value_invalid                  
        //    | +- OTHERWISE                                                  
        //    | |  SET exp_error iyy1_com.. return_code TO loc                
        //    d._c._return_codes n999_unexpected_exception                    
        //    | |  SET exp_error iyy1_com.. reason_code TO loc                
        //    d._c._reason_codes 1_default                                    
        //    | +--                                                           
        //                                                                    
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        Globdata.GetStateData().SetLastStatementNumber( "0000000040" );
        if ( ((double) WLa.LocErrorIyy1ComponentReturnCode < (double) WLa.LocDontChangeReturnCodesQ1Ok) )
        {
          f_20972730(  );
        }
        
        if ( func_0020972621_esc_flag )
        {
          goto f_0020972621_esctag;
        }
        Globdata.GetStateData().SetLastStatementNumber( "0000000044" );
        WOa.ExpTypeTinstanceId = TimestampAttr.ValueOf(WLa.LocImpTypeTinstanceId);
      }
      f_0020972621_esctag: 
      ;
      return;
    }
    
    public void f_20973068(  )
    {
      func_0020973068_esc_flag = false;
      Globdata.GetStateData().SetLastStatementNumber( "0000000047" );
      
      Cyyy9141Ia = (GEN.ORT.YYY.CYYY9141_IA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYYY9141).Assembly,
      	"GEN.ORT.YYY.CYYY9141_IA" ));
      Cyyy9141Oa = (GEN.ORT.YYY.CYYY9141_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYYY9141).Assembly,
      	"GEN.ORT.YYY.CYYY9141_OA" ));
      Cyyy9141Ia.ImpGroupContext_MA = IntAttr.ValueOf(WLa.LocGroupContext_MA);
      for(Adim1 = 1; Adim1 <= WLa.LocGroupContext_MA; ++(Adim1))
      {
        Cyyy9141Ia.ImpGContextDontChangeTextText150[Adim1-1] = FixedStringAttr.ValueOf(WLa.LocGContextDontChangeTextText150[Adim1-1],
           150);
      }
      for(Adim1 = WLa.LocGroupContext_MA + 1; Adim1 <= 9; ++(Adim1))
      {
        Cyyy9141Ia.ImpGContextDontChangeTextText150[Adim1-1] = 
"                                                                                                                                                      "
          ;
      }
      Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
      IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.CYYY9141).Assembly,
      	"GEN.ORT.YYY.CYYY9141",
      	"Execute",
      	Cyyy9141Ia,
      	Cyyy9141Oa );
      if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
        ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
        ErrorData.ErrorEncounteredNoErrorFound) )
      {
        throw new ABException();
      }
      Globdata.GetStateData().SetCurrentABId( "0022020151" );
      Globdata.GetStateData().SetCurrentABName( "CYYY0311_TYPE_CREATE" );
      Globdata.GetStateData().SetLastStatementNumber( "0000000047" );
      WOa.ExpErrorIyy1ComponentContextString = StringAttr.ValueOf(Cyyy9141Oa.ExpContextIyy1ComponentContextString, 512);
      WLa.LocErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(Cyyy9141Oa.ExpErrorIyy1ComponentSeverityCode, 1);
      WLa.LocErrorIyy1ComponentRollbackIndicator = FixedStringAttr.ValueOf(Cyyy9141Oa.ExpErrorIyy1ComponentRollbackIndicator, 1);
      WLa.LocErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(Cyyy9141Oa.ExpErrorIyy1ComponentOriginServid);
      WLa.LocErrorIyy1ComponentContextString = StringAttr.ValueOf(Cyyy9141Oa.ExpErrorIyy1ComponentContextString, 512);
      WLa.LocErrorIyy1ComponentReturnCode = IntAttr.ValueOf(Cyyy9141Oa.ExpErrorIyy1ComponentReturnCode);
      WLa.LocErrorIyy1ComponentReasonCode = IntAttr.ValueOf(Cyyy9141Oa.ExpErrorIyy1ComponentReasonCode);
      WLa.LocErrorIyy1ComponentChecksum = FixedStringAttr.ValueOf(Cyyy9141Oa.ExpErrorIyy1ComponentChecksum, 15);
      Cyyy9141Ia.FreeInstance(  );
      Cyyy9141Ia = null;
      Cyyy9141Oa.FreeInstance(  );
      Cyyy9141Oa = null;
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000049" );
      if ( ((double) WLa.LocErrorIyy1ComponentReturnCode < (double) WLa.LocDontChangeReturnCodesQ1Ok) )
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000050" );
        WOa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(WLa.LocErrorIyy1ComponentSeverityCode, 1);
        WOa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.ValueOf(WLa.LocErrorIyy1ComponentRollbackIndicator, 1);
        WOa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(WLa.LocErrorIyy1ComponentOriginServid);
        WOa.ExpErrorIyy1ComponentContextString = StringAttr.ValueOf(WLa.LocErrorIyy1ComponentContextString, 512);
        WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf(WLa.LocErrorIyy1ComponentReturnCode);
        WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf(WLa.LocErrorIyy1ComponentReasonCode);
        WOa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.ValueOf(WLa.LocErrorIyy1ComponentChecksum, 15);
      }
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000051" );
      WOa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf("E", 1);
      return;
    }
    
    public void f_20972943(  )
    {
      func_0020972943_esc_flag = false;
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000028" );
        WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
          WLa.LocDontChangeReturnCodesN20MandatoryImportMissing, 0, TIRD2DEC.ROUND_NONE, 5));
        Globdata.GetStateData().SetLastStatementNumber( "0000000029" );
        WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
          WLa.LocDontChangeReasonCodesQ145TypeKeyAttrMand, 0, TIRD2DEC.ROUND_NONE, 5));
        Globdata.GetStateData().SetLastStatementNumber( "0000000030" );
        func_0020972943_esc_flag = true;
        func_0020972846_esc_flag = true;
      }
      f_0020972943_esctag: 
      ;
      return;
    }
    
    public void f_20973008(  )
    {
      func_0020973008_esc_flag = false;
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000032" );
        WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
          WLa.LocDontChangeReturnCodesN20MandatoryImportMissing, 0, TIRD2DEC.ROUND_NONE, 5));
        Globdata.GetStateData().SetLastStatementNumber( "0000000033" );
        WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
          WLa.LocDontChangeReasonCodesQ146TypeSearchAttrMand, 0, TIRD2DEC.ROUND_NONE, 5));
        Globdata.GetStateData().SetLastStatementNumber( "0000000034" );
        func_0020973008_esc_flag = true;
        func_0020972846_esc_flag = true;
      }
      f_0020973008_esctag: 
      ;
      return;
    }
    
    public void f_20972730(  )
    {
      func_0020972730_esc_flag = false;
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000041" );
        WOa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(WLa.LocErrorIyy1ComponentSeverityCode, 1);
        WOa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.ValueOf(WLa.LocErrorIyy1ComponentRollbackIndicator, 1);
        WOa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(WLa.LocErrorIyy1ComponentOriginServid);
        WOa.ExpErrorIyy1ComponentContextString = StringAttr.ValueOf(WLa.LocErrorIyy1ComponentContextString, 512);
        WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf(WLa.LocErrorIyy1ComponentReturnCode);
        WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf(WLa.LocErrorIyy1ComponentReasonCode);
        WOa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.ValueOf(WLa.LocErrorIyy1ComponentChecksum, 15);
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
        //    !!!!!!!!!!!                                                     
        //    !! ATTENTION : In D AB, if context string must be formed        
        //    ESCAPE AB must be exited.                                       
        //                                                                    
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        Globdata.GetStateData().SetLastStatementNumber( "0000000043" );
        func_0020972730_esc_flag = true;
        func_0020972621_esc_flag = true;
      }
      f_0020972730_esctag: 
      ;
      return;
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // INITIALIZATION UTILITY FUNCTIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void f_22020151_localAlloc( String abname )
    {
      // Request localview allocation 
      WLa = (GEN.ORT.YYY.CYYY0311_LA)(IefRuntimeParm2.GetInstance( GetType().Assembly,
      	"GEN.ORT.YYY.CYYY0311_LA" ));
      if ( WLa == null )
      {
        Globdata.GetStateData().SetCurrentABId( "0022020151" );
        Globdata.GetStateData().SetCurrentABName( abname );
        Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
        Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusIefAllocationError );
      }
    }
    
    public void f_22020151_init(  )
    {
      if ( NestingLevel < 2 )
      {
        WLa.Reset();
      }
      WLa.LocGroupContext_MA = 0;
      for(LocGroupContext_PS_001 = 1; LocGroupContext_PS_001 <= 9; ++(LocGroupContext_PS_001))
      {
      }
      WOa.ExpTypeTinstanceId = "00000000000000000000";
      WOa.ExpTypeTreferenceId = "00000000000000000000";
      WOa.ExpErrorIyy1ComponentSeverityCode = " ";
      WOa.ExpErrorIyy1ComponentRollbackIndicator = " ";
      WOa.ExpErrorIyy1ComponentOriginServid = 0.0;
      WOa.ExpErrorIyy1ComponentContextString = "";
      WOa.ExpErrorIyy1ComponentReturnCode = 0;
      WOa.ExpErrorIyy1ComponentReasonCode = 0;
      WOa.ExpErrorIyy1ComponentChecksum = "               ";
      LocGroupContext_PS_001 = 1;
    }
    public void f_173015175_rgvc(  )
    {
      if ( (LocGroupContext_PS_001 > 9) || (LocGroupContext_PS_001 < 1) )
      {
        Globdata.GetErrorData().SetViewOverflow( ErrorData.ErrorEncounteredErrorFound );
        {
          throw new ABException();
        }
      }
    }
  }// end class
  
}

