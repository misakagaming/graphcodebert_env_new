namespace GEN.ORT.YYY
{
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  //
  //                    Source Code Generated by
  //                           CA Gen 8.6
  //
  //    Copyright (c) 2024 CA Technologies. All rights reserved.
  //
  //    Name: DYYY0311_TYPE_CREATE             Date: 2024/01/09
  //    Target OS:   CLR                       Time: 13:40:33
  //    Target DBMS: ODBC/ADO.NET              User: AliAl
  //    Access Method: <NONE>         
  //
  //    Generation options:
  //    Debug trace option not selected
  //    Data modeling constraint enforcement not selected
  //    Optimized import view initialization not selected
  //    Enforce default values with DBMS not selected
  //    Init unspecified optional fields to NULL not selected
  //
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // using Statements
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  using System;
  using com.ca.gen.vwrt;
  using com.ca.gen.vwrt.types;
  using com.ca.gen.vwrt.vdf;
  using com.ca.gen.csu.exception;
  
  using com.ca.gen.abrt;
  using com.ca.gen.abrt.functions;
  using com.ca.gen.abrt.cascade;
  using com.ca.gen.abrt.manager;
  using com.ca.gen.abrt.trace;
  using com.ca.gen.exits.common;
  using com.ca.gen.odc;
  using System.Data;
  using System.Collections;
  
  public class DYYY0311 : ABBase
  {
    // * * * * * * * * * * * * * * * * * * *
    // ENTITY ACTION STATEMENT STATUS FLAGS 
    // ENTITY VIEW STATUS FLAGS AND         
    // LAST COMMAND FOR EACH ENTITY VIEW    
    // * * * * * * * * * * * * * * * * * * *
    string cr_26214403 = ErrorData.LastStatusNone;
    string Type_es;
    string Type_001cd;
    string Type_lk;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // IMPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    DYYY0311_IA WIa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // EXPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    DYYY0311_OA WOa;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // START OF ENTITY ACTION VIEW
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    /// <summary>
    /// Internal data view storage for: DYYY0311_EA
    /// </summary>
    [Serializable]
    public class DYYY0311_EA : ViewBase, IEntityActionView
    {
      // Entity View: 
      //        Type: TYPE
      /// <summary>
      /// Internal storage for attribute missing flag for: TypeTinstanceId
      /// </summary>
      private char _TypeTinstanceId_AS;
      /// <summary>
      /// Attribute missing flag for: TypeTinstanceId
      /// </summary>
      public char TypeTinstanceId_AS {
        get {
          return(_TypeTinstanceId_AS);
        }
        set {
          _TypeTinstanceId_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: TypeTinstanceId
      /// Domain: Timestamp
      /// Length: 20
      /// </summary>
      private string _TypeTinstanceId;
      /// <summary>
      /// Attribute for: TypeTinstanceId
      /// </summary>
      public string TypeTinstanceId {
        get {
          return(_TypeTinstanceId);
        }
        set {
          _TypeTinstanceId = value;
        }
      }
      /// <summary>
      /// Internal storage for attribute missing flag for: TypeTreferenceId
      /// </summary>
      private char _TypeTreferenceId_AS;
      /// <summary>
      /// Attribute missing flag for: TypeTreferenceId
      /// </summary>
      public char TypeTreferenceId_AS {
        get {
          return(_TypeTreferenceId_AS);
        }
        set {
          _TypeTreferenceId_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: TypeTreferenceId
      /// Domain: Timestamp
      /// Length: 20
      /// </summary>
      private string _TypeTreferenceId;
      /// <summary>
      /// Attribute for: TypeTreferenceId
      /// </summary>
      public string TypeTreferenceId {
        get {
          return(_TypeTreferenceId);
        }
        set {
          _TypeTreferenceId = value;
        }
      }
      /// <summary>
      /// Internal storage for attribute missing flag for: TypeTcreateUserId
      /// </summary>
      private char _TypeTcreateUserId_AS;
      /// <summary>
      /// Attribute missing flag for: TypeTcreateUserId
      /// </summary>
      public char TypeTcreateUserId_AS {
        get {
          return(_TypeTcreateUserId_AS);
        }
        set {
          _TypeTcreateUserId_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: TypeTcreateUserId
      /// Domain: Text
      /// Length: 8
      /// Varying Length: N
      /// </summary>
      private string _TypeTcreateUserId;
      /// <summary>
      /// Attribute for: TypeTcreateUserId
      /// </summary>
      public string TypeTcreateUserId {
        get {
          return(_TypeTcreateUserId);
        }
        set {
          _TypeTcreateUserId = value;
        }
      }
      /// <summary>
      /// Internal storage for attribute missing flag for: TypeTupdateUserId
      /// </summary>
      private char _TypeTupdateUserId_AS;
      /// <summary>
      /// Attribute missing flag for: TypeTupdateUserId
      /// </summary>
      public char TypeTupdateUserId_AS {
        get {
          return(_TypeTupdateUserId_AS);
        }
        set {
          _TypeTupdateUserId_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: TypeTupdateUserId
      /// Domain: Text
      /// Length: 8
      /// Varying Length: N
      /// </summary>
      private string _TypeTupdateUserId;
      /// <summary>
      /// Attribute for: TypeTupdateUserId
      /// </summary>
      public string TypeTupdateUserId {
        get {
          return(_TypeTupdateUserId);
        }
        set {
          _TypeTupdateUserId = value;
        }
      }
      /// <summary>
      /// Internal storage for attribute missing flag for: TypeTkeyAttrText
      /// </summary>
      private char _TypeTkeyAttrText_AS;
      /// <summary>
      /// Attribute missing flag for: TypeTkeyAttrText
      /// </summary>
      public char TypeTkeyAttrText_AS {
        get {
          return(_TypeTkeyAttrText_AS);
        }
        set {
          _TypeTkeyAttrText_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: TypeTkeyAttrText
      /// Domain: Text
      /// Length: 4
      /// Varying Length: N
      /// </summary>
      private string _TypeTkeyAttrText;
      /// <summary>
      /// Attribute for: TypeTkeyAttrText
      /// </summary>
      public string TypeTkeyAttrText {
        get {
          return(_TypeTkeyAttrText);
        }
        set {
          _TypeTkeyAttrText = value;
        }
      }
      /// <summary>
      /// Internal storage for attribute missing flag for: TypeTsearchAttrText
      /// </summary>
      private char _TypeTsearchAttrText_AS;
      /// <summary>
      /// Attribute missing flag for: TypeTsearchAttrText
      /// </summary>
      public char TypeTsearchAttrText_AS {
        get {
          return(_TypeTsearchAttrText_AS);
        }
        set {
          _TypeTsearchAttrText_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: TypeTsearchAttrText
      /// Domain: Text
      /// Length: 20
      /// Varying Length: N
      /// </summary>
      private string _TypeTsearchAttrText;
      /// <summary>
      /// Attribute for: TypeTsearchAttrText
      /// </summary>
      public string TypeTsearchAttrText {
        get {
          return(_TypeTsearchAttrText);
        }
        set {
          _TypeTsearchAttrText = value;
        }
      }
      /// <summary>
      /// Internal storage for attribute missing flag for: TypeTotherAttrText
      /// </summary>
      private char _TypeTotherAttrText_AS;
      /// <summary>
      /// Attribute missing flag for: TypeTotherAttrText
      /// </summary>
      public char TypeTotherAttrText_AS {
        get {
          return(_TypeTotherAttrText_AS);
        }
        set {
          _TypeTotherAttrText_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: TypeTotherAttrText
      /// Domain: Text
      /// Length: 2
      /// Varying Length: N
      /// </summary>
      private string _TypeTotherAttrText;
      /// <summary>
      /// Attribute for: TypeTotherAttrText
      /// </summary>
      public string TypeTotherAttrText {
        get {
          return(_TypeTotherAttrText);
        }
        set {
          _TypeTotherAttrText = value;
        }
      }
      /// <summary>
      /// Internal storage for attribute missing flag for: TypeTotherAttrDate
      /// </summary>
      private char _TypeTotherAttrDate_AS;
      /// <summary>
      /// Attribute missing flag for: TypeTotherAttrDate
      /// </summary>
      public char TypeTotherAttrDate_AS {
        get {
          return(_TypeTotherAttrDate_AS);
        }
        set {
          _TypeTotherAttrDate_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: TypeTotherAttrDate
      /// Domain: Date
      /// Length: 8
      /// </summary>
      private int _TypeTotherAttrDate;
      /// <summary>
      /// Attribute for: TypeTotherAttrDate
      /// </summary>
      public int TypeTotherAttrDate {
        get {
          return(_TypeTotherAttrDate);
        }
        set {
          _TypeTotherAttrDate = value;
        }
      }
      /// <summary>
      /// Internal storage for attribute missing flag for: TypeTotherAttrTime
      /// </summary>
      private char _TypeTotherAttrTime_AS;
      /// <summary>
      /// Attribute missing flag for: TypeTotherAttrTime
      /// </summary>
      public char TypeTotherAttrTime_AS {
        get {
          return(_TypeTotherAttrTime_AS);
        }
        set {
          _TypeTotherAttrTime_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: TypeTotherAttrTime
      /// Domain: Time
      /// Length: 6
      /// </summary>
      private int _TypeTotherAttrTime;
      /// <summary>
      /// Attribute for: TypeTotherAttrTime
      /// </summary>
      public int TypeTotherAttrTime {
        get {
          return(_TypeTotherAttrTime);
        }
        set {
          _TypeTotherAttrTime = value;
        }
      }
      /// <summary>
      /// Internal storage for attribute missing flag for: TypeTotherAttrAmount
      /// </summary>
      private char _TypeTotherAttrAmount_AS;
      /// <summary>
      /// Attribute missing flag for: TypeTotherAttrAmount
      /// </summary>
      public char TypeTotherAttrAmount_AS {
        get {
          return(_TypeTotherAttrAmount_AS);
        }
        set {
          _TypeTotherAttrAmount_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: TypeTotherAttrAmount
      /// Domain: Number
      /// Length: 17
      /// Decimal Places: 2
      /// Decimal Precision: Y
      /// </summary>
      private decimal _TypeTotherAttrAmount;
      /// <summary>
      /// Attribute for: TypeTotherAttrAmount
      /// </summary>
      public decimal TypeTotherAttrAmount {
        get {
          return(_TypeTotherAttrAmount);
        }
        set {
          _TypeTotherAttrAmount = value;
        }
      }
      /// <summary>
      /// Default Constructor
      /// </summary>
      
      public DYYY0311_EA(  )
      {
        Reset(  );
      }
      /// <summary>
      /// Copy Constructor
      /// </summary>
      
      public DYYY0311_EA( DYYY0311_EA orig )
      {
        TypeTinstanceId_AS = orig.TypeTinstanceId_AS;
        TypeTinstanceId = orig.TypeTinstanceId;
        TypeTreferenceId_AS = orig.TypeTreferenceId_AS;
        TypeTreferenceId = orig.TypeTreferenceId;
        TypeTcreateUserId_AS = orig.TypeTcreateUserId_AS;
        TypeTcreateUserId = orig.TypeTcreateUserId;
        TypeTupdateUserId_AS = orig.TypeTupdateUserId_AS;
        TypeTupdateUserId = orig.TypeTupdateUserId;
        TypeTkeyAttrText_AS = orig.TypeTkeyAttrText_AS;
        TypeTkeyAttrText = orig.TypeTkeyAttrText;
        TypeTsearchAttrText_AS = orig.TypeTsearchAttrText_AS;
        TypeTsearchAttrText = orig.TypeTsearchAttrText;
        TypeTotherAttrText_AS = orig.TypeTotherAttrText_AS;
        TypeTotherAttrText = orig.TypeTotherAttrText;
        TypeTotherAttrDate_AS = orig.TypeTotherAttrDate_AS;
        TypeTotherAttrDate = orig.TypeTotherAttrDate;
        TypeTotherAttrTime_AS = orig.TypeTotherAttrTime_AS;
        TypeTotherAttrTime = orig.TypeTotherAttrTime;
        TypeTotherAttrAmount_AS = orig.TypeTotherAttrAmount_AS;
        TypeTotherAttrAmount = orig.TypeTotherAttrAmount;
      }
      /// <summary>
      /// clone constructor
      /// </summary>
      
      public override Object Clone(  )
      {
        return(new DYYY0311_EA(this));
      }
      /// <summary>
      /// Resets all properties to the defaults.
      /// </summary>
      
      public void Reset(  )
      {
        TypeTinstanceId_AS = ' ';
        TypeTinstanceId = "00000000000000000000";
        TypeTreferenceId_AS = ' ';
        TypeTreferenceId = "00000000000000000000";
        TypeTcreateUserId_AS = ' ';
        TypeTcreateUserId = "        ";
        TypeTupdateUserId_AS = ' ';
        TypeTupdateUserId = "        ";
        TypeTkeyAttrText_AS = ' ';
        TypeTkeyAttrText = "    ";
        TypeTsearchAttrText_AS = ' ';
        TypeTsearchAttrText = "                    ";
        TypeTotherAttrText_AS = ' ';
        TypeTotherAttrText = "  ";
        TypeTotherAttrDate_AS = ' ';
        TypeTotherAttrDate = 00000000;
        TypeTotherAttrTime_AS = ' ';
        TypeTotherAttrTime = 00000000;
        TypeTotherAttrAmount_AS = ' ';
        TypeTotherAttrAmount = DecimalAttr.GetDefaultValue();
      }
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ENTITY ACTION VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    DYYY0311_EA WEa = new DYYY0311_EA();
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // LOCAL VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    DYYY0311_LA WLa;
    
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // HOST VARIABLES FOR TABLE: VDVYYYT
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    string TkeyAttr_001EF;
    string TkeyAttr_002EN;
    string TsearchAttr_003EF;
    string TsearchAttr_004EN;
    string TotherAttr_005EF;
    string TotherAttr_006EN;
    string TcreateUserid_007EF;
    string TcreateUserid_008EN;
    string TupdateUserid_009EF;
    string TupdateUserid_010EN;
    DateTime TinstanceId_011EF;
    DateTime TinstanceId_012EN;
    DateTime TreferenceId_013EF;
    DateTime TreferenceId_014EN;
    DateTime TotherDate_015EF;
    DateTime TotherDate_016EN;
    DateTime TotherTime_017EF;
    DateTime TotherTime_018EN;
    decimal TotherAmount_019EF;
    decimal TotherAmount_020EN;
    
    
    
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // MISC DECLARATIONS AND PROTOTYPES 
    //    FOLLOW AS NEEDED:             
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    bool func_0022020272_esc_flag;
    IAbstractCommand hstmt_0026214403_1_cmd;
    int hstmt_0026214403_1_cnt;
    IAbstractResultSet hstmt_0026214403_1_rs;
    //       +->   DYYY0311_TYPE_CREATE              01/09/2024  13:40
    //       !       IMPORTS:
    //       !         Work View imp_error iyy1_component (Transient,
    //       !                     Mandatory, Import only)
    //       !           severity_code
    //       !           rollback_indicator
    //       !           origin_servid
    //       !           context_string
    //       !           return_code
    //       !           reason_code
    //       !           checksum
    //       !         Work View imp_reference iyy1_server_data (Transient,
    //       !                     Mandatory, Import only)
    //       !           userid
    //       !           reference_id
    //       !         Entity View imp type (Transient, Mandatory, Import
    //       !                     only)
    //       !           tinstance_id
    //       !           tkey_attr_text
    //       !           tsearch_attr_text
    //       !           tother_attr_text
    //       !           tother_attr_date
    //       !           tother_attr_time
    //       !           tother_attr_amount
    //       !       EXPORTS:
    //       !         Entity View exp type (Transient, Export only)
    //       !           treference_id
    //       !         Work View exp_error iyy1_component (Transient, Export
    //       !                     only)
    //       !           severity_code
    //       !           rollback_indicator
    //       !           origin_servid
    //       !           context_string
    //       !           return_code
    //       !           reason_code
    //       !           checksum
    //       !       ENTITY ACTIONS:
    //       !         Entity View type
    //       !           tinstance_id
    //       !           treference_id
    //       !           tcreate_user_id
    //       !           tupdate_user_id
    //       !           tkey_attr_text
    //       !           tsearch_attr_text
    //       !           tother_attr_text
    //       !           tother_attr_date
    //       !           tother_attr_time
    //       !           tother_attr_amount
    //       !       LOCALS:
    //       !         Work View loc dont_change_return_codes
    //       !           1_ok
    //       !           n40_obj_create_failed
    //       !         Work View loc dont_change_reason_codes
    //       !           1_default
    //       !           142_type_already_exist
    //       !           143_type_attr_value_invalid
    //       !
    //       !     PROCEDURE STATEMENTS
    //       !
    //     1 !  NOTE: 
    //     1 !  Please review explanation for purpose.
    //     1 !  
    //     2 !  NOTE: 
    //     2 !  RELEASE HISTORY
    //     2 !  01_00 23-02-1998 New release
    //     2 !  
    //     3 !  MOVE imp_error iyy1_component TO exp_error iyy1_component
    //     4 !   
    //     5 !  NOTE: 
    //     5 !  ****************************************************************
    //     5 !  Values of the ReturnCode/ReasonCode used.
    //     5 !  
    //     6 !  NOTE: 
    //     6 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //     6 !  Please set the return ve reason code values below.
    //     7 !  SET loc dont_change_return_codes 1_ok TO 1 
    //     8 !  SET loc dont_change_return_codes n40_obj_create_failed TO -40 
    //     9 !   
    //    10 !  SET loc dont_change_reason_codes 1_default TO 1 
    //    11 !  SET loc dont_change_reason_codes 142_type_already_exist TO 142
    //    12 !  SET loc dont_change_reason_codes 143_type_attr_value_invalid
    //    12 !              TO 143 
    //    13 !   
    //    14 !  +->CREATE type
    //    15 !  !  SET tinstance_id TO imp type tinstance_id 
    //    16 !  !  SET treference_id TO imp_reference iyy1_server_data
    //    16 !  !              reference_id 
    //    17 !  !  SET tcreate_user_id TO imp_reference iyy1_server_data
    //    17 !  !              userid 
    //    18 !  !  SET tupdate_user_id TO imp_reference iyy1_server_data
    //    18 !  !              userid 
    //    19 !  !  SET tkey_attr_text TO imp type tkey_attr_text 
    //    20 !  !  SET tsearch_attr_text TO imp type tsearch_attr_text 
    //    21 !  !  SET tother_attr_text TO imp type tother_attr_text 
    //    22 !  !  SET tother_attr_date TO imp type tother_attr_date 
    //    23 !  !  SET tother_attr_time TO imp type tother_attr_time 
    //    24 !  !  SET tother_attr_amount TO imp type tother_attr_amount 
    //    14 !  +> WHEN successful
    //    25 !  !  MOVE  type TO exp type
    //    14 !  +> WHEN already exists
    //    26 !  !  SET exp_error iyy1_component return_code TO loc
    //    26 !  !              dont_change_return_codes n40_obj_create_failed 
    //    27 !  !  SET exp_error iyy1_component reason_code TO loc
    //    27 !  !              dont_change_reason_codes 142_type_already_exist
    //    14 !  +> WHEN permitted value violation
    //    28 !  !  SET exp_error iyy1_component return_code TO loc
    //    28 !  !              dont_change_return_codes n40_obj_create_failed 
    //    29 !  !  SET exp_error iyy1_component reason_code TO loc
    //    29 !  !              dont_change_reason_codes
    //    29 !  !              143_type_attr_value_invalid 
    //    14 !  +--
    //       +---
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //  CONSTRUCTOR FOR THE CLASS       
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    public DYYY0311(  )
    {
      IefCGenRlse = "CA Gen 8.6";
      IsCopyright = "Copyright (c) 2024 CA Technologies. All rights reserved.";
      IefCGenDate = "2024/01/09";
      IefCGenTime = "13:40:33";
      IefCGenEncy = "9.2.A6";
      IefCGenUserId = "AliAl";
      IefCGenModel = "N8I_ORT_YYY_0112_TEMPLATE";
      IefCGenSubset = "ALL";
      IefCGenName = "DYYY0311_TYPE_CREATE";
      NestingLevel = 0;
      ValChkDeadlockTimeout = false;
      ValChkDBError = false;
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ACTION BLOCK FUNCTION DECLARATIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void Execute( Object in_runtime_parm1, 
    	IRuntimePStepContext in_runtime_parm2, 
    	GlobData in_globdata, 
    	DYYY0311_IA import_view, 
    	DYYY0311_OA export_view )
    {
      IefRuntimeParm1 = in_runtime_parm1;
      IefRuntimeParm2 = in_runtime_parm2;
      Globdata = in_globdata;
      WIa = import_view;
      WOa = export_view;
      _Execute();
    }
    
    private void _Execute()
    {
      
      f_22020272_localAlloc( "DYYY0311_TYPE_CREATE" );
      if ( Globdata.GetErrorData().GetLastStatus() == ErrorData.LastStatusIefAllocationError )
      	return;
      
      ++(NestingLevel);
      try {
        f_22020272_init(  );
        f_22020272(  );
      } catch( Exception e ) {
        if ( ((Globdata.GetErrorData().GetStatus() == ErrorData.StatusNone) && (Globdata.GetErrorData().GetErrorEncountered() == 
          ErrorData.ErrorEncounteredNoErrorFound)) && (Globdata.GetErrorData().GetViewOverflow() == 
          ErrorData.ErrorEncounteredNoErrorFound) )
        {
          Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
          Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusUnexpectedExceptionError );
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
          Globdata.GetErrorData(  ).SetErrorMessage( e );
        }
      }
      --(NestingLevel);
    }
    public void f_22020272(  )
    {
      func_0022020272_esc_flag = false;
      Globdata.GetStateData().SetCurrentABId( "0022020272" );
      Globdata.GetStateData().SetCurrentABName( "DYYY0311_TYPE_CREATE" );
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    Please review explanation for purpose.                          
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    RELEASE HISTORY                                                 
      //    01_00 23-02-1998 New release                                    
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000003" );
      WOa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(WIa.ImpErrorIyy1ComponentSeverityCode, 1);
      WOa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.ValueOf(WIa.ImpErrorIyy1ComponentRollbackIndicator, 1);
      WOa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(WIa.ImpErrorIyy1ComponentOriginServid);
      WOa.ExpErrorIyy1ComponentContextString = StringAttr.ValueOf(WIa.ImpErrorIyy1ComponentContextString, 512);
      WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf(WIa.ImpErrorIyy1ComponentReturnCode);
      WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf(WIa.ImpErrorIyy1ComponentReasonCode);
      WOa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.ValueOf(WIa.ImpErrorIyy1ComponentChecksum, 15);
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    Values of the ReturnCode/ReasonCode used.                       
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
      //    !!                                                              
      //    Please set the return ve reason code values below.              
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000007" );
      WLa.LocDontChangeReturnCodesQ1Ok = IntAttr.ValueOf((int)TIRD2DEC.Execute1(1, 0, TIRD2DEC.ROUND_NONE, 5));
      Globdata.GetStateData().SetLastStatementNumber( "0000000008" );
      WLa.LocDontChangeReturnCodesN40ObjCreateFailed = IntAttr.ValueOf((int)TIRD2DEC.Execute1(-40, 0, TIRD2DEC.ROUND_NONE, 5));
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000010" );
      WLa.LocDontChangeReasonCodesQ1Default = IntAttr.ValueOf((int)TIRD2DEC.Execute1(1, 0, TIRD2DEC.ROUND_NONE, 5));
      Globdata.GetStateData().SetLastStatementNumber( "0000000011" );
      WLa.LocDontChangeReasonCodesQ142TypeAlreadyExist = IntAttr.ValueOf((int)TIRD2DEC.Execute1(142, 0, TIRD2DEC.ROUND_NONE, 5));
      Globdata.GetStateData().SetLastStatementNumber( "0000000012" );
      WLa.LocDontChangeReasonCodesQ143TypeAttrValueInvalid = IntAttr.ValueOf((int)TIRD2DEC.Execute1(143, 0, TIRD2DEC.ROUND_NONE, 5))
        ;
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000014" );
      WEa.TypeTinstanceId = TimestampAttr.ValueOf(WIa.ImpTypeTinstanceId);
      WEa.TypeTreferenceId = TimestampAttr.ValueOf(WIa.ImpReferenceIyy1ServerDataReferenceId);
      WEa.TypeTcreateUserId = FixedStringAttr.ValueOf(WIa.ImpReferenceIyy1ServerDataUserid, 8);
      WEa.TypeTupdateUserId = FixedStringAttr.ValueOf(WIa.ImpReferenceIyy1ServerDataUserid, 8);
      WEa.TypeTkeyAttrText = FixedStringAttr.ValueOf(WIa.ImpTypeTkeyAttrText, 4);
      WEa.TypeTsearchAttrText = FixedStringAttr.ValueOf(WIa.ImpTypeTsearchAttrText, 20);
      WEa.TypeTotherAttrText = FixedStringAttr.ValueOf(WIa.ImpTypeTotherAttrText, 2);
      WEa.TypeTotherAttrDate = DateAttr.ValueOf(WIa.ImpTypeTotherAttrDate);
      WEa.TypeTotherAttrTime = TimeAttr.ValueOf(WIa.ImpTypeTotherAttrTime);
      WEa.TypeTotherAttrAmount = DecimalAttr.ValueOf(TIRBDTRU.TruncateToDecimal(WIa.ImpTypeTotherAttrAmount, 2));
      ValChkDeadlockTimeout = false;
      ValChkDBError = false;
      f_26214403(  );
      if ( cr_26214403 == ErrorData.LastStatusSucceeds )
      {
        Globdata.GetStateData().SetLastSubStatementNumber( "1" );
        {
          Globdata.GetStateData().SetLastStatementNumber( "0000000025" );
          WOa.ExpTypeTreferenceId = TimestampAttr.ValueOf(WEa.TypeTreferenceId);
        }
      }
      else if ( cr_26214403 == ErrorData.LastStatusDuplicateFound )
      {
        Globdata.GetStateData().SetLastSubStatementNumber( "2" );
        {
          Globdata.GetStateData().SetLastStatementNumber( "0000000026" );
          WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
            WLa.LocDontChangeReturnCodesN40ObjCreateFailed, 0, TIRD2DEC.ROUND_NONE, 5));
          Globdata.GetStateData().SetLastStatementNumber( "0000000027" );
          WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
            WLa.LocDontChangeReasonCodesQ142TypeAlreadyExist, 0, TIRD2DEC.ROUND_NONE, 5));
        }
      }
      else if ( cr_26214403 == ErrorData.LastStatusInvalidDatabPerm )
      {
        Globdata.GetStateData().SetLastSubStatementNumber( "3" );
        {
          Globdata.GetStateData().SetLastStatementNumber( "0000000028" );
          WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
            WLa.LocDontChangeReturnCodesN40ObjCreateFailed, 0, TIRD2DEC.ROUND_NONE, 5));
          Globdata.GetStateData().SetLastStatementNumber( "0000000029" );
          WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
            WLa.LocDontChangeReasonCodesQ143TypeAttrValueInvalid, 0, TIRD2DEC.ROUND_NONE, 5));
        }
      }
      else {
        Globdata.GetErrorData().SetStatus( ErrorData.LastStatusDbError );
        Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
        throw new ABException();
      }
      return;
    }
    
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // SUBORDINATE FUNCTIONS
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // INITIALIZATION UTILITY FUNCTIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void f_22020272_localAlloc( String abname )
    {
      // Request localview allocation 
      WLa = (GEN.ORT.YYY.DYYY0311_LA)(IefRuntimeParm2.GetInstance( GetType().Assembly,
      	"GEN.ORT.YYY.DYYY0311_LA" ));
      if ( WLa == null )
      {
        Globdata.GetStateData().SetCurrentABId( "0022020272" );
        Globdata.GetStateData().SetCurrentABName( abname );
        Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
        Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusIefAllocationError );
      }
    }
    
    public void f_22020272_init(  )
    {
      
      TkeyAttr_001EF = Spaces;
      TkeyAttr_002EN = Spaces;
      TsearchAttr_003EF = Spaces;
      TsearchAttr_004EN = Spaces;
      TotherAttr_005EF = Spaces;
      TotherAttr_006EN = Spaces;
      TcreateUserid_007EF = Spaces;
      TcreateUserid_008EN = Spaces;
      TupdateUserid_009EF = Spaces;
      TupdateUserid_010EN = Spaces;
      TinstanceId_011EF = TIRVW2S.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	"00010101000000000000" );
      TinstanceId_012EN = TIRVW2S.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	"00010101000000000000" );
      TreferenceId_013EF = TIRVW2S.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	"00010101000000000000" );
      TreferenceId_014EN = TIRVW2S.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	"00010101000000000000" );
      TotherDate_015EF = TIRVW2D.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	0 );
      TotherDate_016EN = TIRVW2D.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	0 );
      TotherTime_017EF = TIRVW2T.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	0 );
      TotherTime_018EN = TIRVW2T.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	0 );
      TotherAmount_019EF = 0.0M;
      TotherAmount_020EN = 0.0M;
      if ( NestingLevel < 2 )
      {
        WLa.Reset();
      }
      WEa.Reset();
      WOa.ExpTypeTreferenceId = "00000000000000000000";
      WOa.ExpErrorIyy1ComponentSeverityCode = " ";
      WOa.ExpErrorIyy1ComponentRollbackIndicator = " ";
      WOa.ExpErrorIyy1ComponentOriginServid = 0.0;
      WOa.ExpErrorIyy1ComponentContextString = "";
      WOa.ExpErrorIyy1ComponentReturnCode = 0;
      WOa.ExpErrorIyy1ComponentReasonCode = 0;
      WOa.ExpErrorIyy1ComponentChecksum = "               ";
      Type_es = ABBase.EvUnusable;
      Type_lk = ABBase.EvwUnlocked;
      WEa.TypeTinstanceId = "00000000000000000000";
      WEa.TypeTreferenceId = "00000000000000000000";
    }
    public void f_26214403_moveb(  )
    {
      TinstanceId_012EN = TIRVW2S.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	WEa.TypeTinstanceId );
      TreferenceId_014EN = TIRVW2S.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	WEa.TypeTreferenceId );
      TcreateUserid_008EN = WEa.TypeTcreateUserId;
      TupdateUserid_010EN = WEa.TypeTupdateUserId;
      TkeyAttr_002EN = WEa.TypeTkeyAttrText;
      TsearchAttr_004EN = WEa.TypeTsearchAttrText;
      TotherAttr_006EN = WEa.TypeTotherAttrText;
      TotherDate_016EN = TIRVW2D.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	WEa.TypeTotherAttrDate );
      TotherTime_018EN = TIRVW2T.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	WEa.TypeTotherAttrTime );
      TotherAmount_020EN = TIRBDRND.RoundToDecimal(WEa.TypeTotherAttrAmount,2);
    }
    public void f_26214403(  )
    {
      cr_26214403 = ErrorData.LastStatusSucceeds;
      Type_001cd = ABBase.PvCreate;
      f_26214403_moveb(  );
      
      if ( cr_26214403 == ErrorData.LastStatusSucceeds )
      {
        DataException = null;
        try {
          if ( hstmt_0026214403_1_cmd == null )
          {
            SQLStatement.Length = 0;
            
            SQLStatement.Append("INSERT INTO ");
            SQLStatement.Append("`VDVYYYT` (");
            SQLStatement.Append("`TKEY_ATTR`,");
            SQLStatement.Append("`TSEARCH_ATTR`,");
            SQLStatement.Append("`TOTHER_ATTR`,");
            SQLStatement.Append("`TCREATE_USERID`,");
            SQLStatement.Append("`TUPDATE_USERID`,");
            SQLStatement.Append("`TINSTANCE_ID`,");
            SQLStatement.Append("`TREFERENCE_ID`,");
            SQLStatement.Append("`TOTHER_DATE`,");
            SQLStatement.Append("`TOTHER_TIME`,");
            SQLStatement.Append("`TOTHER_AMOUNT`");
            SQLStatement.Append(" ) VALUES ( ");
            SQLStatement.Append("?,");
            SQLStatement.Append("?,");
            SQLStatement.Append("?,");
            SQLStatement.Append("?,");
            SQLStatement.Append("?,");
            SQLStatement.Append("?,");
            SQLStatement.Append("?,");
            SQLStatement.Append("?,");
            SQLStatement.Append("?,");
            SQLStatement.Append("?");
            SQLStatement.Append(")");
            hstmt_0026214403_1_cmd = Globdata.GetDBMSData().GetDBMSManager().GetCommand(Globdata, IefRuntimeParm2, "IEFDB", 
              SQLStatement.ToString());
            hstmt_0026214403_1_cmd.InsertParameter();
            hstmt_0026214403_1_cmd.InsertParameter();
            hstmt_0026214403_1_cmd.InsertParameter();
            hstmt_0026214403_1_cmd.InsertParameter();
            hstmt_0026214403_1_cmd.InsertParameter();
            hstmt_0026214403_1_cmd.InsertParameter();
            hstmt_0026214403_1_cmd.InsertParameter();
            hstmt_0026214403_1_cmd.InsertParameter();
            hstmt_0026214403_1_cmd.InsertParameter();
            hstmt_0026214403_1_cmd.InsertParameter();
          }
          hstmt_0026214403_1_cmd.BindParameter(0, TkeyAttr_002EN);
          hstmt_0026214403_1_cmd.BindParameter(1, TsearchAttr_004EN);
          hstmt_0026214403_1_cmd.BindParameter(2, TotherAttr_006EN);
          hstmt_0026214403_1_cmd.BindParameter(3, TcreateUserid_008EN);
          hstmt_0026214403_1_cmd.BindParameter(4, TupdateUserid_010EN);
          hstmt_0026214403_1_cmd.BindParameter(5, TinstanceId_012EN);
          hstmt_0026214403_1_cmd.BindParameter(6, TreferenceId_014EN);
          hstmt_0026214403_1_cmd.BindParameter(7, TotherDate_016EN);
          hstmt_0026214403_1_cmd.BindParameter(8, TotherTime_018EN);
          hstmt_0026214403_1_cmd.BindParameter(9, TotherAmount_020EN);
          hstmt_0026214403_1_cnt = hstmt_0026214403_1_cmd.ExecuteNonQuery(  );
        } catch( Exception e ) {
          DataException = e;
        }
        if ( Globdata.GetDBMSData().GetDBMSManager().WasSuccessful(DataException) )
        {
          TkeyAttr_001EF = TkeyAttr_002EN;
          TsearchAttr_003EF = TsearchAttr_004EN;
          TotherAttr_005EF = TotherAttr_006EN;
          TcreateUserid_007EF = TcreateUserid_008EN;
          TupdateUserid_009EF = TupdateUserid_010EN;
          TinstanceId_011EF = TinstanceId_012EN;
          TreferenceId_013EF = TreferenceId_014EN;
          TotherDate_015EF = TotherDate_016EN;
          TotherTime_017EF = TotherTime_018EN;
          TotherAmount_019EF = TotherAmount_020EN;
          Type_es = ABBase.EvUsable;
          Type_lk = ABBase.EvwLocked;
          try {
            if ( hstmt_0026214403_1_rs != null )
            {
              hstmt_0026214403_1_rs.Close(  );
              hstmt_0026214403_1_rs = null;
            }
            if ( hstmt_0026214403_1_cmd != null )
            {
              hstmt_0026214403_1_cmd.Close(  );
              hstmt_0026214403_1_cmd = null;
            }
          } catch( Exception e ) {
            if ( Globdata.GetDBMSData().GetDBMSManager().WasSuccessful(e) == false )
            {
              DataException = e;
              f_26214403_adonet_dberror(  );
            }
          }
        }
        else if ( Globdata.GetDBMSData().GetDBMSManager().WasDuplicateFound(IefRuntimeParm2, "IEFDB", DataException) )
        {
          cr_26214403 = ErrorData.LastStatusDuplicateFound;
          Type_es = ABBase.EvUnusable;
          try {
            if ( hstmt_0026214403_1_rs != null )
            {
              hstmt_0026214403_1_rs.Close(  );
              hstmt_0026214403_1_rs = null;
            }
            if ( hstmt_0026214403_1_cmd != null )
            {
              hstmt_0026214403_1_cmd.Close(  );
              hstmt_0026214403_1_cmd = null;
            }
          } catch( Exception e ) {
            if ( Globdata.GetDBMSData().GetDBMSManager().WasSuccessful(e) == false )
            {
              DataException = e;
              f_26214403_adonet_dberror(  );
            }
          }
        }
        else {
          f_26214403_adonet_dberror(  );
        }
      }
      else if ( cr_26214403 != ErrorData.LastStatusInvalidDatabPerm )
      {
        Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
        Globdata.GetDBMSData().SetActionId( 14 );
        Globdata.GetErrorData().SetLastStatus( cr_26214403 );
        throw new ABException();
      }
      return;
    }
    
    public void f_26214403_adonet_dberror(  )
    {
      Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
      Globdata.GetDBMSData().SetActionId( 14 );
      if ( DataException != null )
      {
        Globdata.GetErrorData(  ).SetErrorMessage( DataException );
      }
      Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusDbError );
      cr_26214403 = Globdata.GetErrorData().GetLastStatus();
      throw new ABException();
    }
    
  }// end class
  
}

