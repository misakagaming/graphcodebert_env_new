namespace GEN.ORT.YYY
{
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  //
  //                    Source Code Generated by
  //                           CA Gen 8.6
  //
  //    Copyright (c) 2024 CA Technologies. All rights reserved.
  //
  //    Name: CYYY9481_EXPTN_MSG_N_HILTE_GET   Date: 2024/01/09
  //    Target OS:   CLR                       Time: 13:41:47
  //    Target DBMS: ODBC/ADO.NET              User: AliAl
  //    Access Method: <NONE>         
  //
  //    Generation options:
  //    Debug trace option not selected
  //    Data modeling constraint enforcement not selected
  //    Optimized import view initialization not selected
  //    Enforce default values with DBMS not selected
  //    Init unspecified optional fields to NULL not selected
  //
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // using Statements
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  using System;
  using com.ca.gen.vwrt;
  using com.ca.gen.vwrt.types;
  using com.ca.gen.vwrt.vdf;
  using com.ca.gen.csu.exception;
  
  using com.ca.gen.abrt;
  using com.ca.gen.abrt.functions;
  using com.ca.gen.abrt.cascade;
  using com.ca.gen.abrt.manager;
  using com.ca.gen.abrt.trace;
  using com.ca.gen.exits.common;
  using com.ca.gen.odc;
  using System.Data;
  using System.Collections;
  
  public class CYYY9481 : ABBase
  {
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // IMPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    CYYY9481_IA WIa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // EXPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    CYYY9481_OA WOa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // LOCAL VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    CYYY9481_LA WLa;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ACTION BLOCK IMPORT/EXPORT VIEWS CLASS VARIABLES
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    GEN.ORT.YYY.IRO10481_IA Iro10481Ia;
    GEN.ORT.YYY.IRO10481_OA Iro10481Oa;
    GEN.ORT.YYY.CYYY9811_OA Cyyy9811Oa;
    GEN.ORT.YYY.CYYY9911_IA Cyyy9911Ia;
    GEN.ORT.YYY.CYYY9911_OA Cyyy9911Oa;
    GEN.ORT.YYY.CYYY9801_OA Cyyy9801Oa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // REPEATING GROUP VIEW STATUS FIELDS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    bool ExpGroupHilite_FL_001;
    int ExpGroupHilite_PS_001;
    bool ExpGroupHilite_RF_001;
    public const int ExpGroupHilite_MM_001 = 10;
    bool LocExpHiliteGroup_FL_002;
    int LocExpHiliteGroup_PS_002;
    bool LocExpHiliteGroup_RF_002;
    public const int LocExpHiliteGroup_MM_002 = 10;
    bool OutHiliteGroup_FL_003;
    int OutHiliteGroup_PS_003;
    bool OutHiliteGroup_RF_003;
    public const int OutHiliteGroup_MM_003 = 10;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // MISC DECLARATIONS AND PROTOTYPES 
    //    FOLLOW AS NEEDED:             
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    bool func_0022020198_esc_flag;
    bool func_0020973097_esc_flag;
    bool func_0020972195_esc_flag;
    bool for_each_0071303629_esc_flag;
    //       +->   CYYY9481_EXPTN_MSG_N_HILTE_GET    01/09/2024  13:41
    //       !       IMPORTS:
    //       !         Work View imp_error iyy1_component (Transient,
    //       !                     Optional, Import only)
    //       !           origin_servid
    //       !           context_string
    //       !           return_code
    //       !           reason_code
    //       !           implementation_id
    //       !           specification_id
    //       !           dialect_cd
    //       !           activity_cd
    //       !       EXPORTS:
    //       !         Group View (10) exp_group_hilite
    //       !           Work View exp_g_hilite iyy1_component (Transient,
    //       !                       Export only)
    //       !             attribute_name_tx
    //       !         Work View exp_error_msg iyy1_component (Transient,
    //       !                     Export only)
    //       !           severity_code
    //       !           message_tx
    //       !         Work View exp_error iyy1_component (Transient, Export
    //       !                     only)
    //       !           severity_code
    //       !           rollback_indicator
    //       !           origin_servid
    //       !           context_string
    //       !           return_code
    //       !           reason_code
    //       !           checksum
    //       !       LOCALS:
    //       !         Work View loc_imp_error iro1_component
    //       !           specification_id
    //       !           implementation_id
    //       !           origin_servid
    //       !           return_code
    //       !           reason_code
    //       !           context_string_tx
    //       !           activity_cd
    //       !           dialect_cd
    //       !         Group View (10) loc_exp_hilite_group
    //       !           Work View loc_exp_hilite_g iro1_component
    //       !             attribute_name_tx
    //       !         Work View loc_other_error iyy1_component
    //       !           return_code
    //       !           reason_code
    //       !         Work View loc_error_msg iro1_component
    //       !           severity_cd
    //       !           message_tx
    //       !         Work View loc_error iro1_component
    //       !           origin_servid
    //       !           return_code
    //       !           reason_code
    //       !           context_string_tx
    //       !           severity_cd
    //       !           rollback_indicator_tx
    //       !
    //       !     PROCEDURE STATEMENTS
    //       !
    //     1 !  NOTE: 
    //     1 !  See the description for the purpose
    //     1 !  
    //     2 !  NOTE: 
    //     2 !  RELEASE HISTORY
    //     2 !  01_00 23-02-1998 New release
    //     2 !  
    //     3 !  MOVE imp_error iyy1_component TO exp_error iyy1_component
    //     4 !  SET exp_error iyy1_component return_code TO 1 
    //     5 !  SET exp_error iyy1_component reason_code TO 1 
    //     6 !   
    //     7 !  +->IF imp_error iyy1_component return_code < 1
    //     8 !  !  USE cyyy9811_set_excptn_other_error
    //     8 !  !     WHICH EXPORTS: Work View loc_other_error iyy1_component
    //     8 !  !              FROM Work View exp_other_error iyy1_component
    //     7 !  +> ELSE
    //     9 !  !  USE cyyy9801_set_excptn_other_info
    //     9 !  !     WHICH EXPORTS: Work View loc_other_error iyy1_component
    //     9 !  !              FROM Work View exp_other_error iyy1_component
    //     7 !  +--
    //    10 !   
    //    11 !  +->IF imp_error iyy1_component return_code = loc_other_error
    //    11 !  !        iyy1_component return_code
    //    12 !  !  SET exp_error_msg iyy1_component message_tx TO imp_error
    //    12 !  !              iyy1_component context_string 
    //    11 !  +> ELSE
    //    13 !  !  SET loc_imp_error iro1_component activity_cd TO imp_error
    //    13 !  !              iyy1_component activity_cd 
    //    14 !  !  SET loc_imp_error iro1_component context_string_tx TO
    //    14 !  !              imp_error iyy1_component context_string 
    //    15 !  !  SET loc_imp_error iro1_component dialect_cd TO imp_error
    //    15 !  !              iyy1_component dialect_cd 
    //    16 !  !  SET loc_imp_error iro1_component implementation_id TO
    //    16 !  !              imp_error iyy1_component implementation_id 
    //    17 !  !  SET loc_imp_error iro1_component origin_servid TO imp_error
    //    17 !  !              iyy1_component origin_servid 
    //    18 !  !  SET loc_imp_error iro1_component reason_code TO imp_error
    //    18 !  !              iyy1_component reason_code 
    //    19 !  !  SET loc_imp_error iro1_component return_code TO imp_error
    //    19 !  !              iyy1_component return_code 
    //    20 !  !  SET loc_imp_error iro1_component specification_id TO
    //    20 !  !              imp_error iyy1_component specification_id 
    //    21 !  !   
    //    22 !  !  NOTE: 
    //    22 ...**************************************************************
    //    22 ...**
    //    22 ...Let' s set the dialect code...
    //    22 ...
    //    23 !  !  USE cyyy9911_check_dialect
    //    23 !  !     WHICH IMPORTS: Work View loc_imp_error iro1_component TO
    //    23 !  !              Work View imp_dialect iro1_component
    //    23 !  !     WHICH EXPORTS: Work View loc_imp_error iro1_component
    //    23 !  !              FROM Work View exp_dialect iro1_component
    //    24 !  !   
    //    25 !  !  NOTE: 
    //    25 ...**************************************************************
    //    25 ...**
    //    25 ...Let' s convert the error data to message
    //    25 ...
    //    26 !  !  USE iro10481_exptn_msg_n_hilte_get_s
    //    26 !  !     WHICH IMPORTS: Work View loc_imp_error iro1_component TO
    //    26 !  !              Work View in iro1_component
    //    26 !  !     WHICH EXPORTS: Work View loc_error_msg iro1_component
    //    26 !  !              FROM Work View out_data iro1_component
    //    26 !  !                    Group View  loc_exp_hilite_group FROM
    //    26 !  !              Group View out_hilite_group
    //    26 !  !                    Work View loc_error iro1_component FROM
    //    26 !  !              Work View out_error iro1_component
    //    27 !  !   
    //    28 !  !  SET exp_error_msg iyy1_component message_tx TO
    //    28 !  !              loc_error_msg iro1_component message_tx 
    //    29 !  !  SET exp_error_msg iyy1_component severity_code TO
    //    29 !  !              loc_error_msg iro1_component severity_cd 
    //    30 !  !   
    //    31 !  !  +->IF loc_error iro1_component return_code < 1
    //    32 !  !  !  SET exp_error iyy1_component return_code TO
    //    32 !  !  !              loc_other_error iyy1_component return_code 
    //    33 !  !  !  SET exp_error iyy1_component reason_code TO
    //    33 !  !  !              loc_other_error iyy1_component reason_code 
    //    34 !  !  !  SET exp_error iyy1_component context_string TO
    //    34 !  !  !              loc_error_msg iro1_component message_tx 
    //    31 !  !  +> ELSE
    //    35 !  !  !  +->FOR EACH loc_exp_hilite_group
    //    35 !  !  !  !        TARGETING exp_group_hilite  FROM THE BEGINNING
    //    35 !  !  !  !              UNTIL FULL
    //    36 !  !  !  !  SET exp_g_hilite iyy1_component attribute_name_tx TO
    //    36 !  !  !  !              loc_exp_hilite_g iro1_component
    //    36 !  !  !  !              attribute_name_tx 
    //    35 !  !  !  +--
    //    31 !  !  +--
    //    11 !  +--
    //       +---
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //  CONSTRUCTOR FOR THE CLASS       
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    public CYYY9481(  )
    {
      IefCGenRlse = "CA Gen 8.6";
      IsCopyright = "Copyright (c) 2024 CA Technologies. All rights reserved.";
      IefCGenDate = "2024/01/09";
      IefCGenTime = "13:41:47";
      IefCGenEncy = "9.2.A6";
      IefCGenUserId = "AliAl";
      IefCGenModel = "N8I_ORT_YYY_0112_TEMPLATE";
      IefCGenSubset = "ALL";
      IefCGenName = "CYYY9481_EXPTN_MSG_N_HILTE_GET";
      NestingLevel = 0;
      ValChkDeadlockTimeout = false;
      ValChkDBError = false;
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ACTION BLOCK FUNCTION DECLARATIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void Execute( Object in_runtime_parm1, 
    	IRuntimePStepContext in_runtime_parm2, 
    	GlobData in_globdata, 
    	CYYY9481_IA import_view, 
    	CYYY9481_OA export_view )
    {
      IefRuntimeParm1 = in_runtime_parm1;
      IefRuntimeParm2 = in_runtime_parm2;
      Globdata = in_globdata;
      WIa = import_view;
      WOa = export_view;
      _Execute();
    }
    
    private void _Execute()
    {
      
      f_22020198_localAlloc( "CYYY9481_EXPTN_MSG_N_HILTE_GET" );
      if ( Globdata.GetErrorData().GetLastStatus() == ErrorData.LastStatusIefAllocationError )
      	return;
      
      ++(NestingLevel);
      try {
        f_22020198_init(  );
        f_22020198(  );
      } catch( Exception e ) {
        if ( ((Globdata.GetErrorData().GetStatus() == ErrorData.StatusNone) && (Globdata.GetErrorData().GetErrorEncountered() == 
          ErrorData.ErrorEncounteredNoErrorFound)) && (Globdata.GetErrorData().GetViewOverflow() == 
          ErrorData.ErrorEncounteredNoErrorFound) )
        {
          Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
          Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusUnexpectedExceptionError );
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
          Globdata.GetErrorData(  ).SetErrorMessage( e );
        }
      }
      --(NestingLevel);
    }
    public void f_22020198(  )
    {
      func_0022020198_esc_flag = false;
      Globdata.GetStateData().SetCurrentABId( "0022020198" );
      Globdata.GetStateData().SetCurrentABName( "CYYY9481_EXPTN_MSG_N_HILTE_GET" );
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    See the description for the purpose                             
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    RELEASE HISTORY                                                 
      //    01_00 23-02-1998 New release                                    
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000003" );
      WOa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(WIa.ImpErrorIyy1ComponentOriginServid);
      WOa.ExpErrorIyy1ComponentContextString = StringAttr.ValueOf(WIa.ImpErrorIyy1ComponentContextString, 512);
      WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf(WIa.ImpErrorIyy1ComponentReturnCode);
      WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf(WIa.ImpErrorIyy1ComponentReasonCode);
      Globdata.GetStateData().SetLastStatementNumber( "0000000004" );
      WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1(1, 0, TIRD2DEC.ROUND_NONE, 5));
      Globdata.GetStateData().SetLastStatementNumber( "0000000005" );
      WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1(1, 0, TIRD2DEC.ROUND_NONE, 5));
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000007" );
      if ( ((double) WIa.ImpErrorIyy1ComponentReturnCode < 1) )
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000008" );
        
        Cyyy9811Oa = (GEN.ORT.YYY.CYYY9811_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYYY9811).Assembly,
        	"GEN.ORT.YYY.CYYY9811_OA" ));
        Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
        IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.CYYY9811).Assembly,
        	"GEN.ORT.YYY.CYYY9811",
        	"Execute",
        	null,
        	Cyyy9811Oa );
        if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
          ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
          ErrorData.ErrorEncounteredNoErrorFound) )
        {
          throw new ABException();
        }
        Globdata.GetStateData().SetCurrentABId( "0022020198" );
        Globdata.GetStateData().SetCurrentABName( "CYYY9481_EXPTN_MSG_N_HILTE_GET" );
        Globdata.GetStateData().SetLastStatementNumber( "0000000008" );
        WLa.LocOtherErrorIyy1ComponentReturnCode = IntAttr.ValueOf(Cyyy9811Oa.ExpOtherErrorIyy1ComponentReturnCode);
        WLa.LocOtherErrorIyy1ComponentReasonCode = IntAttr.ValueOf(Cyyy9811Oa.ExpOtherErrorIyy1ComponentReasonCode);
        Cyyy9811Oa.FreeInstance(  );
        Cyyy9811Oa = null;
      }
      else 
      {
        Globdata.GetStateData().SetLastSubStatementNumber( "1" );
        {
          Globdata.GetStateData().SetLastStatementNumber( "0000000009" );
          
          Cyyy9801Oa = (GEN.ORT.YYY.CYYY9801_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYYY9801).Assembly,
          	"GEN.ORT.YYY.CYYY9801_OA" ));
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
          IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.CYYY9801).Assembly,
          	"GEN.ORT.YYY.CYYY9801",
          	"Execute",
          	null,
          	Cyyy9801Oa );
          if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
            ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
            ErrorData.ErrorEncounteredNoErrorFound) )
          {
            throw new ABException();
          }
          Globdata.GetStateData().SetCurrentABId( "0022020198" );
          Globdata.GetStateData().SetCurrentABName( "CYYY9481_EXPTN_MSG_N_HILTE_GET" );
          Globdata.GetStateData().SetLastStatementNumber( "0000000009" );
          WLa.LocOtherErrorIyy1ComponentReturnCode = IntAttr.ValueOf(Cyyy9801Oa.ExpOtherErrorIyy1ComponentReturnCode);
          WLa.LocOtherErrorIyy1ComponentReasonCode = IntAttr.ValueOf(Cyyy9801Oa.ExpOtherErrorIyy1ComponentReasonCode);
          Cyyy9801Oa.FreeInstance(  );
          Cyyy9801Oa = null;
        }
      }
      
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000011" );
      if ( ((double) WIa.ImpErrorIyy1ComponentReturnCode == (double) WLa.LocOtherErrorIyy1ComponentReturnCode) )
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000012" );
        WOa.ExpErrorMsgIyy1ComponentMessageTx = StringAttr.ValueOf(WIa.ImpErrorIyy1ComponentContextString, 512);
      }
      else 
      {
        Globdata.GetStateData().SetLastSubStatementNumber( "1" );
        {
          f_20973097(  );
        }
      }
      
      return;
    }
    
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // SUBORDINATE FUNCTIONS
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    
    public void f_20973097(  )
    {
      func_0020973097_esc_flag = false;
      Globdata.GetStateData().SetLastStatementNumber( "0000000013" );
      WLa.LocImpErrorIro1ComponentActivityCd = FixedStringAttr.ValueOf(WIa.ImpErrorIyy1ComponentActivityCd, 15);
      Globdata.GetStateData().SetLastStatementNumber( "0000000014" );
      WLa.LocImpErrorIro1ComponentContextStringTx = StringAttr.ValueOf(WIa.ImpErrorIyy1ComponentContextString, 255);
      Globdata.GetStateData().SetLastStatementNumber( "0000000015" );
      WLa.LocImpErrorIro1ComponentDialectCd = FixedStringAttr.ValueOf(WIa.ImpErrorIyy1ComponentDialectCd, 8);
      Globdata.GetStateData().SetLastStatementNumber( "0000000016" );
      WLa.LocImpErrorIro1ComponentImplementationId = DoubleAttr.ValueOf(TIRD2DEC.Execute1(WIa.ImpErrorIyy1ComponentImplementationId, 
        0, TIRD2DEC.ROUND_NONE, 15));
      Globdata.GetStateData().SetLastStatementNumber( "0000000017" );
      WLa.LocImpErrorIro1ComponentOriginServid = DoubleAttr.ValueOf(TIRD2DEC.Execute1(WIa.ImpErrorIyy1ComponentOriginServid, 0, 
        TIRD2DEC.ROUND_NONE, 15));
      Globdata.GetStateData().SetLastStatementNumber( "0000000018" );
      WLa.LocImpErrorIro1ComponentReasonCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) WIa.ImpErrorIyy1ComponentReasonCode, 
        0, TIRD2DEC.ROUND_NONE, 5));
      Globdata.GetStateData().SetLastStatementNumber( "0000000019" );
      WLa.LocImpErrorIro1ComponentReturnCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) WIa.ImpErrorIyy1ComponentReturnCode, 
        0, TIRD2DEC.ROUND_NONE, 5));
      Globdata.GetStateData().SetLastStatementNumber( "0000000020" );
      WLa.LocImpErrorIro1ComponentSpecificationId = DoubleAttr.ValueOf(TIRD2DEC.Execute1(WIa.ImpErrorIyy1ComponentSpecificationId, 0,
         TIRD2DEC.ROUND_NONE, 15));
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    Let' s set the dialect code...                                  
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000023" );
      
      Cyyy9911Ia = (GEN.ORT.YYY.CYYY9911_IA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYYY9911).Assembly,
      	"GEN.ORT.YYY.CYYY9911_IA" ));
      Cyyy9911Oa = (GEN.ORT.YYY.CYYY9911_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYYY9911).Assembly,
      	"GEN.ORT.YYY.CYYY9911_OA" ));
      Cyyy9911Ia.ImpDialectIro1ComponentDialectCd = FixedStringAttr.ValueOf(WLa.LocImpErrorIro1ComponentDialectCd, 8);
      Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
      IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.CYYY9911).Assembly,
      	"GEN.ORT.YYY.CYYY9911",
      	"Execute",
      	Cyyy9911Ia,
      	Cyyy9911Oa );
      if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
        ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
        ErrorData.ErrorEncounteredNoErrorFound) )
      {
        throw new ABException();
      }
      Globdata.GetStateData().SetCurrentABId( "0022020198" );
      Globdata.GetStateData().SetCurrentABName( "CYYY9481_EXPTN_MSG_N_HILTE_GET" );
      Globdata.GetStateData().SetLastStatementNumber( "0000000023" );
      WLa.LocImpErrorIro1ComponentDialectCd = FixedStringAttr.ValueOf(Cyyy9911Oa.ExpDialectIro1ComponentDialectCd, 8);
      Cyyy9911Ia.FreeInstance(  );
      Cyyy9911Ia = null;
      Cyyy9911Oa.FreeInstance(  );
      Cyyy9911Oa = null;
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    Let' s convert the error data to message                        
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000026" );
      
      Iro10481Ia = (GEN.ORT.YYY.IRO10481_IA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.IRO10481).Assembly,
      	"GEN.ORT.YYY.IRO10481_IA" ));
      Iro10481Oa = (GEN.ORT.YYY.IRO10481_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.IRO10481).Assembly,
      	"GEN.ORT.YYY.IRO10481_OA" ));
      Iro10481Ia.InIro1ComponentSpecificationId = DoubleAttr.ValueOf(WLa.LocImpErrorIro1ComponentSpecificationId);
      Iro10481Ia.InIro1ComponentImplementationId = DoubleAttr.ValueOf(WLa.LocImpErrorIro1ComponentImplementationId);
      Iro10481Ia.InIro1ComponentOriginServid = DoubleAttr.ValueOf(WLa.LocImpErrorIro1ComponentOriginServid);
      Iro10481Ia.InIro1ComponentReturnCode = IntAttr.ValueOf(WLa.LocImpErrorIro1ComponentReturnCode);
      Iro10481Ia.InIro1ComponentReasonCode = IntAttr.ValueOf(WLa.LocImpErrorIro1ComponentReasonCode);
      Iro10481Ia.InIro1ComponentContextStringTx = StringAttr.ValueOf(WLa.LocImpErrorIro1ComponentContextStringTx, 255);
      Iro10481Ia.InIro1ComponentActivityCd = FixedStringAttr.ValueOf(WLa.LocImpErrorIro1ComponentActivityCd, 15);
      Iro10481Ia.InIro1ComponentDialectCd = FixedStringAttr.ValueOf(WLa.LocImpErrorIro1ComponentDialectCd, 8);
      Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
      IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.IRO10481).Assembly,
      	"GEN.ORT.YYY.IRO10481",
      	"Execute",
      	Iro10481Ia,
      	Iro10481Oa );
      if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
        ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
        ErrorData.ErrorEncounteredNoErrorFound) )
      {
        throw new ABException();
      }
      Globdata.GetStateData().SetCurrentABId( "0022020198" );
      Globdata.GetStateData().SetCurrentABName( "CYYY9481_EXPTN_MSG_N_HILTE_GET" );
      Globdata.GetStateData().SetLastStatementNumber( "0000000026" );
      WLa.LocErrorIro1ComponentSeverityCd = FixedStringAttr.ValueOf(Iro10481Oa.OutErrorIro1ComponentSeverityCd, 1);
      WLa.LocErrorIro1ComponentRollbackIndicatorTx = FixedStringAttr.ValueOf(Iro10481Oa.OutErrorIro1ComponentRollbackIndicatorTx, 1)
        ;
      WLa.LocErrorIro1ComponentOriginServid = DoubleAttr.ValueOf(Iro10481Oa.OutErrorIro1ComponentOriginServid);
      WLa.LocErrorIro1ComponentContextStringTx = StringAttr.ValueOf(Iro10481Oa.OutErrorIro1ComponentContextStringTx, 255);
      WLa.LocErrorIro1ComponentReturnCode = IntAttr.ValueOf(Iro10481Oa.OutErrorIro1ComponentReturnCode);
      WLa.LocErrorIro1ComponentReasonCode = IntAttr.ValueOf(Iro10481Oa.OutErrorIro1ComponentReasonCode);
      WLa.LocExpHiliteGroup_MA = IntAttr.ValueOf(Iro10481Oa.OutHiliteGroup_MA);
      for(Adim1 = 1; Adim1 <= WLa.LocExpHiliteGroup_MA; ++(Adim1))
      {
        WLa.LocExpHiliteGIro1ComponentAttributeNameTx[Adim1-1] = FixedStringAttr.ValueOf(
          Iro10481Oa.OutHiliteGIro1ComponentAttributeNameTx[Adim1-1], 50);
      }
      WLa.LocErrorMsgIro1ComponentSeverityCd = FixedStringAttr.ValueOf(Iro10481Oa.OutDataIro1ComponentSeverityCd, 1);
      WLa.LocErrorMsgIro1ComponentMessageTx = StringAttr.ValueOf(Iro10481Oa.OutDataIro1ComponentMessageTx, 512);
      Iro10481Ia.FreeInstance(  );
      Iro10481Ia = null;
      Iro10481Oa.FreeInstance(  );
      Iro10481Oa = null;
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000028" );
      WOa.ExpErrorMsgIyy1ComponentMessageTx = StringAttr.ValueOf(WLa.LocErrorMsgIro1ComponentMessageTx, 512);
      Globdata.GetStateData().SetLastStatementNumber( "0000000029" );
      WOa.ExpErrorMsgIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(WLa.LocErrorMsgIro1ComponentSeverityCd, 1);
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000031" );
      if ( ((double) WLa.LocErrorIro1ComponentReturnCode < 1) )
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000032" );
        WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
          WLa.LocOtherErrorIyy1ComponentReturnCode, 0, TIRD2DEC.ROUND_NONE, 5));
        Globdata.GetStateData().SetLastStatementNumber( "0000000033" );
        WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
          WLa.LocOtherErrorIyy1ComponentReasonCode, 0, TIRD2DEC.ROUND_NONE, 5));
        Globdata.GetStateData().SetLastStatementNumber( "0000000034" );
        WOa.ExpErrorIyy1ComponentContextString = StringAttr.ValueOf(WLa.LocErrorMsgIro1ComponentMessageTx, 512);
      }
      else 
      {
        Globdata.GetStateData().SetLastSubStatementNumber( "1" );
        {
          f_20972195(  );
        }
      }
      
      return;
    }
    
    public void f_20972195(  )
    {
      func_0020972195_esc_flag = false;
      Globdata.GetStateData().SetLastStatementNumber( "0000000035" );
      ExpGroupHilite_PS_001 = 0;
      WOa.ExpGroupHilite_MA = IntAttr.ValueOf(0);
      ExpGroupHilite_FL_001 = TableNotFull;
      f_71303629_173015128_posChek(  );
      for_each_0071303629_esc_flag = false;
      for(LocExpHiliteGroup_PS_002 = 1; (LocExpHiliteGroup_PS_002 <= WLa.LocExpHiliteGroup_MA) && (for_each_0071303629_esc_flag != 
        true); ++(LocExpHiliteGroup_PS_002))
      {
        if ( ExpGroupHilite_FL_001 == TableFull )
        break;
        {
          Globdata.GetStateData().SetLastStatementNumber( "0000000036" );
          WOa.ExpGHiliteIyy1ComponentAttributeNameTx[ExpGroupHilite_PS_001-1] = FixedStringAttr.ValueOf(
            WLa.LocExpHiliteGIro1ComponentAttributeNameTx[LocExpHiliteGroup_PS_002-1], 50);
          ExpGroupHilite_RF_001 = GroupReferenced;
        }
        Globdata.GetStateData().SetLastStatementNumber( "0000000035" );
        if ( ExpGroupHilite_RF_001 == GroupReferenced )
        {
          WOa.ExpGroupHilite_MA = IntAttr.ValueOf(WOa.ExpGroupHilite_MA + 1);
          f_71303629_173015128_posChek(  );
        }
        Globdata.GetStateData().SetLastStatementNumber( "0000000035" );
      }
      
      return;
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // INITIALIZATION UTILITY FUNCTIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void f_22020198_localAlloc( String abname )
    {
      // Request localview allocation 
      WLa = (GEN.ORT.YYY.CYYY9481_LA)(IefRuntimeParm2.GetInstance( GetType().Assembly,
      	"GEN.ORT.YYY.CYYY9481_LA" ));
      if ( WLa == null )
      {
        Globdata.GetStateData().SetCurrentABId( "0022020198" );
        Globdata.GetStateData().SetCurrentABName( abname );
        Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
        Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusIefAllocationError );
      }
    }
    
    public void f_22020198_init(  )
    {
      if ( NestingLevel < 2 )
      {
        WLa.Reset();
      }
      WLa.LocExpHiliteGroup_MA = 0;
      for(LocExpHiliteGroup_PS_002 = 1; LocExpHiliteGroup_PS_002 <= 10; ++(LocExpHiliteGroup_PS_002))
      {
      }
      WOa.ExpGroupHilite_MA = 0;
      for(ExpGroupHilite_PS_001 = 1; ExpGroupHilite_PS_001 <= 10; ++(ExpGroupHilite_PS_001))
      {
        WOa.ExpGHiliteIyy1ComponentAttributeNameTx[ExpGroupHilite_PS_001-1] = "                                                  ";
      }
      WOa.ExpErrorMsgIyy1ComponentSeverityCode = " ";
      WOa.ExpErrorMsgIyy1ComponentMessageTx = "";
      WOa.ExpErrorIyy1ComponentSeverityCode = " ";
      WOa.ExpErrorIyy1ComponentRollbackIndicator = " ";
      WOa.ExpErrorIyy1ComponentOriginServid = 0.0;
      WOa.ExpErrorIyy1ComponentContextString = "";
      WOa.ExpErrorIyy1ComponentReturnCode = 0;
      WOa.ExpErrorIyy1ComponentReasonCode = 0;
      WOa.ExpErrorIyy1ComponentChecksum = "               ";
      ExpGroupHilite_PS_001 = 1;
      LocExpHiliteGroup_PS_002 = 1;
    }
    
    public void f_71303629_173015128_posChek(  )
    {
      if ( ExpGroupHilite_PS_001 + 1 > 10 )
      {
        ExpGroupHilite_FL_001 = TableFull;
      }
      else {
        ++(ExpGroupHilite_PS_001);
      }
      ExpGroupHilite_RF_001 = GroupNotReferenced;
    }
  }// end class
  
}

