namespace GEN.ORT.YYY
{
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  //
  //                    Source Code Generated by
  //                           CA Gen 8.6
  //
  //    Copyright (c) 2024 CA Technologies. All rights reserved.
  //
  //    Name: CYY1S411_XML_COMPOSER_TEST       Date: 2024/01/09
  //    Target OS:   CLR                       Time: 13:41:23
  //    Target DBMS: ODBC/ADO.NET              User: AliAl
  //    Access Method: <NONE>         
  //
  //    Generation options:
  //    Debug trace option not selected
  //    Data modeling constraint enforcement not selected
  //    Optimized import view initialization not selected
  //    Enforce default values with DBMS not selected
  //    Init unspecified optional fields to NULL not selected
  //
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // using Statements
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  using System;
  using com.ca.gen.vwrt;
  using com.ca.gen.vwrt.types;
  using com.ca.gen.vwrt.vdf;
  using com.ca.gen.csu.exception;
  
  using com.ca.gen.abrt;
  using com.ca.gen.abrt.functions;
  using com.ca.gen.abrt.cascade;
  using com.ca.gen.abrt.manager;
  using com.ca.gen.abrt.trace;
  using com.ca.gen.exits.common;
  using com.ca.gen.odc;
  using System.Data;
  using System.Collections;
  
  public class CYY1S411 : ABBase
  {
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // IMPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    CYY1S411_IA WIa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // EXPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    CYY1S411_OA WOa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // LOCAL VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    CYY1S411_LA WLa;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ACTION BLOCK IMPORT/EXPORT VIEWS CLASS VARIABLES
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    GEN.ORT.YYY.IYY10411_IA Iyy10411Ia;
    GEN.ORT.YYY.IYY10411_OA Iyy10411Oa;
    GEN.ORT.YYY.IYY10421_IA Iyy10421Ia;
    GEN.ORT.YYY.IYY10421_OA Iyy10421Oa;
    GEN.ORT.YYY.IYY10431_IA Iyy10431Ia;
    GEN.ORT.YYY.IYY10431_OA Iyy10431Oa;
    GEN.ORT.YYY.IYY10441_IA Iyy10441Ia;
    GEN.ORT.YYY.IYY10441_OA Iyy10441Oa;
    GEN.ORT.YYY.CYYY9001_OA Cyyy9001Oa;
    GEN.ORT.YYY.CYY1A131_OA Cyy1a131Oa;
    GEN.ORT.YYY.CYYY9141_IA Cyyy9141Ia;
    GEN.ORT.YYY.CYYY9141_OA Cyyy9141Oa;
    GEN.ORT.YYY.CYY1A121_IA Cyy1a121Ia;
    GEN.ORT.YYY.CYY1A121_OA Cyy1a121Oa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // REPEATING GROUP VIEW STATUS FIELDS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    bool ImpGroup_FL_001;
    int ImpGroup_PS_001;
    bool ImpGroup_RF_001;
    public const int ImpGroup_MM_001 = 48;
    bool ExpGroup_FL_002;
    int ExpGroup_PS_002;
    bool ExpGroup_RF_002;
    public const int ExpGroup_MM_002 = 48;
    bool LocGroupContext_FL_003;
    int LocGroupContext_PS_003;
    bool LocGroupContext_RF_003;
    public const int LocGroupContext_MM_003 = 9;
    bool ImpGroup_FL_004;
    int ImpGroup_PS_004;
    bool ImpGroup_RF_004;
    public const int ImpGroup_MM_004 = 10;
    bool ExpGroupList_FL_005;
    int ExpGroupList_PS_005;
    bool ExpGroupList_RF_005;
    public const int ExpGroupList_MM_005 = 10;
    bool ImpGroupContext_FL_006;
    int ImpGroupContext_PS_006;
    bool ImpGroupContext_RF_006;
    public const int ImpGroupContext_MM_006 = 9;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // MISC DECLARATIONS AND PROTOTYPES 
    //    FOLLOW AS NEEDED:             
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    bool func_0022020290_esc_flag;
    bool func_0020972641_esc_flag;
    bool func_0020972642_esc_flag;
    //       +->   CYY1S411_XML_COMPOSER_TEST        01/09/2024  13:41
    //       !       IMPORTS:
    //       !         Work View imp_command iyy1_component (Transient,
    //       !                     Optional, Import only)
    //       !           send_command
    //       !         Work View imp_dialect iyy1_component (Transient,
    //       !                     Optional, Import only)
    //       !           dialect_cd
    //       !         Entity View imp isc1_authorization_info (Transient,
    //       !                     Optional, Import only)
    //       !           userid
    //       !           token_id
    //       !           module_id
    //       !           authority_object_id
    //       !           version
    //       !           working_unit_num
    //       !         Entity View imp type (Transient, Optional, Import only)
    //       !           tinstance_id
    //       !           treference_id
    //       !           tcreate_user_id
    //       !           tupdate_user_id
    //       !           tkey_attr_text
    //       !           tsearch_attr_text
    //       !           tother_attr_text
    //       !           tother_attr_date
    //       !           tother_attr_time
    //       !           tother_attr_amount
    //       !         Group View (48) imp_group
    //       !           Entity View imp_g type (Transient, Optional, Import
    //       !                       only)
    //       !             tinstance_id
    //       !             tsearch_attr_text
    //       !             tother_attr_date
    //       !             tother_attr_time
    //       !             tother_attr_amount
    //       !             treference_id
    //       !             tcreate_user_id
    //       !             tupdate_user_id
    //       !             tkey_attr_text
    //       !             tother_attr_text
    //       !         Work View imp canam_xml (Transient, Optional, Import
    //       !                     only)
    //       !           xml_return_code
    //       !           xml_message
    //       !           xml_position
    //       !           xml_source
    //       !           xml_buffer
    //       !       EXPORTS:
    //       !         Work View exp_msg iyy1_component (Transient, Export
    //       !                     only)
    //       !           severity_code
    //       !           message_tx
    //       !         Work View exp_reference iyy1_server_data (Transient,
    //       !                     Export only)
    //       !           server_date
    //       !           server_time
    //       !           reference_id
    //       !           server_timestamp
    //       !         Work View exp_error iyy1_component (Transient, Export
    //       !                     only)
    //       !           severity_code
    //       !           rollback_indicator
    //       !           origin_servid
    //       !           context_string
    //       !           return_code
    //       !           reason_code
    //       !           checksum
    //       !         Entity View exp isc1_authorization_info (Transient,
    //       !                     Export only)
    //       !           token_id
    //       !           authority_ind
    //       !           authority_status_01
    //       !         Entity View exp type (Transient, Export only)
    //       !           tinstance_id
    //       !           treference_id
    //       !           tcreate_user_id
    //       !           tupdate_user_id
    //       !           tkey_attr_text
    //       !           tsearch_attr_text
    //       !           tother_attr_text
    //       !           tother_attr_date
    //       !           tother_attr_time
    //       !           tother_attr_amount
    //       !         Group View (48) exp_group
    //       !           Entity View exp_g type (Transient, Export only)
    //       !             tinstance_id
    //       !             tsearch_attr_text
    //       !             tother_attr_date
    //       !             tother_attr_time
    //       !             tother_attr_amount
    //       !         Work View exp canam_xml (Transient, Export only)
    //       !           xml_return_code
    //       !           xml_message
    //       !           xml_position
    //       !           xml_source
    //       !           xml_buffer
    //       !       LOCALS:
    //       !         Work View loc_error iyy1_component
    //       !           severity_code
    //       !           rollback_indicator
    //       !           origin_servid
    //       !           context_string
    //       !           return_code
    //       !           reason_code
    //       !           checksum
    //       !         Work View loc_context iyy1_component
    //       !           context_string
    //       !         Work View loc_reference iyy1_server_data
    //       !           userid
    //       !         Group View (9) loc_group_context
    //       !           Work View loc_g_context dont_change_text
    //       !             text_150
    //       !         Work View loc dont_change_return_codes
    //       !           n1120_invalid_command
    //       !           n61_operation_environment_failur
    //       !         Work View loc dont_change_reason_codes
    //       !           1_default
    //       !
    //       !     PROCEDURE STATEMENTS
    //       !
    //     1 !  NOTE: 
    //     1 !  PURPOSE(CONTINUED)
    //     2 !   
    //     3 !  NOTE: 
    //     3 !  PRE-CONDITION:
    //     3 !  INIT command, user info is given.
    //     3 !  POST-CONDITION:
    //     3 !  Security check results are generated.
    //     3 !  RETURN CODE = 1, REASON CODE = 1
    //     4 !   
    //     5 !  NOTE: 
    //     5 !  PRE-CONDITION:
    //     5 !  A command except for INIT is given.
    //     5 !  POST-CONDITION:
    //     5 !  No result is generated.
    //     5 !  RETURN CODE = -1120, REASON CODE = 1
    //     5 !  
    //     6 !  NOTE: 
    //     6 !  RETURN / REASON  CODES
    //     6 !  +1/1 Normal
    //     6 !  -1120/1 Erronous command
    //     7 !   
    //     8 !  NOTE: 
    //     8 !  RELEASE HISTORY
    //     8 !  01_00 15-10-2003 New release
    //     9 !   
    //    10 !   
    //    11 !  USE cyyy9001_exception_hndlng_dflt
    //    11 !     WHICH EXPORTS: Work View exp_error iyy1_component FROM Work
    //    11 !              View exp_error iyy1_component
    //    12 !   
    //    13 !  NOTE: 
    //    13 !  **************************************************************
    //    13 !  Return/Reason code values
    //    13 !  
    //    14 !  NOTE: 
    //    14 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //    14 !  Set the values of the return code/reason codes used
    //    14 !  
    //    15 !  SET loc dont_change_return_codes n1120_invalid_command TO
    //    15 !              -1120 
    //    16 !  SET loc dont_change_return_codes
    //    16 !              n61_operation_environment_failur TO -61 
    //    17 !  SET loc dont_change_reason_codes 1_default TO 1 
    //    18 !   
    //    19 !  SET SUBSCRIPT OF loc_group_context TO 1 
    //    20 !  SET loc_g_context dont_change_text text_150 TO "CYY1S411" 
    //    21 !  SET SUBSCRIPT OF loc_group_context TO 2 
    //    22 !  SET loc_g_context dont_change_text text_150 TO imp_command
    //    22 !              iyy1_component send_command 
    //    23 !   
    //    24 !  USE cyy1a131_server_init
    //    24 !     WHICH EXPORTS: Work View loc_reference iyy1_server_data
    //    24 !              FROM Work View exp_reference iyy1_server_data
    //    25 !   
    //    26 !  MOVE loc_reference iyy1_server_data TO exp_reference
    //    26 !              iyy1_server_data
    //    27 !  NOTE: 
    //    27 !  ****************************************************************
    //    27 !  Security check
    //    27 !  
    //    28 !  NOTE: 
    //    28 !  ****************************************************************
    //    28 !  All essential Server controls are being made...
    //    28 !  
    //    29 !  +->IF exp_error iyy1_component return_code = 1
    //    30 !  !   
    //    31 !  !  NOTE: 
    //    31 ...**************************************************************
    //    31 ...**
    //    31 ...Check the operation wanted.
    //    31 ...
    //    32 !  !  SET loc_reference iyy1_server_data userid TO imp
    //    32 !  !              isc1_authorization_info userid 
    //    33 !  !   
    //    34 !  !  +->CASE OF imp_command iyy1_component send_command
    //    34 !  !  +> CASE "READ"
    //    34 !  !  +> CASE "WRITE"
    //    34 !  !  +> CASE "GRPWRITE"
    //    34 !  !  +> CASE "GRPREAD"
    //    34 !  !  +> OTHERWISE
    //    35 !  !  !  SET exp_error iyy1_component return_code TO loc
    //    35 !  !  !              dont_change_return_codes
    //    35 !  !  !              n1120_invalid_command 
    //    36 !  !  !  SET exp_error iyy1_component reason_code TO loc
    //    36 !  !  !              dont_change_reason_codes 1_default 
    //    37 !  !  !  SET SUBSCRIPT OF loc_group_context TO 3 
    //    38 !  !  !  SET loc_g_context dont_change_text text_150 TO
    //    38 !  !  !              imp_command iyy1_component send_command 
    //    34 !  !  +--
    //    39 !  !   
    //    40 !  !  NOTE: 
    //    40 ...**************************************************************
    //    40 ...**
    //    40 ...OK. Nothing left to control. Let' s build Context string.
    //    40 ...
    //    41 !  !  NOTE: 
    //    41 ...**************************************************************
    //    41 ...**
    //    41 ...Generate Context string whether there is an error or not.
    //    41 ...There' s message to return in error-free condition.
    //    41 ...
    //    42 !  !  USE cyyy9141_context_string_set
    //    42 !  !     WHICH IMPORTS: Group View  loc_group_context TO Group
    //    42 !  !              View imp_group_context
    //    42 !  !     WHICH EXPORTS: Work View loc_context iyy1_component FROM
    //    42 !  !              Work View exp_context iyy1_component
    //    42 !  !                    Work View loc_error iyy1_component FROM
    //    42 !  !              Work View exp_error iyy1_component
    //    43 !  !   
    //    44 !  !  +->IF exp_error iyy1_component return_code < 1
    //    45 !  !  !  MOVE loc_error iyy1_component TO exp_error
    //    45 !  !  !              iyy1_component
    //    44 !  !  +> ELSE
    //    46 !  !  !  SET exp_error iyy1_component context_string TO
    //    46 !  !  !              loc_context iyy1_component context_string 
    //    44 !  !  +--
    //    29 !  +--
    //    47 !   
    //    48 !  NOTE: 
    //    48 !  ****************************************************************
    //    48 !  Everything' s OK. Nothing left to control.
    //    48 !  
    //    49 !  +->IF exp_error iyy1_component return_code = 1
    //    50 !  !   
    //    51 !  !  +->CASE OF imp_command iyy1_component send_command
    //    51 !  !  +> CASE "WRITE"
    //    52 !  !  !   
    //    53 !  !  !   
    //    54 !  !  !  USE iyy10411_xml_create_s
    //    55 *  *  *  USE cyyy0411_xml_create
    //    55 *  *  *     WHICH IMPORTS: Entity View imp type TO Entity View
    //    55 *  *  *              imp type
    //    55 *  *  *     WHICH EXPORTS: Work View exp canam_xml FROM Work View
    //    55 *  *  *              exp canam_xml
    //    55 *  *  *                    Work View exp_error iyy1_component
    //    55 *  *  *              FROM Work View exp_error iyy1_component
    //    51 !  !  +> CASE "READ"
    //    56 !  !  !   
    //    57 !  !  !  USE iyy10421_xml_parse_s
    //    58 *  *  *  USE cyyy0421_xml_parse
    //    58 *  *  *     WHICH IMPORTS: Work View imp canam_xml TO Work View
    //    58 *  *  *              imp canam_xml
    //    58 *  *  *     WHICH EXPORTS: Entity View exp type FROM Entity View
    //    58 *  *  *              exp type
    //    58 *  *  *                    Work View exp canam_xml FROM Work View
    //    58 *  *  *              exp_error canam_xml
    //    59 !  !  !   
    //    51 !  !  +> CASE "GRPWRITE"
    //    60 !  !  !   
    //    61 !  !  !  USE iyy10431_xml_group_create_s
    //    62 *  *  *  USE cyyy0431_xml_group_create
    //    62 *  *  *     WHICH IMPORTS: Group View  imp_group TO Group View
    //    62 *  *  *              imp_group
    //    62 *  *  *     WHICH EXPORTS: Work View exp canam_xml FROM Work View
    //    62 *  *  *              exp_error canam_xml
    //    62 *  *  *                    Work View exp canam_xml FROM Work View
    //    62 *  *  *              exp_error canam_xml
    //    63 !  !  !   
    //    51 !  !  +> CASE "GRPREAD"
    //    64 !  !  !   
    //    65 !  !  !  USE iyy10441_xml_group_parse_s
    //    66 *  *  *  USE cyyy0441_xml_group_parse
    //    66 *  *  *     WHICH IMPORTS: Work View imp canam_xml TO Work View
    //    66 *  *  *              imp canam_xml
    //    66 *  *  *     WHICH EXPORTS: Group View  exp_group FROM Group View
    //    66 *  *  *              exp_group
    //    66 *  *  *                    Work View exp canam_xml FROM Work View
    //    66 *  *  *              exp_error canam_xml
    //    51 !  !  +--
    //    49 !  +--
    //    67 !   
    //    68 !  USE cyy1a121_server_termination
    //    68 !     WHICH IMPORTS: Work View imp_command iyy1_component TO Work
    //    68 !              View imp_dialect iyy1_component
    //    68 !                    Work View exp_error iyy1_component TO Work
    //    68 !              View imp_error iyy1_component
    //    68 !     WHICH EXPORTS: Work View exp_msg iyy1_component FROM Work
    //    68 !              View exp_error_msg iyy1_component
    //    68 !                    Work View exp_error iyy1_component FROM Work
    //    68 !              View exp_error iyy1_component
    //       +---
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //  CONSTRUCTOR FOR THE CLASS       
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    public CYY1S411(  )
    {
      IefCGenRlse = "CA Gen 8.6";
      IsCopyright = "Copyright (c) 2024 CA Technologies. All rights reserved.";
      IefCGenDate = "2024/01/09";
      IefCGenTime = "13:41:23";
      IefCGenEncy = "9.2.A6";
      IefCGenUserId = "AliAl";
      IefCGenModel = "N8I_ORT_YYY_0112_TEMPLATE";
      IefCGenSubset = "ALL";
      IefCGenName = "CYY1S411_XML_COMPOSER_TEST";
      NestingLevel = 0;
      ValChkDeadlockTimeout = false;
      ValChkDBError = false;
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ACTION BLOCK FUNCTION DECLARATIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void Execute( Object in_runtime_parm1, 
    	IRuntimePStepContext in_runtime_parm2, 
    	GlobData in_globdata, 
    	CYY1S411_IA import_view, 
    	CYY1S411_OA export_view )
    {
      IefRuntimeParm1 = in_runtime_parm1;
      IefRuntimeParm2 = in_runtime_parm2;
      Globdata = in_globdata;
      WIa = import_view;
      WOa = export_view;
      _Execute();
    }
    
    private void _Execute()
    {
      
      f_22020290_localAlloc( "CYY1S411_XML_COMPOSER_TEST" );
      if ( Globdata.GetErrorData().GetLastStatus() == ErrorData.LastStatusIefAllocationError )
      	return;
      
      ++(NestingLevel);
      try {
        f_22020290_init(  );
        f_22020290(  );
      } catch( Exception e ) {
        if ( ((Globdata.GetErrorData().GetStatus() == ErrorData.StatusNone) && (Globdata.GetErrorData().GetErrorEncountered() == 
          ErrorData.ErrorEncounteredNoErrorFound)) && (Globdata.GetErrorData().GetViewOverflow() == 
          ErrorData.ErrorEncounteredNoErrorFound) )
        {
          Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
          Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusUnexpectedExceptionError );
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
          Globdata.GetErrorData(  ).SetErrorMessage( e );
        }
      }
      --(NestingLevel);
    }
    public void f_22020290(  )
    {
      func_0022020290_esc_flag = false;
      Globdata.GetStateData().SetCurrentABId( "0022020290" );
      Globdata.GetStateData().SetCurrentABName( "CYY1S411_XML_COMPOSER_TEST" );
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    PURPOSE(CONTINUED)                                              
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    PRE-CONDITION:                                                  
      //    INIT command, user info is given.                               
      //    POST-CONDITION:                                                 
      //    Security check results are generated.                           
      //    RETURN CODE = 1, REASON CODE = 1                                
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    PRE-CONDITION:                                                  
      //    A command except for INIT is given.                             
      //    POST-CONDITION:                                                 
      //    No result is generated.                                         
      //    RETURN CODE = -1120, REASON CODE = 1                            
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    RETURN / REASON  CODES                                          
      //    +1/1 Normal                                                     
      //    -1120/1 Erronous command                                        
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    RELEASE HISTORY                                                 
      //    01_00 15-10-2003 New release                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000011" );
      
      Cyyy9001Oa = (GEN.ORT.YYY.CYYY9001_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYYY9001).Assembly,
      	"GEN.ORT.YYY.CYYY9001_OA" ));
      Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
      IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.CYYY9001).Assembly,
      	"GEN.ORT.YYY.CYYY9001",
      	"Execute",
      	null,
      	Cyyy9001Oa );
      if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
        ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
        ErrorData.ErrorEncounteredNoErrorFound) )
      {
        throw new ABException();
      }
      Globdata.GetStateData().SetCurrentABId( "0022020290" );
      Globdata.GetStateData().SetCurrentABName( "CYY1S411_XML_COMPOSER_TEST" );
      Globdata.GetStateData().SetLastStatementNumber( "0000000011" );
      WOa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(Cyyy9001Oa.ExpErrorIyy1ComponentSeverityCode, 1);
      WOa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.ValueOf(Cyyy9001Oa.ExpErrorIyy1ComponentRollbackIndicator, 1);
      WOa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(Cyyy9001Oa.ExpErrorIyy1ComponentOriginServid);
      WOa.ExpErrorIyy1ComponentContextString = StringAttr.ValueOf(Cyyy9001Oa.ExpErrorIyy1ComponentContextString, 512);
      WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf(Cyyy9001Oa.ExpErrorIyy1ComponentReturnCode);
      WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf(Cyyy9001Oa.ExpErrorIyy1ComponentReasonCode);
      WOa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.ValueOf(Cyyy9001Oa.ExpErrorIyy1ComponentChecksum, 15);
      Cyyy9001Oa.FreeInstance(  );
      Cyyy9001Oa = null;
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    Return/Reason code values                                       
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!     
      //    Set the values of the return code/reason codes used             
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000015" );
      WLa.LocDontChangeReturnCodesN1120InvalidCommand = IntAttr.ValueOf((int)TIRD2DEC.Execute1(-1120, 0, TIRD2DEC.ROUND_NONE, 5));
      Globdata.GetStateData().SetLastStatementNumber( "0000000016" );
      WLa.LocDontChangeReturnCodesN61OperationEnvironmentFailur = IntAttr.ValueOf((int)TIRD2DEC.Execute1(-61, 0, TIRD2DEC.ROUND_NONE,
         5));
      Globdata.GetStateData().SetLastStatementNumber( "0000000017" );
      WLa.LocDontChangeReasonCodesQ1Default = IntAttr.ValueOf((int)TIRD2DEC.Execute1(1, 0, TIRD2DEC.ROUND_NONE, 5));
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000019" );
      LocGroupContext_PS_003 = (int)TIRD2DEC.Execute1(1, 0, TIRD2DEC.ROUND_NONE, 0);
      if ( (LocGroupContext_PS_003 > WLa.LocGroupContext_MA) && (LocGroupContext_PS_003 <= 9) )
      WLa.LocGroupContext_MA = IntAttr.ValueOf(LocGroupContext_PS_003);
      Globdata.GetStateData().SetLastStatementNumber( "0000000020" );
      WLa.LocGContextDontChangeTextText150[LocGroupContext_PS_003-1] = FixedStringAttr.ValueOf("CYY1S411", 150);
      f_173015158_rgvc(  );
      Globdata.GetStateData().SetLastStatementNumber( "0000000021" );
      LocGroupContext_PS_003 = (int)TIRD2DEC.Execute1(2, 0, TIRD2DEC.ROUND_NONE, 0);
      if ( (LocGroupContext_PS_003 > WLa.LocGroupContext_MA) && (LocGroupContext_PS_003 <= 9) )
      WLa.LocGroupContext_MA = IntAttr.ValueOf(LocGroupContext_PS_003);
      Globdata.GetStateData().SetLastStatementNumber( "0000000022" );
      WLa.LocGContextDontChangeTextText150[LocGroupContext_PS_003-1] = FixedStringAttr.ValueOf(
        WIa.ImpCommandIyy1ComponentSendCommand, 150);
      f_173015158_rgvc(  );
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000024" );
      
      Cyy1a131Oa = (GEN.ORT.YYY.CYY1A131_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYY1A131).Assembly,
      	"GEN.ORT.YYY.CYY1A131_OA" ));
      Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
      IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.CYY1A131).Assembly,
      	"GEN.ORT.YYY.CYY1A131",
      	"Execute",
      	null,
      	Cyy1a131Oa );
      if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
        ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
        ErrorData.ErrorEncounteredNoErrorFound) )
      {
        throw new ABException();
      }
      Globdata.GetStateData().SetCurrentABId( "0022020290" );
      Globdata.GetStateData().SetCurrentABName( "CYY1S411_XML_COMPOSER_TEST" );
      Globdata.GetStateData().SetLastStatementNumber( "0000000024" );
      Cyy1a131Oa.FreeInstance(  );
      Cyy1a131Oa = null;
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000026" );
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    Security check                                                  
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    All essential Server controls are being made...                 
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000029" );
      if ( ((double) WOa.ExpErrorIyy1ComponentReturnCode == 1) )
      {
        f_20972641(  );
      }
      
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    Everything' s OK. Nothing left to control.                      
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000049" );
      if ( ((double) WOa.ExpErrorIyy1ComponentReturnCode == 1) )
      {
        f_20972642(  );
      }
      
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000068" );
      
      Cyy1a121Ia = (GEN.ORT.YYY.CYY1A121_IA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYY1A121).Assembly,
      	"GEN.ORT.YYY.CYY1A121_IA" ));
      Cyy1a121Oa = (GEN.ORT.YYY.CYY1A121_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYY1A121).Assembly,
      	"GEN.ORT.YYY.CYY1A121_OA" ));
      Cyy1a121Ia.ImpErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(WOa.ExpErrorIyy1ComponentSeverityCode, 1);
      Cyy1a121Ia.ImpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.ValueOf(WOa.ExpErrorIyy1ComponentRollbackIndicator, 1);
      Cyy1a121Ia.ImpErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(WOa.ExpErrorIyy1ComponentOriginServid);
      Cyy1a121Ia.ImpErrorIyy1ComponentContextString = StringAttr.ValueOf(WOa.ExpErrorIyy1ComponentContextString, 512);
      Cyy1a121Ia.ImpErrorIyy1ComponentReturnCode = IntAttr.ValueOf(WOa.ExpErrorIyy1ComponentReturnCode);
      Cyy1a121Ia.ImpErrorIyy1ComponentReasonCode = IntAttr.ValueOf(WOa.ExpErrorIyy1ComponentReasonCode);
      Cyy1a121Ia.ImpErrorIyy1ComponentChecksum = FixedStringAttr.ValueOf(WOa.ExpErrorIyy1ComponentChecksum, 15);
      Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
      IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.CYY1A121).Assembly,
      	"GEN.ORT.YYY.CYY1A121",
      	"Execute",
      	Cyy1a121Ia,
      	Cyy1a121Oa );
      if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
        ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
        ErrorData.ErrorEncounteredNoErrorFound) )
      {
        throw new ABException();
      }
      Globdata.GetStateData().SetCurrentABId( "0022020290" );
      Globdata.GetStateData().SetCurrentABName( "CYY1S411_XML_COMPOSER_TEST" );
      Globdata.GetStateData().SetLastStatementNumber( "0000000068" );
      WOa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(Cyy1a121Oa.ExpErrorIyy1ComponentSeverityCode, 1);
      WOa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.ValueOf(Cyy1a121Oa.ExpErrorIyy1ComponentRollbackIndicator, 1);
      WOa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(Cyy1a121Oa.ExpErrorIyy1ComponentOriginServid);
      WOa.ExpErrorIyy1ComponentContextString = StringAttr.ValueOf(Cyy1a121Oa.ExpErrorIyy1ComponentContextString, 512);
      WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf(Cyy1a121Oa.ExpErrorIyy1ComponentReturnCode);
      WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf(Cyy1a121Oa.ExpErrorIyy1ComponentReasonCode);
      WOa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.ValueOf(Cyy1a121Oa.ExpErrorIyy1ComponentChecksum, 15);
      WOa.ExpMsgIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(Cyy1a121Oa.ExpErrorMsgIyy1ComponentSeverityCode, 1);
      WOa.ExpMsgIyy1ComponentMessageTx = StringAttr.ValueOf(Cyy1a121Oa.ExpErrorMsgIyy1ComponentMessageTx, 512);
      Cyy1a121Ia.FreeInstance(  );
      Cyy1a121Ia = null;
      Cyy1a121Oa.FreeInstance(  );
      Cyy1a121Oa = null;
      return;
    }
    
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // SUBORDINATE FUNCTIONS
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    
    public void f_20972641(  )
    {
      func_0020972641_esc_flag = false;
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    Check the operation wanted.                                     
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000032" );
      WLa.LocReferenceIyy1ServerDataUserid = FixedStringAttr.ValueOf(WIa.ImpIsc1AuthorizationInfoUserid, 8);
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000034" );
      if ( CompareExit.CompareTo(WIa.ImpCommandIyy1ComponentSendCommand, "READ") == 0 )
      {
        Globdata.GetStateData().SetLastSubStatementNumber( "1" );
        {
          // Empty statement here.
          ;
        }
      }
      else if ( CompareExit.CompareTo(WIa.ImpCommandIyy1ComponentSendCommand, "WRITE") == 0 )
      {
        Globdata.GetStateData().SetLastSubStatementNumber( "2" );
        {
          // Empty statement here.
          ;
        }
      }
      else if ( CompareExit.CompareTo(WIa.ImpCommandIyy1ComponentSendCommand, "GRPWRITE") == 0 )
      {
        Globdata.GetStateData().SetLastSubStatementNumber( "3" );
        {
          // Empty statement here.
          ;
        }
      }
      else if ( CompareExit.CompareTo(WIa.ImpCommandIyy1ComponentSendCommand, "GRPREAD") == 0 )
      {
        Globdata.GetStateData().SetLastSubStatementNumber( "4" );
        {
          // Empty statement here.
          ;
        }
      }
      else {
        Globdata.GetStateData().SetLastSubStatementNumber( "5" );
        {
          Globdata.GetStateData().SetLastStatementNumber( "0000000035" );
          WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
            WLa.LocDontChangeReturnCodesN1120InvalidCommand, 0, TIRD2DEC.ROUND_NONE, 5));
          Globdata.GetStateData().SetLastStatementNumber( "0000000036" );
          WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
            WLa.LocDontChangeReasonCodesQ1Default, 0, TIRD2DEC.ROUND_NONE, 5));
          Globdata.GetStateData().SetLastStatementNumber( "0000000037" );
          LocGroupContext_PS_003 = (int)TIRD2DEC.Execute1(3, 0, TIRD2DEC.ROUND_NONE, 0);
          if ( (LocGroupContext_PS_003 > WLa.LocGroupContext_MA) && (LocGroupContext_PS_003 <= 9) )
          WLa.LocGroupContext_MA = IntAttr.ValueOf(LocGroupContext_PS_003);
          Globdata.GetStateData().SetLastStatementNumber( "0000000038" );
          WLa.LocGContextDontChangeTextText150[LocGroupContext_PS_003-1] = FixedStringAttr.ValueOf(
            WIa.ImpCommandIyy1ComponentSendCommand, 150);
          f_173015158_rgvc(  );
        }
      }
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    OK. Nothing left to control. Let' s build Context string.       
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    Generate Context string whether there is an error or not.       
      //    There' s message to return in error-free condition.             
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000042" );
      
      Cyyy9141Ia = (GEN.ORT.YYY.CYYY9141_IA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYYY9141).Assembly,
      	"GEN.ORT.YYY.CYYY9141_IA" ));
      Cyyy9141Oa = (GEN.ORT.YYY.CYYY9141_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.CYYY9141).Assembly,
      	"GEN.ORT.YYY.CYYY9141_OA" ));
      Cyyy9141Ia.ImpGroupContext_MA = IntAttr.ValueOf(WLa.LocGroupContext_MA);
      for(Adim1 = 1; Adim1 <= WLa.LocGroupContext_MA; ++(Adim1))
      {
        Cyyy9141Ia.ImpGContextDontChangeTextText150[Adim1-1] = FixedStringAttr.ValueOf(WLa.LocGContextDontChangeTextText150[Adim1-1],
           150);
      }
      for(Adim1 = WLa.LocGroupContext_MA + 1; Adim1 <= 9; ++(Adim1))
      {
        Cyyy9141Ia.ImpGContextDontChangeTextText150[Adim1-1] = 
"                                                                                                                                                      "
          ;
      }
      Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
      IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.CYYY9141).Assembly,
      	"GEN.ORT.YYY.CYYY9141",
      	"Execute",
      	Cyyy9141Ia,
      	Cyyy9141Oa );
      if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
        ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
        ErrorData.ErrorEncounteredNoErrorFound) )
      {
        throw new ABException();
      }
      Globdata.GetStateData().SetCurrentABId( "0022020290" );
      Globdata.GetStateData().SetCurrentABName( "CYY1S411_XML_COMPOSER_TEST" );
      Globdata.GetStateData().SetLastStatementNumber( "0000000042" );
      WLa.LocErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(Cyyy9141Oa.ExpErrorIyy1ComponentSeverityCode, 1);
      WLa.LocErrorIyy1ComponentRollbackIndicator = FixedStringAttr.ValueOf(Cyyy9141Oa.ExpErrorIyy1ComponentRollbackIndicator, 1);
      WLa.LocErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(Cyyy9141Oa.ExpErrorIyy1ComponentOriginServid);
      WLa.LocErrorIyy1ComponentContextString = StringAttr.ValueOf(Cyyy9141Oa.ExpErrorIyy1ComponentContextString, 512);
      WLa.LocErrorIyy1ComponentReturnCode = IntAttr.ValueOf(Cyyy9141Oa.ExpErrorIyy1ComponentReturnCode);
      WLa.LocErrorIyy1ComponentReasonCode = IntAttr.ValueOf(Cyyy9141Oa.ExpErrorIyy1ComponentReasonCode);
      WLa.LocErrorIyy1ComponentChecksum = FixedStringAttr.ValueOf(Cyyy9141Oa.ExpErrorIyy1ComponentChecksum, 15);
      WLa.LocContextIyy1ComponentContextString = StringAttr.ValueOf(Cyyy9141Oa.ExpContextIyy1ComponentContextString, 512);
      Cyyy9141Ia.FreeInstance(  );
      Cyyy9141Ia = null;
      Cyyy9141Oa.FreeInstance(  );
      Cyyy9141Oa = null;
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000044" );
      if ( ((double) WOa.ExpErrorIyy1ComponentReturnCode < 1) )
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000045" );
        WOa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(WLa.LocErrorIyy1ComponentSeverityCode, 1);
        WOa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.ValueOf(WLa.LocErrorIyy1ComponentRollbackIndicator, 1);
        WOa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(WLa.LocErrorIyy1ComponentOriginServid);
        WOa.ExpErrorIyy1ComponentContextString = StringAttr.ValueOf(WLa.LocErrorIyy1ComponentContextString, 512);
        WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf(WLa.LocErrorIyy1ComponentReturnCode);
        WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf(WLa.LocErrorIyy1ComponentReasonCode);
        WOa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.ValueOf(WLa.LocErrorIyy1ComponentChecksum, 15);
      }
      else 
      {
        Globdata.GetStateData().SetLastSubStatementNumber( "1" );
        {
          Globdata.GetStateData().SetLastStatementNumber( "0000000046" );
          WOa.ExpErrorIyy1ComponentContextString = StringAttr.ValueOf(WLa.LocContextIyy1ComponentContextString, 512);
        }
      }
      
      return;
    }
    
    public void f_20972642(  )
    {
      func_0020972642_esc_flag = false;
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000051" );
      if ( CompareExit.CompareTo(WIa.ImpCommandIyy1ComponentSendCommand, "WRITE") == 0 )
      {
        Globdata.GetStateData().SetLastSubStatementNumber( "1" );
        {
          
          
          Globdata.GetStateData().SetLastStatementNumber( "0000000054" );
          
          Iyy10411Ia = (GEN.ORT.YYY.IYY10411_IA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.IYY10411).Assembly,
          	"GEN.ORT.YYY.IYY10411_IA" ));
          Iyy10411Oa = (GEN.ORT.YYY.IYY10411_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.IYY10411).Assembly,
          	"GEN.ORT.YYY.IYY10411_OA" ));
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
          IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.IYY10411).Assembly,
          	"GEN.ORT.YYY.IYY10411",
          	"Execute",
          	Iyy10411Ia,
          	Iyy10411Oa );
          if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
            ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
            ErrorData.ErrorEncounteredNoErrorFound) )
          {
            throw new ABException();
          }
          Globdata.GetStateData().SetCurrentABId( "0022020290" );
          Globdata.GetStateData().SetCurrentABName( "CYY1S411_XML_COMPOSER_TEST" );
          Globdata.GetStateData().SetLastStatementNumber( "0000000054" );
          Iyy10411Ia.FreeInstance(  );
          Iyy10411Ia = null;
          Iyy10411Oa.FreeInstance(  );
          Iyy10411Oa = null;
        }
      }
      else if ( CompareExit.CompareTo(WIa.ImpCommandIyy1ComponentSendCommand, "READ") == 0 )
      {
        Globdata.GetStateData().SetLastSubStatementNumber( "2" );
        {
          
          Globdata.GetStateData().SetLastStatementNumber( "0000000057" );
          
          Iyy10421Ia = (GEN.ORT.YYY.IYY10421_IA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.IYY10421).Assembly,
          	"GEN.ORT.YYY.IYY10421_IA" ));
          Iyy10421Oa = (GEN.ORT.YYY.IYY10421_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.IYY10421).Assembly,
          	"GEN.ORT.YYY.IYY10421_OA" ));
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
          IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.IYY10421).Assembly,
          	"GEN.ORT.YYY.IYY10421",
          	"Execute",
          	Iyy10421Ia,
          	Iyy10421Oa );
          if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
            ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
            ErrorData.ErrorEncounteredNoErrorFound) )
          {
            throw new ABException();
          }
          Globdata.GetStateData().SetCurrentABId( "0022020290" );
          Globdata.GetStateData().SetCurrentABName( "CYY1S411_XML_COMPOSER_TEST" );
          Globdata.GetStateData().SetLastStatementNumber( "0000000057" );
          Iyy10421Ia.FreeInstance(  );
          Iyy10421Ia = null;
          Iyy10421Oa.FreeInstance(  );
          Iyy10421Oa = null;
          
        }
      }
      else if ( CompareExit.CompareTo(WIa.ImpCommandIyy1ComponentSendCommand, "GRPWRITE") == 0 )
      {
        Globdata.GetStateData().SetLastSubStatementNumber( "3" );
        {
          
          Globdata.GetStateData().SetLastStatementNumber( "0000000061" );
          
          Iyy10431Ia = (GEN.ORT.YYY.IYY10431_IA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.IYY10431).Assembly,
          	"GEN.ORT.YYY.IYY10431_IA" ));
          Iyy10431Oa = (GEN.ORT.YYY.IYY10431_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.IYY10431).Assembly,
          	"GEN.ORT.YYY.IYY10431_OA" ));
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
          IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.IYY10431).Assembly,
          	"GEN.ORT.YYY.IYY10431",
          	"Execute",
          	Iyy10431Ia,
          	Iyy10431Oa );
          if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
            ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
            ErrorData.ErrorEncounteredNoErrorFound) )
          {
            throw new ABException();
          }
          Globdata.GetStateData().SetCurrentABId( "0022020290" );
          Globdata.GetStateData().SetCurrentABName( "CYY1S411_XML_COMPOSER_TEST" );
          Globdata.GetStateData().SetLastStatementNumber( "0000000061" );
          Iyy10431Ia.FreeInstance(  );
          Iyy10431Ia = null;
          Iyy10431Oa.FreeInstance(  );
          Iyy10431Oa = null;
          
        }
      }
      else if ( CompareExit.CompareTo(WIa.ImpCommandIyy1ComponentSendCommand, "GRPREAD") == 0 )
      {
        Globdata.GetStateData().SetLastSubStatementNumber( "4" );
        {
          
          Globdata.GetStateData().SetLastStatementNumber( "0000000065" );
          
          Iyy10441Ia = (GEN.ORT.YYY.IYY10441_IA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.IYY10441).Assembly,
          	"GEN.ORT.YYY.IYY10441_IA" ));
          Iyy10441Oa = (GEN.ORT.YYY.IYY10441_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.IYY10441).Assembly,
          	"GEN.ORT.YYY.IYY10441_OA" ));
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
          IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.IYY10441).Assembly,
          	"GEN.ORT.YYY.IYY10441",
          	"Execute",
          	Iyy10441Ia,
          	Iyy10441Oa );
          if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
            ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
            ErrorData.ErrorEncounteredNoErrorFound) )
          {
            throw new ABException();
          }
          Globdata.GetStateData().SetCurrentABId( "0022020290" );
          Globdata.GetStateData().SetCurrentABName( "CYY1S411_XML_COMPOSER_TEST" );
          Globdata.GetStateData().SetLastStatementNumber( "0000000065" );
          Iyy10441Ia.FreeInstance(  );
          Iyy10441Ia = null;
          Iyy10441Oa.FreeInstance(  );
          Iyy10441Oa = null;
        }
      }
      return;
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // INITIALIZATION UTILITY FUNCTIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void f_22020290_localAlloc( String abname )
    {
      // Request localview allocation 
      WLa = (GEN.ORT.YYY.CYY1S411_LA)(IefRuntimeParm2.GetInstance( GetType().Assembly,
      	"GEN.ORT.YYY.CYY1S411_LA" ));
      if ( WLa == null )
      {
        Globdata.GetStateData().SetCurrentABId( "0022020290" );
        Globdata.GetStateData().SetCurrentABName( abname );
        Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
        Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusIefAllocationError );
      }
    }
    
    public void f_22020290_init(  )
    {
      if ( NestingLevel < 2 )
      {
        WLa.Reset();
      }
      WLa.LocGroupContext_MA = 0;
      for(LocGroupContext_PS_003 = 1; LocGroupContext_PS_003 <= 9; ++(LocGroupContext_PS_003))
      {
      }
      WOa.ExpMsgIyy1ComponentSeverityCode = " ";
      WOa.ExpMsgIyy1ComponentMessageTx = "";
      WOa.ExpReferenceIyy1ServerDataServerDate = 00000000;
      WOa.ExpReferenceIyy1ServerDataServerTime = 00000000;
      WOa.ExpReferenceIyy1ServerDataReferenceId = "00000000000000000000";
      WOa.ExpReferenceIyy1ServerDataServerTimestamp = "00000000000000000000";
      WOa.ExpErrorIyy1ComponentSeverityCode = " ";
      WOa.ExpErrorIyy1ComponentRollbackIndicator = " ";
      WOa.ExpErrorIyy1ComponentOriginServid = 0.0;
      WOa.ExpErrorIyy1ComponentContextString = "";
      WOa.ExpErrorIyy1ComponentReturnCode = 0;
      WOa.ExpErrorIyy1ComponentReasonCode = 0;
      WOa.ExpErrorIyy1ComponentChecksum = "               ";
      WOa.ExpIsc1AuthorizationInfoTokenId = "                                ";
      WOa.ExpIsc1AuthorizationInfoAuthorityInd = " ";
      WOa.ExpIsc1AuthorizationInfoAuthorityStatus01 = " ";
      WOa.ExpTypeTinstanceId = "00000000000000000000";
      WOa.ExpTypeTreferenceId = "00000000000000000000";
      WOa.ExpTypeTcreateUserId = "        ";
      WOa.ExpTypeTupdateUserId = "        ";
      WOa.ExpTypeTkeyAttrText = "    ";
      WOa.ExpTypeTsearchAttrText = "                    ";
      WOa.ExpTypeTotherAttrText = "  ";
      WOa.ExpTypeTotherAttrDate = 00000000;
      WOa.ExpTypeTotherAttrTime = 00000000;
      WOa.ExpTypeTotherAttrAmount = DecimalAttr.GetDefaultValue();
      WOa.ExpGroup_MA = 0;
      for(ExpGroup_PS_002 = 1; ExpGroup_PS_002 <= 48; ++(ExpGroup_PS_002))
      {
        WOa.ExpGTypeTinstanceId[ExpGroup_PS_002-1] = "00000000000000000000";
        WOa.ExpGTypeTsearchAttrText[ExpGroup_PS_002-1] = "                    ";
        WOa.ExpGTypeTotherAttrDate[ExpGroup_PS_002-1] = 00000000;
        WOa.ExpGTypeTotherAttrTime[ExpGroup_PS_002-1] = 00000000;
        WOa.ExpGTypeTotherAttrAmount[ExpGroup_PS_002-1] = DecimalAttr.GetDefaultValue();
      }
      WOa.ExpCanamXmlXmlReturnCode = "  ";
      WOa.ExpCanamXmlXmlMessage = "                                                                                ";
      WOa.ExpCanamXmlXmlPosition = 0.0;
      WOa.ExpCanamXmlXmlSource = 
        "                                                                                                                        ";
      WOa.ExpCanamXmlXmlBuffer = "";
      for(ImpGroup_PS_001 = 1; ImpGroup_PS_001 <= 48; ++(ImpGroup_PS_001))
      {
      }
      ImpGroup_PS_001 = 1;
      ExpGroup_PS_002 = 1;
      LocGroupContext_PS_003 = 1;
    }
    public void f_173015158_rgvc(  )
    {
      if ( (LocGroupContext_PS_003 > 9) || (LocGroupContext_PS_003 < 1) )
      {
        Globdata.GetErrorData().SetViewOverflow( ErrorData.ErrorEncounteredErrorFound );
        {
          throw new ABException();
        }
      }
    }
  }// end class
  
}

