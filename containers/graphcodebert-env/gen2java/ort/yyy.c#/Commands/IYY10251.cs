namespace GEN.ORT.YYY
{
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  //
  //                    Source Code Generated by
  //                           CA Gen 8.6
  //
  //    Copyright (c) 2024 CA Technologies. All rights reserved.
  //
  //    Name: IYY10251_CHILD_LIST_S            Date: 2024/01/09
  //    Target OS:   CLR                       Time: 13:41:59
  //    Target DBMS: ODBC/ADO.NET              User: AliAl
  //    Access Method: <NONE>         
  //
  //    Generation options:
  //    Debug trace option not selected
  //    Data modeling constraint enforcement not selected
  //    Optimized import view initialization not selected
  //    Enforce default values with DBMS not selected
  //    Init unspecified optional fields to NULL not selected
  //
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // using Statements
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  using System;
  using com.ca.gen.vwrt;
  using com.ca.gen.vwrt.types;
  using com.ca.gen.vwrt.vdf;
  using com.ca.gen.csu.exception;
  
  using com.ca.gen.abrt;
  using com.ca.gen.abrt.functions;
  using com.ca.gen.abrt.cascade;
  using com.ca.gen.abrt.manager;
  using com.ca.gen.abrt.trace;
  using com.ca.gen.exits.common;
  using com.ca.gen.odc;
  using System.Data;
  using System.Collections;
  
  public class IYY10251 : ABBase
  {
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // IMPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    IYY10251_IA WIa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // EXPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    IYY10251_OA WOa;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ACTION BLOCK IMPORT/EXPORT VIEWS CLASS VARIABLES
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    GEN.ORT.YYY.MYY10251_IA Myy10251Ia;
    GEN.ORT.YYY.MYY10251_OA Myy10251Oa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // REPEATING GROUP VIEW STATUS FIELDS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    bool ExpGroupList_FL_001;
    int ExpGroupList_PS_001;
    bool ExpGroupList_RF_001;
    public const int ExpGroupList_MM_001 = 48;
    bool ExpGroupList_FL_002;
    int ExpGroupList_PS_002;
    bool ExpGroupList_RF_002;
    public const int ExpGroupList_MM_002 = 48;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // MISC DECLARATIONS AND PROTOTYPES 
    //    FOLLOW AS NEEDED:             
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    bool func_0022020124_esc_flag;
    //       +->   IYY10251_CHILD_LIST_S             01/09/2024  13:41
    //       !       IMPORTS:
    //       !         Work View imp_filter iyy1_list (Transient, Mandatory,
    //       !                     Import only)
    //       !           sort_option
    //       !           scroll_type
    //       !           list_direction
    //       !           scroll_amount
    //       !           order_by_field_num
    //       !         Entity View imp_from iyy1_child (Transient, Mandatory,
    //       !                     Import only)
    //       !           cinstance_id
    //       !           cparent_pkey_attr_text
    //       !           ckey_attr_num
    //       !         Entity View imp_filter_start iyy1_child (Transient,
    //       !                     Mandatory, Import only)
    //       !           cparent_pkey_attr_text
    //       !           ckey_attr_num
    //       !         Entity View imp_filter_stop iyy1_child (Transient,
    //       !                     Mandatory, Import only)
    //       !           cparent_pkey_attr_text
    //       !           ckey_attr_num
    //       !         Entity View imp_filter iyy1_child (Transient,
    //       !                     Mandatory, Import only)
    //       !           csearch_attr_text
    //       !       EXPORTS:
    //       !         Group View (48) exp_group_list
    //       !           Entity View exp_g_list iyy1_child (Transient, Export
    //       !                       only)
    //       !             cinstance_id
    //       !             creference_id
    //       !             cparent_pkey_attr_text
    //       !             ckey_attr_num
    //       !             csearch_attr_text
    //       !             cother_attr_text
    //       !         Work View exp_error iyy1_component (Transient, Export
    //       !                     only)
    //       !           severity_code
    //       !           rollback_indicator
    //       !           origin_servid
    //       !           context_string
    //       !           return_code
    //       !           reason_code
    //       !           checksum
    //       !
    //       !     PROCEDURE STATEMENTS
    //       !
    //     1 !  NOTE: 
    //     1 !  PURPOSE(CONTINUED)
    //     1 !  
    //     2 !  NOTE: 
    //     2 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //     2 !  !!!!!!!!!!!!
    //     2 !  Review Pre-Post Conditions and Return/Reason Codes.
    //     2 !  
    //     3 !  NOTE: 
    //     3 !  PRE-CONDITION
    //     3 !  List type and filter values are given.
    //     3 !  POST-CONDITION
    //     3 !  Read values are returned as list.
    //     3 !  Return Code = 1, Reason Code = 1, 11 veya 12
    //     3 !  
    //     4 !  NOTE: 
    //     4 !  RETURN / REASON CODES
    //     4 !  +1/1 List is partially full.
    //     4 !  +1999/1 Other warnings.
    //     4 !  +1/11 List is full, there are records to be listed.
    //     4 !  +1/12 List is empty.
    //     4 !  -1999/1 Other errors.
    //     4 !  
    //     5 !  NOTE: 
    //     5 !  RELEASE HISTORY
    //     5 !  01_00 23-02-1998 New releaseYeni sürüm
    //     5 !  
    //     6 !  NOTE: 
    //     6 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //     6 !  !!!!!!!!!!!!
    //     6 !  USE <mapper ab>
    //     6 !  
    //     7 !  USE myy10251_child_list
    //     7 !     WHICH IMPORTS: Work View imp_filter iyy1_list TO Work View
    //     7 !              imp_filter iyy1_list
    //     7 !                    Entity View imp_from iyy1_child TO Entity
    //     7 !              View imp_from iyy1_child
    //     7 !                    Entity View imp_filter_start iyy1_child TO
    //     7 !              Entity View imp_filter_start iyy1_child
    //     7 !                    Entity View imp_filter_stop iyy1_child TO
    //     7 !              Entity View imp_filter_stop iyy1_child
    //     7 !                    Entity View imp_filter iyy1_child TO Entity
    //     7 !              View imp_filter iyy1_child
    //     7 !     WHICH EXPORTS: Group View  exp_group_list FROM Group View
    //     7 !              exp_group_list
    //     7 !                    Work View exp_error iyy1_component FROM Work
    //     7 !              View exp_error iyy1_component
    //       +---
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //  CONSTRUCTOR FOR THE CLASS       
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    public IYY10251(  )
    {
      IefCGenRlse = "CA Gen 8.6";
      IsCopyright = "Copyright (c) 2024 CA Technologies. All rights reserved.";
      IefCGenDate = "2024/01/09";
      IefCGenTime = "13:41:59";
      IefCGenEncy = "9.2.A6";
      IefCGenUserId = "AliAl";
      IefCGenModel = "N8I_ORT_YYY_0112_TEMPLATE";
      IefCGenSubset = "ALL";
      IefCGenName = "IYY10251_CHILD_LIST_S";
      NestingLevel = 0;
      ValChkDeadlockTimeout = false;
      ValChkDBError = false;
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ACTION BLOCK FUNCTION DECLARATIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void Execute( Object in_runtime_parm1, 
    	IRuntimePStepContext in_runtime_parm2, 
    	GlobData in_globdata, 
    	IYY10251_IA import_view, 
    	IYY10251_OA export_view )
    {
      IefRuntimeParm1 = in_runtime_parm1;
      IefRuntimeParm2 = in_runtime_parm2;
      Globdata = in_globdata;
      WIa = import_view;
      WOa = export_view;
      _Execute();
    }
    
    private void _Execute()
    {
      
      ++(NestingLevel);
      try {
        f_22020124_init(  );
        f_22020124(  );
      } catch( Exception e ) {
        if ( ((Globdata.GetErrorData().GetStatus() == ErrorData.StatusNone) && (Globdata.GetErrorData().GetErrorEncountered() == 
          ErrorData.ErrorEncounteredNoErrorFound)) && (Globdata.GetErrorData().GetViewOverflow() == 
          ErrorData.ErrorEncounteredNoErrorFound) )
        {
          Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
          Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusUnexpectedExceptionError );
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
          Globdata.GetErrorData(  ).SetErrorMessage( e );
        }
      }
      --(NestingLevel);
    }
    public void f_22020124(  )
    {
      func_0022020124_esc_flag = false;
      Globdata.GetStateData().SetCurrentABId( "0022020124" );
      Globdata.GetStateData().SetCurrentABName( "IYY10251_CHILD_LIST_S" );
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    PURPOSE(CONTINUED)                                              
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
      //    !!!!!!!!!!!!                                                    
      //    Review Pre-Post Conditions and Return/Reason Codes.             
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    PRE-CONDITION                                                   
      //    List type and filter values are given.                          
      //    POST-CONDITION                                                  
      //    Read values are returned as list.                               
      //    Return Code = 1, Reason Code = 1, 11 veya 12                    
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    RETURN / REASON CODES                                           
      //    +1/1 List is partially full.                                    
      //    +1999/1 Other warnings.                                         
      //    +1/11 List is full, there are records to be listed.             
      //    +1/12 List is empty.                                            
      //    -1999/1 Other errors.                                           
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    RELEASE HISTORY                                                 
      //    01_00 23-02-1998 New releaseYeni sürüm                          
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
      //    !!!!!!!!!!!!                                                    
      //    USE <mapper ab>                                                 
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000007" );
      
      Myy10251Ia = (GEN.ORT.YYY.MYY10251_IA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.MYY10251).Assembly,
      	"GEN.ORT.YYY.MYY10251_IA" ));
      Myy10251Oa = (GEN.ORT.YYY.MYY10251_OA)(IefRuntimeParm2.GetInstance( typeof(GEN.ORT.YYY.MYY10251).Assembly,
      	"GEN.ORT.YYY.MYY10251_OA" ));
      Myy10251Ia.ImpFilterIyy1ChildCsearchAttrText = FixedStringAttr.ValueOf(WIa.ImpFilterIyy1ChildCsearchAttrText, 25);
      Myy10251Ia.ImpFilterStopIyy1ChildCparentPkeyAttrText = FixedStringAttr.ValueOf(WIa.ImpFilterStopIyy1ChildCparentPkeyAttrText, 
        5);
      Myy10251Ia.ImpFilterStopIyy1ChildCkeyAttrNum = IntAttr.ValueOf(WIa.ImpFilterStopIyy1ChildCkeyAttrNum);
      Myy10251Ia.ImpFilterStartIyy1ChildCparentPkeyAttrText = FixedStringAttr.ValueOf(WIa.ImpFilterStartIyy1ChildCparentPkeyAttrText,
         5);
      Myy10251Ia.ImpFilterStartIyy1ChildCkeyAttrNum = IntAttr.ValueOf(WIa.ImpFilterStartIyy1ChildCkeyAttrNum);
      Myy10251Ia.ImpFromIyy1ChildCinstanceId = TimestampAttr.ValueOf(WIa.ImpFromIyy1ChildCinstanceId);
      Myy10251Ia.ImpFromIyy1ChildCparentPkeyAttrText = FixedStringAttr.ValueOf(WIa.ImpFromIyy1ChildCparentPkeyAttrText, 5);
      Myy10251Ia.ImpFromIyy1ChildCkeyAttrNum = IntAttr.ValueOf(WIa.ImpFromIyy1ChildCkeyAttrNum);
      Myy10251Ia.ImpFilterIyy1ListSortOption = FixedStringAttr.ValueOf(WIa.ImpFilterIyy1ListSortOption, 3);
      Myy10251Ia.ImpFilterIyy1ListScrollType = FixedStringAttr.ValueOf(WIa.ImpFilterIyy1ListScrollType, 1);
      Myy10251Ia.ImpFilterIyy1ListListDirection = FixedStringAttr.ValueOf(WIa.ImpFilterIyy1ListListDirection, 1);
      Myy10251Ia.ImpFilterIyy1ListScrollAmount = IntAttr.ValueOf(WIa.ImpFilterIyy1ListScrollAmount);
      Myy10251Ia.ImpFilterIyy1ListOrderByFieldNum = ShortAttr.ValueOf(WIa.ImpFilterIyy1ListOrderByFieldNum);
      Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredNoErrorFound );
      IefRuntimeParm2.UseActionBlock( typeof(GEN.ORT.YYY.MYY10251).Assembly,
      	"GEN.ORT.YYY.MYY10251",
      	"Execute",
      	Myy10251Ia,
      	Myy10251Oa );
      if ( ((Globdata.GetErrorData().GetStatus() != ErrorData.StatusNone) || (Globdata.GetErrorData().GetErrorEncountered() != 
        ErrorData.ErrorEncounteredNoErrorFound)) || (Globdata.GetErrorData().GetViewOverflow() != 
        ErrorData.ErrorEncounteredNoErrorFound) )
      {
        throw new ABException();
      }
      Globdata.GetStateData().SetCurrentABId( "0022020124" );
      Globdata.GetStateData().SetCurrentABName( "IYY10251_CHILD_LIST_S" );
      Globdata.GetStateData().SetLastStatementNumber( "0000000007" );
      WOa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(Myy10251Oa.ExpErrorIyy1ComponentSeverityCode, 1);
      WOa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.ValueOf(Myy10251Oa.ExpErrorIyy1ComponentRollbackIndicator, 1);
      WOa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(Myy10251Oa.ExpErrorIyy1ComponentOriginServid);
      WOa.ExpErrorIyy1ComponentContextString = StringAttr.ValueOf(Myy10251Oa.ExpErrorIyy1ComponentContextString, 512);
      WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf(Myy10251Oa.ExpErrorIyy1ComponentReturnCode);
      WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf(Myy10251Oa.ExpErrorIyy1ComponentReasonCode);
      WOa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.ValueOf(Myy10251Oa.ExpErrorIyy1ComponentChecksum, 15);
      WOa.ExpGroupList_MA = IntAttr.ValueOf(Myy10251Oa.ExpGroupList_MA);
      for(Adim1 = 1; Adim1 <= WOa.ExpGroupList_MA; ++(Adim1))
      {
        WOa.ExpGListIyy1ChildCinstanceId[Adim1-1] = TimestampAttr.ValueOf(Myy10251Oa.ExpGListIyy1ChildCinstanceId[Adim1-1]);
        WOa.ExpGListIyy1ChildCreferenceId[Adim1-1] = TimestampAttr.ValueOf(Myy10251Oa.ExpGListIyy1ChildCreferenceId[Adim1-1]);
        WOa.ExpGListIyy1ChildCparentPkeyAttrText[Adim1-1] = FixedStringAttr.ValueOf(Myy10251Oa.ExpGListIyy1ChildCparentPkeyAttrText[
          Adim1-1], 5);
        WOa.ExpGListIyy1ChildCkeyAttrNum[Adim1-1] = IntAttr.ValueOf(Myy10251Oa.ExpGListIyy1ChildCkeyAttrNum[Adim1-1]);
        WOa.ExpGListIyy1ChildCsearchAttrText[Adim1-1] = FixedStringAttr.ValueOf(Myy10251Oa.ExpGListIyy1ChildCsearchAttrText[Adim1-1],
           25);
        WOa.ExpGListIyy1ChildCotherAttrText[Adim1-1] = FixedStringAttr.ValueOf(Myy10251Oa.ExpGListIyy1ChildCotherAttrText[Adim1-1], 
          25);
      }
      Myy10251Ia.FreeInstance(  );
      Myy10251Ia = null;
      Myy10251Oa.FreeInstance(  );
      Myy10251Oa = null;
      return;
    }
    
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // SUBORDINATE FUNCTIONS
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // INITIALIZATION UTILITY FUNCTIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void f_22020124_init(  )
    {
      if ( NestingLevel < 2 )
      {
      }
      WOa.ExpGroupList_MA = 0;
      for(ExpGroupList_PS_001 = 1; ExpGroupList_PS_001 <= 48; ++(ExpGroupList_PS_001))
      {
        WOa.ExpGListIyy1ChildCinstanceId[ExpGroupList_PS_001-1] = "00000000000000000000";
        WOa.ExpGListIyy1ChildCreferenceId[ExpGroupList_PS_001-1] = "00000000000000000000";
        WOa.ExpGListIyy1ChildCparentPkeyAttrText[ExpGroupList_PS_001-1] = "     ";
        WOa.ExpGListIyy1ChildCkeyAttrNum[ExpGroupList_PS_001-1] = 0;
        WOa.ExpGListIyy1ChildCsearchAttrText[ExpGroupList_PS_001-1] = "                         ";
        WOa.ExpGListIyy1ChildCotherAttrText[ExpGroupList_PS_001-1] = "                         ";
      }
      WOa.ExpErrorIyy1ComponentSeverityCode = " ";
      WOa.ExpErrorIyy1ComponentRollbackIndicator = " ";
      WOa.ExpErrorIyy1ComponentOriginServid = 0.0;
      WOa.ExpErrorIyy1ComponentContextString = "";
      WOa.ExpErrorIyy1ComponentReturnCode = 0;
      WOa.ExpErrorIyy1ComponentReasonCode = 0;
      WOa.ExpErrorIyy1ComponentChecksum = "               ";
      ExpGroupList_PS_001 = 1;
      ExpGroupList_PS_002 = 1;
    }
  }// end class
  
}

