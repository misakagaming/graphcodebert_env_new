namespace GEN.ORT.YYY
{
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  //
  //                    Source Code Generated by
  //                           CA Gen 8.6
  //
  //    Copyright (c) 2024 CA Technologies. All rights reserved.
  //
  //    Name: DYYY0251_CHILD_LIST              Date: 2024/01/09
  //    Target OS:   CLR                       Time: 13:41:11
  //    Target DBMS: ODBC/ADO.NET              User: AliAl
  //    Access Method: <NONE>         
  //
  //    Generation options:
  //    Debug trace option not selected
  //    Data modeling constraint enforcement not selected
  //    Optimized import view initialization not selected
  //    Enforce default values with DBMS not selected
  //    Init unspecified optional fields to NULL not selected
  //
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // using Statements
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  using System;
  using com.ca.gen.vwrt;
  using com.ca.gen.vwrt.types;
  using com.ca.gen.vwrt.vdf;
  using com.ca.gen.csu.exception;
  
  using com.ca.gen.abrt;
  using com.ca.gen.abrt.functions;
  using com.ca.gen.abrt.cascade;
  using com.ca.gen.abrt.manager;
  using com.ca.gen.abrt.trace;
  using com.ca.gen.exits.common;
  using com.ca.gen.odc;
  using System.Data;
  using System.Collections;
  
  public class DYYY0251 : ABBase
  {
    // * * * * * * * * * * * * * * * * * * *
    // ENTITY ACTION STATEMENT STATUS FLAGS 
    // ENTITY VIEW STATUS FLAGS AND         
    // LAST COMMAND FOR EACH ENTITY VIEW    
    // * * * * * * * * * * * * * * * * * * *
    string sl_29360156 = ErrorData.LastStatusNone;
    string sl_29360170 = ErrorData.LastStatusNone;
    string Child_es;
    string Child_001cd;
    string Child_lk;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // IMPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    DYYY0251_IA WIa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // EXPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    DYYY0251_OA WOa;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // START OF ENTITY ACTION VIEW
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    /// <summary>
    /// Internal data view storage for: DYYY0251_EA
    /// </summary>
    [Serializable]
    public class DYYY0251_EA : ViewBase, IEntityActionView
    {
      // Entity View: 
      //        Type: CHILD
      /// <summary>
      /// Internal storage for attribute missing flag for: ChildCinstanceId
      /// </summary>
      private char _ChildCinstanceId_AS;
      /// <summary>
      /// Attribute missing flag for: ChildCinstanceId
      /// </summary>
      public char ChildCinstanceId_AS {
        get {
          return(_ChildCinstanceId_AS);
        }
        set {
          _ChildCinstanceId_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: ChildCinstanceId
      /// Domain: Timestamp
      /// Length: 20
      /// </summary>
      private string _ChildCinstanceId;
      /// <summary>
      /// Attribute for: ChildCinstanceId
      /// </summary>
      public string ChildCinstanceId {
        get {
          return(_ChildCinstanceId);
        }
        set {
          _ChildCinstanceId = value;
        }
      }
      /// <summary>
      /// Internal storage for attribute missing flag for: ChildCreferenceId
      /// </summary>
      private char _ChildCreferenceId_AS;
      /// <summary>
      /// Attribute missing flag for: ChildCreferenceId
      /// </summary>
      public char ChildCreferenceId_AS {
        get {
          return(_ChildCreferenceId_AS);
        }
        set {
          _ChildCreferenceId_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: ChildCreferenceId
      /// Domain: Timestamp
      /// Length: 20
      /// </summary>
      private string _ChildCreferenceId;
      /// <summary>
      /// Attribute for: ChildCreferenceId
      /// </summary>
      public string ChildCreferenceId {
        get {
          return(_ChildCreferenceId);
        }
        set {
          _ChildCreferenceId = value;
        }
      }
      /// <summary>
      /// Internal storage for attribute missing flag for: ChildCcreateUserId
      /// </summary>
      private char _ChildCcreateUserId_AS;
      /// <summary>
      /// Attribute missing flag for: ChildCcreateUserId
      /// </summary>
      public char ChildCcreateUserId_AS {
        get {
          return(_ChildCcreateUserId_AS);
        }
        set {
          _ChildCcreateUserId_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: ChildCcreateUserId
      /// Domain: Text
      /// Length: 8
      /// Varying Length: N
      /// </summary>
      private string _ChildCcreateUserId;
      /// <summary>
      /// Attribute for: ChildCcreateUserId
      /// </summary>
      public string ChildCcreateUserId {
        get {
          return(_ChildCcreateUserId);
        }
        set {
          _ChildCcreateUserId = value;
        }
      }
      /// <summary>
      /// Internal storage for attribute missing flag for: ChildCupdateUserId
      /// </summary>
      private char _ChildCupdateUserId_AS;
      /// <summary>
      /// Attribute missing flag for: ChildCupdateUserId
      /// </summary>
      public char ChildCupdateUserId_AS {
        get {
          return(_ChildCupdateUserId_AS);
        }
        set {
          _ChildCupdateUserId_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: ChildCupdateUserId
      /// Domain: Text
      /// Length: 8
      /// Varying Length: N
      /// </summary>
      private string _ChildCupdateUserId;
      /// <summary>
      /// Attribute for: ChildCupdateUserId
      /// </summary>
      public string ChildCupdateUserId {
        get {
          return(_ChildCupdateUserId);
        }
        set {
          _ChildCupdateUserId = value;
        }
      }
      /// <summary>
      /// Internal storage for attribute missing flag for: ChildCparentPkeyAttrText
      /// </summary>
      private char _ChildCparentPkeyAttrText_AS;
      /// <summary>
      /// Attribute missing flag for: ChildCparentPkeyAttrText
      /// </summary>
      public char ChildCparentPkeyAttrText_AS {
        get {
          return(_ChildCparentPkeyAttrText_AS);
        }
        set {
          _ChildCparentPkeyAttrText_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: ChildCparentPkeyAttrText
      /// Domain: Text
      /// Length: 5
      /// Varying Length: N
      /// </summary>
      private string _ChildCparentPkeyAttrText;
      /// <summary>
      /// Attribute for: ChildCparentPkeyAttrText
      /// </summary>
      public string ChildCparentPkeyAttrText {
        get {
          return(_ChildCparentPkeyAttrText);
        }
        set {
          _ChildCparentPkeyAttrText = value;
        }
      }
      /// <summary>
      /// Internal storage for attribute missing flag for: ChildCkeyAttrNum
      /// </summary>
      private char _ChildCkeyAttrNum_AS;
      /// <summary>
      /// Attribute missing flag for: ChildCkeyAttrNum
      /// </summary>
      public char ChildCkeyAttrNum_AS {
        get {
          return(_ChildCkeyAttrNum_AS);
        }
        set {
          _ChildCkeyAttrNum_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: ChildCkeyAttrNum
      /// Domain: Number
      /// Length: 6
      /// Decimal Places: 0
      /// Decimal Precision: N
      /// </summary>
      private int _ChildCkeyAttrNum;
      /// <summary>
      /// Attribute for: ChildCkeyAttrNum
      /// </summary>
      public int ChildCkeyAttrNum {
        get {
          return(_ChildCkeyAttrNum);
        }
        set {
          _ChildCkeyAttrNum = value;
        }
      }
      /// <summary>
      /// Internal storage for attribute missing flag for: ChildCsearchAttrText
      /// </summary>
      private char _ChildCsearchAttrText_AS;
      /// <summary>
      /// Attribute missing flag for: ChildCsearchAttrText
      /// </summary>
      public char ChildCsearchAttrText_AS {
        get {
          return(_ChildCsearchAttrText_AS);
        }
        set {
          _ChildCsearchAttrText_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: ChildCsearchAttrText
      /// Domain: Text
      /// Length: 25
      /// Varying Length: N
      /// </summary>
      private string _ChildCsearchAttrText;
      /// <summary>
      /// Attribute for: ChildCsearchAttrText
      /// </summary>
      public string ChildCsearchAttrText {
        get {
          return(_ChildCsearchAttrText);
        }
        set {
          _ChildCsearchAttrText = value;
        }
      }
      /// <summary>
      /// Internal storage for attribute missing flag for: ChildCotherAttrText
      /// </summary>
      private char _ChildCotherAttrText_AS;
      /// <summary>
      /// Attribute missing flag for: ChildCotherAttrText
      /// </summary>
      public char ChildCotherAttrText_AS {
        get {
          return(_ChildCotherAttrText_AS);
        }
        set {
          _ChildCotherAttrText_AS = value;
        }
      }
      /// <summary>
      /// Internal storage, attribute for: ChildCotherAttrText
      /// Domain: Text
      /// Length: 25
      /// Varying Length: N
      /// </summary>
      private string _ChildCotherAttrText;
      /// <summary>
      /// Attribute for: ChildCotherAttrText
      /// </summary>
      public string ChildCotherAttrText {
        get {
          return(_ChildCotherAttrText);
        }
        set {
          _ChildCotherAttrText = value;
        }
      }
      /// <summary>
      /// Default Constructor
      /// </summary>
      
      public DYYY0251_EA(  )
      {
        Reset(  );
      }
      /// <summary>
      /// Copy Constructor
      /// </summary>
      
      public DYYY0251_EA( DYYY0251_EA orig )
      {
        ChildCinstanceId_AS = orig.ChildCinstanceId_AS;
        ChildCinstanceId = orig.ChildCinstanceId;
        ChildCreferenceId_AS = orig.ChildCreferenceId_AS;
        ChildCreferenceId = orig.ChildCreferenceId;
        ChildCcreateUserId_AS = orig.ChildCcreateUserId_AS;
        ChildCcreateUserId = orig.ChildCcreateUserId;
        ChildCupdateUserId_AS = orig.ChildCupdateUserId_AS;
        ChildCupdateUserId = orig.ChildCupdateUserId;
        ChildCparentPkeyAttrText_AS = orig.ChildCparentPkeyAttrText_AS;
        ChildCparentPkeyAttrText = orig.ChildCparentPkeyAttrText;
        ChildCkeyAttrNum_AS = orig.ChildCkeyAttrNum_AS;
        ChildCkeyAttrNum = orig.ChildCkeyAttrNum;
        ChildCsearchAttrText_AS = orig.ChildCsearchAttrText_AS;
        ChildCsearchAttrText = orig.ChildCsearchAttrText;
        ChildCotherAttrText_AS = orig.ChildCotherAttrText_AS;
        ChildCotherAttrText = orig.ChildCotherAttrText;
      }
      /// <summary>
      /// clone constructor
      /// </summary>
      
      public override Object Clone(  )
      {
        return(new DYYY0251_EA(this));
      }
      /// <summary>
      /// Resets all properties to the defaults.
      /// </summary>
      
      public void Reset(  )
      {
        ChildCinstanceId_AS = ' ';
        ChildCinstanceId = "00000000000000000000";
        ChildCreferenceId_AS = ' ';
        ChildCreferenceId = "00000000000000000000";
        ChildCcreateUserId_AS = ' ';
        ChildCcreateUserId = "        ";
        ChildCupdateUserId_AS = ' ';
        ChildCupdateUserId = "        ";
        ChildCparentPkeyAttrText_AS = ' ';
        ChildCparentPkeyAttrText = "     ";
        ChildCkeyAttrNum_AS = ' ';
        ChildCkeyAttrNum = 0;
        ChildCsearchAttrText_AS = ' ';
        ChildCsearchAttrText = "                         ";
        ChildCotherAttrText_AS = ' ';
        ChildCotherAttrText = "                         ";
      }
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ENTITY ACTION VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    DYYY0251_EA WEa = new DYYY0251_EA();
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // LOCAL VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    DYYY0251_LA WLa;
    
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // HOST VARIABLES FOR TABLE: VDVYYYC
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    int CkeyAttr_001EF;
    int CkeyAttr_002EN;
    string CsearchAttr_003EF;
    string CsearchAttr_004EN;
    string CotherAttr_005EF;
    string CotherAttr_006EN;
    string CcreateUserid_007EF;
    string CcreateUserid_008EN;
    string CupdateUserid_009EF;
    string CupdateUserid_010EN;
    DateTime CinstanceId_011EF;
    DateTime CinstanceId_012EN;
    DateTime CreferenceId_013EF;
    DateTime CreferenceId_014EN;
    string FkVdvyyyppkeyAtt_015EF;
    string FkVdvyyyppkeyAtt_016EN;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // TEMPORARY HOST VARIABLES 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    string CparentPkeyAttrText_001TP;
    int CkeyAttrNum_002TP;
    string CparentPkeyAttrText_003TP;
    int CkeyAttrNum_004TP;
    string CparentPkeyAttrText_005TP;
    int CkeyAttrNum_006TP;
    string CsearchAttrText_007TP;
    
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // REPEATING GROUP VIEW STATUS FIELDS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    bool ExpGroupList_FL_001;
    int ExpGroupList_PS_001;
    bool ExpGroupList_RF_001;
    public const int ExpGroupList_MM_001 = 48;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // MISC DECLARATIONS AND PROTOTYPES 
    //    FOLLOW AS NEEDED:             
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    bool func_0022020318_esc_flag;
    bool func_0020972777_esc_flag;
    bool read_each_0068158039_esc_flag;
    IAbstractCommand hstmt_0037881828_1_cmd;
    IAbstractResultSet hstmt_0037881828_1_rs;
    bool func_0020972788_esc_flag;
    bool read_each_0068157665_esc_flag;
    IAbstractCommand hstmt_0038075225_1_cmd;
    IAbstractResultSet hstmt_0038075225_1_rs;
    bool func_0020972439_esc_flag;
    bool func_0020971875_esc_flag;
    bool func_0020972547_esc_flag;
    bool func_0020972246_esc_flag;
    bool func_0020971976_esc_flag;
    bool func_0020972527_esc_flag;
    //       +->   DYYY0251_CHILD_LIST               01/09/2024  13:41
    //       !       IMPORTS:
    //       !         Work View imp_error iyy1_component (Transient,
    //       !                     Mandatory, Import only)
    //       !           severity_code
    //       !           rollback_indicator
    //       !           origin_servid
    //       !           context_string
    //       !           return_code
    //       !           reason_code
    //       !           checksum
    //       !         Work View imp_filter iyy1_list (Transient, Mandatory,
    //       !                     Import only)
    //       !           sort_option
    //       !           scroll_type
    //       !           list_direction
    //       !           scroll_amount
    //       !           order_by_field_num
    //       !         Entity View imp_from child (Transient, Mandatory,
    //       !                     Import only)
    //       !           cinstance_id
    //       !           cparent_pkey_attr_text
    //       !           ckey_attr_num
    //       !         Entity View imp_filter_start child (Transient,
    //       !                     Mandatory, Import only)
    //       !           cparent_pkey_attr_text
    //       !           ckey_attr_num
    //       !         Entity View imp_filter_stop child (Transient,
    //       !                     Mandatory, Import only)
    //       !           cparent_pkey_attr_text
    //       !           ckey_attr_num
    //       !         Entity View imp_filter child (Transient, Mandatory,
    //       !                     Import only)
    //       !           csearch_attr_text
    //       !       EXPORTS:
    //       !         Group View (48) exp_group_list
    //       !           Entity View exp_g_list child (Transient, Export only)
    //       !             cinstance_id
    //       !             creference_id
    //       !             ccreate_user_id
    //       !             cupdate_user_id
    //       !             cparent_pkey_attr_text
    //       !             ckey_attr_num
    //       !             csearch_attr_text
    //       !             cother_attr_text
    //       !         Work View exp_error iyy1_component (Transient, Export
    //       !                     only)
    //       !           severity_code
    //       !           rollback_indicator
    //       !           origin_servid
    //       !           context_string
    //       !           return_code
    //       !           reason_code
    //       !           checksum
    //       !       ENTITY ACTIONS:
    //       !         Entity View child
    //       !           cinstance_id
    //       !           creference_id
    //       !           ccreate_user_id
    //       !           cupdate_user_id
    //       !           cparent_pkey_attr_text
    //       !           ckey_attr_num
    //       !           csearch_attr_text
    //       !           cother_attr_text
    //       !       LOCALS:
    //       !         Work View loc_filter iyy1_list
    //       !           scroll_type
    //       !         Work View loc dont_change_return_codes
    //       !           1_ok
    //       !         Work View loc dont_change_reason_codes
    //       !           1_default
    //       !           11_list_full
    //       !           12_list_empty
    //       !
    //       !     PROCEDURE STATEMENTS
    //       !
    //     1 !  NOTE: 
    //     1 !  Amaç için açıklamaya bakınız
    //     1 !  
    //     2 !  NOTE: 
    //     2 !  RELEASE HISTORY
    //     2 !  01_00 23-02-1998 New release
    //     2 !  
    //     3 !  MOVE imp_error iyy1_component TO exp_error iyy1_component
    //     4 !   
    //     5 !  NOTE: 
    //     5 !  ****************************************************************
    //     5 !  The used ReturnCode/ReasonCode values
    //     5 !  
    //     6 !  NOTE: 
    //     6 !  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //     6 !  Set the return and reason codes below
    //     6 !  
    //     7 !  SET loc dont_change_return_codes 1_ok TO 1 
    //     8 !   
    //     9 !  SET loc dont_change_reason_codes 1_default TO 1 
    //    10 !  SET loc dont_change_reason_codes 11_list_full TO 11 
    //    11 !  SET loc dont_change_reason_codes 12_list_empty TO 12 
    //    12 !   
    //    13 !  NOTE: 
    //    13 !  ****************************************************************
    //    13 !  
    //    14 !  SET SUBSCRIPT OF exp_group_list TO 0 
    //    15 !  SET loc_filter iyy1_list scroll_type TO imp_filter iyy1_list
    //    15 !              scroll_type 
    //    16 !   
    //    17 !  +->CASE OF imp_filter iyy1_list sort_option
    //    17 !  +> CASE "ASC"
    //    18 !  !  NOTE: 
    //    18 ...!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //    18 ...!!!!!!!!!!!!!!!!!!!!!
    //    18 ...Choose General->Select Clause Isolation Level property as
    //    18 ..."Uncommitted / Browse" and 
    //    18 ...DB2 MVS (XDB)->Optimize for N rows property as "Use the
    //    18 ...value: 1".
    //    18 ...
    //    19 !  !  +=>READ EACH (Optimize 1, Isolation UR) child
    //    19 !  !  !        SORTED BY ASCENDING child cparent_pkey_attr_text
    //    19 !  !  !        
    //    19 !  !  !              AND SORTED BY ASCENDING child ckey_attr_num
    //    19 !  !  !        WHERE DESIRED child cparent_pkey_attr_text >=
    //    19 !  !  !              imp_from child cparent_pkey_attr_text  
    //    19 !  !  !              AND  (DESIRED child cparent_pkey_attr_text >
    //    19 !  !  !              imp_from child cparent_pkey_attr_text  
    //    19 !  !  !              OR  (DESIRED child cparent_pkey_attr_text =
    //    19 !  !  !              imp_from child cparent_pkey_attr_text  
    //    19 !  !  !              AND  DESIRED child ckey_attr_num >= imp_from
    //    19 !  !  !              child ckey_attr_num))  
    //    19 !  !  !              AND  (DESIRED child cparent_pkey_attr_text >
    //    19 !  !  !              imp_filter_start child
    //    19 !  !  !              cparent_pkey_attr_text  
    //    19 !  !  !              OR  (DESIRED child cparent_pkey_attr_text =
    //    19 !  !  !              imp_filter_start child
    //    19 !  !  !              cparent_pkey_attr_text  
    //    19 !  !  !              AND  DESIRED child ckey_attr_num >=
    //    19 !  !  !              imp_filter_start child ckey_attr_num))  
    //    19 !  !  !              AND  (DESIRED child cparent_pkey_attr_text <
    //    19 !  !  !              imp_filter_stop child cparent_pkey_attr_text
    //    19 !  !  !              OR  (DESIRED child cparent_pkey_attr_text =
    //    19 !  !  !              imp_filter_stop child cparent_pkey_attr_text
    //    19 !  !  !              AND  DESIRED child ckey_attr_num <=
    //    19 !  !  !              imp_filter_stop child ckey_attr_num))  
    //    19 !  !  !              AND  DESIRED child csearch_attr_text IS LIKE
    //    19 !  !  !              imp_filter child csearch_attr_text
    //    20 !  !  !  +->IF SUBSCRIPT OF exp_group_list < imp_filter iyy1_list
    //    20 !  !  !  !        scroll_amount
    //    21 !  !  !  !  +->IF loc_filter iyy1_list scroll_type = "S"
    //    22 !  !  !  !  !  SET loc_filter iyy1_list scroll_type TO SPACES 
    //    21 !  !  !  !  +> ELSE
    //    23 !  !  !  !  !  SET SUBSCRIPT OF exp_group_list TO SUBSCRIPT OF
    //    23 !  !  !  !  !              exp_group_list + 1 
    //    24 !  !  !  !  !  MOVE  child TO exp_g_list child
    //    21 !  !  !  !  +--
    //    20 !  !  !  +> ELSE
    //    25 !  !  !  !  SET exp_error iyy1_component reason_code TO loc
    //    25 !  !  !  !              dont_change_reason_codes 11_list_full 
    //    26 !  ! <------ESCAPE
    //    20 !  !  !  +--
    //    19 !  !  +--
    //    17 !  +> CASE "DES"
    //    27 !  !  NOTE: 
    //    27 ...!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //    27 ...!!!!!!!!!!!!!!!!!!!!!
    //    27 ...Choose General->Select Clause Isolation Level property as
    //    27 ..."Uncommitted / Browse" and 
    //    27 ...DB2 MVS (XDB)->Optimize for N rows property as "Use the
    //    27 ...value: 1".
    //    27 ...
    //    28 !  !  +=>READ EACH (Optimize 1, Isolation UR) child
    //    28 !  !  !        SORTED BY DESCENDING child cparent_pkey_attr_text
    //    28 !  !  !        
    //    28 !  !  !              AND SORTED BY DESCENDING child ckey_attr_num
    //    28 !  !  !        WHERE DESIRED child cparent_pkey_attr_text <=
    //    28 !  !  !              imp_from child cparent_pkey_attr_text  
    //    28 !  !  !              AND  (DESIRED child cparent_pkey_attr_text <
    //    28 !  !  !              imp_from child cparent_pkey_attr_text  
    //    28 !  !  !              OR  (DESIRED child cparent_pkey_attr_text =
    //    28 !  !  !              imp_from child cparent_pkey_attr_text  
    //    28 !  !  !              AND  DESIRED child ckey_attr_num <= imp_from
    //    28 !  !  !              child ckey_attr_num))  
    //    28 !  !  !              AND  (DESIRED child cparent_pkey_attr_text >
    //    28 !  !  !              imp_filter_start child
    //    28 !  !  !              cparent_pkey_attr_text  
    //    28 !  !  !              OR  (DESIRED child cparent_pkey_attr_text =
    //    28 !  !  !              imp_filter_start child
    //    28 !  !  !              cparent_pkey_attr_text  
    //    28 !  !  !              AND  DESIRED child ckey_attr_num >=
    //    28 !  !  !              imp_filter_start child ckey_attr_num))  
    //    28 !  !  !              AND  (DESIRED child cparent_pkey_attr_text <
    //    28 !  !  !              imp_filter_stop child cparent_pkey_attr_text
    //    28 !  !  !              OR  (DESIRED child cparent_pkey_attr_text =
    //    28 !  !  !              imp_filter_stop child cparent_pkey_attr_text
    //    28 !  !  !              AND  DESIRED child ckey_attr_num <=
    //    28 !  !  !              imp_filter_stop child ckey_attr_num))  
    //    28 !  !  !              AND  DESIRED child csearch_attr_text IS LIKE
    //    28 !  !  !              imp_filter child csearch_attr_text
    //    29 !  !  !  +->IF SUBSCRIPT OF exp_group_list < imp_filter iyy1_list
    //    29 !  !  !  !        scroll_amount
    //    30 !  !  !  !  +->IF loc_filter iyy1_list scroll_type = "S"
    //    31 !  !  !  !  !  SET loc_filter iyy1_list scroll_type TO SPACES 
    //    30 !  !  !  !  +> ELSE
    //    32 !  !  !  !  !  SET SUBSCRIPT OF exp_group_list TO SUBSCRIPT OF
    //    32 !  !  !  !  !              exp_group_list + 1 
    //    33 !  !  !  !  !  MOVE  child TO exp_g_list child
    //    30 !  !  !  !  +--
    //    29 !  !  !  +> ELSE
    //    34 !  !  !  !  SET exp_error iyy1_component reason_code TO loc
    //    34 !  !  !  !              dont_change_reason_codes 11_list_full 
    //    35 !  ! <------ESCAPE
    //    29 !  !  !  +--
    //    28 !  !  +--
    //    17 !  +> OTHERWISE
    //    17 !  +--
    //    36 !  +->IF LAST OF exp_group_list <= 0
    //    37 !  !  SET exp_error iyy1_component reason_code TO loc
    //    37 !  !              dont_change_reason_codes 12_list_empty 
    //    36 !  +--
    //       +---
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //  CONSTRUCTOR FOR THE CLASS       
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    public DYYY0251(  )
    {
      IefCGenRlse = "CA Gen 8.6";
      IsCopyright = "Copyright (c) 2024 CA Technologies. All rights reserved.";
      IefCGenDate = "2024/01/09";
      IefCGenTime = "13:41:11";
      IefCGenEncy = "9.2.A6";
      IefCGenUserId = "AliAl";
      IefCGenModel = "N8I_ORT_YYY_0112_TEMPLATE";
      IefCGenSubset = "ALL";
      IefCGenName = "DYYY0251_CHILD_LIST";
      NestingLevel = 0;
      ValChkDeadlockTimeout = false;
      ValChkDBError = false;
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ACTION BLOCK FUNCTION DECLARATIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void Execute( Object in_runtime_parm1, 
    	IRuntimePStepContext in_runtime_parm2, 
    	GlobData in_globdata, 
    	DYYY0251_IA import_view, 
    	DYYY0251_OA export_view )
    {
      IefRuntimeParm1 = in_runtime_parm1;
      IefRuntimeParm2 = in_runtime_parm2;
      Globdata = in_globdata;
      WIa = import_view;
      WOa = export_view;
      _Execute();
    }
    
    private void _Execute()
    {
      
      f_22020318_localAlloc( "DYYY0251_CHILD_LIST" );
      if ( Globdata.GetErrorData().GetLastStatus() == ErrorData.LastStatusIefAllocationError )
      	return;
      
      ++(NestingLevel);
      try {
        f_22020318_init(  );
        f_22020318(  );
      } catch( Exception e ) {
        if ( ((Globdata.GetErrorData().GetStatus() == ErrorData.StatusNone) && (Globdata.GetErrorData().GetErrorEncountered() == 
          ErrorData.ErrorEncounteredNoErrorFound)) && (Globdata.GetErrorData().GetViewOverflow() == 
          ErrorData.ErrorEncounteredNoErrorFound) )
        {
          Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
          Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusUnexpectedExceptionError );
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
          Globdata.GetErrorData(  ).SetErrorMessage( e );
        }
      }
      --(NestingLevel);
    }
    public void f_22020318(  )
    {
      func_0022020318_esc_flag = false;
      Globdata.GetStateData().SetCurrentABId( "0022020318" );
      Globdata.GetStateData().SetCurrentABName( "DYYY0251_CHILD_LIST" );
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    Amaç için açıklamaya bakınız                                    
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    RELEASE HISTORY                                                 
      //    01_00 23-02-1998 New release                                    
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000003" );
      WOa.ExpErrorIyy1ComponentSeverityCode = FixedStringAttr.ValueOf(WIa.ImpErrorIyy1ComponentSeverityCode, 1);
      WOa.ExpErrorIyy1ComponentRollbackIndicator = FixedStringAttr.ValueOf(WIa.ImpErrorIyy1ComponentRollbackIndicator, 1);
      WOa.ExpErrorIyy1ComponentOriginServid = DoubleAttr.ValueOf(WIa.ImpErrorIyy1ComponentOriginServid);
      WOa.ExpErrorIyy1ComponentContextString = StringAttr.ValueOf(WIa.ImpErrorIyy1ComponentContextString, 512);
      WOa.ExpErrorIyy1ComponentReturnCode = IntAttr.ValueOf(WIa.ImpErrorIyy1ComponentReturnCode);
      WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf(WIa.ImpErrorIyy1ComponentReasonCode);
      WOa.ExpErrorIyy1ComponentChecksum = FixedStringAttr.ValueOf(WIa.ImpErrorIyy1ComponentChecksum, 15);
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //    The used ReturnCode/ReasonCode values                           
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
      //    !!                                                              
      //    Set the return and reason codes below                           
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000007" );
      WLa.LocDontChangeReturnCodesQ1Ok = IntAttr.ValueOf((int)TIRD2DEC.Execute1(1, 0, TIRD2DEC.ROUND_NONE, 5));
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000009" );
      WLa.LocDontChangeReasonCodesQ1Default = IntAttr.ValueOf((int)TIRD2DEC.Execute1(1, 0, TIRD2DEC.ROUND_NONE, 5));
      Globdata.GetStateData().SetLastStatementNumber( "0000000010" );
      WLa.LocDontChangeReasonCodesQ11ListFull = IntAttr.ValueOf((int)TIRD2DEC.Execute1(11, 0, TIRD2DEC.ROUND_NONE, 5));
      Globdata.GetStateData().SetLastStatementNumber( "0000000011" );
      WLa.LocDontChangeReasonCodesQ12ListEmpty = IntAttr.ValueOf((int)TIRD2DEC.Execute1(12, 0, TIRD2DEC.ROUND_NONE, 5));
      
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      //    **************************************************************  
      //    **                                                              
      //                                                                    
      // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      Globdata.GetStateData().SetLastStatementNumber( "0000000014" );
      ExpGroupList_PS_001 = (int)TIRD2DEC.Execute1(0, 0, TIRD2DEC.ROUND_NONE, 0);
      if ( (ExpGroupList_PS_001 > WOa.ExpGroupList_MA) && (ExpGroupList_PS_001 <= 48) )
      WOa.ExpGroupList_MA = IntAttr.ValueOf(ExpGroupList_PS_001);
      Globdata.GetStateData().SetLastStatementNumber( "0000000015" );
      WLa.LocFilterIyy1ListScrollType = FixedStringAttr.ValueOf(WIa.ImpFilterIyy1ListScrollType, 1);
      
      Globdata.GetStateData().SetLastStatementNumber( "0000000017" );
      if ( CompareExit.CompareTo(WIa.ImpFilterIyy1ListSortOption, "ASC") == 0 )
      {
        Globdata.GetStateData().SetLastSubStatementNumber( "1" );
        {
          f_20972777(  );
        }
      }
      else if ( CompareExit.CompareTo(WIa.ImpFilterIyy1ListSortOption, "DES") == 0 )
      {
        Globdata.GetStateData().SetLastSubStatementNumber( "2" );
        {
          f_20972788(  );
        }
      }
      else {
        Globdata.GetStateData().SetLastSubStatementNumber( "3" );
        {
          // Empty statement here.
          ;
        }
      }
      Globdata.GetStateData().SetLastStatementNumber( "0000000036" );
      if ( ((double)WOa.ExpGroupList_MA <= 0) )
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000037" );
        WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
          WLa.LocDontChangeReasonCodesQ12ListEmpty, 0, TIRD2DEC.ROUND_NONE, 5));
      }
      
      return;
    }
    
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // SUBORDINATE FUNCTIONS
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    
    public void f_20972777(  )
    {
      func_0020972777_esc_flag = false;
      {
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
        //    !!!!!!!!!!!!!!!!!!!!!                                           
        //    Choose General->Select Clause Isolation Level property as       
        //    "Uncommitted / Browse" and                                      
        //    DB2 MVS (XDB)->Optimize for N rows property as "Use the         
        //    value: 1".                                                      
        //                                                                    
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        sl_29360156 = ErrorData.LastStatusNotFound;
        Globdata.GetStateData().SetLastStatementNumber( "0000000019" );
        read_each_0068158039_esc_flag = false;
        f_29360156_open(  );
        if ( sl_29360156 == ErrorData.LastStatusSucceeds )
        {
          f_29360156_fetch(  );
          while ((sl_29360156 == ErrorData.LastStatusSucceeds == true) && (read_each_0068158039_esc_flag != true))
          {
            {
              f_20972439(  );
            }
            Globdata.GetStateData().SetLastStatementNumber( "0000000019" );
            if ( read_each_0068158039_esc_flag != true )
            f_29360156_fetch(  );
          }
          if ( read_each_0068158039_esc_flag != true )
          {
            if ( !((sl_29360156 == ErrorData.LastStatusSucceeds == false) && (sl_29360156 == ErrorData.LastStatusNotFound == false)) 
              )
            {
              f_29360156_esc_close(  );
            }
            f_29360156_close(  );
          }
        }
        if ( (sl_29360156 == ErrorData.LastStatusSucceeds == false) && (sl_29360156 == ErrorData.LastStatusNotFound == false) )
        {
          Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
          Globdata.GetErrorData().SetLastStatus( sl_29360156 );
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
          throw new ABException();
        }
      }
      f_0020972777_esctag: 
      ;
      return;
    }
    
    public void f_20972788(  )
    {
      func_0020972788_esc_flag = false;
      {
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        //    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
        //    !!!!!!!!!!!!!!!!!!!!!                                           
        //    Choose General->Select Clause Isolation Level property as       
        //    "Uncommitted / Browse" and                                      
        //    DB2 MVS (XDB)->Optimize for N rows property as "Use the         
        //    value: 1".                                                      
        //                                                                    
        // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        sl_29360170 = ErrorData.LastStatusNotFound;
        Globdata.GetStateData().SetLastStatementNumber( "0000000028" );
        read_each_0068157665_esc_flag = false;
        f_29360170_open(  );
        if ( sl_29360170 == ErrorData.LastStatusSucceeds )
        {
          f_29360170_fetch(  );
          while ((sl_29360170 == ErrorData.LastStatusSucceeds == true) && (read_each_0068157665_esc_flag != true))
          {
            {
              f_20971875(  );
            }
            Globdata.GetStateData().SetLastStatementNumber( "0000000028" );
            if ( read_each_0068157665_esc_flag != true )
            f_29360170_fetch(  );
          }
          if ( read_each_0068157665_esc_flag != true )
          {
            if ( !((sl_29360170 == ErrorData.LastStatusSucceeds == false) && (sl_29360170 == ErrorData.LastStatusNotFound == false)) 
              )
            {
              f_29360170_esc_close(  );
            }
            f_29360170_close(  );
          }
        }
        if ( (sl_29360170 == ErrorData.LastStatusSucceeds == false) && (sl_29360170 == ErrorData.LastStatusNotFound == false) )
        {
          Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
          Globdata.GetErrorData().SetLastStatus( sl_29360170 );
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
          throw new ABException();
        }
      }
      f_0020972788_esctag: 
      ;
      return;
    }
    
    public void f_20972439(  )
    {
      func_0020972439_esc_flag = false;
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000020" );
        if ( (ExpGroupList_PS_001 < (double) WIa.ImpFilterIyy1ListScrollAmount) )
        {
          f_20972547(  );
        }
        else 
        {
          Globdata.GetStateData().SetLastSubStatementNumber( "1" );
          {
            f_20972246(  );
          }
        }
        
      }
      f_0020972439_esctag: 
      ;
      return;
    }
    
    public void f_20971875(  )
    {
      func_0020971875_esc_flag = false;
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000029" );
        if ( (ExpGroupList_PS_001 < (double) WIa.ImpFilterIyy1ListScrollAmount) )
        {
          f_20971976(  );
        }
        else 
        {
          Globdata.GetStateData().SetLastSubStatementNumber( "1" );
          {
            f_20972527(  );
          }
        }
        
      }
      f_0020971875_esctag: 
      ;
      return;
    }
    
    public void f_20972547(  )
    {
      func_0020972547_esc_flag = false;
      Globdata.GetStateData().SetLastStatementNumber( "0000000021" );
      if ( CompareExit.CompareTo(WLa.LocFilterIyy1ListScrollType, "S") == 0 )
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000022" );
        WLa.LocFilterIyy1ListScrollType = FixedStringAttr.ValueOf(Spaces, 1);
      }
      else 
      {
        Globdata.GetStateData().SetLastSubStatementNumber( "1" );
        {
          Globdata.GetStateData().SetLastStatementNumber( "0000000023" );
          ExpGroupList_PS_001 = (int)TIRD2DEC.Execute1(((double)ExpGroupList_PS_001 + 1), 0, TIRD2DEC.ROUND_NONE, 0);
          if ( (ExpGroupList_PS_001 > WOa.ExpGroupList_MA) && (ExpGroupList_PS_001 <= 48) )
          WOa.ExpGroupList_MA = IntAttr.ValueOf(ExpGroupList_PS_001);
          Globdata.GetStateData().SetLastStatementNumber( "0000000024" );
          f_173015114_rgvc(  );
          WOa.ExpGListChildCinstanceId[ExpGroupList_PS_001-1] = TimestampAttr.ValueOf(WEa.ChildCinstanceId);
          WOa.ExpGListChildCreferenceId[ExpGroupList_PS_001-1] = TimestampAttr.ValueOf(WEa.ChildCreferenceId);
          WOa.ExpGListChildCcreateUserId[ExpGroupList_PS_001-1] = FixedStringAttr.ValueOf(WEa.ChildCcreateUserId, 8);
          WOa.ExpGListChildCupdateUserId[ExpGroupList_PS_001-1] = FixedStringAttr.ValueOf(WEa.ChildCupdateUserId, 8);
          WOa.ExpGListChildCparentPkeyAttrText[ExpGroupList_PS_001-1] = FixedStringAttr.ValueOf(WEa.ChildCparentPkeyAttrText, 5);
          WOa.ExpGListChildCkeyAttrNum[ExpGroupList_PS_001-1] = IntAttr.ValueOf(WEa.ChildCkeyAttrNum);
          WOa.ExpGListChildCsearchAttrText[ExpGroupList_PS_001-1] = FixedStringAttr.ValueOf(WEa.ChildCsearchAttrText, 25);
          WOa.ExpGListChildCotherAttrText[ExpGroupList_PS_001-1] = FixedStringAttr.ValueOf(WEa.ChildCotherAttrText, 25);
        }
      }
      
      return;
    }
    
    public void f_20972246(  )
    {
      func_0020972246_esc_flag = false;
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000025" );
        WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
          WLa.LocDontChangeReasonCodesQ11ListFull, 0, TIRD2DEC.ROUND_NONE, 5));
        Globdata.GetStateData().SetLastStatementNumber( "0000000026" );
        func_0020972246_esc_flag = true;
        func_0020972439_esc_flag = true;
        f_29360156_esc_close(  );
        read_each_0068158039_esc_flag = true;
      }
      f_0020972246_esctag: 
      ;
      return;
    }
    
    public void f_20971976(  )
    {
      func_0020971976_esc_flag = false;
      Globdata.GetStateData().SetLastStatementNumber( "0000000030" );
      if ( CompareExit.CompareTo(WLa.LocFilterIyy1ListScrollType, "S") == 0 )
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000031" );
        WLa.LocFilterIyy1ListScrollType = FixedStringAttr.ValueOf(Spaces, 1);
      }
      else 
      {
        Globdata.GetStateData().SetLastSubStatementNumber( "1" );
        {
          Globdata.GetStateData().SetLastStatementNumber( "0000000032" );
          ExpGroupList_PS_001 = (int)TIRD2DEC.Execute1(((double)ExpGroupList_PS_001 + 1), 0, TIRD2DEC.ROUND_NONE, 0);
          if ( (ExpGroupList_PS_001 > WOa.ExpGroupList_MA) && (ExpGroupList_PS_001 <= 48) )
          WOa.ExpGroupList_MA = IntAttr.ValueOf(ExpGroupList_PS_001);
          Globdata.GetStateData().SetLastStatementNumber( "0000000033" );
          f_173015114_rgvc(  );
          WOa.ExpGListChildCinstanceId[ExpGroupList_PS_001-1] = TimestampAttr.ValueOf(WEa.ChildCinstanceId);
          WOa.ExpGListChildCreferenceId[ExpGroupList_PS_001-1] = TimestampAttr.ValueOf(WEa.ChildCreferenceId);
          WOa.ExpGListChildCcreateUserId[ExpGroupList_PS_001-1] = FixedStringAttr.ValueOf(WEa.ChildCcreateUserId, 8);
          WOa.ExpGListChildCupdateUserId[ExpGroupList_PS_001-1] = FixedStringAttr.ValueOf(WEa.ChildCupdateUserId, 8);
          WOa.ExpGListChildCparentPkeyAttrText[ExpGroupList_PS_001-1] = FixedStringAttr.ValueOf(WEa.ChildCparentPkeyAttrText, 5);
          WOa.ExpGListChildCkeyAttrNum[ExpGroupList_PS_001-1] = IntAttr.ValueOf(WEa.ChildCkeyAttrNum);
          WOa.ExpGListChildCsearchAttrText[ExpGroupList_PS_001-1] = FixedStringAttr.ValueOf(WEa.ChildCsearchAttrText, 25);
          WOa.ExpGListChildCotherAttrText[ExpGroupList_PS_001-1] = FixedStringAttr.ValueOf(WEa.ChildCotherAttrText, 25);
        }
      }
      
      return;
    }
    
    public void f_20972527(  )
    {
      func_0020972527_esc_flag = false;
      {
        Globdata.GetStateData().SetLastStatementNumber( "0000000034" );
        WOa.ExpErrorIyy1ComponentReasonCode = IntAttr.ValueOf((int)TIRD2DEC.Execute1((double) 
          WLa.LocDontChangeReasonCodesQ11ListFull, 0, TIRD2DEC.ROUND_NONE, 5));
        Globdata.GetStateData().SetLastStatementNumber( "0000000035" );
        func_0020972527_esc_flag = true;
        func_0020971875_esc_flag = true;
        f_29360170_esc_close(  );
        read_each_0068157665_esc_flag = true;
      }
      f_0020972527_esctag: 
      ;
      return;
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // INITIALIZATION UTILITY FUNCTIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void f_22020318_localAlloc( String abname )
    {
      // Request localview allocation 
      WLa = (GEN.ORT.YYY.DYYY0251_LA)(IefRuntimeParm2.GetInstance( GetType().Assembly,
      	"GEN.ORT.YYY.DYYY0251_LA" ));
      if ( WLa == null )
      {
        Globdata.GetStateData().SetCurrentABId( "0022020318" );
        Globdata.GetStateData().SetCurrentABName( abname );
        Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
        Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusIefAllocationError );
      }
    }
    
    public void f_22020318_init(  )
    {
      
      CkeyAttr_001EF = 0;
      CkeyAttr_002EN = 0;
      CsearchAttr_003EF = Spaces;
      CsearchAttr_004EN = Spaces;
      CotherAttr_005EF = Spaces;
      CotherAttr_006EN = Spaces;
      CcreateUserid_007EF = Spaces;
      CcreateUserid_008EN = Spaces;
      CupdateUserid_009EF = Spaces;
      CupdateUserid_010EN = Spaces;
      CinstanceId_011EF = TIRVW2S.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	"00010101000000000000" );
      CinstanceId_012EN = TIRVW2S.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	"00010101000000000000" );
      CreferenceId_013EF = TIRVW2S.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	"00010101000000000000" );
      CreferenceId_014EN = TIRVW2S.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	"00010101000000000000" );
      FkVdvyyyppkeyAtt_015EF = Spaces;
      FkVdvyyyppkeyAtt_016EN = Spaces;
      if ( NestingLevel < 2 )
      {
        WLa.Reset();
      }
      WEa.Reset();
      WOa.ExpGroupList_MA = 0;
      for(ExpGroupList_PS_001 = 1; ExpGroupList_PS_001 <= 48; ++(ExpGroupList_PS_001))
      {
        WOa.ExpGListChildCinstanceId[ExpGroupList_PS_001-1] = "00000000000000000000";
        WOa.ExpGListChildCreferenceId[ExpGroupList_PS_001-1] = "00000000000000000000";
        WOa.ExpGListChildCcreateUserId[ExpGroupList_PS_001-1] = "        ";
        WOa.ExpGListChildCupdateUserId[ExpGroupList_PS_001-1] = "        ";
        WOa.ExpGListChildCparentPkeyAttrText[ExpGroupList_PS_001-1] = "     ";
        WOa.ExpGListChildCkeyAttrNum[ExpGroupList_PS_001-1] = 0;
        WOa.ExpGListChildCsearchAttrText[ExpGroupList_PS_001-1] = "                         ";
        WOa.ExpGListChildCotherAttrText[ExpGroupList_PS_001-1] = "                         ";
      }
      WOa.ExpErrorIyy1ComponentSeverityCode = " ";
      WOa.ExpErrorIyy1ComponentRollbackIndicator = " ";
      WOa.ExpErrorIyy1ComponentOriginServid = 0.0;
      WOa.ExpErrorIyy1ComponentContextString = "";
      WOa.ExpErrorIyy1ComponentReturnCode = 0;
      WOa.ExpErrorIyy1ComponentReasonCode = 0;
      WOa.ExpErrorIyy1ComponentChecksum = "               ";
      Child_es = ABBase.EvUnusable;
      Child_lk = ABBase.EvwUnlocked;
      WEa.ChildCinstanceId = "00000000000000000000";
      WEa.ChildCreferenceId = "00000000000000000000";
      ExpGroupList_PS_001 = 1;
    }
    public void f_29360156_open(  )
    {
      sl_29360156 = ErrorData.LastStatusSucceeds;
      Child_001cd = ABBase.PvSelect;
      Child_lk = ABBase.EvwUnlocked;
      f_29360156_moveb(  );
      
      if ( sl_29360156 == ErrorData.LastStatusSucceeds )
      {
        ValChkDeadlockTimeout = false;
        ValChkDBError = false;
        Child_es = ABBase.EvUsable;
        DataException = null;
        try {
          if ( hstmt_0037881828_1_cmd == null )
          {
            SQLStatement.Length = 0;
            
            SQLStatement.Append("SELECT ");
            SQLStatement.Append("VDVYYYC01.`CINSTANCE_ID`,");
            SQLStatement.Append("VDVYYYC01.`CREFERENCE_ID`,");
            SQLStatement.Append("VDVYYYC01.`CCREATE_USERID`,");
            SQLStatement.Append("VDVYYYC01.`CUPDATE_USERID`,");
            SQLStatement.Append("VDVYYYC01.`FK_VDVYYYPPKEY_ATT`,");
            SQLStatement.Append("VDVYYYC01.`CKEY_ATTR`,");
            SQLStatement.Append("VDVYYYC01.`CSEARCH_ATTR`,");
            SQLStatement.Append("VDVYYYC01.`COTHER_ATTR`");
            SQLStatement.Append(" FROM ");
            SQLStatement.Append("`VDVYYYC` VDVYYYC01");
            SQLStatement.Append(" WHERE ");
            SQLStatement.Append("(");
            SQLStatement.Append(
"VDVYYYC01.`FK_VDVYYYPPKEY_ATT` >= ? AND (VDVYYYC01.`FK_VDVYYYPPKEY_ATT` > ? OR (VDVYYYC01.`FK_VDVYYYPPKEY_ATT` = ? AND VDVYYYC01.`CKEY_ATTR` >= ?)) AND (VDVYYYC01.`FK_VDVYYYPPKEY_ATT` > ? OR (VDVYYYC01.`FK_VDVYYYPPKEY_ATT` = ? AND VDVYYYC01.`CKEY_ATTR` >= "
              );
            SQLStatement.Append(
"?)) AND (VDVYYYC01.`FK_VDVYYYPPKEY_ATT` < ? OR (VDVYYYC01.`FK_VDVYYYPPKEY_ATT` = ? AND VDVYYYC01.`CKEY_ATTR` <= ?)) AND VDVYYYC01.`CSEARCH_ATTR` LIKE ?"
              );
            SQLStatement.Append(")");
            SQLStatement.Append("  ORDER BY 5 ASC ,");
            SQLStatement.Append(" 6 ASC ");
            if ( Globdata.GetDBMSData().GetDBMSManager().IsDBMS(IefRuntimeParm2, "IEFDB", "DB2") )
            {
              SQLStatement.Append(" WITH UR ");
            }
            hstmt_0037881828_1_cmd = Globdata.GetDBMSData().GetDBMSManager().GetCommand(Globdata, IefRuntimeParm2, "IEFDB", 
              SQLStatement.ToString());
            hstmt_0037881828_1_cmd.InsertParameter();
            hstmt_0037881828_1_cmd.InsertParameter();
            hstmt_0037881828_1_cmd.InsertParameter();
            hstmt_0037881828_1_cmd.InsertParameter();
            hstmt_0037881828_1_cmd.InsertParameter();
            hstmt_0037881828_1_cmd.InsertParameter();
            hstmt_0037881828_1_cmd.InsertParameter();
            hstmt_0037881828_1_cmd.InsertParameter();
            hstmt_0037881828_1_cmd.InsertParameter();
            hstmt_0037881828_1_cmd.InsertParameter();
            hstmt_0037881828_1_cmd.InsertParameter();
          }
          hstmt_0037881828_1_cmd.BindParameter(0, CparentPkeyAttrText_001TP);
          hstmt_0037881828_1_cmd.BindParameter(1, CparentPkeyAttrText_001TP);
          hstmt_0037881828_1_cmd.BindParameter(2, CparentPkeyAttrText_001TP);
          hstmt_0037881828_1_cmd.BindParameter(3, CkeyAttrNum_002TP);
          hstmt_0037881828_1_cmd.BindParameter(4, CparentPkeyAttrText_003TP);
          hstmt_0037881828_1_cmd.BindParameter(5, CparentPkeyAttrText_003TP);
          hstmt_0037881828_1_cmd.BindParameter(6, CkeyAttrNum_004TP);
          hstmt_0037881828_1_cmd.BindParameter(7, CparentPkeyAttrText_005TP);
          hstmt_0037881828_1_cmd.BindParameter(8, CparentPkeyAttrText_005TP);
          hstmt_0037881828_1_cmd.BindParameter(9, CkeyAttrNum_006TP);
          hstmt_0037881828_1_cmd.BindParameter(10, CsearchAttrText_007TP);
          hstmt_0037881828_1_rs = hstmt_0037881828_1_cmd.ExecuteQuery(  );
        } catch( Exception e ) {
          DataException = e;
        }
        if ( !((Globdata.GetDBMSData().GetDBMSManager().WasSuccessful(DataException))) )
        {
             f_29360156_adonet_dberror(  );
        }
      }
    }
    
    public void f_29360156_fetch(  )
    {
      DataException = null;
      try {
        if ( hstmt_0037881828_1_rs.MoveNext(  ) == false )
        {
          throw new Exception("No data found");
        }
        CinstanceId_011EF = Globdata.GetDBMSData().GetDBMSManager().GetDateTime(IefRuntimeParm2, "IEFDB", 
          hstmt_0037881828_1_rs.GetValue(0));
        CreferenceId_013EF = Globdata.GetDBMSData().GetDBMSManager().GetDateTime(IefRuntimeParm2, "IEFDB", 
          hstmt_0037881828_1_rs.GetValue(1));
        CcreateUserid_007EF = Globdata.GetDBMSData().GetDBMSManager().GetString(IefRuntimeParm2, "IEFDB", 
          hstmt_0037881828_1_rs.GetValue(2));
        CupdateUserid_009EF = Globdata.GetDBMSData().GetDBMSManager().GetString(IefRuntimeParm2, "IEFDB", 
          hstmt_0037881828_1_rs.GetValue(3));
        FkVdvyyyppkeyAtt_015EF = Globdata.GetDBMSData().GetDBMSManager().GetString(IefRuntimeParm2, "IEFDB", 
          hstmt_0037881828_1_rs.GetValue(4));
        CkeyAttr_001EF = Globdata.GetDBMSData().GetDBMSManager().GetInt32(IefRuntimeParm2, "IEFDB", hstmt_0037881828_1_rs.GetValue(5)
          );
        CsearchAttr_003EF = Globdata.GetDBMSData().GetDBMSManager().GetString(IefRuntimeParm2, "IEFDB", 
          hstmt_0037881828_1_rs.GetValue(6));
        CotherAttr_005EF = Globdata.GetDBMSData().GetDBMSManager().GetString(IefRuntimeParm2, "IEFDB", 
          hstmt_0037881828_1_rs.GetValue(7));
      } catch( Exception e ) {
        DataException = e;
      }
      
      if ( Globdata.GetDBMSData().GetDBMSManager().WasSuccessful(DataException) )
      {
        f_29360156_movea(  );
        if ( sl_29360156 == ErrorData.LastStatusSucceeds )
        {
          Child_es = ABBase.EvUsable;
        }
        else {
          Child_es = ABBase.EvUnusable;
        }
      }
      else if ( Globdata.GetDBMSData().GetDBMSManager().WasNoDataFound(DataException) )
      {
        sl_29360156 = ErrorData.LastStatusNotFound;
        Child_es = ABBase.EvUnusable;
      }
      else {
        f_29360156_adonet_dberror(  );
      }
    }
    
    public void f_29360156_esc_close(  )
    {
      try {
        if ( hstmt_0037881828_1_rs != null )
        {
          hstmt_0037881828_1_rs.Close(  );
          hstmt_0037881828_1_rs = null;
        }
        if ( hstmt_0037881828_1_cmd != null )
        {
          hstmt_0037881828_1_cmd.Close(  );
          hstmt_0037881828_1_cmd = null;
        }
      } catch( Exception e ) {
        if ( Globdata.GetDBMSData().GetDBMSManager().WasSuccessful(e) == false )
        {
          DataException = e;
          f_29360156_adonet_dberror(  );
        }
      }
    }
    public void f_29360156_close(  )
    {
      Child_es = ABBase.EvUnusable;
    }
    
    public void f_29360156_adonet_dberror(  )
    {
      Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
      Globdata.GetDBMSData().SetActionId( 19 );
      if ( DataException != null )
      {
        Globdata.GetErrorData(  ).SetErrorMessage( DataException );
      }
      Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusDbError );
      sl_29360156 = Globdata.GetErrorData().GetLastStatus();
      throw new ABException();
    }
    
    public void f_29360156_moveb(  )
    {
      CparentPkeyAttrText_001TP = WIa.ImpFromChildCparentPkeyAttrText;
      CparentPkeyAttrText_001TP = WIa.ImpFromChildCparentPkeyAttrText;
      CkeyAttrNum_002TP = WIa.ImpFromChildCkeyAttrNum;
      CparentPkeyAttrText_003TP = WIa.ImpFilterStartChildCparentPkeyAttrText;
      CkeyAttrNum_004TP = WIa.ImpFilterStartChildCkeyAttrNum;
      CparentPkeyAttrText_005TP = WIa.ImpFilterStopChildCparentPkeyAttrText;
      CkeyAttrNum_006TP = WIa.ImpFilterStopChildCkeyAttrNum;
      CsearchAttrText_007TP = WIa.ImpFilterChildCsearchAttrText;
    }
    
    public void f_29360156_movea(  )
    {
      WEa.ChildCinstanceId = TimestampAttr.ValueOf(TIRS2VW.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	CinstanceId_011EF ));
      WEa.ChildCreferenceId = TimestampAttr.ValueOf(TIRS2VW.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	CreferenceId_013EF ));
      WEa.ChildCcreateUserId = FixedStringAttr.ValueOf(CcreateUserid_007EF, 8);
      WEa.ChildCupdateUserId = FixedStringAttr.ValueOf(CupdateUserid_009EF, 8);
      WEa.ChildCparentPkeyAttrText = FixedStringAttr.ValueOf(FkVdvyyyppkeyAtt_015EF, 5);
      WEa.ChildCkeyAttrNum = IntAttr.ValueOf(CkeyAttr_001EF);
      WEa.ChildCsearchAttrText = FixedStringAttr.ValueOf(CsearchAttr_003EF, 25);
      WEa.ChildCotherAttrText = FixedStringAttr.ValueOf(CotherAttr_005EF, 25);
    }
    public void f_29360170_open(  )
    {
      sl_29360170 = ErrorData.LastStatusSucceeds;
      Child_001cd = ABBase.PvSelect;
      Child_lk = ABBase.EvwUnlocked;
      f_29360170_moveb(  );
      
      if ( sl_29360170 == ErrorData.LastStatusSucceeds )
      {
        ValChkDeadlockTimeout = false;
        ValChkDBError = false;
        Child_es = ABBase.EvUsable;
        DataException = null;
        try {
          if ( hstmt_0038075225_1_cmd == null )
          {
            SQLStatement.Length = 0;
            
            SQLStatement.Append("SELECT ");
            SQLStatement.Append("VDVYYYC01.`CINSTANCE_ID`,");
            SQLStatement.Append("VDVYYYC01.`CREFERENCE_ID`,");
            SQLStatement.Append("VDVYYYC01.`CCREATE_USERID`,");
            SQLStatement.Append("VDVYYYC01.`CUPDATE_USERID`,");
            SQLStatement.Append("VDVYYYC01.`FK_VDVYYYPPKEY_ATT`,");
            SQLStatement.Append("VDVYYYC01.`CKEY_ATTR`,");
            SQLStatement.Append("VDVYYYC01.`CSEARCH_ATTR`,");
            SQLStatement.Append("VDVYYYC01.`COTHER_ATTR`");
            SQLStatement.Append(" FROM ");
            SQLStatement.Append("`VDVYYYC` VDVYYYC01");
            SQLStatement.Append(" WHERE ");
            SQLStatement.Append("(");
            SQLStatement.Append(
"VDVYYYC01.`FK_VDVYYYPPKEY_ATT` <= ? AND (VDVYYYC01.`FK_VDVYYYPPKEY_ATT` < ? OR (VDVYYYC01.`FK_VDVYYYPPKEY_ATT` = ? AND VDVYYYC01.`CKEY_ATTR` <= ?)) AND (VDVYYYC01.`FK_VDVYYYPPKEY_ATT` > ? OR (VDVYYYC01.`FK_VDVYYYPPKEY_ATT` = ? AND VDVYYYC01.`CKEY_ATTR` >= "
              );
            SQLStatement.Append(
"?)) AND (VDVYYYC01.`FK_VDVYYYPPKEY_ATT` < ? OR (VDVYYYC01.`FK_VDVYYYPPKEY_ATT` = ? AND VDVYYYC01.`CKEY_ATTR` <= ?)) AND VDVYYYC01.`CSEARCH_ATTR` LIKE ?"
              );
            SQLStatement.Append(")");
            SQLStatement.Append("  ORDER BY 5 DESC ,");
            SQLStatement.Append(" 6 DESC ");
            if ( Globdata.GetDBMSData().GetDBMSManager().IsDBMS(IefRuntimeParm2, "IEFDB", "DB2") )
            {
              SQLStatement.Append(" WITH UR ");
            }
            hstmt_0038075225_1_cmd = Globdata.GetDBMSData().GetDBMSManager().GetCommand(Globdata, IefRuntimeParm2, "IEFDB", 
              SQLStatement.ToString());
            hstmt_0038075225_1_cmd.InsertParameter();
            hstmt_0038075225_1_cmd.InsertParameter();
            hstmt_0038075225_1_cmd.InsertParameter();
            hstmt_0038075225_1_cmd.InsertParameter();
            hstmt_0038075225_1_cmd.InsertParameter();
            hstmt_0038075225_1_cmd.InsertParameter();
            hstmt_0038075225_1_cmd.InsertParameter();
            hstmt_0038075225_1_cmd.InsertParameter();
            hstmt_0038075225_1_cmd.InsertParameter();
            hstmt_0038075225_1_cmd.InsertParameter();
            hstmt_0038075225_1_cmd.InsertParameter();
          }
          hstmt_0038075225_1_cmd.BindParameter(0, CparentPkeyAttrText_001TP);
          hstmt_0038075225_1_cmd.BindParameter(1, CparentPkeyAttrText_001TP);
          hstmt_0038075225_1_cmd.BindParameter(2, CparentPkeyAttrText_001TP);
          hstmt_0038075225_1_cmd.BindParameter(3, CkeyAttrNum_002TP);
          hstmt_0038075225_1_cmd.BindParameter(4, CparentPkeyAttrText_003TP);
          hstmt_0038075225_1_cmd.BindParameter(5, CparentPkeyAttrText_003TP);
          hstmt_0038075225_1_cmd.BindParameter(6, CkeyAttrNum_004TP);
          hstmt_0038075225_1_cmd.BindParameter(7, CparentPkeyAttrText_005TP);
          hstmt_0038075225_1_cmd.BindParameter(8, CparentPkeyAttrText_005TP);
          hstmt_0038075225_1_cmd.BindParameter(9, CkeyAttrNum_006TP);
          hstmt_0038075225_1_cmd.BindParameter(10, CsearchAttrText_007TP);
          hstmt_0038075225_1_rs = hstmt_0038075225_1_cmd.ExecuteQuery(  );
        } catch( Exception e ) {
          DataException = e;
        }
        if ( !((Globdata.GetDBMSData().GetDBMSManager().WasSuccessful(DataException))) )
        {
             f_29360170_adonet_dberror(  );
        }
      }
    }
    
    public void f_29360170_fetch(  )
    {
      DataException = null;
      try {
        if ( hstmt_0038075225_1_rs.MoveNext(  ) == false )
        {
          throw new Exception("No data found");
        }
        CinstanceId_011EF = Globdata.GetDBMSData().GetDBMSManager().GetDateTime(IefRuntimeParm2, "IEFDB", 
          hstmt_0038075225_1_rs.GetValue(0));
        CreferenceId_013EF = Globdata.GetDBMSData().GetDBMSManager().GetDateTime(IefRuntimeParm2, "IEFDB", 
          hstmt_0038075225_1_rs.GetValue(1));
        CcreateUserid_007EF = Globdata.GetDBMSData().GetDBMSManager().GetString(IefRuntimeParm2, "IEFDB", 
          hstmt_0038075225_1_rs.GetValue(2));
        CupdateUserid_009EF = Globdata.GetDBMSData().GetDBMSManager().GetString(IefRuntimeParm2, "IEFDB", 
          hstmt_0038075225_1_rs.GetValue(3));
        FkVdvyyyppkeyAtt_015EF = Globdata.GetDBMSData().GetDBMSManager().GetString(IefRuntimeParm2, "IEFDB", 
          hstmt_0038075225_1_rs.GetValue(4));
        CkeyAttr_001EF = Globdata.GetDBMSData().GetDBMSManager().GetInt32(IefRuntimeParm2, "IEFDB", hstmt_0038075225_1_rs.GetValue(5)
          );
        CsearchAttr_003EF = Globdata.GetDBMSData().GetDBMSManager().GetString(IefRuntimeParm2, "IEFDB", 
          hstmt_0038075225_1_rs.GetValue(6));
        CotherAttr_005EF = Globdata.GetDBMSData().GetDBMSManager().GetString(IefRuntimeParm2, "IEFDB", 
          hstmt_0038075225_1_rs.GetValue(7));
      } catch( Exception e ) {
        DataException = e;
      }
      
      if ( Globdata.GetDBMSData().GetDBMSManager().WasSuccessful(DataException) )
      {
        f_29360170_movea(  );
        if ( sl_29360170 == ErrorData.LastStatusSucceeds )
        {
          Child_es = ABBase.EvUsable;
        }
        else {
          Child_es = ABBase.EvUnusable;
        }
      }
      else if ( Globdata.GetDBMSData().GetDBMSManager().WasNoDataFound(DataException) )
      {
        sl_29360170 = ErrorData.LastStatusNotFound;
        Child_es = ABBase.EvUnusable;
      }
      else {
        f_29360170_adonet_dberror(  );
      }
    }
    
    public void f_29360170_esc_close(  )
    {
      try {
        if ( hstmt_0038075225_1_rs != null )
        {
          hstmt_0038075225_1_rs.Close(  );
          hstmt_0038075225_1_rs = null;
        }
        if ( hstmt_0038075225_1_cmd != null )
        {
          hstmt_0038075225_1_cmd.Close(  );
          hstmt_0038075225_1_cmd = null;
        }
      } catch( Exception e ) {
        if ( Globdata.GetDBMSData().GetDBMSManager().WasSuccessful(e) == false )
        {
          DataException = e;
          f_29360170_adonet_dberror(  );
        }
      }
    }
    public void f_29360170_close(  )
    {
      Child_es = ABBase.EvUnusable;
    }
    
    public void f_29360170_adonet_dberror(  )
    {
      Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
      Globdata.GetDBMSData().SetActionId( 28 );
      if ( DataException != null )
      {
        Globdata.GetErrorData(  ).SetErrorMessage( DataException );
      }
      Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusDbError );
      sl_29360170 = Globdata.GetErrorData().GetLastStatus();
      throw new ABException();
    }
    
    public void f_29360170_moveb(  )
    {
      CparentPkeyAttrText_001TP = WIa.ImpFromChildCparentPkeyAttrText;
      CparentPkeyAttrText_001TP = WIa.ImpFromChildCparentPkeyAttrText;
      CkeyAttrNum_002TP = WIa.ImpFromChildCkeyAttrNum;
      CparentPkeyAttrText_003TP = WIa.ImpFilterStartChildCparentPkeyAttrText;
      CkeyAttrNum_004TP = WIa.ImpFilterStartChildCkeyAttrNum;
      CparentPkeyAttrText_005TP = WIa.ImpFilterStopChildCparentPkeyAttrText;
      CkeyAttrNum_006TP = WIa.ImpFilterStopChildCkeyAttrNum;
      CsearchAttrText_007TP = WIa.ImpFilterChildCsearchAttrText;
    }
    
    public void f_29360170_movea(  )
    {
      WEa.ChildCinstanceId = TimestampAttr.ValueOf(TIRS2VW.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	CinstanceId_011EF ));
      WEa.ChildCreferenceId = TimestampAttr.ValueOf(TIRS2VW.Execute( IefRuntimeParm1,
      	IefRuntimeParm2,
      	Globdata,
      	"IEFDB",
      	CreferenceId_013EF ));
      WEa.ChildCcreateUserId = FixedStringAttr.ValueOf(CcreateUserid_007EF, 8);
      WEa.ChildCupdateUserId = FixedStringAttr.ValueOf(CupdateUserid_009EF, 8);
      WEa.ChildCparentPkeyAttrText = FixedStringAttr.ValueOf(FkVdvyyyppkeyAtt_015EF, 5);
      WEa.ChildCkeyAttrNum = IntAttr.ValueOf(CkeyAttr_001EF);
      WEa.ChildCsearchAttrText = FixedStringAttr.ValueOf(CsearchAttr_003EF, 25);
      WEa.ChildCotherAttrText = FixedStringAttr.ValueOf(CotherAttr_005EF, 25);
    }
    public void f_173015114_rgvc(  )
    {
      if ( (ExpGroupList_PS_001 > 48) || (ExpGroupList_PS_001 < 1) )
      {
        Globdata.GetErrorData().SetViewOverflow( ErrorData.ErrorEncounteredErrorFound );
        {
          throw new ABException();
        }
      }
    }
  }// end class
  
}

