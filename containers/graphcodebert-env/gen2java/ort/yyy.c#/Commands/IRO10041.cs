namespace GEN.ORT.YYY
{
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  //
  //                    Source Code Generated by
  //                           CA Gen 8.6
  //
  //    Copyright (c) 2024 CA Technologies. All rights reserved.
  //
  //    Name: IRO10041_EXCPTN_MSG_FMT_AS_STR_S Date: 2024/01/09
  //    Target OS:   CLR                       Time: 13:40:16
  //    Target DBMS: ODBC/ADO.NET              User: AliAl
  //    Access Method: <NONE>         
  //
  //    Generation options:
  //    Debug trace option not selected
  //    Data modeling constraint enforcement not selected
  //    Optimized import view initialization not selected
  //    Enforce default values with DBMS not selected
  //    Init unspecified optional fields to NULL not selected
  //
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  // using Statements
  // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  using System;
  using com.ca.gen.vwrt;
  using com.ca.gen.vwrt.types;
  using com.ca.gen.vwrt.vdf;
  using com.ca.gen.csu.exception;
  
  using com.ca.gen.abrt;
  using com.ca.gen.abrt.functions;
  using com.ca.gen.abrt.cascade;
  using com.ca.gen.abrt.manager;
  using com.ca.gen.abrt.trace;
  using com.ca.gen.exits.common;
  using com.ca.gen.odc;
  using System.Data;
  using System.Collections;
  
  public class IRO10041 : ABBase
  {
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // IMPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    IRO10041_IA WIa;
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // EXPORT VIEW CLASS VARIABLE
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    IRO10041_OA WOa;
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // MISC DECLARATIONS AND PROTOTYPES 
    //    FOLLOW AS NEEDED:             
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //       +->   IRO10041_EXCPTN_MSG_FMT_AS_STR_S  01/09/2024  13:40
    //       !       IMPORTS:
    //       !         Work View in iro1_component (Transient, Optional,
    //       !                     Import only)
    //       !           return_code
    //       !           reason_code
    //       !           activity_cd
    //       !           context_string_tx
    //       !           dialect_cd
    //       !           specification_id
    //       !           implementation_id
    //       !           origin_servid
    //       !       EXPORTS:
    //       !         Work View out_data iro1_component (Transient, Export
    //       !                     only)
    //       !           severity_cd
    //       !           message_tx
    //       !         Work View out_error iro1_component (Transient, Export
    //       !                     only)
    //       !           severity_cd
    //       !           rollback_indicator_tx
    //       !           origin_servid
    //       !           context_string_tx
    //       !           return_code
    //       !           reason_code
    //       !
    //       !     EXTERNAL ACTION BLOCK
    //       !
    //     1 !   
    //     2 !  NOTE: 
    //     2 !  **************************************************************
    //     2 !  ***
    //     3 !  NOTE: 
    //     3 !  * Copyright (C) 1996 Texas Instruments and Castek 
    //     4 !  NOTE: 
    //     4 !  * Software Factory Inc.
    //     5 !  NOTE: 
    //     5 !  * 
    //     6 !  NOTE: 
    //     6 !  * All rights reserved.  No part of this work may be used or 
    //     7 !  NOTE: 
    //     7 !  * reproduced in any form without the permission in writing
    //     8 !  NOTE: 
    //     8 !  * of Texas Instruments and Castek Software Factory.
    //     9 !  NOTE: 
    //     9 !  **************************************************************
    //     9 !  ***
    //    10 !   
    //    11 !  NOTE: 
    //    11 !  PRE-CONDITION:
    //    11 !  - Input valid exception supplied by component                
    //    11 !  - Input valid component id                                   
    //    11 !  - Input data supplied in the context string for parameter
    //    11 !  driven messages                                              
    //    11 !  - Exception message must be defined in the Error Handling
    //    11 !  database for the     exception requested
    //    11 !  POST-CONDITION:
    //    11 !  Formatted Exception Message is returned
    //    11 !  RETURN CODE = 0001
    //    12 !   
    //    13 !  NOTE: 
    //    13 !  PRE-CONDITION:                                               
    //    13 !  Input valid specification id, return code, reason code,
    //    13 !  dialect code                                                 
    //    13 !  POST-CONDITION:                                              
    //    13 !  Return formatted message text defined at the specification
    //    13 !  level
    //    14 !   
    //    15 !  NOTE: 
    //    15 !  PRE-CONDITION:                                               
    //    15 !  Input valid implementation id, return code, reason code,
    //    15 !  dialect code                                                 
    //    15 !  POST-CONDITION:                                              
    //    15 !  Return formatted message text defined at the implementation
    //    15 !  level
    //    16 !   
    //    17 !  NOTE: 
    //    17 !  PRE-CONDITION:                                               
    //    17 !  Input valid origin server id, return code, reason code,
    //    17 !  dialect code                                                 
    //    17 !  POST-CONDITION:                                              
    //    17 !  Return formatted message text defined at the origin servid
    //    17 !  level
    //    18 !   
    //    19 !  NOTE: 
    //    19 !  PRE-CONDITION:                                               
    //    19 !  Dialect code is spaces                                       
    //    19 !  POST-CONDITION:                                              
    //    19 !  Dialect code is defaulted from Error Handling Database
    //    20 !   
    //    21 !  NOTE: 
    //    21 !  PRE-CONDITION:                                               
    //    21 !  Input valid component id (specification, implementation,
    //    21 !  origin server), return code, reason code, dialect code and
    //    21 !  context string for parameter driven messages in the following
    //    21 !  format:   \parm1\parm2\....\parm9\                           
    //    21 !  POST-CONDITION:                                              
    //    21 !  Exception message return and defined as follows:             
    //    21 !  Statement@1 statement@2 statement@4
    //    22 !   
    //    23 !  NOTE: 
    //    23 !  PRE-CONDITION:
    //    23 !  Imported Exception is invalid
    //    23 !  POST-CONDITION:
    //    23 !  RETURN CODE = -0011/0011  Invalid Return Code
    //    23 !  RETURN CODE = -0011/0010  Invalid Reason Code
    //    24 !   
    //    25 !  NOTE: 
    //    25 !  PRE-CONDITION:
    //    25 !  Imported Component ID is invalid
    //    25 !  POST-CONDITION:
    //    25 !  RETURN CODE = -0011/0013
    //    26 !   
    //    27 !  NOTE: 
    //    27 !  PRE-CONDITION:
    //    27 !  Imported Context String does not contain parameters for
    //    27 !  data-driven messages
    //    27 !  POST-CONDITION:
    //    27 !  RETURN CODE = -0011/0014
    //    28 !   
    //    29 !  NOTE: 
    //    29 !  RETURN / REASON  CODES
    //    29 !  
    //    29 !  + 0001/0001       All OK                                     
    //    29 !  - 0010/0009       Default dialect code was not found         
    //    29 !  - 0010/0004       Exception message not found
    //    29 !  - 0011/0010       Reason Code Required
    //    29 !  - 0011/0011       Return Code Required
    //    29 !  - 0011/0013       Component ID Required
    //    29 !  - 0011/0014       Context String Required for Parm Message
    //    29 !  - 0021/0002       String length greater than 255
    //       +---
    
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    //  CONSTRUCTOR FOR THE CLASS       
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    public IRO10041(  )
    {
      IefCGenRlse = "CA Gen 8.6";
      IsCopyright = "Copyright (c) 2024 CA Technologies. All rights reserved.";
      IefCGenDate = "2024/01/09";
      IefCGenTime = "13:40:16";
      IefCGenEncy = "9.2.A6";
      IefCGenUserId = "AliAl";
      IefCGenModel = "N8I_ORT_YYY_0112_TEMPLATE";
      IefCGenSubset = "ALL";
      IefCGenName = "IRO10041_EXCPTN_MSG_FMT_AS_STR_S";
      NestingLevel = 0;
      ValChkDeadlockTimeout = false;
      ValChkDBError = false;
    }
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    // ACTION BLOCK FUNCTION DECLARATIONS 
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    
    public void Execute( Object in_runtime_parm1, 
    	IRuntimePStepContext in_runtime_parm2, 
    	GlobData in_globdata, 
    	IRO10041_IA import_view, 
    	IRO10041_OA export_view )
    {
      IefRuntimeParm1 = in_runtime_parm1;
      IefRuntimeParm2 = in_runtime_parm2;
      Globdata = in_globdata;
      WIa = import_view;
      WOa = export_view;
      _Execute();
    }
    
    private void _Execute()
    {
      
      try {
        f_22020241(  );
      } catch( Exception e ) {
        if ( ((Globdata.GetErrorData().GetStatus() == ErrorData.StatusNone) && (Globdata.GetErrorData().GetErrorEncountered() == 
          ErrorData.ErrorEncounteredNoErrorFound)) && (Globdata.GetErrorData().GetViewOverflow() == 
          ErrorData.ErrorEncounteredNoErrorFound) )
        {
          Globdata.GetErrorData().SetStatus( ErrorData.LastStatusFatalError );
          Globdata.GetErrorData().SetLastStatus( ErrorData.LastStatusUnexpectedExceptionError );
          Globdata.GetErrorData().SetErrorEncountered( ErrorData.ErrorEncounteredErrorFound );
          Globdata.GetErrorData(  ).SetErrorMessage( e );
        }
      }
    }
    public void f_22020241(  )
    {
      
      
      //    User-written code should be inserted here  
      
      
    }
  }// end class
  
}

